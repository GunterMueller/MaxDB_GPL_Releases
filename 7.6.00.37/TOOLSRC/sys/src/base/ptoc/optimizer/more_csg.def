/* @(#)optimizer/more_csg.def

    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

 */

/* more_csg.def */

# define Node4link		NodeIndex + 3
# define Node6link		NodeIndex + 5
# define Node7link		NodeIndex + 6
# define Node8link		NodeIndex + 7
/**/
# define Cnode7link		CnodeIndex + 6
/**/
# define Cnode1field		field [CnodeIndex]
# define Cnode2field		field [CnodeIndex + 1]
# define Cnode3field		field [CnodeIndex + 2]
# define Cnode4field		field [CnodeIndex + 3]
# define Cnode5field		field [CnodeIndex + 4]
# define Cnode6field		field [CnodeIndex + 5]
# define Cnode7field		field [CnodeIndex + 6]
# define Cnode8field		field [CnodeIndex + 7]
# define Cnode9field		field [CnodeIndex + 8]
# define Cnode10field		field [CnodeIndex + 9]
/**/
# define PrevNodeLink		field [LinkNode]
# define PrevNode3field		field [PrevNode + 2]

/* # define NextLinkOf(x)             field [(x) + 3]
 * exists in 'common/hdg.def', line above gives 'redeclaration' error. */

# define NextLinkLinkOf(x)	((x) + 3)
# define TailLinkLinkOf(x)	((x) + 4)
#ifdef CC
# define MinorOperatorOf(node)		(field[node] % 16384)
# define MajorOperatorOf(node)		(field[node] >> HdgOpSize)
#else
# define MinorOperatorOf(node)		(field[node] mod 16384)
# define MajorOperatorOf(node)		shr (field[node], HdgOpSize)
#endif

/**/
# define CtypeField		Cnode2field
# define DescriptorField	Node3field
# define CdescriptorField	Cnode3field
# define PrevDescField		PrevNode3field
# define CnextLink		Cnode4field
# define NextLinkLink		Node4link
/**/
#ifdef CC
# define CmajorOperator		(Cnode1field >> HdgOpSize)
#else
# define CmajorOperator		shr (Cnode1field, HdgOpSize)
#endif
/**/
/* node parameters */
/**/
# define Cnode1parameter	Cnode6field
# define Cnode2parameter	Cnode7field
/**/
/* if statement    */
/**/
# define CifCondField		Cnode6field
# define IfCondLink		Node6link
# define CifTrueField		Cnode7field
# define IfTrueLink		Node7link
# define CifTrueLink		Cnode7link
# define CifFalseField		Cnode8field
# define IfFalseLink		Node8link
/**/
/* while loop */
/**/
# define CwhileTestField	Cnode6field
# define WhileTestLink		Node6link
# define WhileBodyLink		Node7link
/* # define CwhileLabelField       Cnode8field  */
/**/
/* repeat until */
/**/
# define RepeatTestLink		Node6link
# define RepeatBodyLink		Node7link
/**/
/* unary expression */
/**/
# define Cunary1operand		Cnode6field
# define Unary1operandLink	Node6link
# define Cunary1parameter	Cnode7field
# define Cunary2parameter	Cnode8field
/**/
/* binary expression */
/**/
# define Cbin1operand		Cnode6field
# define Bin1operandLink	Node6link
# define Cbin2operand		Cnode7field
# define Bin2operandLink	Node7link
# define Cbin1parameter		Cnode8field
# define Cbin2parameter		Cnode9field
/**/
/* ExpList */
/**/
# define ClistHeadField		Cnode6field
# define ListHeadFieldLink	Node6link
/* # define ListTailFieldLink      Node7link    */
/**/
/* special */
/**/
# define Cspec1parameter	Cnode6field
/**/
/* short statement */
/**/
# define Css1operand		Cnode6field
# define Ss1operandLink		Node6link
/**/
/* long statement */
/**/
# define Cls1operand		Cnode6field
# define Ls1operandLink		Node6link
# define Cls2operand		Cnode7field
# define Ls2operandLink		Node7link
# define Cls1parameter		Cnode8field
# define Cls2parameter		Cnode9field
/**/
/* Switch */
/**/
# define SwitchTestLink		Node6link
# define SwitchBodyLink		Node7link
/**/
/* Proc or OpenProc */
/**/
# define ProcBodyLink		Node6link
