/* @(#)pascl/glob1var.ci

    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

 */

/* glob1var.i */

extern SymbolTableRange IntegerPtr, BooleanPtr, CharPtr, TextPtr, FilePtr, PacPtr;
extern SymbolTableRange LongPtr, FloatPtr, DoublePtr;
extern SymbolTableRange BytePtr, ShortPtr, StringPtr;
extern SymbolTableRange UbytePtr, UshortPtr;
extern SymbolTableRange WFormatPtr;			/* EF4: 01-11-86 WB */
extern int IntsetIndex;

/* pointers used to maintain scope info in symbol table */

extern ProcNameType ProcName;
extern int ProcMark;
extern int ProcIndex;
extern int parct;
extern int ReturnedType;
extern int LevelNo;
extern int mp;  /* points into parse stacks */
extern ParseStack StartCnt; /* start of IdList */
extern ParseStack cnt; /* no. of elements in list */
extern ParseStack g1 ; /* points to hdg */
extern ParseStack g2 ; /* auxillary g1 stack */
extern ParseStack val; /* value of token */
extern ParseStack TypeType; /**/
extern ParseStack SubType; /**/
extern ParseStack SaveReturnedType;  /**/
extern ParseStack SaveParct;  /* save info between scope levels */
extern ParseStack SaveProcmark;  /* */
extern ParseStack SaveProcindex;  /* EG5: 02-07-86 WB */
extern ParseStack CardNum; /* card on which token was found */
extern ParseStack ColNo; /* token column */
extern ParseStack WithRecs;
extern ParseStack NameofType;
extern ParseStack NameofConst;

extern int ParmPtr;
extern ParmTable ParmId;      /* points into string table */
extern ParmTable ParmType;  /* specifies parameter type */
extern ParmTable ParmNameofType;

extern char ParmPassedBy [ParmTableSize];  /* how parameters are passed */

extern int ExpPtr;
extern IntExpList ExpType;
extern IntExpList ExpStype;
extern IntExpList ExpColNo;
extern IntExpList ExpVal;

extern int IdPtr;
extern int IdList [IdListSize + 1];  /* points to string table */

/* pointers used to link fields of a record in a symbol table */

extern int HeadFieldLink;
extern int TailFieldLink;

extern int CardCount;
extern int CurrentFile;

extern int CaseRoot;

extern IntConstList ConstVal;
extern IntTagList TagType, StartConst;
extern int ConstPtr, TagPtr;
extern LabelStackType LabelStack;
extern int LabelPtr, LabelScopePtr, ForWithLevel;

extern int asm_esc;
