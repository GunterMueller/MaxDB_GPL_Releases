/* @(#)common/hdg.def

    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

*/

# define TypeFieldOf(node)		field [node + 1]
# define NextLinkOf(node)		field [node + 3]
# define TailLinkOf(node)		field [node + 4]

#ifdef CC
# define MinorOperatorOf(node)		(field[node] % 16384)
# define MajorOperatorOf(node)		(field[node] >> HdgOpSize)
#else
# define MinorOperatorOf(node)		(field[node] mod 16384)
# define MajorOperatorOf(node)		shr (field[node], HdgOpSize)
#endif
/**/
/* node parameters */
/**/
# define Node1parameterOf(node)		field[node + 5]
# define Node2parameterOf(node)		field[node + 6]
/**/
/* unary expression */
/**/
# define Unary1operandOf(node)		field[node + 5]
/**/
/* binary expression */
/**/
# define Bin1operandOf(node)		field[node + 5]
# define Bin2operandOf(node)		field[node + 6]
/**/
/* expression list */
/**/
# define ListHeadFieldOf(node)		field[node + 5]
# define ListSizeFieldOf(node)		field[node + 7]
/**/
/* long statement */
/**/
# define Ls1operandOf(node)		field[node + 5]
# define Ls2operandOf(node)		field[node + 6]
/**/
/* Case */
/**/
# define CaseLowValOf(node)		field[node + 5]
# define CaseHighValOf(node)		field[node + 6]
# define CaseLeftLinkOf(node)		field[node + 7]
# define CaseRightLinkOf(node)		field[node + 8]
# define CaseBalanceOf(node)		field[node + 10]

# define ListSizeOf(node)		(node == -1 ? 0 : ListSizeFieldOf(node))
