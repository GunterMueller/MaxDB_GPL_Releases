.ll 73
.ad 8
.bm 3
.fm 2
.bt $Copyright by   Software AG, 1997$$Page %$
.tm 5
.hm 2
.hs 3
.tt 1 $SQL$Project Distributed Database System$VSP007$
.tt 2 $$$
.tt 3 $Manuela Lackowski$page_load_constants_and_types$1997-04-15$
***********************************************************
.nf


    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

.fo
.nf
.sp
Module  : page_load_constants_and_types
=========
.sp
Purpose : LOAD Features FASTLOAD, TABLELOAD and TABLEEXTRACT
          PL Features Stored Procedures, Functions, Triggers
          This are the constants and types of the database project
          which are the basis for all PASCAL modules concerning
          the interface between kernel and components
.CM *-END-* purpose -------------------------------------
.sp
.cp 3
Define  :
 
.CM *-END-* define --------------------------------------
.sp;.cp 3
Use     :
 
.CM *-END-* use -----------------------------------------
.sp;.cp 3
Synonym :
 
.CM *-END-* synonym -------------------------------------
.sp;.cp 3
Author  : Manuela Lackowski
.sp
.cp 3
Created : 1995-12-04
.sp
.cp 3
Version : 1997-04-15
.sp
.cp 3
Release :  6.2 	 Date : 1997-04-15
.sp
***********************************************************
.sp
.cp 10
.fo
.oc _/1
Specification:
 
.CM *-END-* specification -------------------------------
.sp 2
***********************************************************
.sp
.cp 10
.fo
.oc _/1
Description:
 
.CM *-END-* description ---------------------------------
.sp 2
***********************************************************
.sp
.cp 10
.nf
.oc _/1
Structure:
 
.CM *-END-* structure -----------------------------------
.sp 2
**********************************************************
.sp
.cp 10
.nf
.oc _/1
.CM -lll-
Code    :
 
 
CONST
      csp7_mult_index_cnt =   320;
      mxsp7_colname_buf   = 20655; (* sizeof (tsp7_table_fields  +       *)
      (*                              (255 * (len1 + identifier64)       *)
      mxsp7_indexname_buf = 35640; (* sizeof (tsp7_desc_single_index  +  *)
      (*                              sizeof (tsp7_desc_mult_index    +  *)
      (*                              320 * (len1 + identifier64)        *)
      mxsp7_auditname_buf = 35640; (* 255 * sizeof (tsp7_c_aud_col_desc  *)
      (*                              +                                  *)
      (*                              255 * (len1 + identifier64)        *)
 
TYPE
      tsp7_bdinfo          = tsp_c48;
      tsp7_default         = (
            sp7_no_default,
            sp7_default_user,
            sp7_default_usergroup,
            sp7_default_date,
            sp7_default_time,
            sp7_default_stamp,
            sp7_default_timestamp,
            sp7_default_uid,
            sp7_default_true,
            sp7_default_false,
            sp7_other_default,
            sp7_default_serial);
 
      tsp7_ffield_info     = PACKED RECORD
            sp7fi_stmt_col_no   : char; (* unsigned int1 *)
            sp7fi_col_mode      : tsp_col_mode;
            sp7fi_data_type     : tsp_data_type;
            sp7fi_frac          : tsp_int1;
            sp7fi_len           : tsp_int2;
            sp7fi_in_out_l      : tsp_int2;
            sp7fi_fixlen        : boolean;
            sp7fi_default       : tsp7_default;
            sp7fi_filler        : tsp_c5;
            sp7fi_def_col_no    : char
      END;
 
      tsp7_table_fields = ARRAY [1..csp_max_fields]
            OF tsp7_ffield_info;
      tsp7_colname_buf = PACKED ARRAY [1..mxsp7_colname_buf]
            OF char;
 
      tsp7_table_description = RECORD
            sp7t_authid         : tsp_knl_identifier;
            sp7t_tablename      : tsp_knl_identifier;
            sp7t_field_cnt      : tsp_int2;
            sp7t_kernel_swap    : tsp_swap_kind;
            sp7t_filler         : tsp_int1;
            sp7t_kernel_loc     : tsp_int2;
            sp7t_constraint_cnt : tsp_int2;
            CASE boolean OF
                true :
                    (sp7t_fields   : tsp7_table_fields);
                false :
                    (sp7t_colnames : tsp7_colname_buf);
                END;
            (*ENDCASE*) 
 
 
      tsp7_info_single_index = RECORD
            sp7si_def_col_no : char;
            sp7si_descending : boolean;
            sp7si_unique     : boolean;
            sp7si_found      : boolean; (* used only by LOAD *)
            sp7si_filler     : tsp_c4;
      END;
 
      tsp7_desc_single_index = ARRAY [ 1..csp_max_fields ]
            OF tsp7_info_single_index;
 
      tsp7_info_mult_index = RECORD
            sp7mi_index_id   : tsp_int2;
            sp7mi_col_cnt    : tsp_int1;
            sp7mi_unique     : boolean;
            sp7mi_found      : boolean; (* used only by LOAD *)
            sp7mi_filler     : tsp_c3;
            sp7mi_def_col_no : ARRAY [ 1..csp_max_indices ] OF char;
            sp7mi_descending : ARRAY [ 1..csp_max_indices ] OF boolean;
      END;
 
      tsp7_desc_mult_index = ARRAY [ 1..csp7_mult_index_cnt ]
            OF tsp7_info_mult_index;
      tsp7_index_name_buf = ARRAY [ 1..mxsp7_indexname_buf ] OF char;
 
      tsp7_index_description = RECORD
            sp7i_single_index_cnt : char;
            sp7i_filler           : tsp_c3;
            sp7i_first_mult_index : tsp_int2;
            sp7i_mult_index_cnt   : tsp_int2;
            CASE integer OF
                1 :
                    (sp7i_single_index : tsp7_desc_single_index);
                2 :
                    (sp7i_mult_index   : tsp7_desc_mult_index);
                3 :
                    (sp7i_index_names  : tsp7_index_name_buf);
                END;
            (*ENDCASE*) 
 
 
      tsp7_info_aud_col = RECORD
            sp7ac_aud_datatype     : tsp_data_type;
            sp7ac_aud_etype        : tsp_c1;
            sp7ac_aud_epos         : tsp_int2;
            sp7ac_aud_datalen      : tsp_int2;
            sp7ac_aud_elen         : tsp_int2;
            sp7ac_aud_frac_ext     : tsp_c2;
            sp7ac_filler           : tsp_c6;
      END;
 
      tsp7_desc_aud_col  = ARRAY [ 1..csp_max_fields ]
            OF tsp7_info_aud_col;
      tsp7_audit_name_buf = ARRAY [ 1..mxsp7_auditname_buf ] OF char;
 
      tsp7_t_aud_tab_desc = RECORD
            sp7at_aud_authid    : tsp_knl_identifier;
            sp7at_aud_tablename : tsp_knl_identifier;
            sp7at_aud_col_cnt   : tsp_int2;
            sp7at_aud_filler    : tsp_int2;
            sp7at_aud_tabid     : tsp_c8;
            CASE boolean OF
                true :
                    (sp7at_aud_columns  : tsp7_desc_aud_col);
                false :
                    (sp7at_aud_colnames : tsp7_audit_name_buf);
                END;
 
.CM *-END-* code ----------------------------------------
.SP 2 
***********************************************************
*-PRETTY-*  statements    :          0
*-PRETTY-*  lines of code :        116        PRETTY  3.09 
*-PRETTY-*  lines in file :        221         1992-11-23 
.PA 
