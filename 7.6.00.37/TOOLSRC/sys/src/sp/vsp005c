.ll 73
.ad 8
.bm 8
.fm 4
.bt $Copyright by   Software AG, 1997$$Page %$
.tm 12
.hm 6
.hs 3
.tt 1 $SQL$Project Distributed Database System$VSP005C$
.tt 2 $$$
.tt 3 $Ingo Struewing$basic_constants_and_types$1997-01-22$
***********************************************************
.nf


    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

.fo
.nf
.sp
Module  : virtual file basic_constants_and_types
=========
.sp
Purpose : This are the constants and types of the database project
 
.CM *-END-* purpose -------------------------------------
.sp
.cp 3
Define  :
 
.CM *-END-* define --------------------------------------
.sp;.cp 3
Use     :
 
.CM *-END-* use -----------------------------------------
.sp;.cp 3
Synonym :
 
.CM *-END-* synonym -------------------------------------
.sp;.cp 3
Author  :
.sp
.cp 3
Created : 1988-03-25
.sp
.cp 3
Version : 1997-01-22
.sp
.cp 3
Release :  6.2 	 Date : 1997-01-22
.sp
***********************************************************
.sp
.cp 10
.fo
.oc _/1
Specification:
 
.CM *-END-* specification -------------------------------
.sp 2
***********************************************************
.sp
.cp 10
.fo
.oc _/1
Description:
 
.CM *-END-* description ---------------------------------
.sp 2
***********************************************************
.sp
.cp 10
.nf
.oc _/1
Structure:
 
.CM *-END-* structure -----------------------------------
.sp 2
**********************************************************
.sp
.cp 10
.nf
.oc _/1
.CM -lll-
Code    :
/*PRETTY*/
/*
    ptoc00 1.0.1
    vsp005c generated at 'Wed Nov  6 14:32:30 1996'
    from vsp005 (Date 'Wed Nov  6 14:11:29 1996', Size 3215)
*/
 
#ifndef PTOC00_STD_PASCAL
#define PTOC00_STD_PASCAL
/* Standard Pascal definitions */
typedef unsigned char boolean;
typedef short shortint;
typedef int integer;
typedef long longint;
typedef float real;
typedef char string;
#endif
 
 
 
/* TYPE */
 
 
 
#define  SP5VFW_NO_WARNING         0
#define  SP5VFW_NO_EOL_FOUND       1
#define  SP5VFW_NO_NEXT_TAPE       2
typedef  signed char tsp5_rte_filewarning;
 
 
typedef  struct tsp5_rte_fileerror {
 tsp_vf_return sp5fe_result;
 tsp5_rte_filewarning sp5fe_warning;
 tsp_c2 filler;
 tsp_c40 sp5fe_text;
} tsp5_rte_fileerror;
 
 
 
#define  SP5VF_TEXT        0
#define  SP5VF_BINARY      1
typedef  signed char tsp5_rte_datakind;
 
 
#define  SP5VF_READ        0
#define  SP5VF_WRITE       1
#define  SP5VF_READWRITE   2
#define  SP5VF_APPEND      3
typedef  signed char tsp5_rte_filemode;
 
 
#define  SP5BK_BUFFERED    0
#define  SP5BK_UNBUFFERED  1
#define  SP5BK_DISKSYNCED  2
typedef  signed char tsp5_rte_buffering_kind;
 
 
#define  SP5VF_CLOSE_NORMAL        0
#define  SP5VF_CLOSE_REWIND        1
#define  SP5VF_CLOSE_NEXT_TAPE     2
typedef  signed char tsp5_rte_closeoption;
 
 
#define  SP5VF_SEEK_BEGIN  0
#define  SP5VF_SEEK_CUR    1
#define  SP5VF_SEEK_END    2
typedef  signed char tsp5_rte_seekkind;
 
      typedef char tsp_date [8];
      typedef char tsp_time [8];
 
 
 
typedef  struct tsp5_rte_fileinfo {
 boolean sp5fi_exists;
 boolean sp5fi_readable;
 boolean sp5fi_writeable;
 boolean sp5fi_is_link;
 tsp_longint sp5fi_size;
 tsp_longint sp5fi_size_x;
 tsp_date sp5fi_date_modified;
 tsp_time sp5fi_time_modified;
 tsp_vf_type sp5fi_media_kind;
} tsp5_rte_fileinfo;
 
void
sqlfopenc (
    const char *rawFName,
    tsp5_rte_datakind dataKind,
    tsp5_rte_filemode fileMode,
    tsp5_rte_buffering_kind buffering,
    tsp_int4 *fileHandle,
    tsp5_rte_fileerror *ferror);
 
void
sqlfopenp (
    const tsp_vfilename rawFName,
    tsp5_rte_datakind dataKind,
    tsp5_rte_filemode fileMode,
    tsp5_rte_buffering_kind buffering,
    tsp_int4 *fileHandle,
    tsp5_rte_fileerror *ferror);
 
void
sqlfclosec (
    tsp_int4 fileHandle,
    tsp5_rte_closeoption option,
    tsp5_rte_fileerror *ferror);
 
void
sqlfclosep (
    tsp_int4 fileHandle,
    tsp5_rte_closeoption option,
    tsp5_rte_fileerror *ferror);
 
void
sqlfreadc (
    tsp_int4 fileHandle,
    void* buf,
    tsp_longint bufSize,
    tsp_longint* outLen,
    tsp5_rte_fileerror *ferror);
 
void
sqlfreadp (
    tsp_int4 fileHandle,
    void* buf,
    tsp_longint bufSize,
    tsp_longint* outLen,
    tsp5_rte_fileerror *ferror);
 
void
sqlfwritec (
    tsp_int4 fileHandle,
    const void* buf,
    tsp_longint inLen,
    tsp5_rte_fileerror *ferror);
 
void
sqlfwritep (
    tsp_int4 fileHandle,
    const void* buf,
    tsp_longint inLen,
    tsp5_rte_fileerror *ferror);
 
void
sqlfseekc (
    tsp_int4 fileHandle,
    tsp_longint distance,
    tsp5_rte_seekkind whence,
    tsp5_rte_fileerror *ferror);
 
void
sqlfseekp (
    tsp_int4 fileHandle,
    tsp_longint distance,
    tsp5_rte_seekkind whence,
    tsp5_rte_fileerror *ferror);
 
void
sqlflongseekc (
    tsp_int4 fileHandle,
    tsp_longint distance,
    tsp_longint recordCount,
    tsp5_rte_seekkind whence,
    tsp5_rte_fileerror *ferror);
 
void
sqlflongseekp (
    tsp_int4 fileHandle,
    tsp_longint distance,
    tsp_longint recordCount,
    tsp5_rte_seekkind whence,
    tsp5_rte_fileerror *ferror);
 
void
sqlftellc (
    tsp_int4 fileHandle,
    tsp_longint *pos,
    tsp5_rte_fileerror *ferror);
 
void
sqlftellp (
    tsp_int4 fileHandle,
    tsp_longint *pos,
    tsp5_rte_fileerror *ferror);
 
void
sqlferasec (
    const char *rawFName,
    tsp5_rte_fileerror *ferror);
 
void
sqlferasep (
    const tsp_vfilename rawFName,
    tsp5_rte_fileerror *ferror);
 
void
sqlfinfoc (
    const char *rawFName,
    tsp5_rte_fileinfo *finfo,
    tsp5_rte_fileerror *ferror);
 
void
sqlfinfop (
    const tsp_vfilename rawFName,
    tsp5_rte_fileinfo *finfo,
    tsp5_rte_fileerror *ferror);
 
void
sqlffinishc (void);
 
void
sqlffinishp (void);
 
 
.CM *-END-* code ----------------------------------------
.SP 2 
***********************************************************
*-PRETTY-*  statements    :        215
*-PRETTY-*  lines of code :        215        PRETTY  3.09 
*-PRETTY-*  lines in file :        302         1992-11-23 
.PA 
