#!/usr/bin/perl
#
# @(#)ToolDistribute		1999-09-09
#
# G. Großmann, SAP AG
# A. Mosle
#
#
#    ========== licence begin  GPL
#    Copyright (C) 2001 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end
#

package ToolDistribute;

use Getopt::Std;

my $Usage = "xToolDistrib [-h] [-c] [-d <destination pc>]\n";

my %xTDOpts;
if (!getopts('hcd:',\%xTDOpts) || $xTDOpts{h}) {
    print $Usage;
    exit 1;
}

$| = 1;
$Server = "\\\\P30883\\DevTool";

open (INFILE, "<$Server\\adminbin\\tooldel");
my @DeleteList = <INFILE>;
close INFILE;
map { chomp; s/(^.*?)#.*/$1/; } @DeleteList;
@DeleteList = grep !/^\s*$/, @DeleteList;

my @DestList = $xTDOpts{d} ? $xTDOpts{d} : <DATA>;

foreach $Rechner (@DestList) {
	next if $Rechner =~ /^(#|\s*$)/;
	( $Rechner, $Owner ) = $Rechner =~ /^\s*([0-9a-z.-_]+)\s*#?\s*(.*)/i;
	$Destination = $Rechner;
    while ( -f "\\\\$Rechner\\DevTool\\currentLogin\\74.rel" ) {
         print "imake running on $Rechner - wait\n";
         sleep 60;
    }
    $Rechner = "\\\\$Rechner\\DevTool";
    if ( $xTDOpts{c} ) {
        print "$Destination ($Owner) ";
        if ( ! -d $Rechner ) {
            print "unknown\n";
        } else {
            print "ok\n";
        }
    } else {
        print "\n $Rechner \n";
        local $rc = 0;
        if ( -d $Rechner ) {

            system ("if not exist $Rechner\\bin mkdir $Rechner\\bin");
            if ( $rc += system("xcopy $Server\\bin $Rechner\\bin /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\bin to $Rechner\n";
            }

            system ("if not exist $Rechner\\incl mkdir $Rechner\\incl");
            if ( $rc += system("xcopy $Server\\incl $Rechner\\incl /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\incl to $Rechner\n";
            }

            system ("if not exist $Rechner\\java mkdir $Rechner\\java");
            if ( $rc += system("xcopy $Server\\java $Rechner\\java /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\java to $Rechner\n";
            }
            
            system ("if not exist $Rechner\\ant mkdir $Rechner\\ant");
            if ( $rc += system("xcopy $Server\\ant $Rechner\\ant /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\ant to $Rechner\n";
            }

            system ("if not exist $Rechner\\data mkdir $Rechner\\data");
            if ( $rc += system("xcopy $Server\\data $Rechner\\data /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\data to $Rechner\n";
            }

            system ("if not exist $Rechner\\lib mkdir $Rechner\\lib");
            if ( $rc += system("xcopy $Server\\lib $Rechner\\lib /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\lib to $Rechner\n";
            }

            system ("if not exist $Rechner\\pgm mkdir $Rechner\\pgm");
            if ( $rc += system("xcopy $Server\\pgm $Rechner\\pgm /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\pgm to $Rechner\n";
            }

            system ("if not exist $Rechner\\pts mkdir $Rechner\\pts");
            if ( $rc += system("xcopy $Server\\pts $Rechner\\pts /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\pts to $Rechner\n";
            }

            system ("if not exist $Rechner\\posix mkdir $Rechner\\posix");
            if ( $rc += system("xcopy $Server\\Posix $Rechner\\Posix /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\Posix to $Rechner\n";
            }

            system ("if not exist $Rechner\\Perl\\lib\\Net mkdir $Rechner\\Perl\\lib\\Net");
            if ( $rc += system("xcopy $Server\\Perl\\lib\\Net $Rechner\\Perl\\lib\\Net /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\Perl\\lib\\Net to $Rechner\n";
            }

            #system ("if not exist $Rechner\\Perl\\site mkdir $Rechner\\Perl\\site");
            #if ( $rc += system("xcopy $Server\\Perl\\site $Rechner\\Perl\\site /v /c /d /e /r /y") )
            #{
            #    warn "Can't xcopy devtool\\Perl\\site to $Rechner\n";
            #}
            
           	system ("mkdir $Rechner\\profiles") unless ( -d "$Rechner\\profiles" );
           	system ("mkdir $Rechner\\profiles\\fallback") unless ( -d "$Rechner\\profiles\\fallback" );
           	system ("mkdir $Rechner\\profiles\\APODev") unless ( -d "$Rechner\\profiles\\APODev" );
           	
           	if ( $rc += system("xcopy $Server\\profiles $Rechner\\profiles /v /c /d /e /r /y") )
            {
                warn "Can't xcopy devtool\\profiles to $Rechner\n";
            }

            system("net send $Destination An error occured while distributing tools!") if $rc;

            # now delete obsolete tools
            foreach $file (@DeleteList) {
                unlink ("$Rechner/$file");
            }
        }
        else
        {	system("net send $Destination An error occured while distributing tools: Can't find share DevTool!") if $rc;	}
    }
}



__DATA__

p26327                 # Server 2
p30882                 # Server6
p46643                 # Bernd Vorsprach
p46813                 # Student (Anja)
p47355                 # Student (Kay)
p47451                 # Gerald Arnold
p48047                 # Daniel Dittmar
p48056                 # Alexander Kley # Martin Kittel
p48101                 # Martin Reinecke
p48110                 # Student (Jan)
p48113                 # Christoph Bautz
p48114                 # Burkhard Diesing
p52481                 # W2K Primergy
p52838                 # Daniel Schmoger
p56987                 # Christian Hartz
p58498                 # Uwe Hahn II
p59952                 # Jürgen Primsch
p59953                 # Barbara Jakubowski
p59956                 # Wolfgang Auer II
p59957                 # Heike Gursch # Jan Michael Daub # Student (Johannes)
p59960                 # Melanie Handreck
p59962                 # Marco Paskamp
p59963                 # Andrea Kristen
p59964                 # Ute Fuchs
p63964                 # Kathlenn Koeppen # Oksana Alekseious
P65469                 # Martin Korner
P65470                 # Thorsten Zielke
p66796                 # Hans-Georg Bumes
P66797                 # Thomas-Theodor Koetter
p66846                 # Robin Wissbrock
p67155                 # Roland Mallmann
p67156                 # Christiane Hienger
p71884                 # Marina Montag
p71911                 # Mathieu Baudier
p71912                 # Alexander Schröder
p73708                 # Uta Völkel
p74499                 # Dirk Thomsen
p76967                 # Martin Reinecke
p77218                 # Olaf Märker
p78997                 # Wolfgang Auer
p79147                 # Marc Philip Werner
p100945                # Axel Mosle
p100946                # Thomas Simenec
p101402                # Alexander Weinmann
p105743                # Uwe Hahn
p116654                # Daniel Kirmse
p116655                # Elke Zabach
p123522                # Joerg Mensing
p123524                # Raymond Rödling
p123528                # Dennis Adler
p124205                # Stefan Baier
p129815                # Jürgen Aurisch
berd00129817a          # Steffen Schildberg
p129818                # Markus Özgen
p129819                # Frank Kittel
P130042                # Markus Stausberg
p132995                # Mechthild Bore
p136120                # Henrik Hempelmann
p136124                # Rocco Himmer 
p137814                # Bettina Laidler
berd0080071224a        # Nikolai Eipel
berd0080074624a        # Andreas Baumfeld
berd3000116311a        # Tilo Heinrich
berd3000136118a        # Frank Strassenburg
berd3000136121a        # Robin Wissbrock
berd3000136122a        # Falko Flessner
berd3000137612a        # Roland Mallmann
berd3000138996a        # Nikolai Eipel
berd3000139000a        # Nikolai Eipel
berd3000140737a        # Alexander Kuechler
berd3000140738a        # Marius Wittstadt
berd00144137a          # Christiane Hienger
berd00145757a          # Jörg Hoffmeister
berd00145758a          # Gert Großmann
berd00145759a          # Uwe Hahn
berd00145766a          # Ulrich Jansen
berd00145767a          # Frank Hoffmann
berd00145769a          # Robert Voelkel
berd00146184a          #
berd00156847a          # Michael Kihl
berd00164437a          # Stefan Paeck
berd00164471a          # Torsten Strahl
berd00164483a          # Holger Becker
berd00164484a          # Elke Zabach
wdf00142646a           # Alexander Ringhof
intel01                # Frank Hoffmann 2
intel02                # Jochen Hartmann 2
intel03                # Frank Hoffmann 3
intel04                # Frank Hoffmann 4 # Raymond Rödling 
p64532                 # New make system I
p64529                 # New make system II
p64530                 # New make system IV
p64531                 # New make system III
p79775                 # New make system V
p114538                # New make system VI
