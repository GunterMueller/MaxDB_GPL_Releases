# Makefile generated by "configure.bat"
all.dos : bison.exe
# Makefile for bison
# Copyright (C) 1988, 1989, 1991, 1993 Bob Corbett and Free Software Foundation, Inc.
# 
# This file is part of Bison, the GNU Compiler Compiler.
# 
# Bison is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
# 
# Bison is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Bison; see the file COPYING.  If not, write to
# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.

#### Start of system configuration section. ####

srcdir = .
VPATH = .

CC = cl
INSTALL = 
INSTALL_PROGRAM = 
INSTALL_DATA = 
MAKEINFO = makeinfo

# Things you might add to DEFS:
# -DSTDC_HEADERS	If you have ANSI C headers and libraries.
# -DHAVE_STRING_H	If you don't have ANSI C headers but have string.h.
# -DHAVE_MEMORY_H	If you don't have ANSI C headers and have memory.h.
# -DHAVE_STRERROR	If you have strerror function.
DEFS = /DHAVE_STRING_H /DWIN32  /DNDEBUG

# CFLAGS definiert (SS - 05041999)
&if $MACH == AMD64
CFLAGS =
&else
CFLAGS = /ML
&endif

# LDFLAGS definiert (SS - 05041999)
&if $MACH == AMD64
LDFLAGS = /nologo /subsystem:console /incremental:no /pdb:none /machine:AMD64 
&else
LDFLAGS = /nologo /subsystem:console /incremental:no /pdb:none /machine:I386 
&endif

&if $MACH == AMD64 && defined OVERFLOW
LIBS = bufferoverflowu.lib
&else
LIBS =
&endif

# Some System V machines do not come with libPW.  If this is true, use
# the GNU alloca.obj here.
ALLOCA = 

prefix = @prefix@
exec_prefix = @exec_prefix@

# where the installed binary goes
bindir = $(exec_prefix)/bin

# where the parsers go
datadir = $(prefix)/share

# where the info files go
infodir = $(prefix)/info

#### End of system configuration section. ####

DISTFILES = COPYING ChangeLog Makefile.in configure configure.in \
    REFERENCES bison.1 bison.rnh configure.bat \
    bison.simple bison.hairy \
    LR0.c allocate.c closure.c conflicts.c derives.c \
    files.c getargs.c gram.c lalr.c lex.c main.c nullable.c \
    output.c print.c reader.c reduce.c symtab.c version.c \
    warshall.c files.h gram.h lex.h machine.h new.h state.h \
    symtab.h system.h types.h bison.cld build.com vmsgetargs.c \
    vmshlp.mar README INSTALL NEWS bison.texinfo bison.info* texinfo.tex \
    getopt.c getopt.h getopt1.c alloca.c mkinstalldirs install-sh


SHELL = /bin/sh

# This rule allows us to supply the necessary -D options
# in addition to whatever the user asks for.
.c.obj:
	$(CC) -c $(DEFS) -I$(srcdir)/../include $(CPPFLAGS) $(CFLAGS) $<

# names of parser files
# direkt eingesetzt in compiler option (SS - 05041999)
#PFILE = bison.simple
#PFILE1 = bison.hairy

PFILES = /DXPFILE=\"bison.simple\" /DXPFILE1=\"bison.hairy\"


OBJECTS =	LR0.obj \
		allocate.obj \
		closure.obj \
		conflicts.obj \
		derives.obj \
		files.obj \
		getargs.obj \
		gram.obj \
		lalr.obj \
		lex.obj \
		main.obj \
		nullable.obj \
		output.obj \
		print.obj \
		reader.obj \
		reduce.obj \
		symtab.obj \
		warshall.obj \
		version.obj \
		getopt.obj \
		getopt1.obj \
		$(ALLOCA)

all: bison bison.info bison.s1

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

configure: configure.in
	cd $(srcdir); autoconf

# Copy bison.simple, inserting directory name into the #line commands.
bison.s1: bison.simple
	-rm -f bison.s1
	sed -e "/^#line/ s|bison|$(datadir)/bison|" < $(srcdir)/$(PFILE) > bison.s1

clean:
	rm -f *.obj core bison bison.s1

mostlyclean: clean

distclean: clean
	rm -f Makefile config.status

realclean: distclean
	rm -f TAGS *.info*

# Most of these deps are in case using RCS.
install: all bison.1 $(srcdir)/$(PFILE) $(srcdir)/$(PFILE1) installdirs uninstall
	$(INSTALL_PROGRAM) bison $(bindir)/bison
	$(INSTALL_DATA) bison.s1 $(datadir)/$(PFILE)
	$(INSTALL_DATA) $(srcdir)/$(PFILE1) $(datadir)/$(PFILE1)
	cd $(srcdir); for f in bison.info*; \
	do $(INSTALL_DATA) $$f $(infodir)/$$f; done
	-$(INSTALL_DATA) $(srcdir)/bison.1 $(mandir)/bison.$(manext)

# Make sure all installation directories, e.g. $(bindir) actually exist by
# making them if necessary.
installdirs:
	-sh $(srcdir)/mkinstalldirs $(bindir) $(datadir) $(libdir) $(infodir) $(mandir)

uninstall:
	rm -f $(bindir)/bison
	-cd $(datadir); rm -f $(PFILE) $(PFILE1)
	rm -f $(mandir)/bison.$(manext) $(infodir)/bison.info*

bison.exe: $(OBJECTS)
	link $(LDFLAGS) $(OBJECTS) $(LIBS) -out:$*.exe

# We don't use $(srcdir) in this rule
# because it is normally used in the master source dir
# in which configure has not been run.
dist: bison.info
	echo bison-`sed -e '/version_string/!d' -e 's/[^0-9.]*\([0-9.]*\).*/\1/' -e q version.c` > .fname
	-rm -rf `cat .fname`
	mkdir `cat .fname`
	dst=`cat .fname`; for f in $(DISTFILES); do \
	   ln $$f $$dst/$$f || { echo copying $$f; cp -p $$f $$dst/$$f ; } \
	done
	tar --gzip -chf `cat .fname`.tar.gz `cat .fname`
	-rm -rf `cat .fname` .fname


TAGS: *.c *.h
	etags *.c *.h

# This file is different to pass the parser file names to the compiler.
files.obj: files.c
	$(CC) -c $(PFILES) $(DEFS) $(CPPFLAGS) $(CFLAGS) $(srcdir)/files.c

LR0.obj: system.h machine.h new.h gram.h state.h
closure.obj: system.h machine.h new.h gram.h
conflicts.obj: system.h machine.h new.h files.h gram.h state.h
derives.obj: system.h new.h types.h gram.h
#files.obj: system.h files.h new.h gram.h
getargs.obj: system.h files.h
lalr.obj: system.h machine.h types.h state.h new.h gram.h
lex.obj: system.h files.h symtab.h lex.h
main.obj: system.h machine.h
nullable.obj: system.h types.h gram.h new.h
output.obj: system.h machine.h new.h files.h gram.h state.h
print.obj: system.h machine.h new.h files.h gram.h state.h
reader.obj: system.h files.h new.h symtab.h lex.h gram.h
reduce.obj: system.h machine.h files.h new.h gram.h
symtab.obj: system.h new.h symtab.h gram.h
warshall.obj: system.h machine.h

