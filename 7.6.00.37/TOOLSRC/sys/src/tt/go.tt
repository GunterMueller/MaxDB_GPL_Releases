&IF $OSSPEC = LINUX
#!/bin/bash
&ELIF $OSSPEC == SOLARIS
#!/devtool/local/bin/bash
&else
#!/usr/local/bin/bash
&endif
#
# @(#)go 2001-09-13
#
# J. Mensing, SAP AG
#
#    ========== licence begin  GPL
#    Copyright (C) 2001 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end
#
Usage() {
   echo Syntax: go ReleaseDirectory
   echo Usage: Switch environment setup to given directory
   echo Normalled 'sourced'. Example . go 72_32
}

if [ $# -lt 1 ]; then
    Usage
elif [ ! -d /rel/TOOL/tool/bin ]; then
    echo Missing Tool directory /rel/TOOL/tool/bin
elif [ ! -r /rel/TOOL/tool/bin/SetupMachineEnv.bash ]; then
    echo Missing /rel/TOOL/tool/bin/SetupMachineEnv.bash
elif [ ! -d /rel/$1 ]; then
    echo Missing release directory /rel/$1
elif [ ! -r /rel/$1/.iprofile ]; then
    echo Profile /rel/$1/.iprofile not readable
elif [ ! -r /rel/TOOL/tool/bin/SetupMachineEnv.bash ]; then
    echo SetupMachineEnv.bash not readable
else
    Release=$1

    . /rel/TOOL/tool/bin/SetupMachineEnv.bash $Release
    OWN=/rel/$Release
    DBROOT=$OWN/usr
    INSTROOT=$DBROOT
    TOOL=/rel/TOOL/tool
    PYTHONPATH=$TOOL/lib/Python
    DEV_STUDIO="SAPDB_$Release"
    export OWN DBROOT INSTROOT TOOL PYTHONPATH DEV_STUDIO

&IF $OSSPEC = SVR4 && $MACH = NMP
    SHELL=bash
    export SHELL
&ENDIF

&IF   $OSSPEC = LINUX
    LD_LIBRARY_PATH=$DBROOT/lib
    export LD_LIBRARY_PATH
&ENDIF

    if [ "x$BIT32Supported" = "xNO" -o "x$BIT64Supported" = "xNO" ]; then

        if [ "x$BIT32Supported" = "xNO" ]; then
            BIT64=1
            export BIT64
&IF   $OSSPEC = AIX
            OBJECT_MODE=64
            export OBJECT_MODE
&ENDIF
        fi

        if [ "x$BIT32Supported" = "xYES" ]; then
            unset BIT64
&IF   $OSSPEC = AIX
            unset OBJECT_MODE
&ENDIF
        fi

    else

        Mode=`echo $Release | cut -f 2 -d_`
        if [ "x$Mode" = "x64" ]; then
            BIT64=1
            export BIT64
&IF   $OSSPEC = AIX
            OBJECT_MODE=64
            export OBJECT_MODE
&ENDIF
        else
            unset BIT64
&IF   $OSSPEC = AIX
            unset OBJECT_MODE
&ENDIF
        fi

    fi

#
# Since this script only creates test releases, build number requests are suppressed
    RELSTAT=TEST
    export RELSTAT
    . $OWN/.iprofile

    if [ -f $HOME/.vdnvars ]; then
        . $HOME/.vdnvars
    else
        echo "can't find ~/.vdnvars "
    fi

    TOOLVARS=$TOOL/bin/toolvars.pl
    DBTERM=vt100_hp
    export TOOLVARS DBTERM

    umask 0002

    cd $OWN
    echo
    echo "================================================================="
    echo "------ `uname -a` ------"
    echo "================================================================="
    echo "OWN              = $OWN"
    echo "CORRECTION_LEVEL = $CORRECTION_LEVEL"
    echo "BUILDPRAEFIX     = $BUILDPRAEFIX"
    echo "INSTROOT         = $INSTROOT"
    echo "VMAKE_PATH       = $VMAKE_PATH"
    echo "================================================================="

    if [ -f $HOME/.priv_prompt ]; then
        . $HOME/.priv_prompt
    fi

fi

