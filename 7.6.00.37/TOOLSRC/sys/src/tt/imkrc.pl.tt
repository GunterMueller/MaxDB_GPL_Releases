#!/usr/bin/perl
# imkrc         *** internal script
#
# @(#)imkrc 6.1.1   CL    1995-05-09
#
# Compile resource file
#
#
#    ========== licence begin  GPL
#    Copyright (C) 2001 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end
#

package imkrc;
use Env;
use File::Copy;
use Carp;

$USAGE = "usage: imkrc resource\n";

if ( @ARGV < 1 ) { print $USAGE; exit 1 }

$_ = $ARGV[0];
CASE: {
if (/^(kernel|quickknl|quickknl)$/i) { 

	@ARGV = ( "-d", "$SRC/wx", "ntkern.rc" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$SRC/wx", "ntkern.ico" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$SRC/wx", "ntcold.ico" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$SRC/wx", "ntwarm.ico" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$SRC/wx", "ntstop.ico" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$SRC/wx", "ntstate.ico" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	unlink "$ARGV[0].rc";
	rename "ntkern.rc", "$ARGV[0].rc"; 
	last CASE; }

if (/^(sqlod32|sqlsp32)$/i) { 
	@ARGV = ( "-d", "$SRC/wx", "$ARGV[0].rc" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$SRC/wx", "$ARGV[0].ico" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	@ARGV = ( "-d", "$WRK/incl", "vpa00*.h" );
	do "$TOOL/bin/imkcp$TOOLEXT";
	if ( $@ ) { warn "Error while executing imkcp:\n", "$@"; exit }

	last CASE; }
}


print "$RC -r -D_WIN32=1 $ARGV[0].rc";
system("$RC -r -D_WIN32=1 $ARGV[0].rc") == 0
	or croak "Error while executing $RC -r -D_WIN32=1 $ARGV[0].rc\n".
	"message: $!\n";

print "$CVTRES -$CPU $ARGV[0].res -o $1.rbj";
system("$CVTRES -$CPU $ARGV[0].res -o $ARGV[0].rbj >$NULL") == 0
	or croak "Error while executing $CVTRES -$Cpu $ARGV[0].res -o $ARGV[0].rbj\n".
	"message: $!\n";

copy "$ARGV[0].rbj", "$WRK/$VMAKE_VERSION/obj/$ARGV[0].rbj";

$_ = $ARGV[0];
CASE: {
if (/^(sqlod32|sqlsp32)$/i) { 
	while(<vpa00*.h>) {
		unlink $_;
	}
	last CASE; }
}

while(<*.rc>) {
	unlink $_;
}
while(<*.res>) {
	unlink $_;
}
while(<*.rbj>) {
	unlink $_;
}
while(<*.ico>) {
	unlink $_;
}


__END__