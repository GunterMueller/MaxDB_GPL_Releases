/*  putbuildprt.cpc */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef DEBUG
#define DBG(output) output
#else
#define DBG(output)
#endif

#define NOT_OK  -1

EXEC SQL BEGIN DECLARE SECTION;

int     BuildNumber ;
VARCHAR Module   [ 50  ] ;
VARCHAR BRelease [ 20  ] ;
char    Statement[ 100 ] ;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA;


/*==========================================================================*/

void main ( int argc, char *argv[] )

{
    char     * modulename, * sqlopt, * relver;

    modulename = argv[1];

    if ((modulename == NULL))  
    {
        DBG ( (void) fprintf (stderr, "missing argument\n"); )
        exit ( NOT_OK );
    }
    
    relver   = getenv("RELVER");  
    if (relver == 0) 
    {
        fprintf(stderr, "missing environment variable 'RELVER'!\n" );
        exit (NOT_OK);
    }

    if ( ! strcmp(relver, "R61") || ! strcmp(relver, "TOOL") )  
    {
        DBG( (void) fprintf(stderr, "do nothing on '%s'", relver); )
        exit (0);
    }

    strcpy (BRelease.arr, relver);
    BRelease.len= strlen (relver) ;

    (void) strncpy(Module.arr, modulename, 50);
    Module.len = strlen(modulename);

    if (  ( sqlopt = getenv("SQLOPT") ) && !strcmp (sqlopt, "-X") )
    {
        if ( putenv( "SQLOPT=-X -u buildadm,buildadm -d BUG62 -n P26326" ) == -1 )
        {
            DBG ( (void) fprintf (stderr, "Kann SQLOPT nicht setzen!\n"); )
            exit ( NOT_OK );
        }
    }
    else
        if ( putenv( "SQLOPT=-u buildadm,buildadm -d BUG62 -n P26326" ) == -1 )
        {
            DBG ( (void) fprintf (stderr, "Kann SQLOPT nicht setzen!\n"); )
            exit ( NOT_OK );
        }

    EXEC SQL SET SERVERDB 'BUG62' ON 'P26326' ;
    EXEC SQL CONNECT buildadm IDENTIFIED BY buildadm ;

    if ( sqlca.sqlcode != 0 )
    {
        DBG ( (void) fprintf (stderr, "connect error %d\n", sqlca.sqlcode); )
        exit ( NOT_OK );
    }

    (void) strcpy(Statement, "SELECT buildadm.build");
    (void) strcat(Statement, relver);
    (void) strcat(Statement, ".currval INTO ? FROM dual");

    DBG( (void) fprintf(stderr, "%s\n", Statement);)

    EXEC SQL PREPARE STAT1 FROM :Statement;
    EXEC SQL EXECUTE STAT1 USING :BuildNumber;

    if ( sqlca.sqlcode != 0 )
    {
        (void) fprintf (stderr, "insert error %d\n", sqlca.sqlcode);
        exit ( NOT_OK );
    }

    EXEC SQL
      INSERT INTO 
        iputdata (bnr, brelease, module)
      VALUES 
      (:BuildNumber, UPPER(:BRelease), UPPER(:Module) ); 

    if ( sqlca.sqlcode != 0 )
    {
        (void) fprintf (stderr, "insert error %d\n", sqlca.sqlcode);
        exit ( NOT_OK );
    }


    EXEC SQL COMMIT WORK RELEASE;

    exit ( 0 );
}

/*==========================================================================*/

/*

    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

*/
