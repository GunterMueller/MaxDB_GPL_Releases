/*  putbuildprt.cpc */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <assert.h>
#include "BitEA.h"
#include "AHuff.h"

#define NOT_OK  -1
#define MAXPROTLEN  131072

EXEC SQL BEGIN DECLARE SECTION;

int BuildNumber ;
SQLFILE bprot   [ 30  ] ;
int     bprotind;
VARCHAR bosspec [ 50  ] ;
VARCHAR brelease[ 20  ] ;
VARCHAR bstatus [ 5   ] ;
VARCHAR btarget [ 250 ] ;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA;


/*==========================================================================*/

void printUsage ()
{
    (void) fprintf (stderr, "usage: getbuildnr <buildnr> <filename>\n\n");
    (void) fprintf (stderr, "       <buildnr>  := last 9 digits from build without dashes\n"); 
    (void) fprintf (stderr, "                     (e.g. 012-000-017-981 => 17981)\n");
    (void) fprintf (stderr, "       <filename> := name of the resultfile\n");

}

/*==========================================================================*/

void main ( int argc, char *argv[] )

{
    char     * nr, * outprot, * sqlopt, *relver;
    BIT_FILE * input;
    char     * Outputfile;
    FILE     * output;
    int        i;


    nr       = argv[1];
    outprot  = argv[2];

    if ((nr == NULL) || (outprot == NULL))  
    {
        (void) fprintf (stderr, "missing argument\n");
        printUsage();
        exit ( NOT_OK );
    }

    for (i=0; i < strlen(nr); i++) 
    {
        if ((nr[i] < 0x30) || (nr[i] > 0x39))
        {
            (void) fprintf (stderr, "illegal character in buildnr: '%c' (0x%X) \n", nr[i],nr[i]); 
            printUsage();
            exit ( NOT_OK );
        }
    }

    BuildNumber = atoi(nr);
    if (BuildNumber <= 0)
    {
        (void) fprintf (stderr, "illegal buildnr\n"); 
        printUsage();
        exit ( NOT_OK );
    }
    
    relver   = getenv("RELVER");  
    if (relver == 0) 
    {
        fprintf(stderr, "missing environment variable 'RELVER'!\n");
        exit (NOT_OK);
    }
    (void) strcpy ( brelease.arr, relver );
    brelease.len= strlen (relver) ;


    if (  ( sqlopt = getenv("SQLOPT") ) && !strcmp (sqlopt, "-X") )
    {
        if ( putenv( "SQLOPT=-X -u buildadm,buildadm -d BUG62 -n P26326" ) == -1 )
        {
            (void) fprintf (stderr, "Kann SQLOPT nicht setzen!\n"); 
            exit ( NOT_OK );
        }
    }
    else
        if ( putenv( "SQLOPT=-u buildadm,buildadm -d BUG62 -n P26326" ) == -1 )
        {
            (void) fprintf (stderr, "Kann SQLOPT nicht setzen!\n");
            exit ( NOT_OK );
        }

    EXEC SQL SET SERVERDB 'BUG62' ON 'P26326' ;
    EXEC SQL CONNECT buildadm IDENTIFIED BY buildadm ;

    if ( sqlca.sqlcode != 0 )
    {
        (void) fprintf (stderr, "connect error %d\n", sqlca.sqlcode); 
        exit ( NOT_OK );
    }

    if ( ( Outputfile = tempnam(".", "Get") ) == NULL )
        fataler_fehler( "Fehler beim erzeugen eines temporären Dateinamens.\n" );

    (void) strcpy ( bprot, Outputfile );

    EXEC SQL
      SELECT bosspec, bstatus, btarget INTO :bosspec, :bstatus, :btarget
      FROM
        builddata
      WHERE 
        bnr = :BuildNumber and brelease = :brelease ;
        
    if ( sqlca.sqlcode != 0 )
    {
        switch ( sqlca.sqlcode )
        {
        case 100 :
            (void) fprintf ( stderr, 
                "build number %d not found for release '%s' in builddata\n", 
                BuildNumber, relver );
            exit ( NOT_OK );
        default :
            (void) fprintf (stderr, "select error %d\n", sqlca.sqlcode);
            exit ( NOT_OK );
        }
    }

    EXEC SQL
        SELECT bprot INTO :bprot :bprotind
      FROM
        buildprot
      WHERE 
      bnr = :BuildNumber and brelease = :brelease ;
        
    if ( sqlca.sqlcode != 0 )
    {
        switch ( sqlca.sqlcode )
        {
        case 100 :
            (void) fprintf ( stderr, 
                "build number %d not found for release '%s' in buildprot\n", 
                BuildNumber, relver );
            exit ( NOT_OK );
        default :
            (void) fprintf ( stderr, "select error %d\n", sqlca.sqlcode );
            exit ( NOT_OK );
        }
    }

    EXEC SQL COMMIT WORK RELEASE;

    if ( ! ( input = OpenInputBitFile(Outputfile) ) )
        fataler_fehler("Fehler beim Öffnen von %s für die Ausgabe\n", Outputfile);

    if ( (output  = fopen( outprot, "w" )) == NULL )
    {
        (void) fprintf (stderr, "file open error\n"); 
        exit ( NOT_OK );
    }

    ExpandiereDatei(input, output);
    CloseInputBitFile(input);

    (void) fprintf(output, "\n");
 
    (void) fprintf(output, "OSSPEC:\t\t");
    (void) fwrite (bosspec.arr, sizeof(char), bosspec.len, output);
    (void) fprintf(output, "\n");

    (void) fprintf(output, "RELEASE:\t");
    (void) fwrite (brelease.arr, sizeof(char), brelease.len, output);
    (void) fprintf(output, "\n");

    (void) fprintf(output, "STATUS:\t\t");
    (void) fwrite (bstatus.arr, sizeof(char), bstatus.len, output);
    (void) fprintf(output, "\n");
    
    (void) fprintf(output, "TARGET:\t\t");
    (void) fwrite (btarget.arr, sizeof(char), btarget.len, output);
    (void) fprintf(output, "\n");

    if ( fclose( output ) )
    {
        (void) fprintf (stderr, "file close error\n");
        exit ( NOT_OK );
    }

    (void) unlink(Outputfile);
    exit ( 0 );
}

/*==========================================================================*/

/*

    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

*/
