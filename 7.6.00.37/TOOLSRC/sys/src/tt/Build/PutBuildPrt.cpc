/*  putbuildprt.cpc */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include "BitEA.h"
#include "AHuff.h"

#ifdef DEBUG
#define DBG(output) output
#else
#define DBG(output)
#endif

#define NOT_OK  -1

EXEC SQL BEGIN DECLARE SECTION;

int     BuildNumber ;
VARCHAR BRelease [ 20  ] ;
SQLFILE BProt    [ 256 ] ;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE SQLCA;


/*==========================================================================*/

void main ( int argc, char *argv[] )

{
    char     * nr, * prot, * sqlopt, *relver;
    FILE     * input;
    char     * Outputfile;
    BIT_FILE * output;
    struct stat statbuf;

    nr    = argv[1];
    prot  = argv[2];

	/* CTS 1109250 */
	if ( ! getenv("SAPDB_INTERNAL"))
	{
		/* nothing to do */
		exit (0);
	}
	

    if ((nr == NULL) || (prot == NULL))  
    {
        DBG ( (void) fprintf (stderr, "missing argument\n"); ) 
        (void) fprintf (stderr, "usage: PutBuildPrt BUILD infile\n");
        exit ( NOT_OK );
    }
    
    relver   = getenv("RELVER");  
    if (relver == 0) 
    {
        fprintf(stderr, "missing environment variable 'RELVER'!\n" );
        exit (NOT_OK);
    }

    (void) strcpy( BRelease.arr, relver );
    BRelease.len= strlen (relver) ;

    BuildNumber = atoi(nr);

    if ( ( Outputfile = tempnam(".", "put") ) == NULL )
        fataler_fehler( "Fehler beim erzeugen eines temporären Dateinamens.\n" );

    DBG ( (void) fprintf(stderr, "temp. output: %s", Outputfile); )
    if ( ! (output = OpenOutputBitFile( Outputfile ) ) )
        fataler_fehler("Fehler beim Öffnen von %s für die Ausgabe\n", Outputfile);

    if ( (input  = fopen( prot, "rb" )) == NULL )
    {
        (void) fprintf (stderr, "file open error\n");
        exit ( NOT_OK );
    }

    KomprimiereDatei(input, output);
    CloseOutputBitFile(output);

    if ( fclose( input ) )
    {
        (void) fprintf (stderr, "file close error\n");
        (void) unlink(Outputfile);
        exit ( NOT_OK );
    }

    if ( stat (Outputfile, &statbuf) != 0 )
    {
        (void) fprintf (stderr, "file stat error\n");
        (void) unlink(Outputfile);
        exit ( NOT_OK );
    }

    (void) strcpy( BProt, Outputfile );

    if (  ( sqlopt = getenv("SQLOPT") ) && !strcmp (sqlopt, "-X") )
    {
        if ( putenv( "SQLOPT=-X -u buildadm,buildadm -d BUG62 -n P26326" ) == -1 )
        {
            DBG ( (void) fprintf (stderr, "Kann SQLOPT nicht setzen!\n"); )
            (void) unlink(Outputfile);
            exit ( NOT_OK );
        }
    }
    else
        if ( putenv( "SQLOPT=-u buildadm,buildadm -d BUG62 -n P26326" ) == -1 )
        {
            DBG ( (void) fprintf (stderr, "Kann SQLOPT nicht setzen!\n"); )
            (void) unlink(Outputfile);
            exit ( NOT_OK );
        }

    EXEC SQL SET SERVERDB 'BUG62' ON 'P26326' ;
    EXEC SQL CONNECT buildadm IDENTIFIED BY buildadm ;

    if ( sqlca.sqlcode != 0 )
    {
        (void) fprintf (stderr, "connect error %d\n", sqlca.sqlcode);
        (void) unlink(Outputfile);
        exit ( NOT_OK );
    }

    EXEC SQL
      INSERT INTO 
        buildprot (bnr, brelease, bprot)
      VALUES 
        (:BuildNumber, :BRelease, :BProt); 

    if ( sqlca.sqlcode != 0 )
    {
        (void) fprintf (stderr, "insert error %d\n", sqlca.sqlcode);
        (void) unlink(Outputfile);
        exit ( NOT_OK );
    }

    EXEC SQL COMMIT WORK RELEASE;

    (void) unlink(Outputfile);
    exit ( 0 );
}

/*==========================================================================*/

/*

    ========== licence begin LGPL
    Copyright (C) 2002 SAP AG

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    ========== licence end

*/
