#!/bin/sh
#
#	$TOOL/bin/buildRPM
#
#
#	script generates RPM packages:
#				sapdb-version-release.arch.rpm
#				sapdb-ind-version-release.arch.rpm  
#				sapdb-srv-version-release.arch.rpm
#				sapdb-testdb-version-release.arch.rpm
#				sapdb-webtools-version-release.arch.rpm
#				sapdb-precompiler-version-release.arch.rpm
#				sapdb-callif-version-release.arch.rpm
#				sapdb-scriptif-version-release.arch.rpm
#				
#	
#	targets in $WRK/fast/rpm
#	
#	args:	all				all rpms
#			server			sapdb server		
#			webtools		webtools
#			callif			ODBC/JDBC
#			precompiler		precompiler
#			scriptif		perl/python
#
#
####################################################


if ! [ $1 ]
then
	echo "arg required: all, server, webtools, callif, scriptif or precompiler"
	exit -1
fi

if ! [ $1 = "all" ] && ! [ $1 = "server" ] && ! [ $1 = "webtools" ] && ! [ $1 = "precompiler" ] && ! [ $1 = "callif" ] && ! [ $1 = "scriptif" ]
then
	echo "wrong arg: all, server, webtools, callif, scriptif or precompiler"
	exit -1
fi

#needed vars
#####################################################
DEPLIST=$INSTROOT/etc/CAR.LISTE.SRV
INDEPLIST=$INSTROOT/etc/CAR.LISTE.IND
WEBTOOLSLIST=$INSTROOT/etc/webagent.lst
PCLIST=$INSTROOT/etc/cpc.lst
CALLIFLIST=$INSTROOT/etc/callif.lst
SCRIPTIFLIST=$INSTROOT/etc/scriptif.lst
BUILDROOT=$WRK/fast/buildrpm
RPMPATH=$WRK/fast/rpm
SAPDBPATH=$BUILDROOT/usr/sapdb
INDPATH=$BUILDROOT/usr/sapdb-ind
SRVPATH=$BUILDROOT/usr/sapdb-srv
WEBTOOLSPATH=$BUILDROOT/usr/sapdb-webtools
PCPATH=$BUILDROOT/usr/sapdb-precompiler
CALLIFPATH=$BUILDROOT/usr/sapdb-callif
SCRIPTIFPATH=$BUILDROOT/usr/sapdb-scriptif
TESTDBPATH=$BUILDROOT/usr/sapdb-testdb
_RELEASE=`expr $RELVER : ".\(.\)"`.`expr $RELVER : ".*\(.\)"`.$CORRECTION_LEVEL.$BUILDPRAEFIX
DOCPATH=$BUILDROOT/usr/doc/sapdb-$_RELEASE




#check file lists
#######################################################
if [ $1 = "all" ] || [ $1 = "server" ]
then
	for _LIST in \
		$DEPLIST \
		$INDEPLIST 
	do
		if [ ! -f $_LIST ]
		then
			echo "file list \"$_LIST\" not found!"
			echo "please run \"$INSTROOT/etc/makeCARLIST\" before executing \"buildRPM\""
			exit 1
		fi
	done
fi

if [ $1 = "all" ] || [ $1 = "webtools" ]
then
	if [ ! -f $WEBTOOLSLIST ]
		then
			echo "file list \"$WEBTOOLSLIST\" not found!"
			exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "precompiler" ]
then
	if [ ! -f $PCLIST ]
		then
			echo "file list \"$PCLIST\" not found!"
			exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "callif" ]
then
	if [ ! -f $CALLIFLIST ]
		then
			echo "file list \"$CALLIFLIST\" not found!"
			exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "scriptif" ]
then
	if [ ! -f $SCRIPTIFLIST ]
		then
			echo "file list \"$SCRIPTIFLIST\" not found!"
			exit 1
	fi
fi


#check files in rpm layer
#######################################################
if [ $1 = "all" ] || [ $1 = "server" ]
then
	for _file in \
		$WRK/fast/rpm/create_demo_db.sh \
		$WRK/fast/rpm/drop_demo_db.sh \
		$WRK/fast/rpm/create_demo_db_sep.sh \
		$WRK/fast/rpm/sapdb.spec \
		$WRK/fast/rpm/sapdb-ind.spec \
		$WRK/fast/rpm/sapdb-srv.spec \
		$WRK/fast/rpm/sapdb-testdb.spec \
		$WRK/fast/rpm/dbmcli_46d_eng.pdf \
		$WRK/fast/rpm/meldungen_72eng.pdf \
		$WRK/fast/rpm/referenz_72eng.pdf
	do
		if [ ! -f $_file ]
		then
			echo "file \"$_file\" not found - please start \"imf rpm\""
			exit 1
		fi
	done
	if [ ! -d $WRK/fast/rpm/demo ]
	then
		echo "directory \"$WRK/fast/rpm/demo\" not found - please start \"imf rpm\""
		exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "webtools" ]
then
	if [ ! -f $WRK/fast/rpm/sapdb-webtools.spec ]
		then
			echo "file: \"$WRK/fast/rpm/sapdb-webtools.spec\" not found!"
			exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "precompiler" ]
then
	if [ ! -f $WRK/fast/rpm/sapdb-precompiler.spec ]
		then
			echo "file \"$WRK/fast/rpm/sapdb-precompiler.spec\" not found!"
			exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "callif" ]
then
	if [ ! -f $WRK/fast/rpm/sapdb-callif.spec ]
		then
			echo "file \"$WRK/fast/rpm/sapdb-callif.spec\" not found!"
			exit 1
	fi
fi

if [ $1 = "all" ] || [ $1 = "scriptif" ]
then
	if [ ! -f $WRK/fast/rpm/sapdb-scriptif.spec ]
		then
			echo "file \"$WRK/fast/rpm/sapdb-scriptif.spec\" not found!"
			exit 1
	fi
fi


#generate directory tree
###################################################
echo "generate directory tree and environment"
mkdir -p $BUILDROOT/rcscripts
mkdir -p $DOCPATH
mkdir -p $SAPDBPATH
mkdir -p $SAPDBPATH/wrk
mkdir -p $INDPATH
mkdir -p $SRVPATH
mkdir -p $SRVPATH/wrk
mkdir -p $TESTDBPATH
mkdir -p $WEBTOOLSPATH
mkdir -p $PCPATH
mkdir -p $CALLIFPATH
mkdir -p $SCRIPTIFPATH

# copy files from server list
##################################################

if [ $1 = "all" ] || [ $1 = "server" ] 
then
	echo "copy files from srv list"
	filename=$DEPLIST
	fileliste=`cat $filename`
	for file in $fileliste
	do
		_path=`echo $file | sed s/[^\/]*$//`
		#copy files for sapdb package
		destpath=$SAPDBPATH/$_path
		if [ ! -d $destpath ]
		then	
			mkdir -p $destpath
		fi
		cp -R $INSTROOT/$file $SAPDBPATH/$file
		#copy files for server package
		destpath=$SRVPATH/$_path
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi
		cp -R $INSTROOT/$file $SRVPATH/$file
	done	 


	# copy files from independend list
	#################################################
	echo "copy files from ind list"
	filename=$INDEPLIST
	fileliste=`cat $filename`
	for file in $fileliste
	do
		_path=`echo $file | sed s/[^\/]*$//`
		#copy files for sabdb package
		destpath=$SAPDBPATH/$_path
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi
		cp -R $INSTROOT/$file $SAPDBPATH/$file
		
		#copy files for independent package
		destpath=$INDPATH/$_path	
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi
		cp  $INSTROOT/$file $INDPATH/$file
	done	
fi

#copy files from webtools list
###################################################
if [ $1 = "all" ] || [ $1 = "webtools" ]
then
	echo "copy files from webtools list"
	filename=$WEBTOOLSLIST
	fileliste=`cat $filename`
	for file in $fileliste
	do
		_path=`echo $file | sed s/[^\/]*$//`
		destpath=$WEBTOOLSPATH/$_path
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi	
		cp -R $INSTROOT/$file $WEBTOOLSPATH/$file
	done 
fi


#copy files from precompiler list
####################################################
if [ $1 = "all" ] || [ $1 = "precompiler" ]
then
	echo "copy files from precompiler list"
	filename=$PCLIST
	fileliste=`cat $filename`
	for file in $fileliste
	do
		_path=`echo $file | sed s/[^\/]*$//`
		destpath=$PCPATH/$_path
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi	
		cp -R $INSTROOT/$file $PCPATH/$file
	done 
fi


#copy files from callif list
####################################################
if [ $1 = "all" ] || [ $1 = "callif" ]
then
	echo "copy files from callif list"
	filename=$CALLIFLIST
	fileliste=`cat $filename`
	for file in $fileliste
	do
		_path=`echo $file | sed s/[^\/]*$//`
		destpath=$CALLIFPATH/$_path
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi	
		cp -R $INSTROOT/$file $CALLIFPATH/$file
	done 
fi

#copy files from scriptif list
####################################################
if [ $1 = "all" ] || [ $1 = "scriptif" ]
then
	echo "copy files from precompiler list"
	filename=$SCRIPTIFLIST
	fileliste=`cat $filename`
	for file in $fileliste
	do
		_path=`echo $file | sed s/[^\/]*$//`
		destpath=$SCRIPTIFPATH/$_path
		if [ ! -d $destpath ]
		then
			mkdir -p $destpath
		fi	
		cp -R $INSTROOT/$file $SCRIPTIFPATH/$file
	done 
fi


if [ $1 = "all" ] || [ $1 = "server" ]
then
	#copy shell scripts
	###################################################
	echo "copy shell scripts"
	cp $RPMPATH/create_demo_db.sh $SAPDBPATH/misc
	cp $RPMPATH/drop_demo_db.sh $SAPDBPATH/misc
	cp $RPMPATH/create_demo_db_sep.sh $TESTDBPATH/create_demo_db.sh
	cp $RPMPATH/drop_demo_db.sh $TESTDBPATH/drop_demo_db.sh
	#copy PDFs
	##################################################
	echo "copy PDFs"
	cp $RPMPATH/*.pdf $DOCPATH
	#copy demo files
	#################################################	
	echo "copy demo files"
	cp -R $RPMPATH/demo $SAPDBPATH
	cp -R $RPMPATH/demo $INDPATH
	#change links in demo files in INDPATH ("/usr/sapdb" -> "/usr/sapdb-srv")
	###########################################################
	echo "change links in demo files"
	_filelist=`grep -lr '/usr/sapdb' $INDPATH/demo 2> /dev/null`
	for _file in $_filelist
	do
		sed 's/\/usr\/sapdb/\/usr\/sapdb-srv/g' $_file > $RPMPATH/sed.tmp
		mv $RPMPATH/sed.tmp $_file
	done 
	#set permissions for serverpackages
	####################################################
	echo "set permissions"
	find $BUILDROOT -type d -exec chmod 775 {} \;
	find $SAPDBPATH/bin -type f -exec chmod 775 {} \;
	find $SAPDBPATH/env -type f -exec chmod 664 {} \;
	find $SAPDBPATH/incl -type f -exec chmod 664 {} \;
	find $SAPDBPATH/lib -type f -exec chmod 664 {} \;
	find $SAPDBPATH/lib -type f -regex /^.*\.so$/ -exec chmod 775 {} \;
	find $SAPDBPATH/misc -type f -exec chmod 775 {} \;
	find $SAPDBPATH/pgm -type f -exec chmod 775 {} \;
	find $SAPDBPATH/sap -type f -exec chmod 664 {} \;
	find $SAPDBPATH/terminfo -type f -exec chmod 664 {} \;
	find $SRVPATH/bin -type f -exec chmod 775 {} \;
	find $SRVPATH/env -type f -exec chmod 664 {} \;
	find $SRVPATH/incl -type f -exec chmod 664 {} \;
	find $SRVPATH/lib -type f -exec chmod 664 {} \;
	find $SRVPATH/lib -type f -regex /^.*\.so$/ -exec chmod 775 {} \;
	find $SRVPATH/misc -type f -exec chmod 775 {} \;
	find $SRVPATH/pgm -type f -exec chmod 775 {} \;
	find $SRVPATH/sap -type f -exec chmod 664 {} \;
	find $INDPATH/bin -type f -exec chmod 775 {} \;
	find $INDPATH/pgm -type f -exec chmod 775 {} \;
	find $INDPATH/terminfo -type f -exec chmod 664 {} \;
		chmod 664 $SAPDBPATH/misc/dbm.pm \
		$SAPDBPATH/misc/instperl.pl \
		$SAPDBPATH/misc/repman.pm \
		$SAPDBPATH/misc/sapdb.pm \
		$SAPDBPATH/misc/sapdbc.jar \
		$SAPDBPATH/pgm/backup \
		$SRVPATH/misc/dbm.pm \
		$SRVPATH/misc/instperl.pl \
		$SRVPATH/misc/repman.pm \
		$SRVPATH/misc/sapdb.pm \
		$SRVPATH/misc/sapdbc.jar \
		$SRVPATH/pgm/backup  	
	chmod 777 $SAPDBPATH/pgm/lserver
	chmod 777 $SRVPATH/pgm/lserver
	chmod 4775 $SAPDBPATH/pgm/dbmsrv
	chmod 4775 $SRVPATH/pgm/dbmsrv		
	chmod 775 $TESTDBPATH/create_demo_db.sh
	chmod 775 $TESTDBPATH/drop_demo_db.sh
fi

#set permissions for interfaces
###################################################################



#modify spec files and save as *_tmp.spec
#insert version number and replace $_RELEASE  with version
##########################################################
echo "modify spec files"
echo $WRK | sed 's/\//\\\//g' > $WRK/path.tmp
_TPATH=`cat $WRK/path.tmp`
rm $WRK/path.tmp
#modify version, doc paths 
if [ $1 = "all" ] || [ $1 = "server" ]
then
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb.spec | sed "s/^version.*$/version:        $_RELEASE/" | sed "s/\$_RELEASE/$_RELEASE/g" > $RPMPATH/sapdb_tmp.spec
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-srv.spec | sed "s/^version.*$/version:        $_RELEASE/" | sed "s/\$_RELEASE/$_RELEASE/g" > $RPMPATH/srv_tmp.spec
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-testdb.spec |   sed "s/^version.*$/version:        $_RELEASE/" > $RPMPATH/testdb_tmp.spec
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-ind.spec | sed "s/^version.*$/version:        $_RELEASE/" > $RPMPATH/ind_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "webtools" ]
then
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-webtools.spec | sed "s/^version.*$/version:        $_RELEASE/" > $RPMPATH/webtools_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "precompiler" ]
then
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-precompiler.spec | sed "s/^version.*$/version:        $_RELEASE/" > $RPMPATH/precompiler_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "callif" ]
then
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-callif.spec | sed "s/^version.*$/version:        $_RELEASE/" > $RPMPATH/callif_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "scriptif" ]
then
	sed "s/\$WRK/$_TPATH/g" $RPMPATH/sapdb-scriptif.spec | sed "s/^version.*$/version:        $_RELEASE/" > $RPMPATH/scriptif_tmp.spec
fi 



#generate rpm rcscript
#needed to create RPMs in special directory
##########################################################
echo "generate rpm rcscript"
cat <<EOF > $RPMPATH/rpmmacros
%_tmppath /tmp
%_rpmdir $RPMPATH
%_rpmfilename %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm
EOF
grep -v '^macrofiles:' /usr/lib/rpm/rpmrc > $RPMPATH/rpmrc
echo "macrofiles:  /usr/lib/rpm/macros:/usr/lib/rpm/%{_target}/macros:/etc/rpm/macros:/etc/rpm/%{_target}/macros:~/.rpmmacros:$RPMPATH/rpmmacros" >> $RPMPATH/rpmrc


#build rpm
#########################################################
echo "build rpms"
if [ $1 = "all" ] || [ $1 = "server" ]
then
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/sapdb_tmp.spec 
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/testdb_tmp.spec
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/srv_tmp.spec
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/ind_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "webtools" ]
then
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/webtools_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "precompiler" ]
then
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/precompiler_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "callif" ]
then
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/callif_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "scriptif" ]
then
	rpm --rcfile $RPMPATH/rpmrc  -bb $RPMPATH/scriptif_tmp.spec
fi


#clean
########################################################
echo "cleaning buildroot and temporary files"
rm $RPMPATH/rpmrc
if [ $1 = "all" ] || [ $1 = "server" ]
then
	rm $RPMPATH/sapdb_tmp.spec
	rm $RPMPATH/srv_tmp.spec
	rm $RPMPATH/testdb_tmp.spec
	rm $RPMPATH/ind_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "webtools" ]
then
	rm $RPMPATH/webtools_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "precompiler" ]
then
	rm $RPMPATH/precompiler_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "callif" ]
then
	rm $RPMPATH/callif_tmp.spec
fi
if [ $1 = "all" ] || [ $1 = "scriptif" ]
then
	rm $RPMPATH/scriptif_tmp.spec
fi
rm $RPMPATH/rpmmacros
#rm -R $BUILDROOT

