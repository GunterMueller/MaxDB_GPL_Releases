#!/usr/bin/perl
# getpts.pl
#
# @(#)getpts  7.1  1999-03-12 
#
#
#    ========== licence begin  GPL
#    Copyright (C) 2001 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end
#

use Env;
use Getopt::Std;

sub EchoOff;
sub EchoOn;
sub Unregister;
sub Register;
sub XCopy;
sub CreateShortCut;
sub DoFile; 
sub MakeFileName;
sub _system;

$CMD_REGISTER="regsvr32 /s ";
$CMD_UNREGISTER="regsvr32 /s /u ";
$CMD_XCOPY="xcopy /D ";

# Files to be (re)registerd
$RegisterDir = "$ENV{TOOL}/PTS";

@RegisterFiles = ( "SAPDBCTSClient.ocx", "SAPDBCTSObjects.dll", 
"SAPDBPTSAdmin.ocx", "SAPDBPTSDBAL.dll", "SAPDBxCommon.dll", 
"SAPDBxDBCOM.dll", "SAPDBxExplorer.ocx", "SAPDBxKeyManagement.dll",
"SAPDBxRegLib.dll", "SAPDBxSplitterBox.ocx", "SAPDBxTraceServer.dll",
);

# Files to be Copied
$PTSSourceDir="\\\\P26326/setups/GuiClients/Problem Tracking System/PTS";
$PTSTargedDir="$ENV{TOOL}/PTS";

@PTSFiles = ( "PTS.exe", "SAPDBCTSClient.ocx", "SAPDBCTSObjects.dll", 
"SAPDBPTSAdmin.ocx", "SAPDBPTSDBAL.dll", "SQLOD32.dll", "SQLSP32.dll",
"SQLUSER.dll", "SQLTCP.dll", "SQLTCPN.dll", "SQLTCP1.dll", "SQLTCP2.dll",
"SQLOD32.dll.q", "SQLSP32.dll.q"
);

$ClientSourceDir="\\\\P26326/setups/GuiClients/Shared";
$ClientTargedDir="$ENV{TOOL}/PTS";

@ClientFiles = ("SAPDBxCommon.dll", "SAPDBxDBCOM.dll", "SAPDBxExplorer.ocx", 
"SAPDBxKeyManagement.dll", "SAPDBxRegLib.dll", "SAPDBxSplitterBox.ocx",
"SAPDBxTraceServer.dll"
);

# Shortcuts to be made
$ShortCutAppl = "$ENV{TOOL}/PTS/PTS.exe";
$ShortCut     = "$ENV{USERPROFILE}/Desktop/PTS.lnk";

#  Main

if (!getopts ('hvn') || $opt_h )
{
    print <DATA>;
    exit;
}

Unregister ($RegisterDir, @RegisterFiles);

XCopy ($PTSSourceDir, $PTSTargedDir, @PTSFiles );

XCopy ($ClientSourceDir, $ClientTargedDir, @ClientFiles );

Register ($RegisterDir, @RegisterFiles);

CreateShortCut ($ShortCutAppl, $ShortCut);

print "##################\n";
print "    Enjoy PTS !\n";
print "##################\n";

sub Unregister
{
    $PATH = $_[0];
    shift;

    print "Unregister ...\n";
    DoFile ($CMD_UNREGISTER, $PATH, $PATH, @_);
}

sub Register
{
    $PATH = $_[0];
    shift;

    print "Register ...\n";
    DoFile ($CMD_REGISTER, $PATH, $PATH, @_);
}

sub XCopy
{
    $SOURCEDIR = $_[0];
    shift;
    $TARGETDIR = $_[0];
    shift;

    print "Copy ...\n";
    DoFile ($CMD_XCOPY, $SOURCEDIR, $TARGETDIR, @_);
}

sub CreateShortCut
{
    $FILE = $_[0]; $FILE =~ s/\//\\/g;
    shift;
    $SHORTCUT = $_[0]; $SHORTCUT =~ s/\//\\/g;
    shift;
    print "Create Shortcut ...\n";

    if ( -f "$FILE" ) {
	_system("shortcut -f -t $FILE -i $FILE -n \"$SHORTCUT\"");	
    }
}

sub DoFile 
{
    $CMD=$_[0];
    shift;
    $SOURCEDIR = $_[0]; $SOURCEDIR =~ s/\//\\/g;
    shift;
    $TARGETDIR = $_[0]; $TARGETDIR =~ s/\//\\/g;
    shift;
    @FILES = @_;
    
    foreach $FILE (@FILES) {	
	if ( "$SOURCEDIR" !=~ // ) {
	    $SOURCE = "$SOURCEDIR\\$FILE";
	}
	else {
	    $SOURCE = "";
	}
	if ( $TARGETDIR !=~ // ) {
	    $TARGET = "$TARGETDIR\\$FILE";
	}
	else {
	    $TARGET = "";
	}
	if ( -f "$SOURCE" ) {
	    _system("$CMD \"$SOURCE\" \"$TARGET\"");
	}
    }
}

sub _system 
{   
    print "$_[0]\n" if ( $opt_v);
    EchoOff if ( $opt_v );
    system("$_[0]") unless ( $opt_n ); 
    EchoOn if ( $opt_v );
}

sub EchoOff
{
    open (SAVEOUT, ">&STDOUT");
    close STDOUT;
    open (STDOUT, ">NUL");
}

sub EchoOn
{
    close STDOUT;
    open(STDOUT, ">&SAVEOUT");
    close SAVEOUT;
}

__DATA__

 USAGE: getpts [-vhn]

           Installs the Problem Tracking System.

 OPTIONS:    -h        prints this help.
             -v        verbose
             -n        no execution
