# @(#)stampd 6.1.2  1997-11-20
#
# time stamp and pretty a module
#
#
#
#    ========== licence begin  GPL
#    Copyright (C) 2001 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end
#

use Env;
use ICopy;
do "$TOOL/bin/sutvars$TOOLEXT";
if ( $@ ) { die "Error while executing sutvars$TOOLEXT: $@"; }

$USAGE = "usage: stamp version module(s)\n";

if ( @ARGV < 2 ) { die $USAGE }

$REL = $ARGV[0]; $REL =~ tr[a-z][A-Z];
if ( $REL !~ /.\..\..*|.\..\..+\..*/ ) { die "Version Format not n.n.nn" }

$REL .= " "x(9-length($REL));
$DATE = 1900+(localtime)[5]."-"."0"x(2-length(((localtime)[4])+1)).((localtime)[4]+1).
		"-"."0"x(2-length((localtime)[3])).(localtime)[3]; #YYYY-MM-DD

foreach $MOD ( @ARGV ) {

    local($path, $file) = ICopy::GetFilePath($MOD, 0, 0, 1);
    local $OWNFILE = "$OWN/$file",;
    system("$TOOL/bin/iget", "-e0", $OWNFILE);

	if ( -s $OWNFILE ) {

        $fn = basename($file);

        if ( $OWNFILE =~ /.+\.(deh|enh)$/i ) {
			open(FILE_IN, $OWNFILE) || die "Can't open $OWNFILE (input): $!\n";
			open(FILE_OUT, "$TMP/stamp.out") || die "Can't open $TMP/stamp.out (output): $!\n";
			while(<FILE_IN>) {
				if ( /^.*          [ |]     0[ |]  [ |] / ) {
					s/   0.  .*$/   0     $fn   $REL  $DATE/;
					print FILE_OUT $_;
				}
			}
			close(FILE_OUT); close(FILE_IN);
        }
        elsif ( $OWNFILE =~ /.+\.(dem|enm|mde)$/i ) {
			open(FILE_IN, $OWNFILE) || die "Can't open $OWNFILE (input): $!\n";
			open(FILE_OUT, "$TMP/stamp.out") || die "Can't open $TMP/stamp.out (output): $!\n";
			while(<FILE_IN>) {
				if ( /^.*  ..999 / ) {
					s/999 .*$/999 $fn   $REL  $DATE/;
					print FILE_OUT $_;
				}
			}
			close(FILE_OUT); close(FILE_IN);
        }
        elsif ( $OWNFILE =~ /.+c$/i ) {
			open(FILE_IN, $OWNFILE) || die "Can't open $OWNFILE (input): $!\n";
			open(FILE_OUT, "$TMP/stamp.out") || die "Can't open $TMP/stamp.out (output): $!\n";
			while(<FILE_IN>) {
				if ( /^\.[tT][tT][ ]*3[ ]/ ) {
					s/\\$[^\\$]*\\$[ 	]*\$/\$$DATE\$/;
					s/ Release .*Date .*';\$/ Version $REL    Date $DATE';/;
					s/ Version .*Date .*';\$/ Version $REL Date $DATE';/;
					s/^Release[ ]*:.*Date.*/Release :  $REL     Date : $DATE/;
					print FILE_OUT $_;
				}
			}
			close(FILE_OUT); close(FILE_IN);
        }
        else {
			local(@ARGV) = ( $fn );
			do "$TOOL/bin/ipretty$TOOLEXT";
			if ( $@ ) { die "Error while executing ipretty$TOOLEXT: $@\n" }
			open(FILE_IN, $OWNFILE) || die "Can't open $OWNFILE (input): $!\n";
			open(FILE_OUT, "$TMP/stamp.out") || die "Can't open $TMP/stamp.out (output): $!\n";
			while(<FILE_IN>) {
				s!^(\.tt\s*3\s*\$.*\$.*\$).*\$!$1\$$DATE\$!i;
				s/ Release .*Date .*';\$/ Version $REL    Date $DATE';/;
				s/ Version .*Date .*';\$/ Version $REL Date $DATE';/;
				s/^Release[ ]*:.*Date.*/Release :  $REL     Date : $DATE/;
				print FILE_OUT $_;
			}
			close(FILE_OUT); close(FILE_IN);
        }

	  if ( -s "$OWN/tmp/stamp.out" ) {

	 	system("$TOOL/bin/diff $OWN/tmp/stamp.out $OWNFILE >$NULL");
		if ( $? == 0 ) {
		    print "$OWNFILE not stamped\n";
		} 
        else { 
            print "stamp $OWNFILE: $REL $DATE\n"; 
            unlink $OWNFILE; rename("$OWN/tmp/stamp.out", $OWNFILE);
		}

	  } else { print "$OWNFILE not stamped\n" }

	} else { print "$OWNFILE not found\n" }
} #foreach


__END__
