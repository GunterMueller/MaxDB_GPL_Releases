JOIN_P.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_P ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
CREATE TABLE "WAGGONS"            (
"WAGGON_NUMMER" CHAR(20) ASCII ,
"HOLZNR" INTEGER
DEFAULT 0,
"BAHNHOFAB" TIMESTAMP ,
"VERMESSEN" TIMESTAMP ,
"STEINHORST" TIMESTAMP ,
"BOX" TIMESTAMP ,
"BHFADELEBSENAN" TIMESTAMP ,
"WEGENER" TIMESTAMP ,
"BEMERKUNG" CHAR(50) ASCII ,
"BAHNHOFSNR" INTEGER
DEFAULT 99999,
"CAFM" FLOAT(8)
DEFAULT 0.0000000E+00,
"ERLEDIGT" SMALLINT
DEFAULT 0,
"FUHRMANN_NR" INTEGER
DEFAULT 99999,
"BAHNHOF" CHAR(40) ASCII ,
"WAGGONSNR" CHAR(12) ASCII ,
"LOESCHZEIT" TIMESTAMP ,
"LKW" FIXED(5,0)
DEFAULT 0
, PRIMARY KEY ("WAGGONSNR"
)) !
 
Enter command:
 
INSERT INTO WAGGONS SET WAGGON_NUMMER = '1', WAGGONSNR = '1' !
 
Enter command:
INSERT INTO WAGGONS SET WAGGON_NUMMER = '2', WAGGONSNR = '2' !
 
Enter command:
INSERT INTO WAGGONS SET WAGGON_NUMMER = '3', WAGGONSNR = '3' !
 
Enter command:
 
CREATE TABLE "PUFFER"             (
"STUECK" SMALLINT
DEFAULT 0,
"LOESCHZEIT" TIMESTAMP ,
"AUFTRAGSNR" CHAR(12) ASCII ,
"WAGGONSNR" CHAR(12) ASCII ,
"PUFFERNR" CHAR(12) ASCII
, PRIMARY KEY ("PUFFERNR"
)) !
 
Enter command:
 
INSERT INTO PUFFER SET PUFFERNR = '2', WAGGONSNR = '2' !
 
Enter command:
INSERT INTO PUFFER SET PUFFERNR = '3' !
 
Enter command:
INSERT INTO PUFFER SET PUFFERNR = '4' !
 
Enter command:
 
COMMIT !
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS,PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
KERN               | PUFFER             |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS, PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PUFFER             |                    | TABLE SCAN                               |          1
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
CREATE INDEX        "WAGGONSNR"          ON "PUFFER"
("WAGGONSNR" ASC ) !
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS,PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
KERN               | PUFFER             | WAGGONSNR          | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | WAGGONSNR          |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS, PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PUFFER             |                    | TABLE SCAN                               |          1
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
DROP TABLE WAGGONS !
 
Enter command:
DROP TABLE PUFFER !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
 
CREATE TABLE TAB1 ( K00  INT, K01 INT) !
 
Enter command:
CREATE TABLE TAB2 ( K00  INT, K01 INT) !
 
Enter command:
 
INSERT INTO TAB1 VALUES ( 1, 1 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 2, 2 )!
 
Enter command:
INSERT INTO TAB2 VALUES ( 1, 1 )!
 
Enter command:
INSERT INTO TAB2 VALUES ( 2, 2 )!
 
Enter command:
 
SELECT * FROM TAB1, TAB2
WHERE NOT(TAB1.K01 = 1 AND TAB2.K00 = 1) !
 
resultcount :                     3
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
CREATE TABLE NAME_SPACE (
    ID         CHAR(24)    BYTE,
    NAME_SPACE CHAR(50)      ,
    PRIMARY KEY (NAME_SPACE),
    CONSTRAINT NAME_SPACE_X UNIQUE (ID)
)!
 
Enter command:
INSERT INTO NAME_SPACE SET
  ID = X'000000000000000000000000000000000000000000000001',
  NAME_SPACE = 'DAV:'!
 
Enter command:
CREATE TABLE PROPERTY_MANAGEMENT (
   ID                CHAR(24)   BYTE,
   NAME_SPACE_ID     CHAR(24)   BYTE,
   NAME_PREFIX       CHAR(50)      ,
   NAME              CHAR(50)     ,
   PRIMARY KEY (NAME_SPACE_ID, NAME_PREFIX)
)!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000001',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'displayname'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000002',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'resourcetype'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000003',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'getcontenttype'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000004',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'getcontentlength'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000005',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'getlastmodified'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000006',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockdiscovery'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000006',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockid'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000007',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockowner'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000008',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'locktype'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000009',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockscope'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'00000000000000000000000000000000000000000000000A',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'locktimeout'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'00000000000000000000000000000000000000000000000B',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockdepth'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'00000000000000000000000000000000000000000000000C',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'supportedlock'!
 
Enter command:
CREATE TABLE PROPERTY (
   CID                  CHAR(24)  BYTE,
 
   PROPERTY_ID          CHAR(24)  BYTE,
   PROPERTY_SHORT_VALUE CHAR(900)     ,
   PROPERTY_LONG_VALUE  LONG      BYTE
)!
 
Enter command:
CREATE INDEX PROPERTY_X1 ON PROPERTY (PROPERTY_ID, CID)!
 
Enter command:
CREATE INDEX PROPERTY_X2 ON PROPERTY (CID DESC)!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000001',
  PROPERTY_SHORT_VALUE = '/'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000002',
  PROPERTY_SHORT_VALUE = 'collection'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000003',
  PROPERTY_SHORT_VALUE = 'sapdbwww/directory'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000004',
  PROPERTY_SHORT_VALUE = '0'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000005',
  PROPERTY_SHORT_VALUE = TIMESTAMP!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000006',
  PROPERTY_SHORT_VALUE = '000000000000000000000000000000000000000000000000'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'00000000000000000000000000000000000000000000000C',
  PROPERTY_SHORT_VALUE = 'exclusive'!
 
Enter command:
 
 
SELECT NS.NAME_SPACE, PM.NAME_PREFIX,
       P.PROPERTY_SHORT_VALUE, P.PROPERTY_ID
FROM PROPERTY P, PROPERTY_MANAGEMENT PM, NAME_SPACE NS
WHERE
P.PROPERTY_ID = PM.ID AND PM.NAME_SPACE_ID = NS.ID AND
NOT (NS.NAME_SPACE = 'DAV:' AND PM.NAME_PREFIX = 'lockid') !
 
resultcount :                     7
 
Enter command:
FETCH!
 
NAME_SPACE        :  DAV:
NAME_PREFIX       :  displayname
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  /
PROPERTY_ID       :  000000000000000000000000000000000000000000000001
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  resourcetype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  collection
PROPERTY_ID       :  000000000000000000000000000000000000000000000002
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontenttype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  sapdbwww/directory
PROPERTY_ID       :  000000000000000000000000000000000000000000000003
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontentlength
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  0
PROPERTY_ID       :  000000000000000000000000000000000000000000000004
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getlastmodified
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  TIMESTAMPXXXXXXXXXXX
PROPERTY_ID       :  000000000000000000000000000000000000000000000005
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  lockdiscovery
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  000000000000000000000000000000000000000000000000
PROPERTY_ID       :  000000000000000000000000000000000000000000000006
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  supportedlock
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  exclusive
PROPERTY_ID       :  00000000000000000000000000000000000000000000000C
 
resultcount :                     7
 
Enter command:
 
SELECT NS.NAME_SPACE, PM.NAME_PREFIX,
       P.PROPERTY_SHORT_VALUE, P.PROPERTY_ID
FROM PROPERTY P, PROPERTY_MANAGEMENT PM, NAME_SPACE NS
WHERE
NOT (NS.NAME_SPACE = 'DAV:' AND PM.NAME_PREFIX = 'lockid') AND
P.PROPERTY_ID = PM.ID AND PM.NAME_SPACE_ID = NS.ID !
 
resultcount :                     7
 
Enter command:
FETCH!
 
NAME_SPACE        :  DAV:
NAME_PREFIX       :  displayname
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  /
PROPERTY_ID       :  000000000000000000000000000000000000000000000001
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  resourcetype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  collection
PROPERTY_ID       :  000000000000000000000000000000000000000000000002
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontenttype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  sapdbwww/directory
PROPERTY_ID       :  000000000000000000000000000000000000000000000003
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontentlength
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  0
PROPERTY_ID       :  000000000000000000000000000000000000000000000004
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getlastmodified
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  TIMESTAMPXXXXXXXXXXX
PROPERTY_ID       :  000000000000000000000000000000000000000000000005
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  lockdiscovery
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  000000000000000000000000000000000000000000000000
PROPERTY_ID       :  000000000000000000000000000000000000000000000006
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  supportedlock
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  exclusive
PROPERTY_ID       :  00000000000000000000000000000000000000000000000C
 
resultcount :                     7
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE J1 (I1 INT)!
 
Enter command:
CREATE TABLE J2 (I2 INT)!
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_ONEPHASE = 'YES' !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
EXPRESSION1       :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX!
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
1                 :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_ONEPHASE = 'NO' !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
EXPRESSION1       :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX!
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
1                 :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_ONEPHASE = 'YES' !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TABLE1 (
D_START DATE, COLUMN1 NUMBER (9,0),
E_KEY NUMBER (9,0) PRIMARY KEY)!
 
Enter command:
CREATE TABLE TABLE2 (A_KEY NUMBER(9,0) PRIMARY KEY)!
 
Enter command:
PARSING!
 
Enter command:
SELECT * FROM TABLE1 B  INNER JOIN TABLE2 A ON (B.E_KEY=A.A_KEY)
WHERE  B.D_START=TO_DATE(?, 'dd/mm/yyyy') AND
 B.COLUMN1=TO_NUMBER(?) AND
 B.E_KEY=TO_NUMBER(?) !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
SELECT !
Parsing idnr :      1
 
c 254 '26/05/2004'
c 254 '1'
c 254 '200027'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
CREATE TABLE TABLE1 (UKFIELD INT KEY, FKFIELD INT)!
 
Enter command:
INSERT TABLE1 VALUES (1,1)!
 
Enter command:
CREATE TABLE TABLE2 (UKFIELD INT KEY)!
 
Enter command:
INSERT TABLE2 VALUES (1)!
 
Enter command:
 
EXPLAIN SELECT *
FROM TABLE1 T1, TABLE2 T2
WHERE ( T1.FKFIELD = T2.UKFIELD(+) )
  AND (T1.UKFIELD = 0 AND T1.UKFIELD = 1)!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | NO RESULT SET POSSIBLE                   |
                   | T2                 | UKFIELD            | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
 
SELECT *
FROM TABLE1 T1, TABLE2 T2
WHERE ( T1.FKFIELD = T2.UKFIELD(+) )
  AND (T1.UKFIELD = 0 AND T1.UKFIELD = 1)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( C1 CHAR(10), C2 CHAR(1) DEFAULT 'z'
, PRIMARY KEY(C1,C2))!
 
Enter command:
INSERT INTO TAB1(C1) VALUES('aaaaaaaaaa')!
 
Enter command:
INSERT INTO TAB1(C1) VALUES('bbbbb')!
 
Enter command:
 
CREATE TABLE TAB2 ( C1 CHAR(5), C2 CHAR(1) DEFAULT 'x'
, PRIMARY KEY(C1,C2))!
 
Enter command:
CREATE INDEX I1 ON TAB2(C1)!
 
Enter command:
INSERT INTO TAB2(C1) VALUES('aaaaa')!
 
Enter command:
INSERT INTO TAB2(C1) VALUES('bbbbb')!
 
Enter command:
 
EXPLAIN SELECT TAB1.C1 FROM <TAB1, TAB2>
WHERE TAB1.C1 = TAB2.C1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | TAB1               |                    | TABLE SCAN                               |          1
SUT                | TAB2               | I1                 | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | C1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          6
 
Enter command:
SELECT TAB1.C1 FROM <TAB1, TAB2>
WHERE TAB1.C1 = TAB2.C1 !
 
resultcount :                     1
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE JOIN_P ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
CREATE TABLE "WAGGONS"            (
"WAGGON_NUMMER" CHAR(20) ASCII ,
"HOLZNR" INTEGER
DEFAULT 0,
"BAHNHOFAB" TIMESTAMP ,
"VERMESSEN" TIMESTAMP ,
"STEINHORST" TIMESTAMP ,
"BOX" TIMESTAMP ,
"BHFADELEBSENAN" TIMESTAMP ,
"WEGENER" TIMESTAMP ,
"BEMERKUNG" CHAR(50) ASCII ,
"BAHNHOFSNR" INTEGER
DEFAULT 99999,
"CAFM" FLOAT(8)
DEFAULT 0.0000000E+00,
"ERLEDIGT" SMALLINT
DEFAULT 0,
"FUHRMANN_NR" INTEGER
DEFAULT 99999,
"BAHNHOF" CHAR(40) ASCII ,
"WAGGONSNR" CHAR(12) ASCII ,
"LOESCHZEIT" TIMESTAMP ,
"LKW" FIXED(5,0)
DEFAULT 0
, PRIMARY KEY ("WAGGONSNR"
)) !
 
Enter command:
 
INSERT INTO WAGGONS SET WAGGON_NUMMER = '1', WAGGONSNR = '1' !
 
Enter command:
INSERT INTO WAGGONS SET WAGGON_NUMMER = '2', WAGGONSNR = '2' !
 
Enter command:
INSERT INTO WAGGONS SET WAGGON_NUMMER = '3', WAGGONSNR = '3' !
 
Enter command:
 
CREATE TABLE "PUFFER"             (
"STUECK" SMALLINT
DEFAULT 0,
"LOESCHZEIT" TIMESTAMP ,
"AUFTRAGSNR" CHAR(12) ASCII ,
"WAGGONSNR" CHAR(12) ASCII ,
"PUFFERNR" CHAR(12) ASCII
, PRIMARY KEY ("PUFFERNR"
)) !
 
Enter command:
 
INSERT INTO PUFFER SET PUFFERNR = '2', WAGGONSNR = '2' !
 
Enter command:
INSERT INTO PUFFER SET PUFFERNR = '3' !
 
Enter command:
INSERT INTO PUFFER SET PUFFERNR = '4' !
 
Enter command:
 
COMMIT !
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS,PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
KERN               | PUFFER             |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | WAGGONSNR          |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS, PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PUFFER             |                    | TABLE SCAN                               |          1
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
CREATE INDEX        "WAGGONSNR"          ON "PUFFER"
("WAGGONSNR" ASC ) !
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS,PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
KERN               | PUFFER             | WAGGONSNR          | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | WAGGONSNR          |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<WAGGONS, PUFFER> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
EXPLAIN SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PUFFER             |                    | TABLE SCAN                               |          1
KERN               | WAGGONS            |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
SELECT WAGGONS.WAGGONSNR,PUFFER.WAGGONSNR,
PUFFER.PUFFERNR FROM
<PUFFER, WAGGONS> WHERE
WAGGONS.WAGGONSNR = PUFFER.WAGGONSNR(+)
AND PUFFER.WAGGONSNR IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
WAGGONSNR    | WAGGONSNR    | PUFFERNR
-------------+--------------+-------------
1            | ???????????? | ????????????
3            | ???????????? | ????????????
 
resultcount :                     2
 
Enter command:
 
DROP TABLE WAGGONS !
 
Enter command:
DROP TABLE PUFFER !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
 
CREATE TABLE TAB1 ( K00  INT, K01 INT) !
 
Enter command:
CREATE TABLE TAB2 ( K00  INT, K01 INT) !
 
Enter command:
 
INSERT INTO TAB1 VALUES ( 1, 1 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 2, 2 )!
 
Enter command:
INSERT INTO TAB2 VALUES ( 1, 1 )!
 
Enter command:
INSERT INTO TAB2 VALUES ( 2, 2 )!
 
Enter command:
 
SELECT * FROM TAB1, TAB2
WHERE NOT(TAB1.K01 = 1 AND TAB2.K00 = 1) !
 
resultcount :                     3
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
CREATE TABLE NAME_SPACE (
    ID         CHAR(24)    BYTE,
    NAME_SPACE CHAR(50)      ,
    PRIMARY KEY (NAME_SPACE),
    CONSTRAINT NAME_SPACE_X UNIQUE (ID)
)!
 
Enter command:
INSERT INTO NAME_SPACE SET
  ID = X'000000000000000000000000000000000000000000000001',
  NAME_SPACE = 'DAV:'!
 
Enter command:
CREATE TABLE PROPERTY_MANAGEMENT (
   ID                CHAR(24)   BYTE,
   NAME_SPACE_ID     CHAR(24)   BYTE,
   NAME_PREFIX       CHAR(50)      ,
   NAME              CHAR(50)     ,
   PRIMARY KEY (NAME_SPACE_ID, NAME_PREFIX)
)!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000001',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'displayname'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000002',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'resourcetype'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000003',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'getcontenttype'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000004',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'getcontentlength'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000005',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'getlastmodified'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000006',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockdiscovery'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000006',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockid'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000007',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockowner'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000008',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'locktype'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'000000000000000000000000000000000000000000000009',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockscope'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'00000000000000000000000000000000000000000000000A',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'locktimeout'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'00000000000000000000000000000000000000000000000B',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'lockdepth'!
 
Enter command:
INSERT INTO PROPERTY_MANAGEMENT SET
  ID = X'00000000000000000000000000000000000000000000000C',
  NAME_SPACE_ID = X'000000000000000000000000000000000000000000000001',
  NAME_PREFIX = 'supportedlock'!
 
Enter command:
CREATE TABLE PROPERTY (
   CID                  CHAR(24)  BYTE,
 
   PROPERTY_ID          CHAR(24)  BYTE,
   PROPERTY_SHORT_VALUE CHAR(900)     ,
   PROPERTY_LONG_VALUE  LONG      BYTE
)!
 
Enter command:
CREATE INDEX PROPERTY_X1 ON PROPERTY (PROPERTY_ID, CID)!
 
Enter command:
CREATE INDEX PROPERTY_X2 ON PROPERTY (CID DESC)!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000001',
  PROPERTY_SHORT_VALUE = '/'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000002',
  PROPERTY_SHORT_VALUE = 'collection'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000003',
  PROPERTY_SHORT_VALUE = 'sapdbwww/directory'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000004',
  PROPERTY_SHORT_VALUE = '0'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000005',
  PROPERTY_SHORT_VALUE = TIMESTAMP!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'000000000000000000000000000000000000000000000006',
  PROPERTY_SHORT_VALUE = '000000000000000000000000000000000000000000000000'!
 
Enter command:
INSERT INTO PROPERTY SET
  CID = X'000000000000000000000000000000000000000000000000',
  PROPERTY_ID = X'00000000000000000000000000000000000000000000000C',
  PROPERTY_SHORT_VALUE = 'exclusive'!
 
Enter command:
 
 
SELECT NS.NAME_SPACE, PM.NAME_PREFIX,
       P.PROPERTY_SHORT_VALUE, P.PROPERTY_ID
FROM PROPERTY P, PROPERTY_MANAGEMENT PM, NAME_SPACE NS
WHERE
P.PROPERTY_ID = PM.ID AND PM.NAME_SPACE_ID = NS.ID AND
NOT (NS.NAME_SPACE = 'DAV:' AND PM.NAME_PREFIX = 'lockid') !
 
resultcount :                     7
 
Enter command:
FETCH!
 
NAME_SPACE        :  DAV:
NAME_PREFIX       :  displayname
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  /
PROPERTY_ID       :  000000000000000000000000000000000000000000000001
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  resourcetype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  collection
PROPERTY_ID       :  000000000000000000000000000000000000000000000002
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontenttype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  sapdbwww/directory
PROPERTY_ID       :  000000000000000000000000000000000000000000000003
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontentlength
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  0
PROPERTY_ID       :  000000000000000000000000000000000000000000000004
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getlastmodified
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  TIMESTAMPXXXXXXXXXXX
PROPERTY_ID       :  000000000000000000000000000000000000000000000005
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  lockdiscovery
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  000000000000000000000000000000000000000000000000
PROPERTY_ID       :  000000000000000000000000000000000000000000000006
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  supportedlock
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  exclusive
PROPERTY_ID       :  00000000000000000000000000000000000000000000000C
 
resultcount :                     7
 
Enter command:
 
SELECT NS.NAME_SPACE, PM.NAME_PREFIX,
       P.PROPERTY_SHORT_VALUE, P.PROPERTY_ID
FROM PROPERTY P, PROPERTY_MANAGEMENT PM, NAME_SPACE NS
WHERE
NOT (NS.NAME_SPACE = 'DAV:' AND PM.NAME_PREFIX = 'lockid') AND
P.PROPERTY_ID = PM.ID AND PM.NAME_SPACE_ID = NS.ID !
 
resultcount :                     7
 
Enter command:
FETCH!
 
NAME_SPACE        :  DAV:
NAME_PREFIX       :  displayname
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  /
PROPERTY_ID       :  000000000000000000000000000000000000000000000001
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  resourcetype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  collection
PROPERTY_ID       :  000000000000000000000000000000000000000000000002
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontenttype
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  sapdbwww/directory
PROPERTY_ID       :  000000000000000000000000000000000000000000000003
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getcontentlength
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  0
PROPERTY_ID       :  000000000000000000000000000000000000000000000004
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  getlastmodified
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  TIMESTAMPXXXXXXXXXXX
PROPERTY_ID       :  000000000000000000000000000000000000000000000005
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  lockdiscovery
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  000000000000000000000000000000000000000000000000
PROPERTY_ID       :  000000000000000000000000000000000000000000000006
--------------------------------------------------------------------------------
NAME_SPACE        :  DAV:
NAME_PREFIX       :  supportedlock
PROPERTY_SHORT_VALUE
PROPERTY_SHORT_...:  exclusive
PROPERTY_ID       :  00000000000000000000000000000000000000000000000C
 
resultcount :                     7
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE J1 (I1 INT)!
 
Enter command:
CREATE TABLE J2 (I2 INT)!
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_ONEPHASE = 'YES' !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
EXPRESSION1       :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX!
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
1                 :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_ONEPHASE = 'NO' !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
EXPRESSION1       :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX!
 
Enter command:
SELECT COUNT(*) INTO :A FROM J1, J2 WHERE I1 = I2!
 
1                 :            0
 
Enter command:
SELECT COUNT(*) FROM J1, J2 WHERE I1 = I2!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_ONEPHASE = 'YES' !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TABLE1 (
D_START DATE, COLUMN1 NUMBER (9,0),
E_KEY NUMBER (9,0) PRIMARY KEY)!
 
Enter command:
CREATE TABLE TABLE2 (A_KEY NUMBER(9,0) PRIMARY KEY)!
 
Enter command:
PARSING!
 
Enter command:
SELECT * FROM TABLE1 B  INNER JOIN TABLE2 A ON (B.E_KEY=A.A_KEY)
WHERE  B.D_START=TO_DATE(?, 'dd/mm/yyyy') AND
 B.COLUMN1=TO_NUMBER(?) AND
 B.E_KEY=TO_NUMBER(?) !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
SELECT !
Parsing idnr :      1
 
c 254 '26/05/2004'
c 254 '1'
c 254 '200027'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
CONNECT KERN TEST !
 
Enter command:
CREATE TABLE TABLE1 (UKFIELD INT KEY, FKFIELD INT)!
 
Enter command:
INSERT TABLE1 VALUES (1,1)!
 
Enter command:
CREATE TABLE TABLE2 (UKFIELD INT KEY)!
 
Enter command:
INSERT TABLE2 VALUES (1)!
 
Enter command:
 
EXPLAIN SELECT *
FROM TABLE1 T1, TABLE2 T2
WHERE ( T1.FKFIELD = T2.UKFIELD(+) )
  AND (T1.UKFIELD = 0 AND T1.UKFIELD = 1)!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | NO RESULT SET POSSIBLE                   |
                   | T2                 | UKFIELD            | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
 
SELECT *
FROM TABLE1 T1, TABLE2 T2
WHERE ( T1.FKFIELD = T2.UKFIELD(+) )
  AND (T1.UKFIELD = 0 AND T1.UKFIELD = 1)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( C1 CHAR(10), C2 CHAR(1) DEFAULT 'z'
, PRIMARY KEY(C1,C2))!
 
Enter command:
INSERT INTO TAB1(C1) VALUES('aaaaaaaaaa')!
 
Enter command:
INSERT INTO TAB1(C1) VALUES('bbbbb')!
 
Enter command:
 
CREATE TABLE TAB2 ( C1 CHAR(5), C2 CHAR(1) DEFAULT 'x'
, PRIMARY KEY(C1,C2))!
 
Enter command:
CREATE INDEX I1 ON TAB2(C1)!
 
Enter command:
INSERT INTO TAB2(C1) VALUES('aaaaa')!
 
Enter command:
INSERT INTO TAB2(C1) VALUES('bbbbb')!
 
Enter command:
 
EXPLAIN SELECT TAB1.C1 FROM <TAB1, TAB2>
WHERE TAB1.C1 = TAB2.C1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | TAB1               |                    | TABLE SCAN                               |          1
SUT                | TAB2               | I1                 | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | C1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT TAB1.C1 FROM <TAB1, TAB2>
WHERE TAB1.C1 = TAB2.C1 !
 
resultcount :                     1
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
