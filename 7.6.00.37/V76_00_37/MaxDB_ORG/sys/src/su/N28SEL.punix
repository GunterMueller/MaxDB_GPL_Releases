N28SEL.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N28SEL1 !
 
Enter command:
 *** <SELECT EXPRESSION> WIRD GETESTET. !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE KERN.TAB1 ( SPALTE11 CHAR(10) KEY ,
                           SPALTE12 FIXED(5,2),
                           SPALTE13 FLOAT(5) ) !
 
Enter command:
INSERT TAB1 VALUES ( 'HANS'    , 22.52 , NULL ) !
 
Enter command:
INSERT TAB1 VALUES ( 'PAUL'    ,   0   ,  3E2 ) !
 
Enter command:
INSERT TAB1 VALUES ( 'JOACHIM' , 17.1  ,   0  ) !
 
Enter command:
 ***********************************************************!
 
Enter command:
CREATE TABLE KERN.TAB2 ( SPALTE21 FIXED(4) NOT NULL,
                           SPALTE22 CHAR(8) ,
                           SPALTE23 FLOAT(4) ) !
 
Enter command:
INSERT TAB2 VALUES ( 300   , 'HANS'   , NULL ) !
 
Enter command:
INSERT TAB2 VALUES ( 22.00 , 'FRIEDA' , 0    ) !
 
Enter command:
INSERT TAB2 VALUES ( 12    , 'JOACHIM', 0    ) !
 
Enter command:
 ***********************************************************!
 
Enter command:
CREATE TABLE KERN.TAB3 ( SPALTE31 FIXED(3),
                           SPALTE32 CHAR(10) ,
                           SPALTE33 FIXED(3) ) !
 
Enter command:
INSERT TAB3 VALUES ( 22  , 'HANS'    , NULL ) !
 
Enter command:
INSERT TAB3 VALUES ( 300 , 'ANDREAS' , 0    ) !
 
Enter command:
INSERT TAB3 VALUES ( 300 , 'ANDREAS' , 0    ) !
 
Enter command:
INSERT TAB3 VALUES ( NULL, 'JOACHIM' , 300  ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
 ***********************************************************!
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
SPALTE11   | SPALTE12 | SPALTE13
-----------+----------+------------
HANS       |   22.52  | ???????????
JOACHIM    |   17.10  |  0.0000E+00
PAUL       |    0.00  |  3.0000E+02
 
resultcount :                     3
 
Enter command:
DECLARE ERG2 CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG2 !
 
SPALTE21 | SPALTE22 | SPALTE23
---------+----------+-----------
  300    | HANS     | ??????????
   22    | FRIEDA   |  0.000E+00
   12    | JOACHIM  |  0.000E+00
 
resultcount :                     3
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG3 !
 
SPALTE31 | SPALTE32   | SPALTE33
---------+------------+---------
  22     | HANS       | ????
 300     | ANDREAS    |    0
 300     | ANDREAS    |    0
????     | JOACHIM    |  300
 
resultcount :                     4
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N28SEL2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DECLARE SELECTTAB1 CURSOR FOR
SELECT TAB1.SPALTE11, KERN.TAB1.SPALTE13,
       REF2.SPALTE22 NEU22,
       REF2.SPALTE23  NEU23, KERN.TAB3.SPALTE33
   FROM KERN.TAB1, TAB2  REF2 , TAB3
   WHERE TAB1.SPALTE13 <= KERN.TAB3.SPALTE33
     AND REF2.SPALTE22 <> TAB1.SPALTE11
     AND NOT ( REF2.SPALTE23 IS NULL ) !
 
resultcount :                     5
 
Enter command:
FETCH SELECTTAB1 !
 
SPALTE11   | SPALTE13    | NEU22    | NEU23      | SPALTE33
-----------+-------------+----------+------------+---------
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |    0
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |    0
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |  300
PAUL       |  3.0000E+02 | FRIEDA   |  0.000E+00 |  300
PAUL       |  3.0000E+02 | JOACHIM  |  0.000E+00 |  300
 
resultcount :                     5
 
Enter command:
DECLARE SELECTTAB3 CURSOR FOR
SELECT DISTINCT TAB1.SPALTE11, KERN.TAB1.SPALTE13,
       REF2.SPALTE22 NEU22,
       REF2.SPALTE23 NEU23, KERN.TAB3.SPALTE33
   FROM KERN.TAB1, TAB2  REF2 , TAB3
   WHERE TAB1.SPALTE13 <= KERN.TAB3.SPALTE33
     AND REF2.SPALTE22 <> TAB1.SPALTE11
     AND NOT ( REF2.SPALTE23 IS NULL )
        ORDER BY TAB1.SPALTE11, NEU22, KERN.TAB3.SPALTE33 DESC !
 
resultcount :                     4
 
Enter command:
FETCH SELECTTAB3 !
 
SPALTE11   | SPALTE13    | NEU22    | NEU23      | SPALTE33
-----------+-------------+----------+------------+---------
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |  300
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |    0
PAUL       |  3.0000E+02 | FRIEDA   |  0.000E+00 |  300
PAUL       |  3.0000E+02 | JOACHIM  |  0.000E+00 |  300
 
resultcount :                     4
 
Enter command:
DECLARE SELECTTAB3 CURSOR FOR
SELECT TAB1.SPALTE11, KERN.TAB1.SPALTE13,
       REF2.SPALTE22 NEU22,
       REF2.SPALTE23 NEU23, KERN.TAB3.SPALTE33
   FROM KERN.TAB1, TAB2  REF2 , TAB3
   WHERE TAB1.SPALTE13 <= KERN.TAB3.SPALTE33
     AND REF2.SPALTE22 <> TAB1.SPALTE11
     AND NOT ( REF2.SPALTE23 IS NULL )
   ORDER BY KERN.TAB1.SPALTE13 ASC, REF2.SPALTE22 DESC !
 
resultcount :                     5
 
Enter command:
FETCH SELECTTAB3 !
 
SPALTE11   | SPALTE13    | NEU22    | NEU23      | SPALTE33
-----------+-------------+----------+------------+---------
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |    0
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |    0
JOACHIM    |  0.0000E+00 | FRIEDA   |  0.000E+00 |  300
PAUL       |  3.0000E+02 | JOACHIM  |  0.000E+00 |  300
PAUL       |  3.0000E+02 | FRIEDA   |  0.000E+00 |  300
 
resultcount :                     5
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N28SEL3 !
 
Enter command:
 *** ES WIRD GETESTET, OB 17 BENANNTE ERGEBNISTABELLEN ERZEUGT
 *** WERDEN KOENNEN. !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT TAB VALUES ( 1  ) !
 
Enter command:
INSERT TAB VALUES ( 18 ) !
 
Enter command:
INSERT TAB VALUES ( 11 ) !
 
Enter command:
INSERT TAB VALUES ( 9  ) !
 
Enter command:
INSERT TAB VALUES ( 7  ) !
 
Enter command:
INSERT TAB VALUES ( 12 ) !
 
Enter command:
INSERT TAB VALUES ( 3  ) !
 
Enter command:
INSERT TAB VALUES ( 7  ) !
 
Enter command:
INSERT TAB VALUES ( 17 ) !
 
Enter command:
INSERT TAB VALUES ( 16 ) !
 
Enter command:
INSERT TAB VALUES ( 15 ) !
 
Enter command:
INSERT TAB VALUES ( 2  ) !
 
Enter command:
INSERT TAB VALUES ( 5  ) !
 
Enter command:
INSERT TAB VALUES ( 13 ) !
 
Enter command:
INSERT TAB VALUES ( 9  ) !
 
Enter command:
INSERT TAB VALUES ( 18 ) !
 
Enter command:
INSERT TAB VALUES ( 16 ) !
 
Enter command:
INSERT TAB VALUES ( 7  ) !
 
Enter command:
INSERT TAB VALUES ( 4  ) !
 
Enter command:
INSERT TAB VALUES ( 6  ) !
 
Enter command:
INSERT TAB VALUES ( 12 ) !
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT * FROM TAB WHERE SPALTE < 5 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
SPALTE
------
     1
     3
     2
     4
 
resultcount :                     4
 
Enter command:
DECLARE ERG2 CURSOR FOR SELECT SPALTE FROM TAB WHERE SPALTE > 17 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG2 !
 
SPALTE
------
    18
    18
 
resultcount :                     2
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT * FROM TAB WHERE SPALTE > 10 AND  SPALTE < 12 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG5 CURSOR FOR SELECT SPALTE COL FROM TAB
WHERE SPALTE BETWEEN 5 AND 6 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG6 CURSOR FOR SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT SPALTE COL FROM TAB WHERE SPALTE = 7 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG8 CURSOR FOR SELECT * FROM TAB WHERE SPALTE > 12 AND 14 > SPALTE !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG9 CURSOR FOR SELECT SPALTE +5 COL FROM TAB WHERE SPALTE = 5+7 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG10 CURSOR FOR SELECT * FROM TAB WHERE SPALTE IS NOT NULL !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG11 CURSOR FOR SELECT * FROM TAB WHERE SPALTE IS NULL !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DECLARE ERG12 CURSOR FOR SELECT SPALTE FROM TAB WHERE SPALTE = 8 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DECLARE ERG13 CURSOR FOR SELECT SUM ( SPALTE) COL1 FROM TAB GROUP BY SPALTE !
 
resultcount :                    15
 
Enter command:
DECLARE ERG14 CURSOR FOR SELECT SPALTE + 3 COL1, 3*SPALTE COL2 FROM TAB !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG15 CURSOR FOR SELECT * FROM TAB WHERE SPALTE = 1 OR SPALTE = 4 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG16 CURSOR FOR SELECT AVG ( SPALTE ) COL1 FROM TAB !
 
resultcount :                     1
 
Enter command:
DECLARE ERG17 CURSOR FOR SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE SPALTE = 12 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG11 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
SPALTE
------
    12
    12
 
resultcount :                     2
 
Enter command:
FETCH ERG9 !
 
COL
-------
     17
     17
 
resultcount :                     2
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N28SEL4 !
 
Enter command:
 *** SELECT FIRST UND SELECT LAST UEBER MULTIPLEN INDEX UND
 *** WHERE BEDINGUNG !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB5 ( SPALTE1 FIXED(3) KEY,
                    SPALTE2 FIXED(3) KEY,
                    SPALTE3 FIXED(3) KEY,
                    SPALTE4 FIXED(3) KEY ) !
 
Enter command:
INSERT TAB5 VALUES ( 5,4,3,2 ) !
 
Enter command:
INSERT TAB5 VALUES ( 2,3,4,5 ) !
 
Enter command:
INSERT TAB5 VALUES ( 1,1,1,1 ) !
 
Enter command:
INSERT TAB5 VALUES ( 8,6,4,6 ) !
 
Enter command:
INSERT TAB5 VALUES ( 9,9,9,9 ) !
 
Enter command:
INSERT TAB5 VALUES ( 4,2,7,8 ) !
 
Enter command:
CREATE INDEX INDEXTAB5 ON TAB5 ( SPALTE4, SPALTE1 ) !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N28SEL5 !
 
Enter command:
 *** JOIN UEBER KEY-SPALTEN !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB11
   ( COL1 CHAR(12) KEY,
     COL2 CHAR(12) KEY ) !
 
Enter command:
CREATE TABLE TAB41
   ( SPALTE1 CHAR(18) KEY,
     SPALTE2 CHAR(18) KEY ) !
 
Enter command:
INSERT TAB11 VALUES ( 'Y', 'M' ) !
 
Enter command:
INSERT TAB41 VALUES ( 'Y', 'M' ) !
 
Enter command:
SELECT TAB11.COL1, TAB11.COL2, REF.SPALTE1, REF.SPALTE2
    FROM TAB41 REF , TAB11
    WHERE (TAB11.COL1, TAB11.COL2) IN ((REF.SPALTE1, REF.SPALTE2)) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
COL1         | COL2         | SPALTE1            | SPALTE2
-------------+--------------+--------------------+-------------------
Y            | M            | Y                  | M
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EINS ( WF CHAR (12), WNR FIXED (4))!
 
Enter command:
CREATE INDEX "eins.wf"
 ON EINS( WF ) !
 
Enter command:
INSERT EINS VALUES ('computer', 1)!
 
Enter command:
INSERT EINS VALUES ('software', 2)!
 
Enter command:
CREATE TABLE ZWEI (WNR FIXED(4))!
 
Enter command:
CREATE INDEX "zwei.wnr"
 ON ZWEI( WNR ) !
 
Enter command:
INSERT ZWEI SET WNR = 1!
 
Enter command:
INSERT ZWEI SET WNR = 2!
 
Enter command:
SELECT EINS.WNR, WF FROM EINS, ZWEI
  WHERE (EINS.WNR, WF) IN ((ZWEI.WNR, 'computer'), (ZWEI.WNR, 'software')) !
 
resultcount :                     2
 
Enter command:
FETCH!
 
WNR   | WF
------+-------------
    1 | computer
    2 | software
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE UN1 ( SPALTE FIXED(4) ) !
 
Enter command:
CREATE TABLE UN2 ( COL FIXED(4) ) !
 
Enter command:
INSERT UN1 VALUES ( 4 ) !
 
Enter command:
INSERT UN1 VALUES ( 3 ) !
 
Enter command:
INSERT UN2 VALUES ( 3 ) !
 
Enter command:
INSERT UN2 VALUES ( 5 ) !
 
Enter command:
SELECT * FROM UN1 UNION SELECT * FROM UN2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
SPALTE
------
    3
    4
    5
 
resultcount :                     3
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (7))!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE TABLE T1 (B CHAR (7))!
 
Enter command:
SELECT * FROM T WHERE EXISTS (SELECT B FROM T1) AND A < 'z'!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT (EXISTS (SELECT B FROM T1)) AND A < 'z'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
aaa
 
resultcount :                     1
 
Enter command:
INSERT T1 SET B = 'qqq'!
 
Enter command:
SELECT * FROM T WHERE EXISTS (SELECT B FROM T1) AND A < 'z'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
aaa
 
resultcount :                     1
 
Enter command:
SELECT * FROM T WHERE NOT (EXISTS (SELECT B FROM T1)) AND A < 'z'!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE EXISTS (SELECT B FROM T1) OR A > 'z'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
aaa
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N28SEL6 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( U FIXED(5), V FIXED(5), W FIXED(5) ) !
 
Enter command:
INSERT T VALUES ( 3, 6, NULL ) !
 
Enter command:
SELECT * FROM T WHERE U>V AND U=V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U>V AND U=W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U>V AND U<V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U=W AND V<W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U=W AND U<V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U<V AND V=V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE U>V OR  U=V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U>V OR  U=W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U>V OR  U<V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE U=W OR  V<W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE U=W OR  U<V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE U<V OR  V=V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U>V AND U=V ) !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U>V AND U=W ) !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U>V AND U<V ) !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND V<W ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U<V ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U<V AND V=V ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U>V OR  U=V ) !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U>V OR  U=W ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U>V OR  U<V ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  V<W ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U<V ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U<V OR  V=V ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U>V ) OR U=V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U>V ) OR U<V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U>V ) OR U<W !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U>V ) OR U=V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U>V ) OR U<V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U>V ) OR U<W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U>V ) AND U=V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U>V ) AND U<V !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W AND U>V ) AND U<W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U>V ) AND U=V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U>V ) AND U<V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE NOT ( U=W OR  U>V ) AND U<W !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N28SEL7 !
 
Enter command:
FILE CONNECT  ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE STAFF (
EMPNUM   CHAR (3) NOT NULL,
EMPNAME  CHAR (20),
GRADE    CHAR  (4),
CITY     CHAR (15),
MANAGER  CHAR (8))!
 
Enter command:
INSERT STAFF VALUES ('E1', 'Alice',  '12', 'Deale', 'Miller')!
 
Enter command:
INSERT STAFF VALUES ('E2', 'Betty',  '10', 'Vienna', 'Miller')!
 
Enter command:
INSERT STAFF VALUES ('E3', 'Carmen', '13', 'Vienna', 'Miller')!
 
Enter command:
INSERT STAFF VALUES ('E4', 'Don'  ,  '12', 'Deale', 'Miller')!
 
Enter command:
INSERT STAFF VALUES ('E5', 'Ed'   ,  '13', 'Akron', 'Miller')!
 
Enter command:
CREATE UNIQUE INDEX "staff.empnum"
 ON STAFF( EMPNUM ) !
 
Enter command:
SELECT EMPNAME, CITY, GRADE FROM STAFF
WHERE EMPNAME>= 'Betty' AND EMPNUM < 'E35'
OR CITY <= 'Deale     ' AND GRADE > '12'
OR GRADE = '13' AND CITY <> 'Akron'!
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EMPNAME              | CITY            | GRADE
---------------------+-----------------+------
Betty                | Vienna          | 10
Carmen               | Vienna          | 13
Ed                   | Akron           | 13
 
resultcount :                     3
 
Enter command:
COMMIT !
 
Enter command:
CREATE INDEX "staff.empname"
 ON STAFF( EMPNAME ) !
 
Enter command:
CREATE INDEX "staff.grade"
 ON STAFF( GRADE ) !
 
Enter command:
CREATE INDEX "staff.city"
 ON STAFF( CITY ) !
 
Enter command:
SELECT * FROM STAFF
WHERE
  ((
        EMPNUM = 'E1'
    AND EMPNAME LIKE 'A%'
    AND (GRADE LIKE '1%' OR CITY LIKE 'A%')
   )
OR
   (GRADE = '12' AND CITY LIKE 'D%' AND MANAGER LIKE 'Mil%')
  )
AND ROWNO <= 37 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
EMPNUM | EMPNAME              | GRADE | CITY            | MANAGER
-------+----------------------+-------+-----------------+---------
E1     | Alice                | 12    | Deale           | Miller
E4     | Don                  | 12    | Deale           | Miller
 
resultcount :                     2
 
Enter command:
SELECT EMPNAME, CITY, GRADE FROM STAFF
WHERE EMPNAME>= 'Betty' AND EMPNUM < 'E35'
OR CITY <= 'Deale     ' AND GRADE > '12'
OR GRADE = '13' AND CITY <> 'Akron'!
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EMPNAME              | CITY            | GRADE
---------------------+-----------------+------
Betty                | Vienna          | 10
Carmen               | Vienna          | 13
Ed                   | Akron           | 13
 
resultcount :                     3
 
Enter command:
ROLLBACK !
 
Enter command:
DROP INDEX "staff.empnum" !
 
Enter command:
CREATE INDEX "STAFF.EMPNAME"
 ON STAFF( EMPNAME ) !
 
Enter command:
CREATE INDEX "STAFF.MANAGER"
 ON STAFF( MANAGER ) !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM STAFF
WHERE
  ((
        EMPNUM = 'E1'
    AND (GRADE LIKE '1%' OR CITY LIKE :C)
    AND EMPNAME LIKE 'A%'
   )
OR
   (GRADE = '12' AND CITY LIKE 'D%' AND MANAGER LIKE 'Mil%')
  )
AND ROWNO <= 37 !
 
c 15 'A%'
 
resultcount :               unknown
 
Enter command:
SELECT * FROM STAFF
WHERE
  ((
        EMPNUM = 'E1'
    AND (GRADE LIKE '1%' OR CITY LIKE 'A%')
    AND EMPNAME LIKE :A
   )
OR
   (GRADE = '12' AND CITY LIKE 'D%' AND MANAGER LIKE :M)
  )
AND ROWNO <= 37 !
 
c 20 'A%' c 8 'Mil%'
 
resultcount :               unknown
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
