N99FEHL1.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99DROP !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (7))!
 
Enter command:
INSERT  T SET A = 'aaa'!
 
Enter command:
PARSING!
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T!
parsing idnr :       1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP PARSEID!
Parsing idnr :      1
 
Enter command:
PARSING !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T!
parsing idnr :       1
 
Enter command:
SELECT * FROM T!
parsing idnr :       2
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP PARSEID!
Parsing idnr :      2
 
Enter command:
PARSING !
 
Enter command:
SELECT * FROM T!
parsing idnr :       1
 
Enter command:
EXECUTING!
 
Enter command:
SELECT !
Parsing idnr :      1
 
resultcount :               unknown
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP PARSEID!
Parsing idnr :      1
 
Enter command:
PARSING !
 
Enter command:
SELECT * FROM T!
parsing idnr :       1
 
Enter command:
CLOSE !
parsing idnr :       2
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP PARSEID!
Parsing idnr :      1
 
Enter command:
PARSING!
 
Enter command:
SELECT * FROM T!
parsing idnr :       1
 
Enter command:
EXECUTING!
 
Enter command:
SELECT !
Parsing idnr :      1
 
resultcount :               unknown
 
Enter command:
PARS_EXECUTE!
 
Enter command:
CLOSE!
 
Enter command:
DROP PARSEID!
Parsing idnr :      1
 
Enter command:
PARSING !
 
Enter command:
SELECT * FROM T!
parsing idnr :       1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99INDEX !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (7) KEY, B CHAR (5))!
 
Enter command:
CREATE INDEX "t.b"
 ON T( B ) !
 
Enter command:
INSERT T VALUES ('aaa', 'bbb')!
 
Enter command:
INSERT T VALUES ('a1', 'bbb')!
 
Enter command:
CREATE VIEW V AS SELECT A FROM T!
 
Enter command:
DELETE V KEY A = 'aaa'!
 
Enter command:
SELECT * FROM T WHERE B = 'bbb'!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A       | B
--------+------
a1      | bbb
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K1 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( S1 FIXED(5), S2 FIXED(5) ) !
 
Enter command:
CREATE TABLE TAB2 ( V1 FIXED(5), V2 FIXED(5) ) !
 
Enter command:
SELECT S1, SUM ( S2 )
  FROM TAB1
  GROUP BY S1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
INSERT INTO TAB2
  SELECT S1, SUM ( S2 )
  FROM TAB1
  GROUP BY S1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
INSERT TAB1 VALUES ( 5, 5 ) !
 
Enter command:
SELECT S1, SUM ( S2 )
  FROM TAB1
  GROUP BY S1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
S1     | EXPRESSION1
-------+---------------------------------------------
     5 |  5.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
INSERT INTO TAB2
  SELECT S1, SUM ( S2 )
  FROM TAB1
  GROUP BY S1 !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( SPALTE1 FIXED(5) , SPALTE2 FIXED(5) ) !
 
Enter command:
CREATE TABLE TAB2 ( COLUMN1 FIXED(5) , COLUMN2 FIXED(5) ) !
 
Enter command:
INSERT TAB2 VALUES ( 1,1 ) !
 
Enter command:
INSERT TAB1 ( SPALTE2 ) SELECT COLUMN2 FROM TAB2 !
 
Enter command:
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2
--------+--------
??????  |      1
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K3 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE1 FIXED(5), SPALTE2 FIXED(5) ) !
 
Enter command:
INSERT INTO TAB VALUES ( 1, 1 ) !
 
Enter command:
INSERT INTO TAB VALUES ( 1, 1 ) !
 
Enter command:
CREATE UNIQUE INDEX "tab.spalte2"
 ON TAB( SPALTE2 ) !
 
***ERROR    250 Duplicate secondary key                                    0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K27 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB3 ( TAB3_SP CHAR(60) KEY,
                    TAB3_SP2 FIXED(4) KEY ) !
 
Enter command:
CREATE TABLE TAB4 ( TAB4_SPALTE1 FIXED(4) ) !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT TAB3.TAB3_SP, TAB3_SP2
    FROM TAB3,TAB4
    WHERE TAB3.TAB3_SP  = 'PROJEKTLEITER'
      AND TAB3.TAB3_SP2 = TAB4.TAB4_SPALTE1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K32 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( SPALTE11 CHAR(10) KEY ,
                    SPALTE12 FIXED(5,2),
                    SPALTE13 FLOAT(5) ) !
 
Enter command:
INSERT TAB1 VALUES ( 'HANS'    , 22.52 , NULL ) !
 
Enter command:
INSERT TAB1 VALUES ( 'PAUL'    ,   0   ,  3E2 ) !
 
Enter command:
INSERT TAB1 VALUES ( 'JOACHIM' , 17.1  ,   0  ) !
 
Enter command:
 * +++++++++++++++++++++++++++++++++++++++++++++++++++++++++!
 
Enter command:
CREATE TABLE TAB2 ( SPALTE21 FIXED(4),
                    SPALTE22 CHAR(32) ,
                    SPALTE23 FLOAT(4) ) !
 
Enter command:
INSERT TAB2 VALUES ( 300   , 'HANS'   , NULL ) !
 
Enter command:
INSERT TAB2 VALUES ( 22.00 , 'FRIEDA' , 0    ) !
 
Enter command:
INSERT TAB2 VALUES ( 12    , 'JOACHIM', 0    ) !
 
Enter command:
 * +++++++++++++++++++++++++++++++++++++++++++++++++++++++++!
 
Enter command:
CREATE TABLE TAB3 ( SPALTE31 FIXED(4) ,
                    SPALTE32 CHAR(32) ,
                    SPALTE33 FLOAT(4) ) !
 
Enter command:
INSERT TAB3 VALUES ( 1000, 'HANS'    , NULL ) !
 
Enter command:
INSERT TAB3 VALUES ( 2000, 'VOLKER' , 100  ) !
 
Enter command:
INSERT TAB3 VALUES ( 3000, 'ANDREAS' , 200  ) !
 
Enter command:
INSERT TAB3 VALUES ( 4000, 'SIEGFRIED' , 300  ) !
 
Enter command:
COMMIT!
 
Enter command:
 * NUR 16 BENANNTE ERGEBNISMENGEN MOEGLICH +++++++++++++++++!
 
Enter command:
DECLARE ERG1  CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG2  CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG3  CURSOR FOR SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG4  CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG5  CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG6  CURSOR FOR SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG7  CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG8  CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG9  CURSOR FOR SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG10 CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG11 CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG12 CURSOR FOR SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG13 CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG14 CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG15 CURSOR FOR SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG16 CURSOR FOR SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG17 CURSOR FOR SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG10 CURSOR FOR
SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG17 CURSOR FOR
SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
 * DIE MIT DECLARE ERZEUGTEN ERGEBNISMENGEN WERDEN +++++++++
 * DURCH ROLLBACK IN ZUKUNFT WIEDER FREIGEGEBEN    +++++++++!
 
Enter command:
ROLLBACK !
 
Enter command:
DECLARE ERG17 CURSOR FOR
SELECT * FROM TAB3 !
 
resultcount :               unknown
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 *    WIRD DER KATALOG RICHTIG AUFGERAEUMT         +++++++++!
 
Enter command:
DECLARE ERG CURSOR FOR SELECT * FROM TAB1!
 
resultcount :               unknown
 
Enter command:
DECLARE ERG CURSOR FOR SELECT * FROM TAB1!
 
resultcount :               unknown
 
Enter command:
CLOSE ERG!
 
Enter command:
DECLARE ERG CURSOR FOR SELECT * FROM TAB1!
 
resultcount :               unknown
 
Enter command:
CLOSE ERG!
 
Enter command:
 *    ABSTURZ IN REST_SELECT WENN SETMEM           +++++++++!
 
Enter command:
(SELECT * FROM TAB2 UNION SELECT * FROM TAB3)
WHERE SPALTE21 IS NOT NULL !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0047
 
Enter command:
FETCH!
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
 * SELECT + DECLARE - TESTS                        +++++++++!
 
Enter command:
SELECT * FROM TAB2 UNION SELECT * FROM TAB3 ORDER BY 1!
 
resultcount :                     7
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB2 UNION SELECT * FROM TAB3 ORDER BY 1!
 
resultcount :                     7
 
Enter command:
FETCH!
 
SPALTE21 | SPALTE22                         | SPALTE23
---------+----------------------------------+-----------
   12    | JOACHIM                          |  0.000E+00
   22    | FRIEDA                           |  0.000E+00
  300    | HANS                             | ??????????
 1000    | HANS                             | ??????????
 2000    | VOLKER                           |  1.000E+02
 3000    | ANDREAS                          |  2.000E+02
 4000    | SIEGFRIED                        |  3.000E+02
 
resultcount :                     7
 
Enter command:
FETCH ERG !
 
SPALTE21 | SPALTE22                         | SPALTE23
---------+----------------------------------+-----------
   12    | JOACHIM                          |  0.000E+00
   22    | FRIEDA                           |  0.000E+00
  300    | HANS                             | ??????????
 1000    | HANS                             | ??????????
 2000    | VOLKER                           |  1.000E+02
 3000    | ANDREAS                          |  2.000E+02
 4000    | SIEGFRIED                        |  3.000E+02
 
resultcount :                     7
 
Enter command:
CLOSE ERG!
 
Enter command:
DECLARE ERG CURSOR FOR SELECT * FROM TAB2 UNION SELECT * FROM TAB3 !
 
resultcount :                     7
 
Enter command:
CLOSE ERG!
 
Enter command:
DECLARE ERG CURSOR FOR (SELECT * FROM TAB2 UNION SELECT * FROM TAB3)
WHERE SPALTE21 IS NOT NULL !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0070
 
Enter command:
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
(SELECT * FROM TAB1) !
 
resultcount :               unknown
 
Enter command:
(((SELECT * FROM TAB1))) !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB2 UNION SELECT * FROM TAB3 !
 
resultcount :                     7
 
Enter command:
(SELECT * FROM TAB2 UNION SELECT * FROM TAB3) !
 
resultcount :                     7
 
Enter command:
(((SELECT * FROM TAB2 UNION SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(((SELECT * FROM TAB2) UNION (SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(((SELECT * FROM TAB2)) UNION ((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(((SELECT * FROM TAB2))) UNION (((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
 
SELECT DISTINCT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
(SELECT DISTINCT * FROM TAB1) !
 
resultcount :               unknown
 
Enter command:
(((SELECT DISTINCT * FROM TAB1))) !
 
resultcount :               unknown
 
Enter command:
SELECT DISTINCT * FROM TAB2 UNION SELECT DISTINCT * FROM TAB3 !
 
resultcount :                     7
 
Enter command:
(SELECT DISTINCT * FROM TAB2 UNION SELECT * FROM TAB3) !
 
resultcount :                     7
 
Enter command:
(((SELECT DISTINCT * FROM TAB2 UNION SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(((SELECT DISTINCT * FROM TAB2) UNION (SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(((SELECT DISTINCT * FROM TAB2)) UNION ((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(((SELECT DISTINCT * FROM TAB2))) UNION (((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
(SELECT * FROM TAB3, (SELECT * FROM TAB2, ((SELECT * FROM TAB3))),
 ((SELECT * FROM TAB3))) !
 
resultcount :                   192
 
Enter command:
 
DECLARE ERG CURSOR FOR
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(SELECT * FROM TAB1) !
 
resultcount :               unknown
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT * FROM TAB1))) !
 
resultcount :               unknown
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB2 UNION SELECT * FROM TAB3 !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(SELECT * FROM TAB2 UNION SELECT * FROM TAB3) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT * FROM TAB2 UNION SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT * FROM TAB2) UNION (SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT * FROM TAB2)) UNION ((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT * FROM TAB2))) UNION (((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
 
DECLARE ERG CURSOR FOR
SELECT DISTINCT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(SELECT DISTINCT * FROM TAB1) !
 
resultcount :               unknown
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT DISTINCT * FROM TAB1))) !
 
resultcount :               unknown
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT DISTINCT * FROM TAB2 UNION SELECT DISTINCT * FROM TAB3 !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(SELECT DISTINCT * FROM TAB2 UNION SELECT * FROM TAB3) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT DISTINCT * FROM TAB2 UNION SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT DISTINCT * FROM TAB2) UNION (SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT DISTINCT * FROM TAB2)) UNION ((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(((SELECT DISTINCT * FROM TAB2))) UNION (((SELECT * FROM TAB3))) !
 
resultcount :                     7
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
(SELECT * FROM TAB3, (SELECT * FROM TAB2, ((SELECT * FROM TAB3))),
 ((SELECT * FROM TAB3))) !
 
resultcount :                   192
 
Enter command:
CLOSE ERG !
 
Enter command:
 
DECLARE ERG CURSOR FOR
SELECT TAB2.SPALTE21, TAB2.SPALTE22, TAB2.SPALTE23 FROM TAB2,
(SELECT * FROM TAB2) !
 
resultcount :                     9
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB2,
(SELECT SPALTE21, SPALTE22, SPALTE23 FROM TAB2) !
 
resultcount :                     9
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB2,
(SELECT * FROM TAB2) !
 
resultcount :                     9
 
Enter command:
CLOSE ERG !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT TAB2.SPALTE21, TAB2.SPALTE22, TAB2.SPALTE23 FROM TAB2,
(SELECT SPALTE21, SPALTE22, SPALTE23 FROM TAB2) !
 
resultcount :                     9
 
Enter command:
CLOSE ERG !
 
Enter command:
 
(SELECT SPALTE22 FROM TAB2
UNION SELECT SPALTE11 FROM TAB1) !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE22
--------------------------------
HANS
PAUL
FRIEDA
JOACHIM
 
resultcount :                     4
 
Enter command:
DECLARE ERG CURSOR FOR
(SELECT SPALTE22 FROM TAB2
UNION SELECT SPALTE11 FROM TAB1) !
 
resultcount :                     4
 
Enter command:
CLOSE ERG !
 
Enter command:
SELECT * FROM TAB3 WHERE SPALTE32 IN
(SELECT SPALTE22 FROM TAB2
UNION SELECT SPALTE11 FROM TAB1) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
SPALTE31 | SPALTE32                         | SPALTE33
---------+----------------------------------+-----------
 1000    | HANS                             | ??????????
 
resultcount :                     1
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB3 WHERE SPALTE32 IN
(SELECT SPALTE22 FROM TAB2
UNION SELECT SPALTE11 FROM TAB1) !
 
resultcount :                     1
 
Enter command:
CLOSE ERG !
 
Enter command:
 * INSERT-SELECT  - TESTS                          +++++++++!
 
Enter command:
CREATE TABLE TAB4 LIKE TAB3 !
 
Enter command:
RENAME COLUMN TAB4.SPALTE31 TO SPALTE41 !
 
Enter command:
RENAME COLUMN TAB4.SPALTE32 TO SPALTE42 !
 
Enter command:
RENAME COLUMN TAB4.SPALTE33 TO SPALTE43 !
 
Enter command:
COMMIT !
 
Enter command:
SELECT * FROM TAB4 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
INSERT TAB4 (SPALTE42) SELECT SPALTE32 FROM TAB3 UNION
SELECT SPALTE22 FROM TAB2!
 
Enter command:
SELECT * FROM TAB4 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE41 | SPALTE42                         | SPALTE43
---------+----------------------------------+-----------
?????    | HANS                             | ??????????
?????    | FRIEDA                           | ??????????
?????    | VOLKER                           | ??????????
?????    | JOACHIM                          | ??????????
?????    | ANDREAS                          | ??????????
?????    | SIEGFRIED                        | ??????????
 
resultcount :                     6
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM TAB4 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DROP TABLE TAB1 !
 
Enter command:
DROP TABLE TAB2 !
 
Enter command:
DROP TABLE TAB3 !
 
Enter command:
DROP TABLE TAB4 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99K44 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE KUNDE
   ( KNR      FIXED(4) KEY ,
     PLZ      FIXED(4)     ,
     ORT      CHAR(12)     ) !
 
Enter command:
INSERT KUNDE VALUES
   ( 3270 , 5000 , 'Koeln' ) !
 
Enter command:
CREATE TABLE TAB6 (SPALTE1 FIXED(5), SPALTE2 FIXED(5)) !
 
Enter command:
INSERT TAB6 VALUES ( 1, 2 ) !
 
Enter command:
INSERT TAB6 VALUES ( 2, 1 ) !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K59 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB7 ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT TAB7 VALUES ( 1 ) !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DELETE TAB7 !
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K60 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB8 ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT TAB8 VALUES ( 1 ) !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
UPDATE TAB8 SET SPALTE = 5 !
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K63 !
 
Enter command:
CONNECT!
 
***ERROR  -5015 Missing keyword:IDENTIFIED                                 0020
 
Enter command:
FILE N99K70 !
 
Enter command:
FILE CONNECT (SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DISCONNECT NIXDORF !
 
***ERROR  -3005 Invalid SQL statement                                      0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K77 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB9 ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT TAB9 VALUES (1) !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT SPALTE INTO :SPALTE FROM TAB9 WHERE SPALTE = 1 !
 
SPALTE            :       1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K85 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER D1 PASSWORD W DBA !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( D1 W !
 
Enter command:
CONNECT D1 IDENTIFIED BY W   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE D1XT1 ( D1XT1XC1 FIXED(5) ) !
 
Enter command:
GRANT ALL ON D1XT1 TO PUBLIC !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM D1.D1XT1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99K86 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB12 ( SPALTE CHAR(10) ) !
 
Enter command:
INSERT TAB12 VALUES ( 'Hans' ) !
 
Enter command:
PARSING !
 
Enter command:
UPDATE TAB12 SET SPALTE = 'Otto' WHERE SPALTE LIKE :A1 !
parsing idnr :       1
 
Enter command:
DATA !
 
Enter command:
EXECUTING !
 
Enter command:
UPDATE !
Parsing idnr :      1
 
C 10 'Ha%'
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM TAB12 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE
----------
Otto
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K87 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB10 ( SPALTE CHAR(251) ) !
 
Enter command:
CREATE TABLE TAB11 ( SPALTE CHAR(256) ) !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99K99 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB13 ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT TAB13 SET SPALTE = 1 !
 
Enter command:
INSERT TAB13 SET SPALTE = 5 !
 
Enter command:
PARSING !
 
Enter command:
DELETE TAB13 WHERE SPALTE BETWEEN :UNTERGRENZE AND :OBERGRENZE !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
DELETE !
Parsing idnr :      1
 
n 5 3 n 5 6
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
PARSING !
 
Enter command:
DELETE TAB13 WHERE SPALTE BETWEEN :UNTERGRENZE AND 1 !
parsing idnr :       1
 
Enter command:
DATA !
 
Enter command:
EXECUTING !
 
Enter command:
DELETE !
Parsing idnr :      1
 
n 5 1
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM TAB13 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99OP !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE1 FIXED(5), SPALTE2 FIXED(5) ) !
 
Enter command:
INSERT TAB VALUES ( 5 , 2 ) !
 
Enter command:
SELECT 3++5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
  8
 
resultcount :                     1
 
Enter command:
SELECT 3-+5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 -2
 
resultcount :                     1
 
Enter command:
SELECT 3+-5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 -2
 
resultcount :                     1
 
Enter command:
SELECT 3- -5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
  8
 
resultcount :                     1
 
Enter command:
SELECT 3+++5 FROM TAB !
 
***ERROR  -1005 Too many monadic operators                                 0011
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 3+*5 FROM TAB !
 
***ERROR  -5010 Missing value specification                                0010
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 3*+5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 15
 
resultcount :                     1
 
Enter command:
SELECT 3**5 FROM TAB !
 
***ERROR  -5010 Missing value specification                                0010
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 3MOD+5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 3
 
resultcount :                     1
 
Enter command:
SELECT 3 MOD + 5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 3
 
resultcount :                     1
 
Enter command:
SELECT 3DIV+5 FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 0
 
resultcount :                     1
 
Enter command:
SELECT 3+MOD5 FROM TAB !
 
***ERROR  -4005 Unknown column name:MOD5                                   0010
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 3 + MOD 5 FROM TAB !
 
***ERROR  -5015 Missing keyword:FROM                                       0016
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT ++5 FROM TAB !
 
***ERROR  -1005 Too many monadic operators                                 0009
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT - -5 FROM TAB !
 
***ERROR  -1005 Too many monadic operators                                 0010
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT +-5 FROM TAB !
 
***ERROR  -1005 Too many monadic operators                                 0009
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A1 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE FIXED(18,17) ) !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT TAB SET SPALTE = :A !
 
n 18,17 1.23456789012345678
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE
--------------------
 1.23456789012345678
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A2 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER ELKE PASSWORD OS RESOURCE!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE X (X1 CHAR(1) KEY, X2 CHAR (2))!
 
Enter command:
INSERT X VALUES ('a', 'b')!
 
Enter command:
GRANT SELECT ON X TO ELKE !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( ELKE OS !
 
Enter command:
CONNECT ELKE IDENTIFIED BY OS   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE A (A1 CHAR (1) KEY, A2 CHAR(1), A3 CHAR (3))!
 
Enter command:
INSERT A VALUES ('a', 'd', 'e')!
 
Enter command:
CREATE VIEW M (A1, A2, A3, X1, X2) AS SELECT
   A1, A2, A3, X1, X2 FROM A, KERN.X
   WHERE A1 = X1 !
 
Enter command:
FILE SEL_COLS_TAB ( M !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'M'
  ORDER BY POS !
 
resultcount :                     5
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  A1
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      3
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  X1
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  X2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      2
DEC               :  ????
COLUMNPRIVILEGES  :  SEL
DEFAULT           :  ?????
 
resultcount :                     5
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
FILE SEL_COLS_1TAB ( KERN X !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE SCHEMANAME = 'KERN'
    AND TABLENAME = 'X'
  ORDER BY POS !
 
resultcount :                     2
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  X1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  X2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      2
DEC               :  ????
COLUMNPRIVILEGES  :  SEL
DEFAULT           :  ?????
 
resultcount :                     2
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
FILE SEL_COLS_TAB ( A !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'A'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  A1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      3
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
UPDATE M SET A2 = 'q' KEY A1 = 'a', X1 = 'a'!
 
***ERROR  -5001 Missing privilege:UPDATE                                   0008
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A3 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE CHAR(10) ) !
 
Enter command:
SELECT * FROM TAB WHERE SPALTE = 'ALL' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB WHERE SPALTE = ALL !
 
***ERROR  -3014 Invalid end of SQL statement                               0037
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A4 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( SPALTE FIXED(5) ) !
 
Enter command:
CREATE TABLE TAB2 ( COL FIXED(5) ) !
 
Enter command:
INSERT TAB1 VALUES ( 2) !
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE < ( SELECT * FROM TAB2 ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE < ( SELECT * FROM TAB2 ) OR SPALTE = 2 !
 
resultcount :                     1
 
Enter command:
INSERT TAB2 VALUES ( 3 ) !
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE < ( SELECT * FROM TAB2 WHERE COL < 3 ) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ( SPALTE <
   ( SELECT * FROM TAB2 WHERE COL < 3 )
   AND SPALTE < 1 ) !
 
resultcount :                     1
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ( SPALTE <
   ( SELECT * FROM TAB2 WHERE COL < 3 ))  !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A5 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( S1 FIXED(5,1), S2 FLOAT(5), S3 CHAR(5),
  S4 CHAR(7) ASCII, S5 CHAR(4) BYTE,
  S7 DATE, S8 TIME ) !
 
Enter command:
INSERT TAB SET S1 = 23.1,
               S2 = 2.31E+1,
               S3 = 'aaa',
               S4 = 'aaa',
               S5 = X'818181',
               S7 = '19880518',
               S8 = '00233914'  !
 
Enter command:
SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S1      | S2          | S3    | S4      | S5       | S7         | S8
--------+-------------+-------+---------+----------+------------+---------
   23.1 |  2.3100E+01 | aaa   | aaa     | 81818100 | 19880518   | TIMEYYYY
 
resultcount :                     1
 
Enter command:
SELECT * FROM TAB WHERE S1 = S1 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S1 = S2 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S2 = S2 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S3 = S3 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S3 = S4 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S4 = S4 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S3 = S5 !
 
***ERROR  -8006 Data types must be compatible                              0030
 
Enter command:
SELECT * FROM TAB WHERE S4 = S5 !
 
***ERROR  -8006 Data types must be compatible                              0030
 
Enter command:
SELECT * FROM TAB WHERE S5 = S5 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S3 = S7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB WHERE S4 = S7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB WHERE S5 = S7 !
 
***ERROR  -8006 Data types must be compatible                              0030
 
Enter command:
SELECT * FROM TAB WHERE S7 = S7 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB WHERE S3 = S8 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB WHERE S4 = S8 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB WHERE S7 = S8 !
 
***ERROR  -8006 Data types must be compatible                              0030
 
Enter command:
SELECT * FROM TAB WHERE S8 = S8 !
 
resultcount :               unknown
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 * ----- AUFRAEUMEN !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER D1 !
 
Enter command:
DROP USER ELKE !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A6 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (6), B FIXED(3), C FIXED(3), D FIXED(3) )!
 
Enter command:
INSERT T SET A = 'aaa', B = 2, C = 2 , D = 2!
 
Enter command:
CREATE INDEX I1 ON T (A, B, D)!
 
Enter command:
CREATE INDEX I2 ON T (C, B )!
 
Enter command:
UPDATE T SET D = D+3 WHERE A = 'aaa' AND B > 1!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A      | B    | C    | D
-------+------+------+-----
aaa    |    2 |    2 |    5
 
resultcount :                     1
 
Enter command:
UPDATE T SET D = D+3 WHERE A = 'aaa' !
 
resultcount :                     1
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A      | B    | C    | D
-------+------+------+-----
aaa    |    2 |    2 |    8
 
resultcount :                     1
 
Enter command:
UPDATE T SET D = D+3 WHERE A = 'aaa' AND C >= 2 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A      | B    | C    | D
-------+------+------+-----
aaa    |    2 |    2 |   11
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE N99A7 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USERGROUP G1 STANDARD !
 
Enter command:
CREATE USER USER1 PASSWORD W USERGROUP G1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( S1 CHAR(64) KEY,
                    S2 CHAR(64) ASCII  KEY ) !
 
Enter command:
GRANT ALL ON TAB1 TO G1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( USER1 W !
 
Enter command:
CONNECT USER1 IDENTIFIED BY W   ISOLATION LEVEL 1 !
 
Enter command:
INSERT KERN.TAB1 VALUES ( USER, USERGROUP ) !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USERGROUP G1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE KERN.TAB1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A8 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (18))!
 
Enter command:
INSERT T1 SET A = 'aaa'!
 
Enter command:
CREATE TABLE T2 ( B CHAR (5)) !
 
Enter command:
INSERT T2 SET B = 'aaa'!
 
Enter command:
CREATE INDEX "T2.B"
 ON T2( B DESC ) !
 
Enter command:
EXPLAIN SELECT * FROM <T1, T2> WHERE T1.A = T2.B !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 | T2.B               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT * FROM <T1, T2> WHERE T1.A = T2.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                  | B
-------------------+------
aaa                | aaa
 
resultcount :                     1
 
Enter command:
DROP INDEX "T2.B" !
 
Enter command:
CREATE INDEX "t2.b"
 ON T2( B ) !
 
Enter command:
SELECT * FROM T1, T2 WHERE T1.A = T2.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                  | B
-------------------+------
aaa                | aaa
 
resultcount :                     1
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE TABLE T1 ( A CHAR (38))!
 
Enter command:
INSERT T1 SET A = 'aaa'!
 
Enter command:
CREATE TABLE T2 ( B CHAR (25)) !
 
Enter command:
INSERT T2 SET B = 'aaa'!
 
Enter command:
CREATE INDEX "T2.B"
 ON T2( B DESC ) !
 
Enter command:
EXPLAIN SELECT * FROM <T1, T2> WHERE T1.A = T2.B !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 | T2.B               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT * FROM <T1, T2> WHERE T1.A = T2.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                                      | B
---------------------------------------+--------------------------
aaa                                    | aaa
 
resultcount :                     1
 
Enter command:
DROP INDEX "T2.B" !
 
Enter command:
CREATE INDEX "t2.b"
 ON T2( B ) !
 
Enter command:
SELECT * FROM T1, T2 WHERE T1.A = T2.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                                      | B
---------------------------------------+--------------------------
aaa                                    | aaa
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A9 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A DATE)!
 
Enter command:
CREATE TABLE T2( A CHAR (5))!
 
Enter command:
CREATE TABLE T3( A CHAR (6))!
 
Enter command:
CREATE TABLE T4 ( A CHAR (12) )!
 
Enter command:
CREATE TABLE T5 ( A TIME )!
 
Enter command:
INSERT T1 SET A = TIME !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T5 SET A = DATE !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
PARS_THEN_EX !
 
Enter command:
INSERT T1 SET A = DATE !
 
Enter command:
INSERT T2 SET A = DATE !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T3 SET A = DATE !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T4 SET A = DATE !
 
Enter command:
INSERT T5 SET A = DATE !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T1 SET A = TIME !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T2 SET A = TIME !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T3 SET A = TIME !
 
***ERROR  -8004 Constant must be compatible with column type and length    0019
 
Enter command:
INSERT T4 VALUES (TIME ) !
 
Enter command:
INSERT T5 VALUES (TIME ) !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A
----------
DATEXXXX
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A10 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE1 FIXED(5), SPALTE2 FIXED(5) ) !
 
Enter command:
INSERT TAB VALUES ( 1, 1 ) !
 
Enter command:
INSERT TAB VALUES ( 2, 2 ) !
 
Enter command:
SELECT SPALTE1 FROM TAB ORDER BY SPALTE2 !
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT(SPALTE1) FROM TAB ORDER BY SPALTE2 !
 
***ERROR  -8013 Order column must be output column                         0044
 
Enter command:
SELECT SUM(SPALTE1) FROM TAB ORDER BY SPALTE2 !
 
***ERROR  -8013 Order column must be output column                         0039
 
Enter command:
SELECT SUM(SPALTE1) FROM TAB ORDER BY SPALTE1 !
 
***ERROR  -8013 Order column must be output column                         0039
 
Enter command:
CREATE VIEW V(A,B) AS SELECT SUM( SPALTE1), SUM(SPALTE2) FROM TAB !
 
Enter command:
SELECT A FROM V !
 
resultcount :                     1
 
Enter command:
SELECT A FROM V ORDER BY A !
 
resultcount :                     1
 
Enter command:
SELECT A FROM V ORDER BY B !
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A FROM V ORDER BY B !
 
***ERROR  -8013 Order column must be output column                         0035
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99JLEN !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 CREATE TABLE T1
       (NR        FIXED (4),
        DUMMY1   CHAR(200),
        DUMMY2   CHAR(100),
        DUMMY3   CHAR(200),
        DUMMY4   CHAR(200),
        DUMMY5   CHAR(200)) !
 
Enter command:
 CREATE TABLE T2
       (NR2       FIXED (4),
        DMY1   CHAR(200),
        DMY2   CHAR(100),
        DMY3   CHAR(200),
        DMY4   CHAR(200),
        DMY5   CHAR(200)) !
 
Enter command:
SELECT *
FROM T1, T2
WHERE ((T1.NR < 10) AND
(T1.DUMMY1 = T2.DMY1) AND
(T1.DUMMY2 = T2.DMY2)) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A11 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER OTTO PASSWORD OS COSTWARNING 2 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (250))!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
GRANT ALL ON T TO OTTO !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( OTTO OS !
 
Enter command:
CONNECT OTTO IDENTIFIED BY OS   ISOLATION LEVEL 1 !
 
Enter command:
!* THE COST VALUE WITH BUILD OF RESULT IS TOO EXPENSIVE FOR OTTO!
 
Enter command:
EXPLAIN SELECT /*+BUILDRESULT*/ * FROM KERN.T WHERE A LIKE 'a%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+BUILDRESULT*/ * FROM KERN.T WHERE A LIKE 'a%' !
 
***ERROR     -4 COSTWARNING exhausted                                      0001
 
Enter command:
 
!* WITHOUT BUILD OF RESULT RESULT OTTO CAN AFFORD THIS QUERY!
 
Enter command:
EXPLAIN SELECT * FROM KERN.T WHERE A LIKE 'a%'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT * FROM KERN.T WHERE A LIKE 'a%'!
 
resultcount :               unknown
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 * ----- AUFRAEUMEN !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER OTTO !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A12 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER "domain" PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE CONNECT ( "domain" TEST !
 
Enter command:
CONNECT "domain" IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
  CREATE TABLE SYSC_ALL (
      C_ENTRYTYPE CHAR (18) ASCII  KEY,
      C_AUTHID    CHAR (64) ASCII  KEY,
      C_OBJN1     CHAR (64) ASCII  KEY,
      C_OBJN2     CHAR (64) ASCII  KEY,
      C_LANGUAGE  CHAR (3)  ASCII  KEY RANGE IN ('GER','ENG'),
      C_LINENO    FIXED (4)        KEY,
      C_TEXT      CHAR (80) ASCII )!
 
Enter command:
   CREATE VIEW SYSCOMMENT
      AS SELECT *  FROM SYSC_ALL
      WHERE  C_AUTHID  = USER
      WITH CHECK OPTION !
 
Enter command:
GRANT INSERT, DELETE, UPDATE, SELECT
              ON SYSCOMMENT TO PUBLIC !
 
Enter command:
   CREATE VIEW SYSC_DBA
      AS SELECT *  FROM SYSC_ALL
      WHERE  C_AUTHID  = USER
          OR C_AUTHID = 'SUPERDBA'
      WITH CHECK OPTION !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE KERN.TAB ( HOTEL FIXED(5), KUNDE FIXED(5) ) !
 
Enter command:
INSERT "domain".SYSCOMMENT SET
    C_ENTRYTYPE  = 'COLUMN',
    C_AUTHID     = USER,
    C_OBJN1      = 'TAB',
    C_OBJN2      = 'HOTEL',
    C_LANGUAGE   = 'ENG',
    C_LINENO     = 1,
    C_TEXT       = 'KERN.HOTEL ist eine Spalte' !
 
Enter command:
INSERT "domain".SYSCOMMENT SET
    C_ENTRYTYPE  = 'COLUMN',
    C_AUTHID     = USER,
    C_OBJN1      = 'TAB',
    C_OBJN2      = 'KUNDE',
    C_LANGUAGE   = 'ENG',
    C_LINENO     = 1,
    C_TEXT       = 'KERN.KUNDE ist eine Spalte' !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 * ----- AUFRAEUMEN !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER "domain" !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
