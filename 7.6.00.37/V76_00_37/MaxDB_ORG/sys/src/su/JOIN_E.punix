JOIN_E.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_E ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i"
 ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i" ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b11 | b11 | xxx | ???
b12 | b12 | xxx | ???
b13 | b13 | xxx | ???
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
b31 | b31 | xxx | ???
b32 | b32 | xxx | ???
b33 | b33 | xxx | ???
 
resultcount :                     9
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b11 | b11 | xxx | ???
b12 | b12 | xxx | ???
b13 | b13 | xxx | ???
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
b31 | b31 | xxx | ???
b32 | b32 | xxx | ???
b33 | b33 | xxx | ???
 
resultcount :                     9
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i" ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i" ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b22 | b22
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b21 | b21
b22 | b22
b23 | b23
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b12 | b12
b22 | b22
b32 | b32
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b22 | b22
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b21 | b21
b22 | b22
b23 | b23
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b12 | b12
b22 | b22
b32 | b32
 
resultcount :                     3
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8), B CHAR (7)PRIMARY KEY)!
 
Enter command:
INSERT T SET A = 'aaa', B  = 'xxx'!
 
Enter command:
INSERT T SET A = 'bbb', B  = 'www'!
 
Enter command:
INSERT T SET A = 'ccc', B  = 'b1'!
 
Enter command:
INSERT T SET A = 'ddd', B  = 'x'!
 
Enter command:
CREATE TABLE T1 ( B CHAR (8)KEY)!
 
Enter command:
INSERT T1 SET B = 'x'!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T1, T
WHERE
T.B LIKE :A AND
T.A = T1.B !
 
c 254 'x%'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T1, T
WHERE
T.B LIKE :A AND
T.B = T1.B !
 
c 254 'x%'
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
B        | A        | B
---------+----------+--------
x        | ddd      | x
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T1, T
WHERE
T.B IN (:A,:B,:C,:D, :A) AND
T.B = T1.B !
 
c 7 'aaaaaaa'
c 7 'eeeeeee'
c 7 'aaaaaaa'
c 7 'ddddddd'
c 7 'aaaaaaa'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE!
 
Enter command:
NODATA !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (K CHAR(20) KEY, MI1 CHAR(20),
                MI2 CHAR(20), MI3 CHAR(20)) !
 
Enter command:
INSERT INTO T SET K = 'x1',MI1 = 'a', MI2 = 'a ', MI3 = '1'!
 
Enter command:
INSERT INTO T SET K = 'x2',MI1 = 'a', MI2 = 'b ', MI3 = '2'!
 
Enter command:
INSERT INTO T SET K = 'x3',MI1 = 'a', MI2 = 'c ', MI3 = '3'!
 
Enter command:
INSERT INTO T SET K = 'y1',MI1 = 'b', MI2 = 'a ', MI3 = '4'!
 
Enter command:
INSERT INTO T SET K = 'y2',MI1 = 'b', MI2 = 'b ', MI3 = '5'!
 
Enter command:
INSERT INTO T SET K = 'y3',MI1 = 'b', MI2 = 'c ', MI3 = '6'!
 
Enter command:
INSERT INTO T SET K = 'z1',MI1 = 'c', MI2 = 'a ', MI3 = '7'!
 
Enter command:
INSERT INTO T SET K = 'z2',MI1 = 'c', MI2 = 'b ', MI3 = '8'!
 
Enter command:
INSERT INTO T SET K = 'z3',MI1 = 'c', MI2 = 'c ', MI3 = '9'!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI2 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI2) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI2!
 
Enter command:
ALTER TABLE T ADD (MI99 CHAR(20))!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI1 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI1) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI1!
 
Enter command:
CREATE INDEX MIA ON T (MI1, MI2) !
 
Enter command:
CREATE TABLE T1 (DUMMY CHAR(20)) !
 
Enter command:
INSERT INTO T1 SET DUMMY = 'dummy' !
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND MI2 = 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA MULTIPLE INDEXED COLUMNS        |          1
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    | MI2                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA RANGE OF MULTIPLE INDEXED COL.  |          1
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI2 = 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'a'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'b' AND MI2 > 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 < 'b' AND MI2 < 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 BETWEEN 'b' AND 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND
    MI2 BETWEEN 'b' AND 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA RANGE OF MULTIPLE INDEXED COL.  |          1
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 LIKE 'b%'
                     AND MI2 BETWEEN 'b' AND 'c'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND MI2 = 'b'
FETCH !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0062
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b'!
 
resultcount :                     3
 
Enter command:
FETCH !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI2 = 'b'!
 
resultcount :                     3
 
Enter command:
FETCH !
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'a'!
 
resultcount :                     6
 
Enter command:
FETCH !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
-----------------------------------------
K                 :  z1
MI1               :  c
MI2               :  a
MI3               :  7
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
-----------------------------------------
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     6
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'b' AND MI2 > 'b'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     1
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 < 'b' AND MI2 < 'b'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
K                 :  x1
MI1               :  a
MI2               :  a
MI3               :  1
 
resultcount :                     1
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 BETWEEN 'b' AND 'b'!
 
resultcount :                     3
 
Enter command:
FETCH !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND
    MI2 BETWEEN 'b' AND 'b'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
 
resultcount :                     1
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 LIKE 'b%'
                     AND MI2 BETWEEN 'b' AND 'c'!
 
resultcount :                     2
 
Enter command:
FETCH !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (K CHAR(20) KEY, MI1 CHAR(20),
                MI2 CHAR(20), MI3 CHAR(20)) !
 
Enter command:
INSERT INTO T SET K = 'x1',MI1 = 'a', MI2 = 'a ', MI3 = '1'!
 
Enter command:
INSERT INTO T SET K = 'x2',MI1 = 'a', MI2 = 'b ', MI3 = '2'!
 
Enter command:
INSERT INTO T SET K = 'x3',MI1 = 'a', MI2 = 'c ', MI3 = '3'!
 
Enter command:
INSERT INTO T SET K = 'y1',MI1 = 'b', MI2 = 'a ', MI3 = '4'!
 
Enter command:
INSERT INTO T SET K = 'y2',MI1 = 'b', MI2 = 'b ', MI3 = '5'!
 
Enter command:
INSERT INTO T SET K = 'y3',MI1 = 'b', MI2 = 'c ', MI3 = '6'!
 
Enter command:
INSERT INTO T SET K = 'z1',MI1 = 'c', MI2 = 'a ', MI3 = '7'!
 
Enter command:
INSERT INTO T SET K = 'z2',MI1 = 'c', MI2 = 'b ', MI3 = '8'!
 
Enter command:
INSERT INTO T SET K = 'z3',MI1 = 'c', MI2 = 'c ', MI3 = '9'!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI2 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI2) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI2!
 
Enter command:
ALTER TABLE T ADD (MI99 CHAR(20))!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI1 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI1) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI1!
 
Enter command:
CREATE INDEX MIA ON T (MI1, MI2) !
 
Enter command:
CREATE TABLE T1 (DUMMY CHAR(20)) !
 
Enter command:
INSERT INTO T1 SET DUMMY = 'dummy' !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DATA!
 
Enter command:
PARS_THEN_EX!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = :P1 AND MI2 = :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = :P!
 
c 20 'b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI2 = :P!
 
c 20 'b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > :P!
 
c 20 'a'
 
resultcount :                     6
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
-----------------------------------------
K                 :  z1
MI1               :  c
MI2               :  a
MI3               :  7
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
-----------------------------------------
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     6
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > :P1 AND MI2 > :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 < :P1 AND MI2 < :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  x1
MI1               :  a
MI2               :  a
MI3               :  1
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 BETWEEN :P1 AND :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 LIKE :P1
                     AND MI2 BETWEEN :P2 AND :P3!
 
c 20 'b%'
c 20 'b'
c 20 'c'
 
resultcount :                     2
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     2
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (K CHAR(20) KEY, MI1 CHAR(20),
                MI2 CHAR(20), MI3 CHAR(20)) !
 
Enter command:
CREATE INDEX MIA ON T (MI1, MI2)!
 
Enter command:
INSERT INTO T SET K = 'x1',MI1 = 'a', MI2 = 'a ', MI3 = '1'!
 
Enter command:
INSERT INTO T SET K = 'x2',MI1 = 'a', MI2 = 'b ', MI3 = '2'!
 
Enter command:
INSERT INTO T SET K = 'x3',MI1 = 'a', MI2 = 'c ', MI3 = '3'!
 
Enter command:
INSERT INTO T SET K = 'y1',MI1 = 'b', MI2 = 'a ', MI3 = '4'!
 
Enter command:
INSERT INTO T SET K = 'y2',MI1 = 'b', MI2 = 'b ', MI3 = '5'!
 
Enter command:
INSERT INTO T SET K = 'y3',MI1 = 'b', MI2 = 'c ', MI3 = '6'!
 
Enter command:
INSERT INTO T SET K = 'z1',MI1 = 'c', MI2 = 'a ', MI3 = '7'!
 
Enter command:
INSERT INTO T SET K = 'z2',MI1 = 'c', MI2 = 'b ', MI3 = '8'!
 
Enter command:
INSERT INTO T SET K = 'z3',MI1 = 'c', MI2 = 'c ', MI3 = '9'!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI2 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI2) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI2!
 
Enter command:
ALTER TABLE T ADD (MI99 CHAR(20))!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI1 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI1) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI1!
 
Enter command:
CREATE INDEX MIA ON T(MI1 DESC, K ASC, MI2 DESC) !
 
Enter command:
CREATE TABLE T1 (DUMMY CHAR(20)) !
 
Enter command:
INSERT INTO T1 SET DUMMY = 'dummy' !
 
Enter command:
COMMIT WORK!
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = 'b' AND K LIKE '%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA RANGE OF MULTIPLE INDEXED COL.  |          1
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = 'b' AND K LIKE '%2' !
 
resultcount :                     1
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
 
resultcount :                     1
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 < 'b' AND MI2 = 'a'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 < 'b' AND MI2 = 'a'!
 
resultcount :                     1
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x1
MI1               :  a
MI2               :  a
MI3               :  1
 
resultcount :                     1
 
Enter command:
DROP INDEX MIA!
 
Enter command:
CREATE INDEX MIA ON T(MI2 ASC, MI1 DESC) !
 
Enter command:
PARSING!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI2 > 'a' AND  MI2 LIKE :A !
parsing idnr :       1
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 'b%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 '%b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 'b%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 '%'
 
resultcount :                     6
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  x3
MI1               :  a
MI2               :  c
MI3               :  3
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
-----------------------------------------
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     6
 
Enter command:
 ******************************************************* !
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI2 > :P1 AND MI1 < :P2 !
 
c 20 'a'
c 20 'c'
 
resultcount :                     4
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  x3
MI1               :  a
MI2               :  c
MI3               :  3
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     4
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI2 < :P1 AND MI1 > :P2 !
 
c 20 'c'
c 20 'a'
 
resultcount :                     4
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z1
MI1               :  c
MI2               :  a
MI3               :  7
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     4
 
Enter command:
 ******************************************************* !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
CREATE INDEX MIB ON T (MI1 DESC, MI3 ASC) !
 
Enter command:
 ******************************************************* !
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = :P1 AND MI2 = :P2
                                   AND MI3 = :P3 !
 
c 20 'a'
c 20 'b'
c 20 '2'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = :P1 AND MI2 LIKE :P2
                                     AND MI3 = :P3 !
 
c 20 'a'
c 20 'b%'
c 20 '2'
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
NODATA!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (A CHAR (8) KEY, B CHAR (8), C CHAR (8), D CHAR (8),
           E CHAR (8))!
 
Enter command:
INSERT INTO T SET A = 'aaaaaaaa' !
 
Enter command:
CREATE INDEX "T.B" ON T( B ) !
 
Enter command:
CREATE INDEX I ON T (B,D)!
 
Enter command:
CREATE INDEX "T.C" ON T( C ) !
 
Enter command:
CREATE TABLE T1 (A1 CHAR (8)) !
 
Enter command:
INSERT INTO T1 SET A1 = 'a1a1a1a1' !
 
Enter command:
EXPLAIN SELECT * FROM T, T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM <T1, T> WHERE T1.A1 = T.C!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.C                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | C                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT * FROM <T1, T> WHERE T1.A1 = T.A!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM <T1, T> WHERE T1.A1 = T.B!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT /*+ORDERED*/ * INTO :A1, :A2, :A3, :A4, :A5, :A6
                 FROM T1, T WHERE T1.A1 = T.B!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
EXPLAIN SELECT * FROM <T1, T, T X> WHERE T1.A1 = T.B AND T1.A1 = X.A!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   | X                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN SELECT * FROM <T1, T, T X> WHERE T1.A1 = T.B AND T1.A1 = X.A AND
                                               T.B = X.A !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   | X                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
CREATE VIEW V AS SELECT * FROM T WHERE B = 'SSS'!
 
Enter command:
EXPLAIN SELECT * FROM <T1, V, T X> WHERE T1.A1 = V.B AND T1.A1 = X.A!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | V                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   | X                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
CREATE VIEW JOINVIEW AS
     SELECT V.*, T1.A1, X.A XA
       FROM V, T1, T X WHERE T1.A1 = V.B AND T1.A1 = X.A!
 
Enter command:
EXPLAIN SELECT * FROM JOINVIEW !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T                  |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | A                  |      (USED KEY COLUMN)                   |
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN JOIN SELECT * FROM JOINVIEW !
 
STRATEGY          :
OWNER             :  SUT
TABLENAME         :  T
MAX ADDNL. ROWS   :   1.00000000000000000E+00
MULTIPLIER        :   1.00000000000000000E+00
REVERSE MULTIPLIER:   1.00000000000000000E+00
ADDITIONAL PAGES  :   1.00000000000000000E+00
ADDITIONAL ROWS   :   1.00000000000000000E+00
ACCUMULATED_COSTS :   1.00000000000000000E+00
-------------------------------------------------------------
STRATEGY          :  JOIN VIA EQUAL COLUMN (SORTING)
OWNER             :  SUT
TABLENAME         :  T1
MAX ADDNL. ROWS   :   1.00000000000000000E+00
MULTIPLIER        :   0.00000000000000000E+00
REVERSE MULTIPLIER:   1.00000000000000000E+00
ADDITIONAL PAGES  :   1.00000000000000000E+00
ADDITIONAL ROWS   :   1.00000000000000000E+00
ACCUMULATED_COSTS :   2.01440510000000000E+00
-------------------------------------------------------------
STRATEGY          :  JOIN VIA MORE THAN ONE FIELD
OWNER             :  SUT
TABLENAME         :  T
MAX ADDNL. ROWS   :   1.00000000000000000E+00
MULTIPLIER        :   0.00000000000000000E+00
REVERSE MULTIPLIER:   1.00000000000000000E+00
ADDITIONAL PAGES  :   1.00000000000000000E+00
ADDITIONAL ROWS   :   1.00000000000000000E+00
ACCUMULATED_COSTS :   2.02829400000000000E+00
 
Enter command:
EXPLAIN SEQUENCE SELECT * FROM JOINVIEW !
 
TEXT              :  TABLE No.  1
--------------------------------------------------------------------------------
TEXT              :  T
--------------------------------------------------------------------------------
TEXT              :    INV RANGE
--------------------------------------------------------------------------------
TEXT              :   strat      0
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             4
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  2
--------------------------------------------------------------------------------
TEXT              :  T1
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             3
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  3
--------------------------------------------------------------------------------
TEXT              :  T
--------------------------------------------------------------------------------
TEXT              :    KEY EQUAL
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :   | FROM  1   2   3
--------------------------------------------------------------------------------
TEXT              :  TO
--------------------------------------------------------------------------------
TEXT              :   1      --  MJ  MJ
--------------------------------------------------------------------------------
TEXT              :   2      =   --  =
--------------------------------------------------------------------------------
TEXT              :   3      SK  SK  --
--------------------------------------------------------------------------------
TEXT              :  mt_cnt :        4
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier   T  F  J  I  Used tables
--------------------------------------------------------------------------------
TEXT              :   1  INDEXCOLUMNS  0            1  1  0  1  [  2 ]
--------------------------------------------------------------------------------
TEXT              :   1  INDEX PART     0.100E+01   1  1  0  2  [  2 ]
--------------------------------------------------------------------------------
TEXT              :   1  INDEXCOLUMNS  0            1  1  2  1  [  3 ]
--------------------------------------------------------------------------------
TEXT              :   1  INDEX PART     0.100E+01   1  1  2  2  [  3 ]
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier    costs         ji  mi
--------------------------------------------------------------------------------
TEXT              :   1  INDEX-FIELDS  0              0.100000E+01  2   1  multiplejoin
--------------------------------------------------------------------------------
TEXT              :   2  EQUAL FIELD   0              0.100000E+01  1   0
--------------------------------------------------------------------------------
TEXT              :   3  SINGLE KEY    0              0.100000E+01  1   0
--------------------------------------------------------------------------------
TEXT              :  JOIN SEQUENCE SEARCH = AUTOMATIC - LEVEL 9
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.605685E+01 [  1  2  3 ]
--------------------------------------------------------------------------------
TEXT              :  > COSTVALUE : 0.605685E+01 [  1  3  2 ]
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.404465E+01 [  2  1  3 ]
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.402829E+01 [  2  3  1 ]
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.204465E+01 [  3  1  2 ]
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.202829E+01 [  3  2  1 ]
 
Enter command:
EXPLAIN SELECT * FROM JOINVIEW !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T                  |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | A                  |      (USED KEY COLUMN)                   |
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE ARTIKEL
(
  NUMMER    NUMBER(6) PRIMARY KEY,
  NAME      CHAR(20)  DEFAULT 'Kein Name' CHECK (NAME <> 'Leerteil'),
  ZEICHNUNG CHAR(20)  DEFAULT 'Ohne Zeichnung'
)!
 
Enter command:
ALTER TABLE ARTIKEL ADD WERT NUMBER (5)!
 
Enter command:
CREATE INDEX ZEICHNUNG ON ARTIKEL (ZEICHNUNG, NUMMER)!
 
Enter command:
 
CREATE TABLE ST_LISTE
(
  BAUK     NUMBER(6),
  POSITION INTEGER,
  STUECK   NUMBER(6) CONSTRAINT ST_N_NULL NOT NULL,
  CONSTRAINT ST_N_BAUK CHECK (STUECK <> BAUK),
  CHECK (POSITION < 999),
  PRIMARY KEY (BAUK, POSITION),
  FOREIGN KEY (BAUK)   REFERENCES ARTIKEL (NUMMER),
  FOREIGN KEY (STUECK) REFERENCES ARTIKEL (NUMMER)
)!
 
Enter command:
ALTER TABLE ST_LISTE ADD ANZAHL NUMBER (5)!
 
Enter command:
 
CREATE UNIQUE INDEX VERWENDUNG ON ST_LISTE (STUECK, BAUK, POSITION)!
 
Enter command:
 
CREATE VIEW BAUK (BAUKNR, BAUKNAME,
                       POSNR, POSINR, POSINAME)
  AS SELECT KOPF.NUMMER, KOPF.NAME,
          POSITION, POSI.NUMMER, POSI.NAME
       FROM ARTIKEL KOPF, ST_LISTE, ARTIKEL POSI
       WHERE ST_LISTE.BAUK   = KOPF.NUMMER
         AND ST_LISTE.STUECK = POSI.NUMMER
  WITH CHECK OPTION!
 
Enter command:
 
 
 
 
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST SQLMODE ORACLE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (1, 'Kopfartikel')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (2, 'Posartikel 1')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (3, 'Posartikel 2')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER)       VALUES (4)!
 
Enter command:
UPDATE ARTIKEL SET WERT = 10 WHERE NUMMER=2!
 
resultcount :                     1
 
Enter command:
UPDATE ARTIKEL SET WERT = 20 WHERE NUMMER=3!
 
resultcount :                     1
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (5, 1, 1)!
 
***ERROR    -35 Referential integrity violated:ARTIKEL_ST_LISTE,KERN,ST_LI 0001
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 1, 1)!
 
***ERROR  -1402 Integrity violation:ST_N_BAUK,ST_LISTE,KERN                0001
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 1, 2)!
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 1, 3)!
 
***ERROR     -1 Duplicate key in index                                     0062
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 2, 3)!
 
Enter command:
UPDATE ST_LISTE SET ANZAHL=1 WHERE BAUK=1 AND POSITION=1!
 
resultcount :                     1
 
Enter command:
UPDATE ST_LISTE SET ANZAHL=2 WHERE BAUK=1 AND POSITION=2!
 
resultcount :                     1
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (10, 'Kopf-Test1')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (11, 'Pos-Test1')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (12, 'Pos-Test2')!
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (10, 1, 11)!
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (10, 2, 12)!
 
Enter command:
 
UPDATE ST_LISTE SET ANZAHL=2 WHERE BAUK=10 AND POSITION=1!
 
resultcount :                     1
 
Enter command:
COMMIT WORK!
 
Enter command:
DELETE FROM ARTIKEL     WHERE NUMMER = 2!
 
***ERROR    -35 Referential integrity violated:ARTIKEL_ST_LISTE1,KERN,ST_L 0001
 
Enter command:
DELETE FROM ST_LISTE WHERE STUECK = 2!
 
resultcount :                     1
 
Enter command:
DELETE FROM ARTIKEL     WHERE NUMMER = 2!
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE!
 
Enter command:
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
               'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
              (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      20
BAUK              :        1
POSITION          :                      2
STUECK            :        3
ANZAHL            :       2
 
resultcount :                     1
 
Enter command:
 
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          NOT IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
                   'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
                  (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :  ??????
BAUK              :       10
POSITION          :                      2
STUECK            :       12
ANZAHL            :  ??????
 
resultcount :                     1
 
Enter command:
 
CREATE VIEW TV AS
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
               'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
              (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
Enter command:
 
SELECT * FROM TV!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      20
BAUK              :        1
POSITION          :                      2
STUECK            :        3
ANZAHL            :       2
 
resultcount :                     1
 
Enter command:
DROP VIEW TV!
 
Enter command:
 
CREATE TABLE TT AS
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          NOT IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
                   'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
                  (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
Enter command:
 
SELECT * FROM TT!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :  ??????
BAUK              :       10
POSITION          :                      2
STUECK            :       12
ANZAHL            :  ??????
 
resultcount :                     1
 
Enter command:
DROP TABLE TT!
 
Enter command:
 
SELECT POSITION FROM ARTIKEL, ST_LISTE
WHERE NUMMER IN (SELECT BAUK FROM ST_LISTE)
  AND BAUK=NUMMER!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A!
 
POSITION
---------------------
                    1
                    2
                    1
                    2
 
resultcount :                     4
 
Enter command:
 
SELECT NUMMER, NAME, ZEICHNUNG, POSITION
  FROM ARTIKEL, ST_LISTE
  WHERE (NUMMER, POSITION)
           IN (SELECT BAUK, MAX (POSITION) FROM ST_LISTE GROUP BY BAUK)
    AND BAUK = NUMMER!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D!
 
NUMMER  | NAME                 | ZEICHNUNG            | POSITION
--------+----------------------+----------------------+----------------------
      1 | Kopfartikel          | Ohne Zeichnung       |                     2
     10 | Kopf-Test1           | Ohne Zeichnung       |                     2
 
resultcount :                     2
 
Enter command:
 
SELECT NAME, POSITION FROM ARTIKEL, ST_LISTE
  WHERE (NUMMER, POSITION)
           IN (SELECT BAUK, 2 FROM ST_LISTE WHERE BAUK = NUMMER)!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B!
 
NAME                 | POSITION
---------------------+----------------------
Kopfartikel          |                     2
Kopfartikel          |                     2
Kopf-Test1           |                     2
Kopf-Test1           |                     2
 
resultcount :                     4
 
Enter command:
 
SELECT NUMMER, NAME, ZEICHNUNG, POSITION FROM ARTIKEL, ST_LISTE
  WHERE BAUK = NUMMER
    AND (BAUK, POSITION)
           IN (SELECT NUMMER, 2 FROM ARTIKEL WHERE BAUK = NUMMER)!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D!
 
NUMMER  | NAME                 | ZEICHNUNG            | POSITION
--------+----------------------+----------------------+----------------------
      1 | Kopfartikel          | Ohne Zeichnung       |                     2
     10 | Kopf-Test1           | Ohne Zeichnung       |                     2
 
resultcount :                     2
 
Enter command:
 
UPDATE ARTIKEL SET WERT = 24 WHERE NUMMER = 4!
 
resultcount :                     1
 
Enter command:
 
UPDATE ARTIKEL SET WERT = 27
  WHERE (4, 'Kein Name', ZEICHNUNG)
    IN (SELECT NUMMER, NAME, ZEICHNUNG FROM ARTIKEL)!
 
resultcount :                     7
 
Enter command:
 
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST SQLMODE ORACLE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
 
 
UPDATE ARTIKEL SET WERT = NUMMER+20 WHERE WERT IS NULL!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
CREATE TABLE AUFTRAG
(
  AUFTNUM   NUMBER (6) PRIMARY KEY,
  KUNDE     CHAR (20),
  TERMIN    DATE
)!
 
Enter command:
INSERT INTO AUFTRAG VALUES (940001, 'Mueller', '16-MAY-94')!
 
Enter command:
INSERT INTO AUFTRAG VALUES (940002, 'Mayer',   '16-JUN-94')!
 
Enter command:
INSERT INTO AUFTRAG VALUES (940003, 'Schulze', '27-MAY-94')!
 
Enter command:
 
CREATE TABLE AUFTPOS
(
  AUFTNUM   NUMBER(6),
  AUFTPOS   NUMBER(4),
  ARTIKEL   NUMBER(6) NOT NULL,
  MENGE     NUMBER(5) DEFAULT 1,
  PRIMARY KEY (AUFTNUM, AUFTPOS),
  FOREIGN KEY (AUFTNUM) REFERENCES AUFTRAG (AUFTNUM),
  FOREIGN KEY (ARTIKEL) REFERENCES ARTIKEL (NUMMER)
)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0001, 000001, 10)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0002, 000002, 11)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0003, 000003, 12)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0004, 000004, 13)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940002, 0001, 000010, 1)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940002, 0002, 000011, 2)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940002, 0003, 000012, 3)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940003, 0001, 000001, 20)!
 
Enter command:
 
CREATE TABLE LAGERFACH
(
  LAGER   NUMBER(4),
  AUFTNUM NUMBER(6),
  AUFTPOS NUMBER(4),
  ARTIKEL NUMBER(6) NOT NULL,
  MENGE   NUMBER(5) NOT NULL,
  PRIMARY KEY (LAGER, ARTIKEL),
  FOREIGN KEY (AUFTNUM, AUFTPOS) REFERENCES AUFTPOS (AUFTNUM, AUFTPOS),
  FOREIGN KEY (ARTIKEL)          REFERENCES ARTIKEL (NUMMER)
)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0005, NULL,   NULL, 000010,  15)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0006, NULL,   NULL, 000011, 200)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0007, NULL,   NULL, 000012,  11)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0011, 940001, 0001, 000001,  10)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0021, 940003, 0001, 000001,  20)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0002, 940001, 0002, 000002,   5)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0003, 940001, 0003, 000003,   6)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0004, 940001, 0004, 000004,   7)!
 
Enter command:
 
COMMIT WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE!
 
Enter command:
 
SELECT AUFTRAG.AUFTNUM, NUMMER, MENGE, WERT
  FROM AUFTRAG, AUFTPOS, ARTIKEL
  WHERE AUFTRAG.AUFTNUM = AUFTPOS.AUFTNUM
    AND ARTIKEL.NUMMER  = AUFTPOS.ARTIKEL!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D!
 
AUFTNUM | NUMMER  | MENGE  | WERT
--------+---------+--------+-------
 940001 |       1 |     10 |     27
 940003 |       1 |     20 |     27
 940001 |       2 |     11 |     27
 940001 |       3 |     12 |     27
 940001 |       4 |     13 |     27
 940002 |      10 |      1 |     27
 940002 |      11 |      2 |     27
 940002 |      12 |      3 |     27
 
resultcount :                     8
 
Enter command:
 
SELECT AUFTRAG.AUFTNUM, SUM (MENGE*WERT)
  FROM AUFTRAG, AUFTPOS, ARTIKEL
  WHERE AUFTRAG.AUFTNUM = AUFTPOS.AUFTNUM
    AND ARTIKEL.NUMMER  = AUFTPOS.ARTIKEL
  GROUP BY AUFTRAG.AUFTNUM!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B!
 
AUFTNUM | EXPRESSION1
--------+---------------------------------------------
 940001 |  1.2420000000000000000000000000000000000E+03
 940002 |  1.6200000000000000000000000000000000000E+02
 940003 |  5.4000000000000000000000000000000000000E+02
 
resultcount :                     3
 
Enter command:
 
SELECT AUFTNUM, AUFTPOS, ARTIKEL, NAME, MENGE FROM AUFTPOS, ARTIKEL
  WHERE ARTIKEL = NUMMER
    AND (AUFTNUM, AUFTPOS, ARTIKEL)
          IN (SELECT AUFTNUM, AUFTPOS, ARTIKEL FROM LAGERFACH)
  ORDER BY AUFTNUM, AUFTPOS!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E!
 
AUFTNUM | AUFTPOS | ARTIKEL | NAME                 | MENGE
--------+---------+---------+----------------------+-------
 940001 |     1   |       1 | Kopfartikel          |     10
 940001 |     2   |       2 | Posartikel 1         |     11
 940001 |     3   |       3 | Posartikel 2         |     12
 940001 |     4   |       4 | Kein Name            |     13
 940003 |     1   |       1 | Kopfartikel          |     20
 
resultcount :                     5
 
Enter command:
 
SELECT AUFTNUM, AUFTPOS, ARTIKEL, NAME, MENGE FROM AUFTPOS, ARTIKEL
  WHERE ARTIKEL = NUMMER
    AND (AUFTNUM, AUFTPOS)
          IN (SELECT AUFTNUM, AUFTPOS FROM LAGERFACH
                WHERE ARTIKEL = NUMMER)
  ORDER BY AUFTNUM, AUFTPOS!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E!
 
AUFTNUM | AUFTPOS | ARTIKEL | NAME                 | MENGE
--------+---------+---------+----------------------+-------
 940001 |     1   |       1 | Kopfartikel          |     10
 940001 |     2   |       2 | Posartikel 1         |     11
 940001 |     3   |       3 | Posartikel 2         |     12
 940001 |     4   |       4 | Kein Name            |     13
 940003 |     1   |       1 | Kopfartikel          |     20
 
resultcount :                     5
 
Enter command:
 
SELECT AUFTNUM, AUFTPOS, ARTIKEL, NAME, MENGE FROM AUFTPOS, ARTIKEL
  WHERE ARTIKEL = NUMMER
    AND AUFTNUM IN (SELECT AUFTNUM FROM LAGERFACH
                      WHERE ARTIKEL = NUMMER
                        AND LAGERFACH.AUFTPOS = AUFTPOS.AUFTPOS)
  ORDER BY AUFTNUM, AUFTPOS!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E!
 
AUFTNUM | AUFTPOS | ARTIKEL | NAME                 | MENGE
--------+---------+---------+----------------------+-------
 940001 |     1   |       1 | Kopfartikel          |     10
 940001 |     2   |       2 | Posartikel 1         |     11
 940001 |     3   |       3 | Posartikel 2         |     12
 940001 |     4   |       4 | Kein Name            |     13
 940003 |     1   |       1 | Kopfartikel          |     20
 
resultcount :                     5
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST SQLMODE INTERNAL !
 
Enter command:
COMMIT !
 
Enter command:
DECLARE RES5B CURSOR FOR
  SELECT * FROM AUFTRAG AK, ARTIKEL A
    WHERE (AK.AUFTNUM, A.NUMMER) = ANY (SELECT AUFTNUM, ARTIKEL FROM AUFTPOS)!
 
resultcount :                     8
 
Enter command:
FETCH RES5B INTO :A, :B, :C, :D, :E, :F, :G !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, ARTIKEL A, AUFTPOS AP
  WHERE (AK.AUFTNUM, A.NUMMER) = ANY ((AP.AUFTNUM, AP.ARTIKEL))!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      10
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940003
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      20
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      2
ARTIKEL           :        2
MENGE             :      11
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      3
ARTIKEL           :        3
MENGE             :      12
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      4
ARTIKEL           :        4
MENGE             :      13
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940002
AUFTPOS           :      1
ARTIKEL           :       10
MENGE             :       1
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940002
AUFTPOS           :      2
ARTIKEL           :       11
MENGE             :       2
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940002
AUFTPOS           :      3
ARTIKEL           :       12
MENGE             :       3
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, AUFTPOS AP, ARTIKEL A
  WHERE (AK.AUFTNUM, A.NUMMER) = ((AP.AUFTNUM, AP.ARTIKEL))!
 
resultcount :                     8
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E, :F, :G, :H, :I, :J, :K !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      10
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
AUFTNUM           :   940003
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      20
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      2
ARTIKEL           :        2
MENGE             :      11
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      3
ARTIKEL           :        3
MENGE             :      12
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      4
ARTIKEL           :        4
MENGE             :      13
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
AUFTNUM           :   940002
AUFTPOS           :      1
ARTIKEL           :       10
MENGE             :       1
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
AUFTNUM           :   940002
AUFTPOS           :      2
ARTIKEL           :       11
MENGE             :       2
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
AUFTNUM           :   940002
AUFTPOS           :      3
ARTIKEL           :       12
MENGE             :       3
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, ARTIKEL A
  WHERE (AK.AUFTNUM, A.NUMMER) = ANY (SELECT AUFTNUM, ARTIKEL FROM AUFTPOS)!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT AK.*, A.* FROM AUFTRAG AK, ARTIKEL A, AUFTPOS AP
  WHERE AK.AUFTNUM = AP.AUFTNUM
    AND A.NUMMER   = AP.ARTIKEL!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, ARTIKEL A
  WHERE AK.AUFTNUM IN (SELECT AP.AUFTNUM FROM AUFTPOS AP
                         WHERE A.NUMMER = AP.ARTIKEL)!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST!
 
Enter command:
CREATE TABLE TT1 (A1 CHAR(5), B1 CHAR(5))!
 
Enter command:
CREATE TABLE TT2 (A2 CHAR(5), B2 CHAR(5))!
 
Enter command:
INSERT INTO TT1 VALUES ('Hallo','Welt')!
 
Enter command:
INSERT INTO TT1 VALUES ('Wie','gehts')!
 
Enter command:
INSERT INTO TT2 VALUES ('Hallo','Du')!
 
Enter command:
SELECT * FROM TT1, TT2 WHERE (A1, B1) =  ((A2, 'Welt'))!
 
resultcount :                     1
 
Enter command:
SELECT * FROM TT1, TT2 WHERE A1='Hallo' AND (A1, B1) =  ((A2, 'Welt'))!
 
resultcount :                     1
 
Enter command:
SELECT * FROM TT1, TT2 WHERE (A1, B1) =  ((A2, 'Welt')) AND A1='Hallo'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM TT1, TT2 WHERE (A1, B1) IN ((A2, 'Welt'))!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1    | B1    | A2    | B2
------+-------+-------+------
Hallo | Welt  | Hallo | Du
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE JOIN_E ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i"
 ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | K                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i" ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | K                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2%' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b11 | b11 | xxx | ???
b12 | b12 | xxx | ???
b13 | b13 | xxx | ???
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
b31 | b31 | xxx | ???
b32 | b32 | xxx | ???
b33 | b33 | xxx | ???
 
resultcount :                     9
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b%2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b% '
 
resultcount :                     9
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b11 | b11 | xxx | ???
b12 | b12 | xxx | ???
b13 | b13 | xxx | ???
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
b31 | b31 | xxx | ???
b32 | b32 | xxx | ???
b33 | b33 | xxx | ???
 
resultcount :                     9
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 '%2 '
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i" ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | K                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( K CHAR(3) KEY,I CHAR(3))!
 
Enter command:
CREATE INDEX "t1.i" ON T1( I ) !
 
Enter command:
INSERT INTO T1 SET K = 'b11', I = 'b11'!
 
Enter command:
INSERT INTO T1 SET K = 'b12', I = 'b12'!
 
Enter command:
INSERT INTO T1 SET K = 'b13', I = 'b13'!
 
Enter command:
INSERT INTO T1 SET K = 'b21', I = 'b21'!
 
Enter command:
INSERT INTO T1 SET K = 'b22', I = 'b22'!
 
Enter command:
INSERT INTO T1 SET K = 'b23', I = 'b23'!
 
Enter command:
INSERT INTO T1 SET K = 'b31', I = 'b31'!
 
Enter command:
INSERT INTO T1 SET K = 'b32', I = 'b32'!
 
Enter command:
INSERT INTO T1 SET K = 'b33', I = 'b33'!
 
Enter command:
CREATE TABLE T2 LIKE T1!
 
Enter command:
INSERT INTO T2 SET K = 'xxx'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b22 | b22 | xxx | ???
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b21 | b21 | xxx | ???
b22 | b22 | xxx | ???
b23 | b23 | xxx | ???
 
resultcount :                     3
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
K   | I   | K   | I
----+-----+-----+----
b12 | b12 | xxx | ???
b22 | b22 | xxx | ???
b32 | b32 | xxx | ???
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | K                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.K LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | RANGE CONDITION FOR KEY                  |          1
                   |                    | K                  |      (USED KEY COLUMN)                   |
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b22' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T2                 |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.i               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b2_' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM T1,T2 WHERE T1.I LIKE 'b_2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b22 | b22
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b21 | b21
b22 | b22
b23 | b23
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.K LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b12 | b12
b22 | b22
b32 | b32
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b22'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b22 | b22
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b2_'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b21 | b21
b22 | b22
b23 | b23
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT * FROM T1,T2 WHERE T1.I LIKE :PARAM !
 
c 3 'b_2'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B !
 
K   | I
----+----
b12 | b12
b22 | b22
b32 | b32
 
resultcount :                     3
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8), B CHAR (7)PRIMARY KEY)!
 
Enter command:
INSERT T SET A = 'aaa', B  = 'xxx'!
 
Enter command:
INSERT T SET A = 'bbb', B  = 'www'!
 
Enter command:
INSERT T SET A = 'ccc', B  = 'b1'!
 
Enter command:
INSERT T SET A = 'ddd', B  = 'x'!
 
Enter command:
CREATE TABLE T1 ( B CHAR (8)KEY)!
 
Enter command:
INSERT T1 SET B = 'x'!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T1, T
WHERE
T.B LIKE :A AND
T.A = T1.B !
 
c 254 'x%'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T1, T
WHERE
T.B LIKE :A AND
T.B = T1.B !
 
c 254 'x%'
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
B        | A        | B
---------+----------+--------
x        | ddd      | x
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T1, T
WHERE
T.B IN (:A,:B,:C,:D, :A) AND
T.B = T1.B !
 
c 7 'aaaaaaa'
c 7 'eeeeeee'
c 7 'aaaaaaa'
c 7 'ddddddd'
c 7 'aaaaaaa'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE!
 
Enter command:
NODATA !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (K CHAR(20) KEY, MI1 CHAR(20),
                MI2 CHAR(20), MI3 CHAR(20)) !
 
Enter command:
INSERT INTO T SET K = 'x1',MI1 = 'a', MI2 = 'a ', MI3 = '1'!
 
Enter command:
INSERT INTO T SET K = 'x2',MI1 = 'a', MI2 = 'b ', MI3 = '2'!
 
Enter command:
INSERT INTO T SET K = 'x3',MI1 = 'a', MI2 = 'c ', MI3 = '3'!
 
Enter command:
INSERT INTO T SET K = 'y1',MI1 = 'b', MI2 = 'a ', MI3 = '4'!
 
Enter command:
INSERT INTO T SET K = 'y2',MI1 = 'b', MI2 = 'b ', MI3 = '5'!
 
Enter command:
INSERT INTO T SET K = 'y3',MI1 = 'b', MI2 = 'c ', MI3 = '6'!
 
Enter command:
INSERT INTO T SET K = 'z1',MI1 = 'c', MI2 = 'a ', MI3 = '7'!
 
Enter command:
INSERT INTO T SET K = 'z2',MI1 = 'c', MI2 = 'b ', MI3 = '8'!
 
Enter command:
INSERT INTO T SET K = 'z3',MI1 = 'c', MI2 = 'c ', MI3 = '9'!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI2 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI2) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI2!
 
Enter command:
ALTER TABLE T ADD (MI99 CHAR(20))!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI1 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI1) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI1!
 
Enter command:
CREATE INDEX MIA ON T (MI1, MI2) !
 
Enter command:
CREATE TABLE T1 (DUMMY CHAR(20)) !
 
Enter command:
INSERT INTO T1 SET DUMMY = 'dummy' !
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND MI2 = 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA MULTIPLE INDEXED COLUMNS        |          1
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    | MI2                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA RANGE OF MULTIPLE INDEXED COL.  |          1
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI2 = 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'a'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'b' AND MI2 > 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 < 'b' AND MI2 < 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 BETWEEN 'b' AND 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND
    MI2 BETWEEN 'b' AND 'b'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA RANGE OF MULTIPLE INDEXED COL.  |          1
                   |                    |                    | ADDNL. QUALIFICATION ON INDEX            |
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 LIKE 'b%'
                     AND MI2 BETWEEN 'b' AND 'c'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND MI2 = 'b'
FETCH !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0062
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b'!
 
resultcount :                     3
 
Enter command:
FETCH !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI2 = 'b'!
 
resultcount :                     3
 
Enter command:
FETCH !
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'a'!
 
resultcount :                     6
 
Enter command:
FETCH !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
-----------------------------------------
K                 :  z1
MI1               :  c
MI2               :  a
MI3               :  7
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
-----------------------------------------
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     6
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > 'b' AND MI2 > 'b'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     1
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 < 'b' AND MI2 < 'b'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
K                 :  x1
MI1               :  a
MI2               :  a
MI3               :  1
 
resultcount :                     1
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 BETWEEN 'b' AND 'b'!
 
resultcount :                     3
 
Enter command:
FETCH !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = 'b' AND
    MI2 BETWEEN 'b' AND 'b'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
 
resultcount :                     1
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 LIKE 'b%'
                     AND MI2 BETWEEN 'b' AND 'c'!
 
resultcount :                     2
 
Enter command:
FETCH !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (K CHAR(20) KEY, MI1 CHAR(20),
                MI2 CHAR(20), MI3 CHAR(20)) !
 
Enter command:
INSERT INTO T SET K = 'x1',MI1 = 'a', MI2 = 'a ', MI3 = '1'!
 
Enter command:
INSERT INTO T SET K = 'x2',MI1 = 'a', MI2 = 'b ', MI3 = '2'!
 
Enter command:
INSERT INTO T SET K = 'x3',MI1 = 'a', MI2 = 'c ', MI3 = '3'!
 
Enter command:
INSERT INTO T SET K = 'y1',MI1 = 'b', MI2 = 'a ', MI3 = '4'!
 
Enter command:
INSERT INTO T SET K = 'y2',MI1 = 'b', MI2 = 'b ', MI3 = '5'!
 
Enter command:
INSERT INTO T SET K = 'y3',MI1 = 'b', MI2 = 'c ', MI3 = '6'!
 
Enter command:
INSERT INTO T SET K = 'z1',MI1 = 'c', MI2 = 'a ', MI3 = '7'!
 
Enter command:
INSERT INTO T SET K = 'z2',MI1 = 'c', MI2 = 'b ', MI3 = '8'!
 
Enter command:
INSERT INTO T SET K = 'z3',MI1 = 'c', MI2 = 'c ', MI3 = '9'!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI2 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI2) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI2!
 
Enter command:
ALTER TABLE T ADD (MI99 CHAR(20))!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI1 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI1) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI1!
 
Enter command:
CREATE INDEX MIA ON T (MI1, MI2) !
 
Enter command:
CREATE TABLE T1 (DUMMY CHAR(20)) !
 
Enter command:
INSERT INTO T1 SET DUMMY = 'dummy' !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DATA!
 
Enter command:
PARS_THEN_EX!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = :P1 AND MI2 = :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 = :P!
 
c 20 'b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI2 = :P!
 
c 20 'b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > :P!
 
c 20 'a'
 
resultcount :                     6
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
-----------------------------------------
K                 :  z1
MI1               :  c
MI2               :  a
MI3               :  7
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
-----------------------------------------
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     6
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 > :P1 AND MI2 > :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 < :P1 AND MI2 < :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  x1
MI1               :  a
MI2               :  a
MI3               :  1
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 BETWEEN :P1 AND :P2!
 
c 20 'b'
c 20 'b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T,T1 WHERE MI1 LIKE :P1
                     AND MI2 BETWEEN :P2 AND :P3!
 
c 20 'b%'
c 20 'b'
c 20 'c'
 
resultcount :                     2
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E !
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     2
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (K CHAR(20) KEY, MI1 CHAR(20),
                MI2 CHAR(20), MI3 CHAR(20)) !
 
Enter command:
CREATE INDEX MIA ON T (MI1, MI2)!
 
Enter command:
INSERT INTO T SET K = 'x1',MI1 = 'a', MI2 = 'a ', MI3 = '1'!
 
Enter command:
INSERT INTO T SET K = 'x2',MI1 = 'a', MI2 = 'b ', MI3 = '2'!
 
Enter command:
INSERT INTO T SET K = 'x3',MI1 = 'a', MI2 = 'c ', MI3 = '3'!
 
Enter command:
INSERT INTO T SET K = 'y1',MI1 = 'b', MI2 = 'a ', MI3 = '4'!
 
Enter command:
INSERT INTO T SET K = 'y2',MI1 = 'b', MI2 = 'b ', MI3 = '5'!
 
Enter command:
INSERT INTO T SET K = 'y3',MI1 = 'b', MI2 = 'c ', MI3 = '6'!
 
Enter command:
INSERT INTO T SET K = 'z1',MI1 = 'c', MI2 = 'a ', MI3 = '7'!
 
Enter command:
INSERT INTO T SET K = 'z2',MI1 = 'c', MI2 = 'b ', MI3 = '8'!
 
Enter command:
INSERT INTO T SET K = 'z3',MI1 = 'c', MI2 = 'c ', MI3 = '9'!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI2 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI2) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI2!
 
Enter command:
ALTER TABLE T ADD (MI99 CHAR(20))!
 
Enter command:
ALTER TABLE T ADD (MI4 CHAR(20))!
 
Enter command:
UPDATE T SET MI4 = MI1 !
 
resultcount :                     9
 
Enter command:
ALTER TABLE T DROP (MI1) !
 
Enter command:
RENAME COLUMN T.MI4 TO MI1!
 
Enter command:
CREATE INDEX MIA ON T(MI1 DESC, K ASC, MI2 DESC) !
 
Enter command:
CREATE TABLE T1 (DUMMY CHAR(20)) !
 
Enter command:
INSERT INTO T1 SET DUMMY = 'dummy' !
 
Enter command:
COMMIT WORK!
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = 'b' AND K LIKE '%2' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 |                    | TABLE SCAN                               |          1
KERN               | T                  | MIA                | JOIN VIA RANGE OF MULTIPLE INDEXED COL.  |          1
                   |                    |                    | ADDNL. QUALIFICATION ON INDEX            |
                   |                    | MI1                |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = 'b' AND K LIKE '%2' !
 
resultcount :                     1
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
 
resultcount :                     1
 
Enter command:
EXPLAIN SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 < 'b' AND MI2 = 'a'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 < 'b' AND MI2 = 'a'!
 
resultcount :                     1
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x1
MI1               :  a
MI2               :  a
MI3               :  1
 
resultcount :                     1
 
Enter command:
DROP INDEX MIA!
 
Enter command:
CREATE INDEX MIA ON T(MI2 ASC, MI1 DESC) !
 
Enter command:
PARSING!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI2 > 'a' AND  MI2 LIKE :A !
parsing idnr :       1
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 'b%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 '%b'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 'b%'
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     3
 
Enter command:
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 20 '%'
 
resultcount :                     6
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  x3
MI1               :  a
MI2               :  c
MI3               :  3
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
-----------------------------------------
K                 :  z3
MI1               :  c
MI2               :  c
MI3               :  9
 
resultcount :                     6
 
Enter command:
 ******************************************************* !
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI2 > :P1 AND MI1 < :P2 !
 
c 20 'a'
c 20 'c'
 
resultcount :                     4
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
-----------------------------------------
K                 :  x3
MI1               :  a
MI2               :  c
MI3               :  3
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  y3
MI1               :  b
MI2               :  c
MI3               :  6
 
resultcount :                     4
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI2 < :P1 AND MI1 > :P2 !
 
c 20 'c'
c 20 'a'
 
resultcount :                     4
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  y1
MI1               :  b
MI2               :  a
MI3               :  4
-----------------------------------------
K                 :  y2
MI1               :  b
MI2               :  b
MI3               :  5
-----------------------------------------
K                 :  z1
MI1               :  c
MI2               :  a
MI3               :  7
-----------------------------------------
K                 :  z2
MI1               :  c
MI2               :  b
MI3               :  8
 
resultcount :                     4
 
Enter command:
 ******************************************************* !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
CREATE INDEX MIB ON T (MI1 DESC, MI3 ASC) !
 
Enter command:
 ******************************************************* !
 
Enter command:
PARS_THEN_EXEC!
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = :P1 AND MI2 = :P2
                                   AND MI3 = :P3 !
 
c 20 'a'
c 20 'b'
c 20 '2'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A,:B,:C,:D!
 
K                 :  x2
MI1               :  a
MI2               :  b
MI3               :  2
 
resultcount :                     1
 
Enter command:
DATA!
 
Enter command:
SELECT K,MI1,MI2,MI3 FROM T1,T WHERE MI1 = :P1 AND MI2 LIKE :P2
                                     AND MI3 = :P3 !
 
c 20 'a'
c 20 'b%'
c 20 '2'
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
NODATA!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (A CHAR (8) KEY, B CHAR (8), C CHAR (8), D CHAR (8),
           E CHAR (8))!
 
Enter command:
INSERT INTO T SET A = 'aaaaaaaa' !
 
Enter command:
CREATE INDEX "T.B" ON T( B ) !
 
Enter command:
CREATE INDEX I ON T (B,D)!
 
Enter command:
CREATE INDEX "T.C" ON T( C ) !
 
Enter command:
CREATE TABLE T1 (A1 CHAR (8)) !
 
Enter command:
INSERT INTO T1 SET A1 = 'a1a1a1a1' !
 
Enter command:
EXPLAIN SELECT * FROM T, T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T                  |                    | TABLE SCAN                               |          1
SUT                | T1                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM <T1, T> WHERE T1.A1 = T.C!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.C                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | C                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM <T1, T> WHERE T1.A1 = T.A!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM <T1, T> WHERE T1.A1 = T.B!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT /*+ORDERED*/ * INTO :A1, :A2, :A3, :A4, :A5, :A6
                 FROM T1, T WHERE T1.A1 = T.B!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
EXPLAIN SELECT * FROM <T1, T, T X> WHERE T1.A1 = T.B AND T1.A1 = X.A!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   | X                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT * FROM <T1, T, T X> WHERE T1.A1 = T.B AND T1.A1 = X.A AND
                                               T.B = X.A !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   | X                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
CREATE VIEW V AS SELECT * FROM T WHERE B = 'SSS'!
 
Enter command:
EXPLAIN SELECT * FROM <T1, V, T X> WHERE T1.A1 = V.B AND T1.A1 = X.A!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | V                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   | X                  | A                  | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
CREATE VIEW JOINVIEW AS
     SELECT V.*, T1.A1, X.A XA
       FROM V, T1, T X WHERE T1.A1 = V.B AND T1.A1 = X.A!
 
Enter command:
EXPLAIN SELECT * FROM JOINVIEW !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | A                  | JOIN VIA KEY COLUMN                      |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN JOIN SELECT * FROM JOINVIEW !
 
STRATEGY          :
OWNER             :  SUT
TABLENAME         :  T1
MAX ADDNL. ROWS   :   1.00000000000000000E+00
MULTIPLIER        :   1.00000000000000000E+00
REVERSE MULTIPLIER:   1.00000000000000000E+00
ADDITIONAL PAGES  :   1.00000000000000000E+00
ADDITIONAL ROWS   :   1.00000000000000000E+00
ACCUMULATED_COSTS :   1.00000000000000000E+00
-------------------------------------------------------------
STRATEGY          :  JOIN VIA SINGLE KEY
OWNER             :  SUT
TABLENAME         :  T
MAX ADDNL. ROWS   :   1.00000000000000000E+00
MULTIPLIER        :   0.00000000000000000E+00
REVERSE MULTIPLIER:   1.00000000000000000E+00
ADDITIONAL PAGES  :   1.00000000000000000E+00
ADDITIONAL ROWS   :   1.00000000000000000E+00
ACCUMULATED_COSTS :   2.00884950000000000E+00
-------------------------------------------------------------
STRATEGY          :  JOIN VIA MORE THAN ONE FIELD
OWNER             :  SUT
TABLENAME         :  T
MAX ADDNL. ROWS   :   1.00000000000000000E+00
MULTIPLIER        :   0.00000000000000000E+00
REVERSE MULTIPLIER:   1.00000000000000000E+00
ADDITIONAL PAGES  :   1.00000000000000000E+00
ADDITIONAL ROWS   :   1.00000000000000000E+00
ACCUMULATED_COSTS :   2.02273840000000000E+00
 
Enter command:
EXPLAIN SEQUENCE SELECT * FROM JOINVIEW !
 
TEXT              :  TABLE No.  1
--------------------------------------------------------------------------------
TEXT              :  T
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE FETCH
--------------------------------------------------------------------------------
TEXT              :   strat      0
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  2
--------------------------------------------------------------------------------
TEXT              :  T1
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE FETCH
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  3
--------------------------------------------------------------------------------
TEXT              :  T
--------------------------------------------------------------------------------
TEXT              :    KEY EQUAL FETCH
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :   | FROM  1   2   3
--------------------------------------------------------------------------------
TEXT              :  TO
--------------------------------------------------------------------------------
TEXT              :   1      --  MJ  MJ
--------------------------------------------------------------------------------
TEXT              :   2      =   --  =
--------------------------------------------------------------------------------
TEXT              :   3      SK  SK  --
--------------------------------------------------------------------------------
TEXT              :  mt_cnt :        4
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier   T  F  J  I  Used tables
--------------------------------------------------------------------------------
TEXT              :   1  INDEXCOLUMNS  0            1  1  0  1  [  2 ]
--------------------------------------------------------------------------------
TEXT              :   1  INDEX PART     0.100E+01   1  1  0  2  [  2 ]
--------------------------------------------------------------------------------
TEXT              :   1  INDEXCOLUMNS  0            1  1  2  1  [  3 ]
--------------------------------------------------------------------------------
TEXT              :   1  INDEX PART     0.100E+01   1  1  2  2  [  3 ]
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier    costs         ji  mi
--------------------------------------------------------------------------------
TEXT              :   1  INDEX-FIELDS  0              0.100000E+01  2   1  multiplejoin
--------------------------------------------------------------------------------
TEXT              :   2  EQUAL FIELD   0              0.100000E+01  1   0
--------------------------------------------------------------------------------
TEXT              :   3  SINGLE KEY    0              0.100000E+01  1   0
--------------------------------------------------------------------------------
TEXT              :  JOIN SEQUENCE SEARCH = AUTOMATIC - LEVEL 9
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.304146E+01 [  1  2  3 ]
--------------------------------------------------------------------------------
TEXT              :  > COSTVALUE : 0.304465E+01 [  1  3  2 ]
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.202927E+01 [  2  1  3 ]
--------------------------------------------------------------------------------
TEXT              :  < COSTVALUE : 0.202273E+01 [  2  3  1 ]
--------------------------------------------------------------------------------
TEXT              :  > COSTVALUE : 0.204465E+01 [  3  1  2 ]
--------------------------------------------------------------------------------
TEXT              :  > COSTVALUE : 0.202829E+01 [  3  2  1 ]
--------------------------------------------------------------------------------
TEXT              :  BUFFER SIZE PER TASK :     131072  BYTES
--------------------------------------------------------------------------------
TEXT              :  TABLE  2 :      47285  BYTES (recs est.          1)
--------------------------------------------------------------------------------
TEXT              :  TABLE  3 :         26  bytes (recs est.          1)
--------------------------------------------------------------------------------
TEXT              :  TABLE  1 :      83761  BYTES (recs est.          1)
 
Enter command:
EXPLAIN SELECT * FROM JOINVIEW !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
SUT                | T1                 |                    | TABLE SCAN                               |          1
SUT                | T                  | A                  | JOIN VIA KEY COLUMN                      |          1
SUT                | T                  | T.B                | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B                  |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE ARTIKEL
(
  NUMMER    NUMBER(6) PRIMARY KEY,
  NAME      CHAR(20)  DEFAULT 'Kein Name' CHECK (NAME <> 'Leerteil'),
  ZEICHNUNG CHAR(20)  DEFAULT 'Ohne Zeichnung'
)!
 
Enter command:
ALTER TABLE ARTIKEL ADD WERT NUMBER (5)!
 
Enter command:
CREATE INDEX ZEICHNUNG ON ARTIKEL (ZEICHNUNG, NUMMER)!
 
Enter command:
 
CREATE TABLE ST_LISTE
(
  BAUK     NUMBER(6),
  POSITION INTEGER,
  STUECK   NUMBER(6) CONSTRAINT ST_N_NULL NOT NULL,
  CONSTRAINT ST_N_BAUK CHECK (STUECK <> BAUK),
  CHECK (POSITION < 999),
  PRIMARY KEY (BAUK, POSITION),
  FOREIGN KEY (BAUK)   REFERENCES ARTIKEL (NUMMER),
  FOREIGN KEY (STUECK) REFERENCES ARTIKEL (NUMMER)
)!
 
Enter command:
ALTER TABLE ST_LISTE ADD ANZAHL NUMBER (5)!
 
Enter command:
 
CREATE UNIQUE INDEX VERWENDUNG ON ST_LISTE (STUECK, BAUK, POSITION)!
 
Enter command:
 
CREATE VIEW BAUK (BAUKNR, BAUKNAME,
                       POSNR, POSINR, POSINAME)
  AS SELECT KOPF.NUMMER, KOPF.NAME,
          POSITION, POSI.NUMMER, POSI.NAME
       FROM ARTIKEL KOPF, ST_LISTE, ARTIKEL POSI
       WHERE ST_LISTE.BAUK   = KOPF.NUMMER
         AND ST_LISTE.STUECK = POSI.NUMMER
  WITH CHECK OPTION!
 
Enter command:
 
 
 
 
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST SQLMODE ORACLE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (1, 'Kopfartikel')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (2, 'Posartikel 1')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (3, 'Posartikel 2')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER)       VALUES (4)!
 
Enter command:
UPDATE ARTIKEL SET WERT = 10 WHERE NUMMER=2!
 
resultcount :                     1
 
Enter command:
UPDATE ARTIKEL SET WERT = 20 WHERE NUMMER=3!
 
resultcount :                     1
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (5, 1, 1)!
 
***ERROR    -35 Referential integrity violated:ARTIKEL_ST_LISTE,KERN,ST_LI 0001
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 1, 1)!
 
***ERROR  -1402 Integrity violation:ST_N_BAUK,ST_LISTE,KERN                0001
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 1, 2)!
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 1, 3)!
 
***ERROR     -1 Duplicate key in index                                     0062
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (1, 2, 3)!
 
Enter command:
UPDATE ST_LISTE SET ANZAHL=1 WHERE BAUK=1 AND POSITION=1!
 
resultcount :                     1
 
Enter command:
UPDATE ST_LISTE SET ANZAHL=2 WHERE BAUK=1 AND POSITION=2!
 
resultcount :                     1
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (10, 'Kopf-Test1')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (11, 'Pos-Test1')!
 
Enter command:
INSERT INTO ARTIKEL (NUMMER, NAME) VALUES (12, 'Pos-Test2')!
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (10, 1, 11)!
 
Enter command:
INSERT INTO ST_LISTE (BAUK, POSITION, STUECK) VALUES (10, 2, 12)!
 
Enter command:
 
UPDATE ST_LISTE SET ANZAHL=2 WHERE BAUK=10 AND POSITION=1!
 
resultcount :                     1
 
Enter command:
COMMIT WORK!
 
Enter command:
DELETE FROM ARTIKEL     WHERE NUMMER = 2!
 
***ERROR    -35 Referential integrity violated:ARTIKEL_ST_LISTE1,KERN,ST_L 0001
 
Enter command:
DELETE FROM ST_LISTE WHERE STUECK = 2!
 
resultcount :                     1
 
Enter command:
DELETE FROM ARTIKEL     WHERE NUMMER = 2!
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE!
 
Enter command:
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
               'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
              (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      20
BAUK              :        1
POSITION          :                      2
STUECK            :        3
ANZAHL            :       2
 
resultcount :                     1
 
Enter command:
 
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          NOT IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
                   'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
                  (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :  ??????
BAUK              :       10
POSITION          :                      2
STUECK            :       12
ANZAHL            :  ??????
 
resultcount :                     1
 
Enter command:
 
CREATE VIEW TV AS
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
               'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
              (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
Enter command:
 
SELECT * FROM TV!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      20
BAUK              :        1
POSITION          :                      2
STUECK            :        3
ANZAHL            :       2
 
resultcount :                     1
 
Enter command:
DROP VIEW TV!
 
Enter command:
 
CREATE TABLE TT AS
SELECT * FROM ARTIKEL, ST_LISTE
  WHERE STUECK = NUMMER
    AND (NUMMER, 0, 'Kein NameKein Name')
          NOT IN ((3, DECODE (STUECK, 2, BAUK+1, BAUK-1),
                   'Kein Name' || SUBSTR ('Kein Name mehr frei', 1, 9)),
                  (4, SYSDATE-SYSDATE,       NAME||NAME))
    AND POSITION > 1!
 
Enter command:
 
SELECT * FROM TT!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, E, :F, :G, :H!
 
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :  ??????
BAUK              :       10
POSITION          :                      2
STUECK            :       12
ANZAHL            :  ??????
 
resultcount :                     1
 
Enter command:
DROP TABLE TT!
 
Enter command:
 
SELECT POSITION FROM ARTIKEL, ST_LISTE
WHERE NUMMER IN (SELECT BAUK FROM ST_LISTE)
  AND BAUK=NUMMER!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A!
 
POSITION
---------------------
                    1
                    2
                    1
                    2
 
resultcount :                     4
 
Enter command:
 
SELECT NUMMER, NAME, ZEICHNUNG, POSITION
  FROM ARTIKEL, ST_LISTE
  WHERE (NUMMER, POSITION)
           IN (SELECT BAUK, MAX (POSITION) FROM ST_LISTE GROUP BY BAUK)
    AND BAUK = NUMMER!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D!
 
NUMMER  | NAME                 | ZEICHNUNG            | POSITION
--------+----------------------+----------------------+----------------------
      1 | Kopfartikel          | Ohne Zeichnung       |                     2
     10 | Kopf-Test1           | Ohne Zeichnung       |                     2
 
resultcount :                     2
 
Enter command:
 
SELECT NAME, POSITION FROM ARTIKEL, ST_LISTE
  WHERE (NUMMER, POSITION)
           IN (SELECT BAUK, 2 FROM ST_LISTE WHERE BAUK = NUMMER)!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B!
 
NAME                 | POSITION
---------------------+----------------------
Kopfartikel          |                     2
Kopfartikel          |                     2
Kopf-Test1           |                     2
Kopf-Test1           |                     2
 
resultcount :                     4
 
Enter command:
 
SELECT NUMMER, NAME, ZEICHNUNG, POSITION FROM ARTIKEL, ST_LISTE
  WHERE BAUK = NUMMER
    AND (BAUK, POSITION)
           IN (SELECT NUMMER, 2 FROM ARTIKEL WHERE BAUK = NUMMER)!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D!
 
NUMMER  | NAME                 | ZEICHNUNG            | POSITION
--------+----------------------+----------------------+----------------------
      1 | Kopfartikel          | Ohne Zeichnung       |                     2
     10 | Kopf-Test1           | Ohne Zeichnung       |                     2
 
resultcount :                     2
 
Enter command:
 
UPDATE ARTIKEL SET WERT = 24 WHERE NUMMER = 4!
 
resultcount :                     1
 
Enter command:
 
UPDATE ARTIKEL SET WERT = 27
  WHERE (4, 'Kein Name', ZEICHNUNG)
    IN (SELECT NUMMER, NAME, ZEICHNUNG FROM ARTIKEL)!
 
resultcount :                     7
 
Enter command:
 
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST SQLMODE ORACLE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
 
 
UPDATE ARTIKEL SET WERT = NUMMER+20 WHERE WERT IS NULL!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
CREATE TABLE AUFTRAG
(
  AUFTNUM   NUMBER (6) PRIMARY KEY,
  KUNDE     CHAR (20),
  TERMIN    DATE
)!
 
Enter command:
INSERT INTO AUFTRAG VALUES (940001, 'Mueller', '16-MAY-94')!
 
Enter command:
INSERT INTO AUFTRAG VALUES (940002, 'Mayer',   '16-JUN-94')!
 
Enter command:
INSERT INTO AUFTRAG VALUES (940003, 'Schulze', '27-MAY-94')!
 
Enter command:
 
CREATE TABLE AUFTPOS
(
  AUFTNUM   NUMBER(6),
  AUFTPOS   NUMBER(4),
  ARTIKEL   NUMBER(6) NOT NULL,
  MENGE     NUMBER(5) DEFAULT 1,
  PRIMARY KEY (AUFTNUM, AUFTPOS),
  FOREIGN KEY (AUFTNUM) REFERENCES AUFTRAG (AUFTNUM),
  FOREIGN KEY (ARTIKEL) REFERENCES ARTIKEL (NUMMER)
)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0001, 000001, 10)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0002, 000002, 11)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0003, 000003, 12)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940001, 0004, 000004, 13)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940002, 0001, 000010, 1)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940002, 0002, 000011, 2)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940002, 0003, 000012, 3)!
 
Enter command:
INSERT INTO AUFTPOS VALUES (940003, 0001, 000001, 20)!
 
Enter command:
 
CREATE TABLE LAGERFACH
(
  LAGER   NUMBER(4),
  AUFTNUM NUMBER(6),
  AUFTPOS NUMBER(4),
  ARTIKEL NUMBER(6) NOT NULL,
  MENGE   NUMBER(5) NOT NULL,
  PRIMARY KEY (LAGER, ARTIKEL),
  FOREIGN KEY (AUFTNUM, AUFTPOS) REFERENCES AUFTPOS (AUFTNUM, AUFTPOS),
  FOREIGN KEY (ARTIKEL)          REFERENCES ARTIKEL (NUMMER)
)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0005, NULL,   NULL, 000010,  15)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0006, NULL,   NULL, 000011, 200)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0007, NULL,   NULL, 000012,  11)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0011, 940001, 0001, 000001,  10)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0021, 940003, 0001, 000001,  20)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0002, 940001, 0002, 000002,   5)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0003, 940001, 0003, 000003,   6)!
 
Enter command:
INSERT INTO LAGERFACH VALUES (0004, 940001, 0004, 000004,   7)!
 
Enter command:
 
COMMIT WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE!
 
Enter command:
 
SELECT AUFTRAG.AUFTNUM, NUMMER, MENGE, WERT
  FROM AUFTRAG, AUFTPOS, ARTIKEL
  WHERE AUFTRAG.AUFTNUM = AUFTPOS.AUFTNUM
    AND ARTIKEL.NUMMER  = AUFTPOS.ARTIKEL!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D!
 
AUFTNUM | NUMMER  | MENGE  | WERT
--------+---------+--------+-------
 940001 |       1 |     10 |     27
 940001 |       2 |     11 |     27
 940001 |       3 |     12 |     27
 940001 |       4 |     13 |     27
 940002 |      10 |      1 |     27
 940002 |      11 |      2 |     27
 940002 |      12 |      3 |     27
 940003 |       1 |     20 |     27
 
resultcount :                     8
 
Enter command:
 
SELECT AUFTRAG.AUFTNUM, SUM (MENGE*WERT)
  FROM AUFTRAG, AUFTPOS, ARTIKEL
  WHERE AUFTRAG.AUFTNUM = AUFTPOS.AUFTNUM
    AND ARTIKEL.NUMMER  = AUFTPOS.ARTIKEL
  GROUP BY AUFTRAG.AUFTNUM!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B!
 
AUFTNUM | EXPRESSION1
--------+---------------------------------------------
 940001 |  1.2420000000000000000000000000000000000E+03
 940002 |  1.6200000000000000000000000000000000000E+02
 940003 |  5.4000000000000000000000000000000000000E+02
 
resultcount :                     3
 
Enter command:
 
SELECT AUFTNUM, AUFTPOS, ARTIKEL, NAME, MENGE FROM AUFTPOS, ARTIKEL
  WHERE ARTIKEL = NUMMER
    AND (AUFTNUM, AUFTPOS, ARTIKEL)
          IN (SELECT AUFTNUM, AUFTPOS, ARTIKEL FROM LAGERFACH)
  ORDER BY AUFTNUM, AUFTPOS!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E!
 
AUFTNUM | AUFTPOS | ARTIKEL | NAME                 | MENGE
--------+---------+---------+----------------------+-------
 940001 |     1   |       1 | Kopfartikel          |     10
 940001 |     2   |       2 | Posartikel 1         |     11
 940001 |     3   |       3 | Posartikel 2         |     12
 940001 |     4   |       4 | Kein Name            |     13
 940003 |     1   |       1 | Kopfartikel          |     20
 
resultcount :                     5
 
Enter command:
 
SELECT AUFTNUM, AUFTPOS, ARTIKEL, NAME, MENGE FROM AUFTPOS, ARTIKEL
  WHERE ARTIKEL = NUMMER
    AND (AUFTNUM, AUFTPOS)
          IN (SELECT AUFTNUM, AUFTPOS FROM LAGERFACH
                WHERE ARTIKEL = NUMMER)
  ORDER BY AUFTNUM, AUFTPOS!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E!
 
AUFTNUM | AUFTPOS | ARTIKEL | NAME                 | MENGE
--------+---------+---------+----------------------+-------
 940001 |     1   |       1 | Kopfartikel          |     10
 940001 |     2   |       2 | Posartikel 1         |     11
 940001 |     3   |       3 | Posartikel 2         |     12
 940001 |     4   |       4 | Kein Name            |     13
 940003 |     1   |       1 | Kopfartikel          |     20
 
resultcount :                     5
 
Enter command:
 
SELECT AUFTNUM, AUFTPOS, ARTIKEL, NAME, MENGE FROM AUFTPOS, ARTIKEL
  WHERE ARTIKEL = NUMMER
    AND AUFTNUM IN (SELECT AUFTNUM FROM LAGERFACH
                      WHERE ARTIKEL = NUMMER
                        AND LAGERFACH.AUFTPOS = AUFTPOS.AUFTPOS)
  ORDER BY AUFTNUM, AUFTPOS!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E!
 
AUFTNUM | AUFTPOS | ARTIKEL | NAME                 | MENGE
--------+---------+---------+----------------------+-------
 940001 |     1   |       1 | Kopfartikel          |     10
 940001 |     2   |       2 | Posartikel 1         |     11
 940001 |     3   |       3 | Posartikel 2         |     12
 940001 |     4   |       4 | Kein Name            |     13
 940003 |     1   |       1 | Kopfartikel          |     20
 
resultcount :                     5
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST SQLMODE INTERNAL !
 
Enter command:
COMMIT !
 
Enter command:
DECLARE RES5B CURSOR FOR
  SELECT * FROM AUFTRAG AK, ARTIKEL A
    WHERE (AK.AUFTNUM, A.NUMMER) = ANY (SELECT AUFTNUM, ARTIKEL FROM AUFTPOS)!
 
resultcount :                     8
 
Enter command:
FETCH RES5B INTO :A, :B, :C, :D, :E, :F, :G !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, ARTIKEL A, AUFTPOS AP
  WHERE (AK.AUFTNUM, A.NUMMER) = ANY ((AP.AUFTNUM, AP.ARTIKEL))!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      10
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      2
ARTIKEL           :        2
MENGE             :      11
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      3
ARTIKEL           :        3
MENGE             :      12
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940001
AUFTPOS           :      4
ARTIKEL           :        4
MENGE             :      13
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940002
AUFTPOS           :      1
ARTIKEL           :       10
MENGE             :       1
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940002
AUFTPOS           :      2
ARTIKEL           :       11
MENGE             :       2
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940002
AUFTPOS           :      3
ARTIKEL           :       12
MENGE             :       3
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
AUFTNUM           :   940003
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      20
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, AUFTPOS AP, ARTIKEL A
  WHERE (AK.AUFTNUM, A.NUMMER) = ((AP.AUFTNUM, AP.ARTIKEL))!
 
resultcount :                     8
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E, :F, :G, :H, :I, :J, :K !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      10
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      2
ARTIKEL           :        2
MENGE             :      11
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      3
ARTIKEL           :        3
MENGE             :      12
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
AUFTNUM           :   940001
AUFTPOS           :      4
ARTIKEL           :        4
MENGE             :      13
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
AUFTNUM           :   940002
AUFTPOS           :      1
ARTIKEL           :       10
MENGE             :       1
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
AUFTNUM           :   940002
AUFTPOS           :      2
ARTIKEL           :       11
MENGE             :       2
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
AUFTNUM           :   940002
AUFTPOS           :      3
ARTIKEL           :       12
MENGE             :       3
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
AUFTNUM           :   940003
AUFTPOS           :      1
ARTIKEL           :        1
MENGE             :      20
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, ARTIKEL A
  WHERE (AK.AUFTNUM, A.NUMMER) = ANY (SELECT AUFTNUM, ARTIKEL FROM AUFTPOS)!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT AK.*, A.* FROM AUFTRAG AK, ARTIKEL A, AUFTPOS AP
  WHERE AK.AUFTNUM = AP.AUFTNUM
    AND A.NUMMER   = AP.ARTIKEL!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
SELECT * FROM AUFTRAG AK, ARTIKEL A
  WHERE AK.AUFTNUM IN (SELECT AP.AUFTNUM FROM AUFTPOS AP
                         WHERE A.NUMMER = AP.ARTIKEL)!
 
resultcount :                     8
 
Enter command:
FETCH !
 
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940003
KUNDE             :  Schulze
TERMIN            :  20940527000000000000
NUMMER            :        1
NAME              :  Kopfartikel
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        2
NAME              :  Posartikel 1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        3
NAME              :  Posartikel 2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940001
KUNDE             :  Mueller
TERMIN            :  20940516000000000000
NUMMER            :        4
NAME              :  Kein Name
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       10
NAME              :  Kopf-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       11
NAME              :  Pos-Test1
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
-----------------------------------------------
AUFTNUM           :   940002
KUNDE             :  Mayer
TERMIN            :  20940616000000000000
NUMMER            :       12
NAME              :  Pos-Test2
ZEICHNUNG         :  Ohne Zeichnung
WERT              :      27
 
resultcount :                     8
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
CONNECT KERN IDENTIFIED BY TEST!
 
Enter command:
CREATE TABLE TT1 (A1 CHAR(5), B1 CHAR(5))!
 
Enter command:
CREATE TABLE TT2 (A2 CHAR(5), B2 CHAR(5))!
 
Enter command:
INSERT INTO TT1 VALUES ('Hallo','Welt')!
 
Enter command:
INSERT INTO TT1 VALUES ('Wie','gehts')!
 
Enter command:
INSERT INTO TT2 VALUES ('Hallo','Du')!
 
Enter command:
SELECT * FROM TT1, TT2 WHERE (A1, B1) =  ((A2, 'Welt'))!
 
resultcount :                     1
 
Enter command:
SELECT * FROM TT1, TT2 WHERE A1='Hallo' AND (A1, B1) =  ((A2, 'Welt'))!
 
resultcount :                     1
 
Enter command:
SELECT * FROM TT1, TT2 WHERE (A1, B1) =  ((A2, 'Welt')) AND A1='Hallo'!
 
resultcount :                     1
 
Enter command:
SELECT * FROM TT1, TT2 WHERE (A1, B1) IN ((A2, 'Welt'))!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1    | B1    | A2    | B2
------+-------+-------+------
Hallo | Welt  | Hallo | Du
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
