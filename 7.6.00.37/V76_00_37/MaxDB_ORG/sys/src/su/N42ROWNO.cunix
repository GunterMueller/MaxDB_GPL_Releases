N42ROWNO.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( ROWNO FIXED(5) ) !
 
***ERROR  -7006 Reserved identifier not allowed                            0020
 
Enter command:
CREATE TABLE TAB1 ( SPALTE1 FIXED(5) KEY,
                    SPALTE2 CHAR(10) KEY,
                    SPALTE3 FIXED(5) ) !
 
Enter command:
CREATE TABLE TAB2 ( COL1 FIXED(5),
                    COL2 FIXED(5),
                    COL3 CHAR(10) ,
                    COL4 CHAR(10) ) !
 
Enter command:
INSERT TAB1 VALUES ( 1 , 'Hans' , 1 ) !
 
Enter command:
INSERT TAB1 VALUES ( 2 , 'Otto' , NULL ) !
 
Enter command:
INSERT TAB1 VALUES ( 2 , 'Hans' , 3 ) !
 
Enter command:
INSERT TAB1 VALUES ( 9 , 'Paul', 1  ) !
 
Enter command:
INSERT TAB1 VALUES ( 4 , 'Ilse', 1 ) !
 
Enter command:
INSERT TAB1 VALUES ( 9 , 'Ilse', NULL ) !
 
Enter command:
INSERT TAB2 VALUES ( NULL, NULL, NULL, NULL ) !
 
Enter command:
INSERT TAB2 VALUES ( 4 , 5, 'Hans' , 'Paul' ) !
 
Enter command:
INSERT TAB2 VALUES ( 1, 8 , 'Paul', 'ILse' ) !
 
Enter command:
INSERT TAB2 VALUES ( 3, 4, 'Hans' , 'Hans' ) !
 
Enter command:
INSERT TAB2 VALUES ( 3, 9 , 'Otto' , NULL ) !
 
Enter command:
INSERT TAB2 VALUES ( 1 , NULL , 'Karin', 'Paul' ) !
 
Enter command:
INSERT TAB2 VALUES ( 7, 1, 'Ilse', 'Hans' ) !
 
Enter command:
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
     9  | Ilse       | ??????
     9  | Paul       |      1
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
COL1   | COL2   | COL3       | COL4
-------+--------+------------+-----------
?????? | ?????? | ?????????? | ??????????
     4 |      5 | Hans       | Paul
     1 |      8 | Paul       | ILse
     3 |      4 | Hans       | Hans
     3 |      9 | Otto       | ??????????
     1 | ?????? | Karin      | Paul
     7 |      1 | Ilse       | Hans
 
resultcount :                     7
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <  5 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
 
resultcount :                     4
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <= 5 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
     9  | Ilse       | ??????
 
resultcount :                     5
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <  7 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
     9  | Ilse       | ??????
     9  | Paul       |      1
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <  9 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
     9  | Ilse       | ??????
     9  | Paul       |      1
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB1 WHERE ( ROWNO < 5 ) !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
 
resultcount :                     4
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < (5) !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB1 WHERE ( ROWNO ) < 5 !
 
resultcount :               unknown
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < +5 !
 
***ERROR  -3017 Invalid unsigned integer                                   0034
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 5.0 !
 
***ERROR  -3017 Invalid unsigned integer                                   0034
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <  1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <  0 !
 
***ERROR  -3016 Invalid numeric constant                                   0001
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < -5 !
 
***ERROR  -3017 Invalid unsigned integer                                   0034
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO =  5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0032
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO >  5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0032
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO <> 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0032
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO >= 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0032
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 5*3 !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0035
 
Enter command:
SELECT * FROM TAB1 WHERE 3 * ROWNO < 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0036
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ROWNO < 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0030
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ROWNO > 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0030
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ( ROWNO < 5 ) !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0032
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ( NOT ( ROWNO < 5 )) !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0038
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 5 OR SPALTE2 = 'Hans' !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0036
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 5 AND SPALTE2 = 'Hans' !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
 
resultcount :                     2
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 5 AND SPALTE2 = 'Karin' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 5 AND SPALTE2 = 'Paul' !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     9  | Paul       |      1
 
resultcount :                     1
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 3 AND SPALTE3 < 2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     4  | Ilse       |      1
 
resultcount :                     2
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE3 < 2 AND ROWNO < 3 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     4  | Ilse       |      1
 
resultcount :                     2
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE2 = 'Hans' OR ROWNO < 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0046
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO < 3 AND SPALTE3 < 2 OR SPALTE2 = 'Otto' !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0052
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNO<3 AND (SPALTE3 < 2 OR SPALTE2 = 'Otto')!
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Otto       | ??????
 
resultcount :                     2
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE2 > 'K' AND ROWNO<3 AND SPALTE3 < 2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     9  | Paul       |      1
 
resultcount :                     1
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ( SPALTE2 > 'K' AND ROWNO < 3 ) !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0050
 
Enter command:
SELECT * FROM TAB1 WHERE NOT ( SPALTE2 > 'K' ) AND ROWNO < 3 !
 
resultcount :               unknown
 
Enter command:
SELECT  * FROM  TAB1 WHERE ROWNO < 5 AND ROWNO < 3 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0042
 
Enter command:
SELECT DISTINCT SPALTE3 FROM TAB1
    WHERE ( ROWNO < 2 ) AND ( SPALTE1 > 0 )!
 
resultcount :                     1
 
Enter command:
FETCH !
 
SPALTE3
-------
     1
 
resultcount :                     1
 
Enter command:
 *************************************************************!
 
Enter command:
SELECT TAB1.SPALTE1, TAB1.SPALTE2, COL4 FROM TAB1, TAB2
    WHERE COL4 = SPALTE2 AND ROWNO <= 3 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | COL4
--------+------------+-----------
     9  | Paul       | Paul
     1  | Hans       | Hans
     2  | Hans       | Hans
 
resultcount :                     3
 
Enter command:
SELECT DISTINCT SPALTE2 , COL4 FROM TAB1 , TAB2
    WHERE COL4 =SPALTE2 AND ROWNO <= 3
    ORDER BY TAB1.SPALTE2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
SPALTE2    | COL4
-----------+-----------
Hans       | Hans
Paul       | Paul
 
resultcount :                     2
 
Enter command:
SELECT COL4, SPALTE2 FROM TAB1 , TAB2
    WHERE COL4 = SPALTE2 AND NOT ( ROWNO <= 3 ) !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0070
 
Enter command:
SELECT DISTINCT SPALTE3, COL3 FROM TAB1, TAB2
  WHERE SPALTE3 IS NULL AND COL3 IS NULL AND ROWNO < 3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
SPALTE3 | COL3
--------+-----------
??????  | ??????????
 
resultcount :                     1
 
Enter command:
 *************************************************************!
 
Enter command:
SELECT ROWNO FROM TAB1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
ROWNO
-----------
          1
          2
          3
          4
          5
          6
 
resultcount :                     6
 
Enter command:
SELECT 5 ROWNO FROM TAB1 !
 
***ERROR  -7006 Reserved identifier not allowed                            0010
 
Enter command:
SELECT ROWNO, SPALTE1 FROM TAB1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1
------------+--------
          1 |      1
          2 |      2
          3 |      2
          4 |      4
          5 |      9
          6 |      9
 
resultcount :                     6
 
Enter command:
SELECT ROWNO, SPALTE1 FROM TAB1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1
------------+--------
          1 |      1
          2 |      2
          3 |      2
          4 |      4
          5 |      9
          6 |      9
 
resultcount :                     6
 
Enter command:
SELECT ROWNO, SPALTE1, ROWNO FROM TAB1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1 | ROWNO
------------+---------+------------
          1 |      1  |           1
          2 |      2  |           2
          3 |      2  |           3
          4 |      4  |           4
          5 |      9  |           5
          6 |      9  |           6
 
resultcount :                     6
 
Enter command:
SELECT ROWNO, * FROM TAB1 WHERE ROWNO < 5 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1 | SPALTE2    | SPALTE3
------------+---------+------------+--------
          1 |      1  | Hans       |      1
          2 |      2  | Hans       |      3
          3 |      2  | Otto       | ??????
          4 |      4  | Ilse       |      1
 
resultcount :                     4
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT ROWNO, SPALTE2 FROM TAB1 WHERE ROWNO < 5 FOR REUSE!
 
resultcount :                     4
 
Enter command:
FETCH ERG1 !
 
ROWNO       | SPALTE2
------------+-----------
          1 | Hans
          2 | Hans
          3 | Otto
          4 | Ilse
 
resultcount :                     4
 
Enter command:
SELECT * FROM ERG1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
ROWNO       | SPALTE2
------------+-----------
          1 | Hans
          2 | Hans
          3 | Otto
          4 | Ilse
 
resultcount :                     4
 
Enter command:
SELECT * FROM ERG1 WHERE ROWNO < 2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
ROWNO       | SPALTE2
------------+-----------
          1 | Hans
 
resultcount :                     1
 
Enter command:
SELECT * FROM ERG1 ORDER BY 1 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0029
 
Enter command:
SELECT ROWNO, ERG2 ( SPALTE2 ) FROM TAB1 WHERE ROWNO < 5 !
 
***ERROR  -4023 Unknown function name                                      0015
 
Enter command:
 *************************************************************!
 
Enter command:
SELECT SUM ( SPALTE1 ) FROM TAB1 WHERE ROWNO < 4 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 5.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT SUM ( SPALTE1 ) FROM TAB1 WHERE ROWNO < 4 GROUP BY SPALTE2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.0000000000000000000000000000000000000E+00
 2.0000000000000000000000000000000000000E+00
 
resultcount :                     2
 
Enter command:
SELECT ROWNO, SPALTE2 FROM TAB1 WHERE ROWNO < 4 ORDER BY 1 DESC !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0058
 
Enter command:
SELECT ROWNO, SPALTE2 FROM TAB1 WHERE ROWNO < 4 ORDER BY ROWNO ASC !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0058
 
Enter command:
SELECT ROWNO, SPALTE2 FROM TAB1 WHERE ROWNO < 4 ORDER BY 2 ASC !
 
resultcount :                     3
 
Enter command:
FETCH !
 
ROWNO       | SPALTE2
------------+-----------
          1 | Hans
          2 | Hans
          3 | Otto
 
resultcount :                     3
 
Enter command:
SELECT SPALTE2, ROWNO FROM TAB1 WHERE ROWNO < 4 ORDER BY 2 ASC !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0058
 
Enter command:
SELECT ROWNO C, SPALTE1 FROM TAB1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
C           | SPALTE1
------------+--------
          1 |      1
          2 |      2
          3 |      2
          4 |      4
          5 |      9
          6 |      9
 
resultcount :                     6
 
Enter command:
SELECT SPALTE1, SUM (SPALTE3)  FROM TAB1
    WHERE ROWNO <4 GROUP BY SPALTE1 ORDER BY SPALTE1 ASC !
 
resultcount :                     2
 
Enter command:
FETCH !
 
SPALTE1 | EXPRESSION1
--------+---------------------------------------------
     1  |  1.0000000000000000000000000000000000000E+00
     2  |  3.0000000000000000000000000000000000000E+00
 
resultcount :                     2
 
Enter command:
SELECT SUM ( DISTINCT SPALTE1 ) , ROWNO FROM TAB1
    WHERE ROWNO < 2 GROUP BY SPALTE1 ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1                                  | ROWNO
---------------------------------------------+------------
 1.0000000000000000000000000000000000000E+00 |           1
 
resultcount :                     1
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE3 < ANY
    ( SELECT COL1 FROM TAB2 WHERE ROWNO < 3 ) !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     4  | Ilse       |      1
     9  | Paul       |      1
 
resultcount :                     4
 
Enter command:
SELECT * FROM TAB1 WHERE SPALTE3 < ANY ( SELECT ROWNO FROM TAB2 ) !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     4  | Ilse       |      1
     9  | Paul       |      1
 
resultcount :                     4
 
Enter command:
SELECT SUM ( SPALTE1 + COL1 ) , ROWNO FROM TAB1 , TAB2
    WHERE SPALTE2 = COL3 AND ROWNO < 4 GROUP BY COL1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1                                  | ROWNO
---------------------------------------------+------------
 4.0000000000000000000000000000000000000E+00 |           1
 1.1000000000000000000000000000000000000E+01 |           2
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM ( SPALTE1 ) FROM TAB1 GROUP BY SPALTE2
    HAVING ROWNO < 4 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0067
 
Enter command:
SELECT DISTINCT SPALTE2, TAB2.COL3 FROM TAB1, TAB2
    WHERE COL3 IS NOT NULL AND ROWNO < 6
    ORDER BY TAB1.SPALTE2 DESC, TAB2.COL3 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
SPALTE2    | COL3
-----------+-----------
Hans       | Hans
Hans       | Ilse
Hans       | Karin
Hans       | Otto
Hans       | Paul
 
resultcount :                     5
 
Enter command:
SELECT SPALTE3, ROWNO FROM TAB1 ORDER BY 2 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0042
 
Enter command:
SELECT ROWNO + 3 C FROM TAB1 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0018
 
Enter command:
SELECT  DISTINCT SUM ( DISTINCT SPALTE1 ),  SPALTE2,
    SUM ( DISTINCT TAB2.COL1 )
    FROM TAB1, TAB2 WHERE TAB1.SPALTE2 < TAB2.COL4 AND ( ROWNO <=5 )
    GROUP BY SPALTE2 ORDER BY SPALTE2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1       :   3.0000000000000000000000000000000000000E+00
SPALTE2           :  Hans
EXPRESSION2       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :   1.3000000000000000000000000000000000000E+01
SPALTE2           :  Ilse
EXPRESSION2       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+00
SPALTE2           :  Otto
EXPRESSION2       :   4.0000000000000000000000000000000000000E+00
 
resultcount :                     3
 
Enter command:
SELECT COUNT ( * ), ROWNO FROM TAB1 GROUP BY SPALTE3 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1 | ROWNO
------------+------------
          3 |           1
          1 |           2
          2 |           3
 
resultcount :                     3
 
Enter command:
SELECT COUNT ( SPALTE1 ), SUM ( SPALTE1 ) FROM TAB1 WHERE ROWNO <= 5
    GROUP BY SPALTE2 ORDER BY 1 DESC !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2
------------+---------------------------------------------
          2 |  3.0000000000000000000000000000000000000E+00
          2 |  1.3000000000000000000000000000000000000E+01
          1 |  2.0000000000000000000000000000000000000E+00
 
resultcount :                     3
 
Enter command:
SELECT TAB1.SPALTE1, REF.SPALTE3, TAB2.COL1 FROM TAB1, TAB1 REF, TAB2
    WHERE ( TAB1.SPALTE1 < REF.SPALTE3 AND ROWNO < 4 ) AND
    TAB1.SPALTE1 < TAB2.COL1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE3 | COL1
--------+---------+-------
     1  |      3  |      4
     1  |      3  |      3
     1  |      3  |      3
 
resultcount :                     3
 
Enter command:
 *************************************************************!
 
Enter command:
SELECT SPALTE1, ROWNO FROM TAB1!
 
resultcount :                     6
 
Enter command:
FETCH!
 
SPALTE1 | ROWNO
--------+------------
     1  |           1
     2  |           2
     2  |           3
     4  |           4
     9  |           5
     9  |           6
 
resultcount :                     6
 
Enter command:
SELECT DISTINCT SPALTE1, ROWNO FROM TAB1!
 
resultcount :                     6
 
Enter command:
FETCH!
 
SPALTE1 | ROWNO
--------+------------
     1  |           1
     2  |           2
     2  |           3
     4  |           4
     9  |           5
     9  |           6
 
resultcount :                     6
 
Enter command:
SELECT SPALTE1, ROWNO FROM TAB1 GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
SPALTE1 | ROWNO
--------+------------
     1  |           1
     2  |           2
     4  |           3
     9  |           4
 
resultcount :                     4
 
Enter command:
SELECT TAB1.SPALTE1, ROWNO FROM TAB1 T, TAB1 !
 
resultcount :                    36
 
Enter command:
FETCH!
 
SPALTE1 | ROWNO
--------+------------
     1  |           1
     2  |           2
     2  |           3
     4  |           4
     9  |           5
     9  |           6
     1  |           7
     2  |           8
     2  |           9
     4  |          10
     9  |          11
     9  |          12
     1  |          13
     2  |          14
     2  |          15
     4  |          16
     9  |          17
 
SPALTE1 | ROWNO
--------+------------
     9  |          18
     1  |          19
     2  |          20
     2  |          21
     4  |          22
     9  |          23
     9  |          24
     1  |          25
     2  |          26
     2  |          27
     4  |          28
     9  |          29
     9  |          30
     1  |          31
     2  |          32
     2  |          33
     4  |          34
 
SPALTE1 | ROWNO
--------+------------
     9  |          35
     9  |          36
 
resultcount :                    36
 
Enter command:
SELECT TAB1.SPALTE1, ROWNO,
       TAB1.SPALTE2, ROWNO
   FROM TAB1 T , TAB1 !
 
resultcount :                    36
 
Enter command:
FETCH!
 
SPALTE1 | ROWNO       | SPALTE2    | ROWNO
--------+-------------+------------+------------
     1  |           1 | Hans       |           1
     2  |           2 | Hans       |           2
     2  |           3 | Otto       |           3
     4  |           4 | Ilse       |           4
     9  |           5 | Ilse       |           5
     9  |           6 | Paul       |           6
     1  |           7 | Hans       |           7
     2  |           8 | Hans       |           8
     2  |           9 | Otto       |           9
     4  |          10 | Ilse       |          10
     9  |          11 | Ilse       |          11
     9  |          12 | Paul       |          12
     1  |          13 | Hans       |          13
     2  |          14 | Hans       |          14
     2  |          15 | Otto       |          15
     4  |          16 | Ilse       |          16
     9  |          17 | Ilse       |          17
 
SPALTE1 | ROWNO       | SPALTE2    | ROWNO
--------+-------------+------------+------------
     9  |          18 | Paul       |          18
     1  |          19 | Hans       |          19
     2  |          20 | Hans       |          20
     2  |          21 | Otto       |          21
     4  |          22 | Ilse       |          22
     9  |          23 | Ilse       |          23
     9  |          24 | Paul       |          24
     1  |          25 | Hans       |          25
     2  |          26 | Hans       |          26
     2  |          27 | Otto       |          27
     4  |          28 | Ilse       |          28
     9  |          29 | Ilse       |          29
     9  |          30 | Paul       |          30
     1  |          31 | Hans       |          31
     2  |          32 | Hans       |          32
     2  |          33 | Otto       |          33
     4  |          34 | Ilse       |          34
 
SPALTE1 | ROWNO       | SPALTE2    | ROWNO
--------+-------------+------------+------------
     9  |          35 | Ilse       |          35
     9  |          36 | Paul       |          36
 
resultcount :                    36
 
Enter command:
SELECT TAB1.SPALTE1, ROWNO FROM TAB1 T , TAB1 GROUP BY TAB1.SPALTE1!
 
resultcount :                     4
 
Enter command:
FETCH!
 
SPALTE1 | ROWNO
--------+------------
     1  |           1
     2  |           2
     4  |           3
     9  |           4
 
resultcount :                     4
 
Enter command:
SELECT SPALTE1, COL1 FROM TAB1, TAB2 !
 
resultcount :                    42
 
Enter command:
FETCH !
 
SPALTE1 | COL1
--------+-------
     1  | ??????
     1  |      4
     1  |      1
     1  |      3
     1  |      3
     1  |      1
     1  |      7
     2  | ??????
     2  |      4
     2  |      1
     2  |      3
     2  |      3
     2  |      1
     2  |      7
     2  | ??????
     2  |      4
     2  |      1
 
SPALTE1 | COL1
--------+-------
     2  |      3
     2  |      3
     2  |      1
     2  |      7
     4  | ??????
     4  |      4
     4  |      1
     4  |      3
     4  |      3
     4  |      1
     4  |      7
     9  | ??????
     9  |      4
     9  |      1
     9  |      3
     9  |      3
     9  |      1
 
SPALTE1 | COL1
--------+-------
     9  |      7
     9  | ??????
     9  |      4
     9  |      1
     9  |      3
     9  |      3
     9  |      1
     9  |      7
 
resultcount :                    42
 
Enter command:
SELECT ROWNO, SPALTE1, COL1 FROM TAB1, TAB2 !
 
resultcount :                    42
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
          1 |      1  | ??????
          2 |      1  |      4
          3 |      1  |      1
          4 |      1  |      3
          5 |      1  |      3
          6 |      1  |      1
          7 |      1  |      7
          8 |      2  | ??????
          9 |      2  |      4
         10 |      2  |      1
         11 |      2  |      3
         12 |      2  |      3
         13 |      2  |      1
         14 |      2  |      7
         15 |      2  | ??????
         16 |      2  |      4
         17 |      2  |      1
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
         18 |      2  |      3
         19 |      2  |      3
         20 |      2  |      1
         21 |      2  |      7
         22 |      4  | ??????
         23 |      4  |      4
         24 |      4  |      1
         25 |      4  |      3
         26 |      4  |      3
         27 |      4  |      1
         28 |      4  |      7
         29 |      9  | ??????
         30 |      9  |      4
         31 |      9  |      1
         32 |      9  |      3
         33 |      9  |      3
         34 |      9  |      1
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
         35 |      9  |      7
         36 |      9  | ??????
         37 |      9  |      4
         38 |      9  |      1
         39 |      9  |      3
         40 |      9  |      3
         41 |      9  |      1
         42 |      9  |      7
 
resultcount :                    42
 
Enter command:
SELECT DISTINCT ROWNO, SPALTE1, COL1 FROM TAB1, TAB2 !
 
resultcount :                    42
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
          1 |      1  | ??????
          2 |      1  |      4
          3 |      1  |      1
          4 |      1  |      3
          5 |      1  |      3
          6 |      1  |      1
          7 |      1  |      7
          8 |      2  | ??????
          9 |      2  |      4
         10 |      2  |      1
         11 |      2  |      3
         12 |      2  |      3
         13 |      2  |      1
         14 |      2  |      7
         15 |      2  | ??????
         16 |      2  |      4
         17 |      2  |      1
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
         18 |      2  |      3
         19 |      2  |      3
         20 |      2  |      1
         21 |      2  |      7
         22 |      4  | ??????
         23 |      4  |      4
         24 |      4  |      1
         25 |      4  |      3
         26 |      4  |      3
         27 |      4  |      1
         28 |      4  |      7
         29 |      9  | ??????
         30 |      9  |      4
         31 |      9  |      1
         32 |      9  |      3
         33 |      9  |      3
         34 |      9  |      1
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
         35 |      9  |      7
         36 |      9  | ??????
         37 |      9  |      4
         38 |      9  |      1
         39 |      9  |      3
         40 |      9  |      3
         41 |      9  |      1
         42 |      9  |      7
 
resultcount :                    42
 
Enter command:
SELECT DISTINCT ROWNO, SPALTE1, COL1 FROM TAB1, TAB2 WHERE SPALTE1=COL1!
 
resultcount :                     3
 
Enter command:
FETCH !
 
ROWNO       | SPALTE1 | COL1
------------+---------+-------
          1 |      4  |      4
          2 |      1  |      1
          3 |      1  |      1
 
resultcount :                     3
 
Enter command:
CREATE VIEW VIEWTAB1 AS SELECT * FROM TAB1 WHERE ROWNO < 5 !
 
***ERROR  -7019 Feature not allowed in view definition                     0050
 
Enter command:
CREATE VIEW VIEWTAB2 AS SELECT SPALTE1, ROWNO FROM TAB1 !
 
***ERROR  -7019 Feature not allowed in view definition                     0041
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE SAPR3 !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE SAPR3 ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNUM <= 5 !
 
resultcount :                     0
 
Enter command:
MFETCH INTO :A, :B, :C !
200
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
     2  | Otto       | ??????
     4  | Ilse       |      1
     9  | Ilse       | ??????
 
Enter command:
SELECT * FROM TAB1 WHERE ROWNUM <= 5 !
 
resultcount :                     0
 
Enter command:
MFETCH INTO :A, :B, :C !
2
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     1  | Hans       |      1
     2  | Hans       |      3
 
Enter command:
MFETCH INTO :A, :B, :C !
2
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     2  | Otto       | ??????
     4  | Ilse       |      1
 
Enter command:
MFETCH INTO :A, :B, :C !
2
 
SPALTE1 | SPALTE2    | SPALTE3
--------+------------+--------
     9  | Ilse       | ??????
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE TAB1 !
 
Enter command:
DROP TABLE TAB2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 * ROWNO AS LAST PREDICATE AND ROWNO TOGETHER WITH COUNT
 * RESULTED IN CRASHES, KB_STACK_TYPE_ILLEGAL, OR TOO MANY
 * RESULTS, BECAUSE IN COUNT_BD NO ROWNO WAS USED !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8) KEY, B CHAR (4))!
 
Enter command:
INSERT T VALUES ('aaa', 'aaa')!
 
Enter command:
INSERT T VALUES ('a1a', 'a1a')!
 
Enter command:
CREATE TABLE T1 (C CHAR (8) KEY, D FIXED (6))!
 
Enter command:
INSERT T1 VALUES ('aaa', 1)!
 
Enter command:
INSERT T1 VALUES ('bbb', 5)!
 
Enter command:
INSERT T1 VALUES ('ccc', 1)!
 
Enter command:
CREATE TABLE T2 ( E FIXED (6)) !
 
Enter command:
CREATE INDEX I2 ON T2 (E)!
 
Enter command:
INSERT T2 SET E = 1!
 
Enter command:
INSERT T2 SET E = 5!
 
Enter command:
SELECT COUNT(*) FROM T1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          3
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1 WHERE ROWNO <= 1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
C        | D
---------+--------
aaa      |       1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM T1 WHERE ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM T,T1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          6
 
resultcount :                     1
 
Enter command:
SELECT * FROM T,T1 WHERE ROWNO <= 1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B    | C        | D
---------+------+----------+--------
a1a      | a1a  | aaa      |       1
 
resultcount :                     1
 
Enter command:
CREATE VIEW V AS SELECT * FROM T,T1 !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     6
 
Enter command:
FETCH!
 
A        | B    | C        | D
---------+------+----------+--------
a1a      | a1a  | aaa      |       1
a1a      | a1a  | bbb      |       5
a1a      | a1a  | ccc      |       1
aaa      | aaa  | aaa      |       1
aaa      | aaa  | bbb      |       5
aaa      | aaa  | ccc      |       1
 
resultcount :                     6
 
Enter command:
SELECT * FROM V ORDER BY C, A !
 
resultcount :                     6
 
Enter command:
FETCH!
 
A        | B    | C        | D
---------+------+----------+--------
a1a      | a1a  | aaa      |       1
aaa      | aaa  | aaa      |       1
a1a      | a1a  | bbb      |       5
aaa      | aaa  | bbb      |       5
a1a      | a1a  | ccc      |       1
aaa      | aaa  | ccc      |       1
 
resultcount :                     6
 
Enter command:
SELECT COUNT(*) FROM V !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          6
 
resultcount :                     1
 
Enter command:
SELECT MAX(C) FROM V!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
ccc
 
resultcount :                     1
 
Enter command:
SELECT MAX(C) FROM V WHERE ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
aaa
 
resultcount :                     1
 
Enter command:
SELECT MAX(C) FROM V WHERE ROWNO <= 3!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
ccc
 
resultcount :                     1
 
Enter command:
SELECT * FROM V WHERE ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B    | C        | D
---------+------+----------+--------
a1a      | a1a  | aaa      |       1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM V WHERE ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM V WHERE B = 'aaa' AND ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*), C FROM V GROUP BY C !
 
resultcount :                     3
 
Enter command:
FETCH!
 
EXPRESSION1 | C
------------+---------
          2 | aaa
          2 | bbb
          2 | ccc
 
resultcount :                     3
 
Enter command:
SELECT COUNT(*), C FROM V WHERE ROWNO <= 1 GROUP BY C !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1 | C
------------+---------
          1 | aaa
 
resultcount :                     1
 
Enter command:
CREATE VIEW VV AS SELECT T.* FROM T,T TT WHERE T.A=TT.A!
 
Enter command:
SELECT * FROM VV !
 
resultcount :                     2
 
Enter command:
FETCH!
 
A        | B
---------+-----
a1a      | a1a
aaa      | aaa
 
resultcount :                     2
 
Enter command:
SELECT COUNT(*) FROM VV !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          2
 
resultcount :                     1
 
Enter command:
SELECT * FROM VV WHERE ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B
---------+-----
a1a      | a1a
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM VV WHERE ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM VV WHERE ROWNO <= 1 AND B = 'aaa' !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM VV WHERE B = 'aaa' AND ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM T,T1,T2
  WHERE A=C AND D=E !
 
Enter command:
COMMIT !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B    | C        | D       | E
---------+------+----------+---------+--------
aaa      | aaa  | aaa      |       1 |       1
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 'aaa' AND E = 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B    | C        | D       | E
---------+------+----------+---------+--------
aaa      | aaa  | aaa      |       1 |       1
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 'aaa' AND E = 1 AND ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B    | C        | D       | E
---------+------+----------+---------+--------
aaa      | aaa  | aaa      |       1 |       1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM V1 WHERE B = 'aaa' AND E = 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT(*) FROM V1 WHERE B = 'aaa' AND E = 1 AND ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
SELECT MAX(A) FROM V1 WHERE B = 'aaa' AND E = 1 AND ROWNO <= 1!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
aaa
 
resultcount :                     1
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
DROP TABLE T2!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 * PTS 1102326 !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE SAPR3 !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE SAPR3 ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE VBAP (MANDT CHAR (3), VBELN CHAR (10),
POSNR INTEGER, FAKSP CHAR (1), PRIMARY KEY (MANDT, VBELN,POSNR))!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 1, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 2, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 3, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 4, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 5, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 6, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 7, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000147', 9, 'y')!
 
Enter command:
INSERT INTO VBAP VALUES ('204', '0070000250', 1, 'y')!
 
Enter command:
ANALYZE TABLE VBAP STATISTICS !
 
Enter command:
CREATE TABLE VBUP (MANDT CHAR (3), VBELN CHAR (10),
POSNR INTEGER, FKSTA CHAR (1), FKSAA CHAR(1),
PRIMARY KEY (MANDT, VBELN,POSNR))!
 
Enter command:
INSERT INTO VBUP VALUES ('204', '0070000147', 2, 'y', 'y')!
 
Enter command:
INSERT INTO VBUP VALUES ('204', '0070000147', 3, 'y', 'y')!
 
Enter command:
INSERT INTO VBUP VALUES ('204', '0070000147', 4, 'y', 'y')!
 
Enter command:
INSERT INTO VBUP VALUES ('204', '0070000147', 5, 'y', 'y')!
 
Enter command:
INSERT INTO VBUP VALUES ('204', '0070000300', 1, 'y', 'y')!
 
Enter command:
DECLARE C CURSOR FOR
SELECT T1."MANDT", T1."VBELN", T1."POSNR", T1."FAKSP", T2."FKSTA",
    T2."FKSAA"
  FROM <"VBAP" T1, "VBUP" T2>
 WHERE T2."MANDT" = T1."MANDT" AND T2."VBELN" = T1."VBELN" AND
       T2."POSNR" = T1."POSNR" AND T2."FKSTA" <> 'C' AND
       T2."FKSAA" <> 'C' AND T1.MANDT = '204' AND
       T1.VBELN = '0070000147' !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B, :C, :D, :E, :F, :G, :H, :I !
 
MANDT | VBELN      | POSNR                 | FAKSP | FKSTA | FKSAA
------+------------+-----------------------+-------+-------+------
204   | 0070000147 |                     2 | y     | y     | y
204   | 0070000147 |                     3 | y     | y     | y
204   | 0070000147 |                     4 | y     | y     | y
204   | 0070000147 |                     5 | y     | y     | y
 
resultcount :                     4
 
Enter command:
 
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
DECLARE C CURSOR FOR
SELECT T1."MANDT", T1."VBELN", T1."POSNR", T1."FAKSP", T2."FKSTA",
    T2."FKSAA"
  FROM <"VBAP" T1, "VBUP" T2>
 WHERE T2."MANDT" = T1."MANDT" AND T2."VBELN" = T1."VBELN" AND
       T2."POSNR" = T1."POSNR" AND T2."FKSTA" <> 'C' AND
       T2."FKSAA" <> 'C'
       AND T1.MANDT = :Q AND T1.VBELN = :R AND ROWNUM <= 1 !
 
c 3 '204' c 10 '0070000147'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH C INTO :A, :B, :C, :D, :E, :F, :G, :H, :I!
 
MANDT | VBELN      | POSNR                 | FAKSP | FKSTA | FKSAA
------+------------+-----------------------+-------+-------+------
204   | 0070000147 |                     2 | y     | y     | y
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM SYSDD.TABLES WHERE ROWNO < 1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL WHERE ROWNO <= 1 !
 
resultcount :               unknown
 
Enter command:
 
CREATE TABLE TAB1 (
K00  INT, K01 INT, K02 INT, K03 INT, K04 INT, PRIMARY KEY(K00)) !
 
Enter command:
INSERT INTO TAB1 VALUES ( 1, 11, 111, 1111, 3 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 2, 22, 222, 2222, 3 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 3, 33, 333, 3333, 2 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 4, 44, 444, 4444, 2 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 5, 55, 555, 5555, 1 )!
 
Enter command:
INSERT INTO TAB1 VALUES ( 6, 66, 666, 6666, 1 )!
 
Enter command:
CREATE INDEX IND1 ON TAB1(K04) !
 
Enter command:
 
!* TEST FETCHING WITH PRIMARY KEYS
 
Enter command:
EXPLAIN SELECT /*+KEYACCESS*/ * FROM TAB1 WHERE ROWNO <= 8!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               |                    | TABLE SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+KEYACCESS*/ * FROM TAB1 WHERE ROWNO <= 8!
 
resultcount :               unknown
 
Enter command:
FETCH LAST!
 
K00               :            6
K01               :           66
K02               :          666
K03               :         6666
K04               :            1
 
Enter command:
FETCH1 PREV!
 
K00               :            5
K01               :           55
K02               :          555
K03               :         5555
K04               :            1
 
Enter command:
MFETCH LAST!
3
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          4 |          44 |         444 |        4444 |           2
          5 |          55 |         555 |        5555 |           1
          6 |          66 |         666 |        6666 |           1
 
Enter command:
FETCH1 PREV!
 
K00               :            3
K01               :           33
K02               :          333
K03               :         3333
K04               :            2
 
Enter command:
 
SELECT /*+KEYACCESS*/ * FROM TAB1 WHERE ROWNO <= 6!
 
resultcount :               unknown
 
Enter command:
FETCH LAST!
 
K00               :            6
K01               :           66
K02               :          666
K03               :         6666
K04               :            1
 
Enter command:
FETCH1 PREV!
 
K00               :            5
K01               :           55
K02               :          555
K03               :         5555
K04               :            1
 
Enter command:
MFETCH LAST!
8
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          1 |          11 |         111 |        1111 |           3
          2 |          22 |         222 |        2222 |           3
          3 |          33 |         333 |        3333 |           2
          4 |          44 |         444 |        4444 |           2
          5 |          55 |         555 |        5555 |           1
          6 |          66 |         666 |        6666 |           1
 
Enter command:
FETCH1 PREV!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
SELECT /*+KEYACCESS*/ * FROM TAB1 WHERE ROWNO <= 4!
 
resultcount :               unknown
 
Enter command:
FETCH1 ABSOLUTE -2!
 
K00               :            3
K01               :           33
K02               :          333
K03               :         3333
K04               :            2
 
Enter command:
FETCH LAST!
 
K00               :            4
K01               :           44
K02               :          444
K03               :         4444
K04               :            2
 
Enter command:
FETCH1 PREV!
 
K00               :            3
K01               :           33
K02               :          333
K03               :         3333
K04               :            2
 
Enter command:
MFETCH LAST!
3
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          2 |          22 |         222 |        2222 |           3
          3 |          33 |         333 |        3333 |           2
          4 |          44 |         444 |        4444 |           2
 
Enter command:
FETCH1 PREV!
 
K00               :            1
K01               :           11
K02               :          111
K03               :         1111
K04               :            3
 
Enter command:
 
!* TEST FETCHING WITH SECONDARY KEYS
 
Enter command:
EXPLAIN SELECT /*+INDEXACCESS*/ * FROM TAB1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               | IND1               | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS*/ * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          5 |          55 |         555 |        5555 |           1
          6 |          66 |         666 |        6666 |           1
          3 |          33 |         333 |        3333 |           2
          4 |          44 |         444 |        4444 |           2
          1 |          11 |         111 |        1111 |           3
          2 |          22 |         222 |        2222 |           3
 
resultcount :                     6
 
Enter command:
EXPLAIN SELECT /*+INDEXACCESS*/ * FROM TAB1 WHERE ROWNO <= 8!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               | IND1               | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS*/ * FROM TAB1 WHERE ROWNO <= 8!
 
resultcount :               unknown
 
Enter command:
MFETCH LAST!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          2 |          22 |         222 |        2222 |           3
 
Enter command:
MFETCH PREV!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          1 |          11 |         111 |        1111 |           3
 
Enter command:
MFETCH LAST!
3
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          4 |          44 |         444 |        4444 |           2
          1 |          11 |         111 |        1111 |           3
          2 |          22 |         222 |        2222 |           3
 
Enter command:
MFETCH PREV!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          3 |          33 |         333 |        3333 |           2
 
Enter command:
 
SELECT /*+INDEXACCESS*/ * FROM TAB1 WHERE ROWNO <= 6!
 
resultcount :               unknown
 
Enter command:
MFETCH LAST!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          2 |          22 |         222 |        2222 |           3
 
Enter command:
MFETCH PREV!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          1 |          11 |         111 |        1111 |           3
 
Enter command:
MFETCH LAST!
8
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          5 |          55 |         555 |        5555 |           1
          6 |          66 |         666 |        6666 |           1
          3 |          33 |         333 |        3333 |           2
          4 |          44 |         444 |        4444 |           2
          1 |          11 |         111 |        1111 |           3
          2 |          22 |         222 |        2222 |           3
 
Enter command:
MFETCH PREV!
1
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
SELECT /*+INDEXACCESS*/ * FROM TAB1 WHERE ROWNO <= 4!
 
resultcount :               unknown
 
Enter command:
MFETCH LAST!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          4 |          44 |         444 |        4444 |           2
 
Enter command:
MFETCH PREV!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          3 |          33 |         333 |        3333 |           2
 
Enter command:
MFETCH LAST!
3
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          6 |          66 |         666 |        6666 |           1
          3 |          33 |         333 |        3333 |           2
          4 |          44 |         444 |        4444 |           2
 
Enter command:
MFETCH PREV!
1
 
K00         | K01         | K02         | K03         | K04
------------+-------------+-------------+-------------+------------
          5 |          55 |         555 |        5555 |           1
 
Enter command:
 
!* TEST FETCHING WITH SECONDARY KEYS AND DISTINCT OPTIMIZATION
 
Enter command:
EXPLAIN SELECT /*+INDEXACCESS*/ DISTINCT K04 FROM TAB1 WHERE ROWNO <= 8!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               | IND1               | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    | DISTINCT OPTIMIZATION (C)                |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS*/ DISTINCT K04 FROM TAB1 WHERE ROWNO <= 8!
 
resultcount :               unknown
 
Enter command:
MFETCH LAST!
1
 
K04
-----------
          3
 
Enter command:
MFETCH PREV!
1
 
K04
-----------
          2
 
Enter command:
MFETCH LAST!
2
 
K04
-----------
          2
          3
 
Enter command:
MFETCH PREV!
1
 
K04
-----------
          1
 
Enter command:
 
SELECT /*+INDEXACCESS*/ DISTINCT K04 FROM TAB1 WHERE ROWNO <= 6!
 
resultcount :               unknown
 
Enter command:
MFETCH LAST!
1
 
K04
-----------
          3
 
Enter command:
MFETCH PREV!
1
 
K04
-----------
          2
 
Enter command:
MFETCH LAST!
3
 
K04
-----------
          1
          2
          3
 
Enter command:
MFETCH PREV!
1
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
SELECT /*+INDEXACCESS*/ DISTINCT K04 FROM TAB1 WHERE ROWNO <= 4!
 
resultcount :               unknown
 
Enter command:
MFETCH LAST!
1
 
K04
-----------
          3
 
Enter command:
MFETCH PREV!
1
 
K04
-----------
          2
 
Enter command:
MFETCH LAST!
2
 
K04
-----------
          2
          3
 
Enter command:
MFETCH PREV!
1
 
K04
-----------
          1
 
Enter command:
 
COMMIT !
 
Enter command:
 
CREATE TABLE T1( C1 INT )!
 
Enter command:
INSERT INTO T1 VALUES( NULL )!
 
Enter command:
INSERT INTO T1 VALUES( 1 )!
 
Enter command:
INSERT INTO T1 VALUES( 1 )!
 
Enter command:
INSERT INTO T1 VALUES( 10 )!
 
Enter command:
INSERT INTO T1 VALUES( 10 )!
 
Enter command:
 
SELECT COUNT(*) INTO :A FROM T1 WHERE ROWNO <= 3!
 
EXPRESSION1       :            3
 
Enter command:
SELECT COUNT(*) FROM T1 WHERE ROWNO <= 3!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          3
 
resultcount :                     1
 
Enter command:
SELECT COUNT(C1) INTO :A FROM T1 WHERE ROWNO <= 3!
 
EXPRESSION1       :            2
 
Enter command:
SELECT COUNT(C1) FROM T1 WHERE ROWNO <= 3!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          2
 
resultcount :                     1
 
Enter command:
SELECT AVG(C1) INTO :A FROM T1 WHERE ROWNO <= 3!
 
EXPRESSION1       :   1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT AVG(C1) FROM T1 WHERE ROWNO <= 3!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT C1 INTO :A FROM T1 WHERE ROWNO <= 3 !
 
***ERROR  -7015 More than one result row not allowed                       0001
 
Enter command:
SELECT C1 INTO :A FROM T1 WHERE ROWNO <= 1 !
 
C1                :  ???????????
 
Enter command:
 
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A INT, B CHAR (8))!
 
Enter command:
INSERT T VALUES (  1, 'aaa')!
 
Enter command:
INSERT T VALUES (  2, 'aaa')!
 
Enter command:
INSERT T VALUES (  3, 'aaa')!
 
Enter command:
INSERT T VALUES (  4, 'bbb')!
 
Enter command:
INSERT T VALUES (  5, 'bbb')!
 
Enter command:
INSERT T VALUES (  6, 'aaa')!
 
Enter command:
INSERT T VALUES (  7, 'aaa')!
 
Enter command:
INSERT T VALUES (  8, 'aaa')!
 
Enter command:
INSERT T VALUES (  9, 'aaa')!
 
Enter command:
INSERT T VALUES ( 10, 'aaa')!
 
Enter command:
INSERT T VALUES ( 11, 'aaa')!
 
Enter command:
INSERT T VALUES ( 12, 'aaa')!
 
Enter command:
COMMIT !
 
Enter command:
SELECT COUNT (*) INTO :A FROM T !
 
EXPRESSION1       :           12
 
Enter command:
DELETE T WHERE ROWNO <= 8 !
 
resultcount :                     8
 
Enter command:
SELECT COUNT (*) INTO :A FROM T !
 
EXPRESSION1       :            4
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A           | B
------------+---------
          9 | aaa
         10 | aaa
         11 | aaa
         12 | aaa
 
resultcount :                     4
 
Enter command:
ROLLBACK !
 
Enter command:
UPDATE T SET B = 'neu' WHERE B = 'aaa' AND ROWNO < 6 !
 
resultcount :                     5
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A           | B
------------+---------
          1 | neu
          2 | neu
          3 | neu
          4 | bbb
          5 | bbb
          6 | neu
          7 | neu
          8 | aaa
          9 | aaa
         10 | aaa
         11 | aaa
         12 | aaa
 
resultcount :                    12
 
Enter command:
ROLLBACK !
 
Enter command:
 
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A           | B
------------+---------
          1 | aaa
          2 | aaa
          3 | aaa
          4 | bbb
          5 | bbb
          6 | aaa
          7 | aaa
          8 | aaa
          9 | aaa
         10 | aaa
         11 | aaa
         12 | aaa
 
resultcount :                    12
 
Enter command:
CREATE TABLE TEMP.T1 AS SELECT * FROM T !
 
Enter command:
SELECT * FROM T WHERE B = (SELECT B FROM TEMP.T1
                            WHERE B = 'aaa' AND T.A = TEMP.T1.A)
                  AND ROWNO < 6 !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A           | B
------------+---------
          1 | aaa
          2 | aaa
          3 | aaa
          6 | aaa
          7 | aaa
 
resultcount :                     5
 
Enter command:
UPDATE T SET B = 'neu' WHERE B = (SELECT B FROM TEMP.T1
                                   WHERE B = 'aaa' AND T.A = TEMP.T1.A)
                         AND ROWNO < 6 !
 
resultcount :                     5
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A           | B
------------+---------
          1 | neu
          2 | neu
          3 | neu
          4 | bbb
          5 | bbb
          6 | neu
          7 | neu
          8 | aaa
          9 | aaa
         10 | aaa
         11 | aaa
         12 | aaa
 
resultcount :                    12
 
Enter command:
DROP TABLE T!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE SMODILOG
(
 "OBJ_TYPE"               VARCHAR (4) ,
 "OBJ_NAME"               VARCHAR (40) ,
 "SUB_TYPE"               VARCHAR (4) ,
 "SUB_NAME"               VARCHAR (120) ,
 "INT_TYPE"               VARCHAR (4) ,
 "INT_NAME"               VARCHAR (40) ,
 "OPERATION"               VARCHAR (4) ,
 "MAIN_PROG"               VARCHAR (40) ,
 "INCLUDE"               VARCHAR (40) ,
 "MOD_NAME"               VARCHAR (40) ,
 "MOD_LANGU"               VARCHAR (1) ,
 "MOD_USER"               VARCHAR (12) ,
 "MOD_DATE"               VARCHAR (8),
 "MOD_TIME"               VARCHAR (6) ,
 "ACTIVE"               VARCHAR (1) ,
 "INACTIVE"               VARCHAR (1) ,
 "UPGRADE"               VARCHAR (1) ,
 "PRE_CORR"               VARCHAR (1) ,
 "PROT_ONLY"               VARCHAR (1) ,
 "UPG_MODE"               VARCHAR (1) ,
 "MARK"               VARCHAR (1) ,
 "SPAU"               VARCHAR (1) ,
 "TRKORR"               VARCHAR (20) ,
 "SPAU_CODE"               VARCHAR (1) ,
 PRIMARY KEY ("OBJ_TYPE", "OBJ_NAME", "SUB_TYPE", "SUB_NAME",
 "INT_TYPE", "INT_NAME", "OPERATION"))!
 
Enter command:
PARSING !
 
Enter command:
SELECT
  "OBJ_TYPE" , "OBJ_NAME" , "MAIN_PROG" , "UPGRADE" , "PROT_ONLY" ,
  "INACTIVE" , "UPG_MODE" , "SPAU" , "SPAU_CODE" , "ACTIVE" , "SUB_TYPE" ,
  "SUB_NAME" , "MOD_LANGU" , "MOD_USER" , "MOD_DATE" , "MOD_TIME" , "TRKORR" ,
  "MARK"
FROM
  "SMODILOG"
WHERE
  "INT_TYPE" <> ? AND NOT "OPERATION" IN ( ? , ? ) AND "PROT_ONLY" = ? AND (
  "UPGRADE" = ? OR "UPGRADE" = ? AND "ACTIVE" = ? ) AND "SPAU" = ? AND
  "INACTIVE" = ? AND ROWNUM <= ?
!
parsing idnr :       1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8), B INT, PRIMARY KEY (A,B))!
 
Enter command:
INSERT T VALUES ('abc',1)!
 
Enter command:
INSERT T VALUES ('def',1)!
 
Enter command:
INSERT T VALUES ('ghi',1)!
 
Enter command:
INSERT T VALUES ('jkl',1)!
 
Enter command:
INSERT T VALUES ('mno',1)!
 
Enter command:
INSERT T VALUES ('pqr',1)!
 
Enter command:
INSERT T VALUES ('stu',1)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T
WHERE ROWNO <= ?
ORDER BY A,B !
 
n 10 3
 
resultcount :               unknown
 
Enter command:
MFETCH INTO :A, :B !
30000
 
A        | B
---------+------------
abc      |           1
def      |           1
ghi      |           1
 
Enter command:
 
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "/BIC/TCSN_COMP"
(
"/BIC/CSN_COMP" VARCHAR (30) ASCII    NOT NULL    DEFAULT ' ',
"LANGU" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
"TXTSH" VARCHAR (20) ASCII    NOT NULL    DEFAULT ' ',
"TXTMD" VARCHAR (40) ASCII    NOT NULL    DEFAULT ' ',
"TXTLG" VARCHAR (60) ASCII    NOT NULL    DEFAULT ' ',
PRIMARY KEY ("/BIC/CSN_COMP", "LANGU")
)!
 
Enter command:
 
CREATE TABLE "/BIC/PCSN_COMP"
(
"/BIC/CSN_COMP"  VARCHAR (30) ASCII    NOT NULL    DEFAULT ' ',
"OBJVERS"        VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
"CHANGED"        VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/CSN_GROUP"   VARCHAR (10) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/CSN_RESP"   VARCHAR (12) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/DEV_FKTR"   FIXED (17,3)    NOT NULL    DEFAULT 0.000,
"/BIC/SERVICE"   VARCHAR (3) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/THEMKEXT"   VARCHAR (20) ASCII    NOT NULL    DEFAULT ' ',
PRIMARY KEY ("/BIC/CSN_COMP", "OBJVERS")
)!
 
Enter command:
 
CREATE VIEW "/BI0/0300000617" AS
SELECT /*+ SHORT_SUM_VALUES */
 "P"."/BIC/CSN_COMP",
 "P"."/BIC/CSN_GROUP",
 "T"."TXTSH",
 "T"."TXTMD",
 "T"."TXTLG"
FROM
 "/BIC/PCSN_COMP" "P",
 "/BIC/TCSN_COMP" "T"
WHERE
 "P"."/BIC/CSN_COMP" = "T"."/BIC/CSN_COMP"(+) AND
 "P"."OBJVERS" = 'A' AND
 "T"."LANGU"(+) = 'E' !
 
Enter command:
 
COMMIT !
 
Enter command:
 
PARSING !
 
Enter command:
 
SELECT * FROM "/BI0/0300000617" WHERE ROWNO <= ? !
parsing idnr :       1
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
Enter command:
 
 
PARS_EXECUTE!
 
Enter command:
 
ROLLBACK WORK RELEASE !
 
Enter command:
 
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE "TBLTEST_ASSETS"
(
"REC_ID" FIXED (15,0) NOT NULL,
"INVENTORY_NO" VARCHAR (50) ASCII,
"IMPORT_OP_ID" INTEGER,
PRIMARY KEY ("REC_ID")
)!
 
Enter command:
 
CREATE TABLE "TBLTEST_OPERATIONS"
(
"REC_ID" FIXED (15,0) NOT NULL,
"OPERATION_ID" INTEGER,
"OPERATION_TYPE" VARCHAR (50) ASCII,
PRIMARY KEY ("REC_ID")
)!
 
Enter command:
 
INSERT INTO "TBLTEST_OPERATIONS" VALUES(1,1,'Import')!
 
Enter command:
INSERT INTO "TBLTEST_OPERATIONS" VALUES(2,2,'Acceptation')!
 
Enter command:
 
INSERT INTO "TBLTEST_ASSETS" VALUES(1,'A0001',NULL)!
 
Enter command:
INSERT INTO "TBLTEST_ASSETS" VALUES(2,'A0002',1)!
 
Enter command:
INSERT INTO "TBLTEST_ASSETS" VALUES(3,'A0003',2)!
 
Enter command:
 
SELECT A.REC_ID, A.INVENTORY_NO, OP_I.OPERATION_TYPE AS I_OP_TYPE
FROM TBLTEST_ASSETS A, TBLTEST_OPERATIONS OP_I
WHERE OP_I.OPERATION_ID(+)=A.IMPORT_OP_ID
AND ROWNO <= 2!
 
resultcount :                     2
 
Enter command:
FETCH !
 
REC_ID            :                 1
INVENTORY_NO      :  A0001
I_OP_TYPE         :  ?????
-----------------------------------------------------------------------
REC_ID            :                 2
INVENTORY_NO      :  A0002
I_OP_TYPE         :  Import
 
resultcount :                     2
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8), B INT)!
 
Enter command:
INSERT T VALUES ('ccc', 3)!
 
Enter command:
INSERT T VALUES ('aaa', 1)!
 
Enter command:
INSERT T VALUES ('ddd', 4)!
 
Enter command:
INSERT T VALUES ('fff', 6)!
 
Enter command:
INSERT T VALUES ('bbb', 2)!
 
Enter command:
INSERT T VALUES ('ggg', 7)!
 
Enter command:
INSERT T VALUES ('eee', 5)!
 
Enter command:
CREATE TABLE T1 (A1, B1) AS SELECT * FROM T !
 
Enter command:
FILE LIMIT !
 
Enter command:
 !
 
***ERROR  -3005 Invalid SQL statement                                      0001
 
Enter command:
SELECT * FROM T WHERE ROWNO <= 5 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
FETCH1 LAST!
 
A                 :  bbb
B                 :            2
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
SELECT * FROM T,T1 WHERE A = A1 AND ROWNO <= 5 !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
FETCH1 LAST!
 
A                 :  bbb
B                 :            2
A1                :  bbb
B1                :            2
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
A1                :  ddd
B1                :            4
 
Enter command:
SELECT * FROM T WHERE ROWNO <= 5 ORDER BY B !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
fff      |           6
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
fff      |           6
 
Enter command:
FETCH1 LAST!
 
A                 :  fff
B                 :            6
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ccc
B                 :            3
 
Enter command:
SELECT MAX(A), B FROM T WHERE ROWNO <= 5 GROUP BY B !
 
resultcount :                     5
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
fff         |           6
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
fff         |           6
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
WHERE ROWNO <= 5
GROUP BY A !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 1.5000000000000000000000000000000000000E+01 | fff         | ccc
 
resultcount :                     1
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX WHERE ROWNO <= 3 ORDER BY PX_A !
 
resultcount :                     3
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
bbb      |           2
ddd      |           4
fff      |           6
 
resultcount :                     3
 
Enter command:
SELECT * FROM T T1
 WHERE ROWNO <= 5
   AND B = ANY (SELECT B FROM T
                 WHERE T1.A = T.A)!
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
SELECT DISTINCT B MOD 4 FROM T
  WHERE ROWNO <= 3 ORDER BY 1 !
 
resultcount :                     3
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
          1
          3
 
resultcount :                     3
 
Enter command:
SELECT TOP 5 * FROM T WHERE ROWNO <= 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0029
 
Enter command:
SELECT TOP 1 * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DECLARE C CURSOR FOR SELECT TOP 1 * FROM T FOR REUSE !
 
resultcount :                     1
 
Enter command:
FETCH C!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
SELECT TOP 5 * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
SELECT TOP 5 * FROM T ORDER BY B !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
Enter command:
MFETCH FIRST !
5
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
Enter command:
MFETCH !
5
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT TOP 5 * FROM T,T1 WHERE A = A1 ORDER BY B !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
aaa      |           1 | aaa      |           1
bbb      |           2 | bbb      |           2
ccc      |           3 | ccc      |           3
ddd      |           4 | ddd      |           4
eee      |           5 | eee      |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
aaa      |           1 | aaa      |           1
bbb      |           2 | bbb      |           2
ccc      |           3 | ccc      |           3
ddd      |           4 | ddd      |           4
eee      |           5 | eee      |           5
 
Enter command:
SELECT TOP 5 MAX(A), B FROM T GROUP BY B !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
Enter command:
SELECT TOP 5 SUM(B), MAX(A1), A FROM T,T1
GROUP BY A !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 7.0000000000000000000000000000000000000E+00 | ggg         | aaa
 1.4000000000000000000000000000000000000E+01 | ggg         | bbb
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
SELECT TOP 5 * FROM T UNION ALL SELECT * FROM T1 !
 
resultcount :                    12
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
SELECT TOP 5 * FROM T UNION ALL SELECT * FROM T1 ORDER BY 1 !
 
resultcount :                    14
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT TOP 3 *
FROM PX ORDER BY PX_A !
 
resultcount :                     5
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
 
resultcount :                     3
 
Enter command:
SELECT TOP 5 * FROM T T1
 WHERE B = ANY (SELECT B FROM T
                 WHERE T1.A = T.A)!
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
SELECT DISTINCT TOP 3 B MOD 4 FROM T
  ORDER BY 1 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
          1
          2
 
resultcount :                     3
 
Enter command:
SELECT * FROM T WHERE ROWNO <= 5 LIMIT 5 !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0034
 
Enter command:
SELECT * FROM T LIMIT 1!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T FOR REUSE LIMIT 1 !
 
resultcount :                     1
 
Enter command:
FETCH C!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
MFETCH POS (1) !
3
 
A        | B
---------+------------
ccc      |           3
 
Enter command:
SELECT * FROM T LIMIT 5 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
A                 :  bbb
B                 :            2
 
Enter command:
FETCH1 PREV !
 
A                 :  fff
B                 :            6
 
Enter command:
FETCH1 PREV !
 
A                 :  ddd
B                 :            4
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
SELECT * FROM T ORDER BY B LIMIT 5 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
Enter command:
SELECT MAX(A), B FROM T GROUP BY B LIMIT 5 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
GROUP BY A LIMIT 5 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 7.0000000000000000000000000000000000000E+00 | ggg         | aaa
 1.4000000000000000000000000000000000000E+01 | ggg         | bbb
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
GROUP BY A LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
SELECT * FROM T LIMIT 2 3 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH FIRST !
 
A                 :  ddd
B                 :            4
 
Enter command:
FETCH !
 
A        | B
---------+------------
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
SELECT * FROM T UNION ALL SELECT * FROM T1 LIMIT 5 !
 
resultcount :                    12
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
SELECT * FROM T UNION ALL SELECT * FROM T1 ORDER BY 1 LIMIT 5 !
 
resultcount :                    14
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
SELECT * FROM T,T1 WHERE A = A1 LIMIT 2 3 !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH FIRST !
3
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH !
3
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T ORDER BY B LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH FIRST !
 
A                 :  ccc
B                 :            3
 
Enter command:
FETCH !
 
A        | B
---------+------------
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ccc
B                 :            3
 
Enter command:
SELECT MAX(A), B FROM T GROUP BY B LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX ORDER BY PX_A LIMIT 4 !
 
resultcount :                     5
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
 
resultcount :                     4
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX ORDER BY PX_A LIMIT 1 3 !
 
resultcount :                     5
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
bbb      |           2
ccc      |           3
ddd      |           4
 
resultcount :                     4
 
Enter command:
SELECT * FROM T T1
 WHERE B = ANY (SELECT B FROM T
                 WHERE T1.A = T.A)
 ORDER BY A LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
SELECT DISTINCT B MOD 4 FROM T
  ORDER BY 1 LIMIT 3 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
          1
          2
 
resultcount :                     3
 
Enter command:
 
PARS_EXECUTE !
 
Enter command:
FILE LIMIT ( PARS_THEN_EX !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM T WHERE ROWNO <= 5 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
FETCH1 LAST!
 
A                 :  bbb
B                 :            2
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
SELECT * FROM T,T1 WHERE A = A1 AND ROWNO <= 5 !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
FETCH1 LAST!
 
A                 :  bbb
B                 :            2
A1                :  bbb
B1                :            2
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
A1                :  ddd
B1                :            4
 
Enter command:
SELECT * FROM T WHERE ROWNO <= 5 ORDER BY B !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
fff      |           6
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
fff      |           6
 
Enter command:
FETCH1 LAST!
 
A                 :  fff
B                 :            6
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ccc
B                 :            3
 
Enter command:
SELECT MAX(A), B FROM T WHERE ROWNO <= 5 GROUP BY B !
 
resultcount :                     5
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
fff         |           6
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
fff         |           6
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
WHERE ROWNO <= 5
GROUP BY A !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 1.5000000000000000000000000000000000000E+01 | fff         | ccc
 
resultcount :                     1
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX WHERE ROWNO <= 3 ORDER BY PX_A !
 
resultcount :                     3
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
bbb      |           2
ddd      |           4
fff      |           6
 
resultcount :                     3
 
Enter command:
SELECT * FROM T T1
 WHERE ROWNO <= 5
   AND B = ANY (SELECT B FROM T
                 WHERE T1.A = T.A)!
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
SELECT DISTINCT B MOD 4 FROM T
  WHERE ROWNO <= 3 ORDER BY 1 !
 
resultcount :                     3
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
          1
          3
 
resultcount :                     3
 
Enter command:
SELECT TOP 5 * FROM T WHERE ROWNO <= 5 !
 
***ERROR  -7036 ROWNO specification not allowed in this context            0029
 
Enter command:
SELECT TOP 1 * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DECLARE C CURSOR FOR SELECT TOP 1 * FROM T FOR REUSE !
 
resultcount :                     1
 
Enter command:
FETCH C!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
SELECT TOP 5 * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
SELECT TOP 5 * FROM T ORDER BY B !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
Enter command:
MFETCH FIRST !
5
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
Enter command:
MFETCH !
5
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT TOP 5 * FROM T,T1 WHERE A = A1 ORDER BY B !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
aaa      |           1 | aaa      |           1
bbb      |           2 | bbb      |           2
ccc      |           3 | ccc      |           3
ddd      |           4 | ddd      |           4
eee      |           5 | eee      |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
aaa      |           1 | aaa      |           1
bbb      |           2 | bbb      |           2
ccc      |           3 | ccc      |           3
ddd      |           4 | ddd      |           4
eee      |           5 | eee      |           5
 
Enter command:
SELECT TOP 5 MAX(A), B FROM T GROUP BY B !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
Enter command:
SELECT TOP 5 SUM(B), MAX(A1), A FROM T,T1
GROUP BY A !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 7.0000000000000000000000000000000000000E+00 | ggg         | aaa
 1.4000000000000000000000000000000000000E+01 | ggg         | bbb
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
SELECT TOP 5 * FROM T UNION ALL SELECT * FROM T1 !
 
resultcount :                    12
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
SELECT TOP 5 * FROM T UNION ALL SELECT * FROM T1 ORDER BY 1 !
 
resultcount :                    14
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT TOP 3 *
FROM PX ORDER BY PX_A !
 
resultcount :                     5
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
 
resultcount :                     3
 
Enter command:
SELECT TOP 5 * FROM T T1
 WHERE B = ANY (SELECT B FROM T
                 WHERE T1.A = T.A)!
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
SELECT DISTINCT TOP 3 B MOD 4 FROM T
  ORDER BY 1 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
          1
          2
 
resultcount :                     3
 
Enter command:
SELECT * FROM T WHERE ROWNO <= 5 LIMIT 5 !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0034
 
Enter command:
SELECT * FROM T LIMIT 1!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T FOR REUSE LIMIT 1 !
 
resultcount :                     1
 
Enter command:
FETCH C!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
MFETCH POS (1) !
3
 
A        | B
---------+------------
ccc      |           3
 
Enter command:
SELECT * FROM T LIMIT 5 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
A                 :  bbb
B                 :            2
 
Enter command:
FETCH1 PREV !
 
A                 :  fff
B                 :            6
 
Enter command:
FETCH1 PREV !
 
A                 :  ddd
B                 :            4
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
SELECT * FROM T ORDER BY B LIMIT 5 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
Enter command:
SELECT MAX(A), B FROM T GROUP BY B LIMIT 5 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
GROUP BY A LIMIT 5 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 7.0000000000000000000000000000000000000E+00 | ggg         | aaa
 1.4000000000000000000000000000000000000E+01 | ggg         | bbb
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
GROUP BY A LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
SELECT * FROM T LIMIT 2 3 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | B
---------+------------
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH FIRST !
 
A                 :  ddd
B                 :            4
 
Enter command:
FETCH !
 
A        | B
---------+------------
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
SELECT * FROM T UNION ALL SELECT * FROM T1 LIMIT 5 !
 
resultcount :                    12
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
SELECT * FROM T UNION ALL SELECT * FROM T1 ORDER BY 1 LIMIT 5 !
 
resultcount :                    14
 
Enter command:
FETCH !
 
A        | B
---------+------------
aaa      |           1
aaa      |           1
bbb      |           2
bbb      |           2
ccc      |           3
 
resultcount :                     5
 
Enter command:
SELECT * FROM T,T1 WHERE A = A1 LIMIT 2 3 !
 
resultcount :                     5
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH FIRST !
3
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH !
3
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T ORDER BY B LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH FIRST !
 
A                 :  ccc
B                 :            3
 
Enter command:
FETCH !
 
A        | B
---------+------------
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ccc
B                 :            3
 
Enter command:
SELECT MAX(A), B FROM T GROUP BY B LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX ORDER BY PX_A LIMIT 4 !
 
resultcount :                     5
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
 
resultcount :                     4
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX ORDER BY PX_A LIMIT 1 3 !
 
resultcount :                     5
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
bbb      |           2
ccc      |           3
ddd      |           4
 
resultcount :                     4
 
Enter command:
SELECT * FROM T T1
 WHERE B = ANY (SELECT B FROM T
                 WHERE T1.A = T.A)
 ORDER BY A LIMIT 2 3 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
SELECT DISTINCT B MOD 4 FROM T
  ORDER BY 1 LIMIT 3 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
          1
          2
 
resultcount :                     3
 
Enter command:
 
PARS_EXECUTE !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T WHERE ROWNO <= :R !
 
n 10 5
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
MFETCH FIRST !
5
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
Enter command:
MFETCH !
5
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T,T1 WHERE A = A1 AND ROWNO <= :R !
 
n 10 5
 
resultcount :                     5
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH FIRST !
5
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ccc      |           3 | ccc      |           3
aaa      |           1 | aaa      |           1
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH !
5
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T WHERE ROWNO <= :R ORDER BY B !
 
n 10 5
 
resultcount :                     5
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
fff      |           6
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT MAX(A), B FROM T WHERE ROWNO <= :R GROUP BY B !
 
n 10 5
 
resultcount :                     5
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
fff         |           6
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
WHERE ROWNO <= :N
GROUP BY A !
 
n 10 5
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 1.5000000000000000000000000000000000000E+01 | fff         | ccc
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX WHERE ROWNO <= :R ORDER BY PX_A !
 
n 10 3
 
resultcount :                     3
 
Enter command:
NODATA!
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
bbb      |           2
ddd      |           4
fff      |           6
 
resultcount :                     3
 
Enter command:
DATA !
 
Enter command:
SELECT TOP :R * FROM T !
 
n 10 1
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
DECLARE C CURSOR FOR SELECT TOP :R * FROM T FOR REUSE !
 
n 10 1
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH C!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
SELECT TOP :R * FROM T !
 
n 10 5
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT TOP :R * FROM T ORDER BY B !
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT TOP :R * FROM T,T1 WHERE A = A1 ORDER BY B !
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
aaa      |           1 | aaa      |           1
bbb      |           2 | bbb      |           2
ccc      |           3 | ccc      |           3
ddd      |           4 | ddd      |           4
eee      |           5 | eee      |           5
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT TOP :R MAX(A), B FROM T GROUP BY B !
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT TOP :R SUM(B), MAX(A1), A FROM T,T1
GROUP BY A !
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 7.0000000000000000000000000000000000000E+00 | ggg         | aaa
 1.4000000000000000000000000000000000000E+01 | ggg         | bbb
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT TOP :R *
FROM PX ORDER BY PX_A !
 
n 10 3
 
resultcount :                     5
 
Enter command:
NODATA!
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
 
resultcount :                     3
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T LIMIT :R!
 
n 10 1
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T FOR REUSE LIMIT :R !
 
n 10 1
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH C!
 
A        | B
---------+------------
ccc      |           3
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T LIMIT :R !
 
n 10 5
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
aaa      |           1
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T ORDER BY B LIMIT :R !
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT MAX(A), B FROM T GROUP BY B LIMIT :R !
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
aaa         |           1
bbb         |           2
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT SUM(B), MAX(A1), A FROM T,T1
GROUP BY A LIMIT :N!
 
n 10 5
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 7.0000000000000000000000000000000000000E+00 | ggg         | aaa
 1.4000000000000000000000000000000000000E+01 | ggg         | bbb
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT TOP 5 SUM(B), MAX(A1), A FROM T,T1
GROUP BY A LIMIT 2 :N !
 
n 10 3
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1                                  | EXPRESSION2 | A
---------------------------------------------+-------------+---------
 2.1000000000000000000000000000000000000E+01 | ggg         | ccc
 2.8000000000000000000000000000000000000E+01 | ggg         | ddd
 3.5000000000000000000000000000000000000E+01 | ggg         | eee
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T LIMIT :O 3 !
 
n 10 2
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ddd      |           4
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH FIRST !
 
A                 :  ddd
B                 :            4
 
Enter command:
FETCH !
 
A        | B
---------+------------
fff      |           6
bbb      |           2
 
resultcount :                     5
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ddd
B                 :            4
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T,T1 WHERE A = A1 LIMIT 2 :N !
 
n 10 3
 
resultcount :                     5
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
resultcount :                     5
 
Enter command:
MFETCH FIRST !
10
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH FIRST !
3
 
A        | B           | A1       | B1
---------+-------------+----------+------------
ddd      |           4 | ddd      |           4
fff      |           6 | fff      |           6
bbb      |           2 | bbb      |           2
 
Enter command:
MFETCH !
5
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T ORDER BY B LIMIT :O :N !
 
n 10 2
n 10 3
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
A        | B
---------+------------
ccc      |           3
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
FETCH1 LAST !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH1 PREV !
 
***ERROR  -7085 Function not allowed for this cursor                       0001
 
Enter command:
FETCH FIRST !
 
A                 :  ccc
B                 :            3
 
Enter command:
FETCH !
 
A        | B
---------+------------
ddd      |           4
eee      |           5
 
resultcount :                     5
 
Enter command:
FETCH1 POS (6)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH1 POS (3)!
 
A                 :  ccc
B                 :            3
 
Enter command:
DATA !
 
Enter command:
SELECT MAX(A), B FROM T GROUP BY B LIMIT :O :N !
 
n 10 2
n 10 3
 
resultcount :                     7
 
Enter command:
NODATA!
 
Enter command:
FETCH!
 
EXPRESSION1 | B
------------+------------
ccc         |           3
ddd         |           4
eee         |           5
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
DECLARE C CURSOR FOR
  WITH RECURSIVE PX (PX_A, PX_B) AS
  (SELECT A, B FROM T WHERE B IN (1,3)
   UNION ALL
   SELECT A, B FROM T, PX
       WHERE PX_B * 2 = T.B
  )
SELECT *
FROM PX ORDER BY PX_A LIMIT :R !
 
n 10 3
 
resultcount :                     5
 
Enter command:
NODATA!
 
Enter command:
FETCH C !
 
PX_A     | PX_B
---------+------------
aaa      |           1
bbb      |           2
ccc      |           3
 
resultcount :                     3
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE SHUTDWNK!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
