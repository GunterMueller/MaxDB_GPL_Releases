JOIN_U.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_U ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( T1C1 CHAR(5) ,
                    T1C2 CHAR(5) ASCII,
                    T1C3 FIXED(6,2),
                    T1C4 FLOAT,
                    T1C5 CHAR(5) BYTE )!
 
Enter command:
CREATE TABLE TAB2 ( T2C1 CHAR(10) ,
                    T2C2 CHAR(10) ASCII,
                    T2C3 FIXED(8,2),
                    T2C4 FLOAT,
                    T2C5 CHAR(10) BYTE )!
 
Enter command:
CREATE TABLE TAB3 ( T3C1 CHAR(25) ,
                    T3C2 CHAR(25) ASCII,
                    T3C3 FIXED(10,2),
                    T3C4 FLOAT,
                    T3C5 CHAR(25) BYTE )!
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT TAB1 SET T1C1 = '111ab',
                T1C2 = '121ab',
                T1C3 = 113.01,
                T1C4 = 114.01,
                T1C5 = X'f1f5f18182' !
 
Enter command:
INSERT TAB1 SET T1C1 = '112ab',
                T1C2 = '122ab',
                T1C3 = 213.02,
                T1C4 = 214.02,
                T1C5 = X'f1f5f28182' !
 
Enter command:
INSERT TAB1 SET T1C1 = '113ab',
                T1C2 = '123ab',
                T1C3 = 313.03,
                T1C4 = 314.03,
                T1C5 = X'f1f5f38182' !
 
Enter command:
INSERT TAB1 SET T1C1 = '114ab',
                T1C2 = '124ab',
                T1C3 = 413.04,
                T1C4 = 414.04,
                T1C5 = X'f1f5f48182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '211abcde',
                T2C2 = '221abcde',
                T2C3 = 20123.01,
                T2C4 = 20124.01,
                T2C5 = X'f2f5f18182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '212abcde',
                T2C2 = '222abcde',
                T2C3 = 20223.02,
                T2C4 = 20224.02,
                T2C5 = X'f2f5f28182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '213abcde',
                T2C2 = '223abcde',
                T2C3 = 20323.03,
                T2C4 = 20324.03,
                T2C5 = X'f2f5f38182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '214abcde',
                T2C2 = '224abcde',
                T2C3 = 20423.04,
                T2C4 = 20424.04,
                T2C5 = X'f2f5f48182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '311abcdefghij',
                T3C2 = '321abcdefghij',
                T3C3 = 3020123.01,
                T3C4 = 3020124.01,
                T3C5 = X'f3f5f18182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '312abcdefghij',
                T3C2 = '322abcdefghij',
                T3C3 = 3020223.02,
                T3C4 = 3020224.02,
                T3C5 = X'f3f5f28182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '313abcdefghij',
                T3C2 = '323abcdefghij',
                T3C3 = 3020323.03,
                T3C4 = 3020324.03,
                T3C5 = X'f3f5f38182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '314abcdefghij',
                T3C2 = '324abcdefghij',
                T3C3 = 3020433.04,
                T3C4 = 3020434.04,
                T3C5 = X'f3f5f48182' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT DISTINCT T1C1 FROM TAB1, TAB2 GROUP BY T1C1!
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1C1
-----
111ab
112ab
113ab
114ab
 
resultcount :                     4
 
Enter command:
SELECT T1C1 FROM TAB1, TAB2 GROUP BY T1C1
   UNION SELECT T1C1 FROM TAB2, TAB1 GROUP BY T1C1!
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1C1
-----
111ab
112ab
113ab
114ab
 
resultcount :                     4
 
Enter command:
SELECT T3C1 FROM TAB2, TAB3 GROUP BY T3C1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T3C1
-------------------------
311abcdefghij
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                     4
 
Enter command:
SELECT T1C1 FROM TAB1, TAB2 GROUP BY T1C1
   UNION ALL SELECT T3C1 FROM TAB2, TAB3 GROUP BY T3C1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
112ab
113ab
114ab
311abcdefghij
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                     8
 
Enter command:
SELECT T1C1 FROM TAB1, TAB2
   UNION ALL SELECT DISTINCT T3C1 FROM TAB2, TAB3 !
 
resultcount :                    20
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
111ab
111ab
111ab
112ab
112ab
112ab
112ab
113ab
113ab
113ab
113ab
114ab
114ab
114ab
114ab
311abcdefghij
 
T1C1
-------------------------
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                    20
 
Enter command:
SELECT DISTINCT T1C1 FROM TAB1, TAB2
   UNION ALL SELECT DISTINCT T3C1 FROM TAB2, TAB3 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
112ab
113ab
114ab
311abcdefghij
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT T1C1 FROM TAB1, TAB2
   UNION ALL SELECT T3C1 FROM TAB2, TAB3 !
 
resultcount :                    20
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
112ab
113ab
114ab
311abcdefghij
311abcdefghij
311abcdefghij
311abcdefghij
312abcdefghij
312abcdefghij
312abcdefghij
312abcdefghij
313abcdefghij
313abcdefghij
313abcdefghij
313abcdefghij
314abcdefghij
 
T1C1
-------------------------
314abcdefghij
314abcdefghij
314abcdefghij
 
resultcount :                    20
 
Enter command:
SELECT COUNT(*) FROM TAB1, TAB2 GROUP BY T1C2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          4
          4
          4
          4
 
resultcount :                     4
 
Enter command:
SELECT COUNT(*) FROM TAB3 GROUP BY T3C2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
          1
          1
          1
 
resultcount :                     4
 
Enter command:
SELECT COUNT(*) FROM TAB1, TAB2 GROUP BY T1C2
UNION ALL SELECT COUNT(*) FROM TAB3 GROUP BY T3C2 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
          1
          1
          1
          4
          4
          4
          4
 
resultcount :                     8
 
Enter command:
SELECT COUNT(*) FROM TAB1, TAB2 GROUP BY T1C2
UNION SELECT COUNT(*) FROM TAB3 GROUP BY T3C2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
          4
 
resultcount :                     2
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB5 ( SPALTE1 FIXED(5),
                    SPALTE2 FIXED(11,6),
                    SPALTE3 FIXED(3,3),
                    SPALTE4 FLOAT(7) ) !
 
Enter command:
CREATE TABLE TAB6 ( SPALTE1 FLOAT(12), COL2 FIXED(5,2) ) !
 
Enter command:
INSERT TAB5 VALUES ( 348  , 76543.21, - 0.623, -12.3E12 ) !
 
Enter command:
INSERT TAB5 VALUES ( -9999,        0,   0.003, 12345E-7 ) !
 
Enter command:
INSERT TAB5 VALUES (  NULL,  -5.1234,       0,     NULL ) !
 
Enter command:
INSERT TAB5 VALUES (     0,     NULL,    NULL,    3E-32 ) !
 
Enter command:
INSERT TAB6 VALUES ( 1.34E+1,   22.33 ) !
 
Enter command:
INSERT TAB6 VALUES (   -0.18, -123.07 ) !
 
Enter command:
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 ))
UNION
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 )) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2       | SPALTE3 | SPALTE4       | SPALTE1            | COL2
--------+---------------+---------+---------------+--------------------+--------
 -9999  |      0.000000 |  0.003  |  1.234500E-03 |  1.34000000000E+01 |   22.33
 -9999  |      0.000000 |  0.003  |  1.234500E-03 | -1.80000000000E-01 | -123.07
     0  | ????????????? | ?????   |  3.000000E-32 |  1.34000000000E+01 |   22.33
     0  | ????????????? | ?????   |  3.000000E-32 | -1.80000000000E-01 | -123.07
   348  |  76543.210000 | -0.623  | -1.230000E+13 |  1.34000000000E+01 |   22.33
   348  |  76543.210000 | -0.623  | -1.230000E+13 | -1.80000000000E-01 | -123.07
 
resultcount :                     6
 
Enter command:
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 ))
UNION ALL
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 )) !
 
resultcount :                    12
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2       | SPALTE3 | SPALTE4       | SPALTE1            | COL2
--------+---------------+---------+---------------+--------------------+--------
 -9999  |      0.000000 |  0.003  |  1.234500E-03 |  1.34000000000E+01 |   22.33
 -9999  |      0.000000 |  0.003  |  1.234500E-03 |  1.34000000000E+01 |   22.33
 -9999  |      0.000000 |  0.003  |  1.234500E-03 | -1.80000000000E-01 | -123.07
 -9999  |      0.000000 |  0.003  |  1.234500E-03 | -1.80000000000E-01 | -123.07
     0  | ????????????? | ?????   |  3.000000E-32 |  1.34000000000E+01 |   22.33
     0  | ????????????? | ?????   |  3.000000E-32 |  1.34000000000E+01 |   22.33
     0  | ????????????? | ?????   |  3.000000E-32 | -1.80000000000E-01 | -123.07
     0  | ????????????? | ?????   |  3.000000E-32 | -1.80000000000E-01 | -123.07
   348  |  76543.210000 | -0.623  | -1.230000E+13 |  1.34000000000E+01 |   22.33
   348  |  76543.210000 | -0.623  | -1.230000E+13 |  1.34000000000E+01 |   22.33
   348  |  76543.210000 | -0.623  | -1.230000E+13 | -1.80000000000E-01 | -123.07
   348  |  76543.210000 | -0.623  | -1.230000E+13 | -1.80000000000E-01 | -123.07
 
resultcount :                    12
 
Enter command:
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ) NEU,
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ) NEU,
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL
UNION
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ),
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
 
resultcount :                     6
 
Enter command:
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ) NEU,
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL
UNION ALL
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ),
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL !
 
resultcount :                    12
 
Enter command:
FETCH !
 
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
 
resultcount :                    12
 
Enter command:
DROP TABLE TAB5 !
 
Enter command:
DROP TABLE TAB6 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 CHAR(10) ASCII KEY,
                  T1XC2 CHAR(20) ,
                  T1XC3 FIXED(5,2) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(7,2) KEY,
                  T2XC2 CHAR(10)  KEY,
                  T2XC3 CHAR(20) ASCII ) !
 
Enter command:
CREATE TABLE T3 ( T3XC1 CHAR(15) ASCII,
                  T3XC2 CHAR(20) ,
                  T3XC3 FIXED(6,3) ) !
 
Enter command:
INSERT T1 VALUES ( 'Hans', 'Bremen', 1 ) !
 
Enter command:
INSERT T1 VALUES ( 'Karl', 'Bremen', 100 ) !
 
Enter command:
INSERT T1 VALUES ( 'Karin', 'Hamburg', NULL ) !
 
Enter command:
INSERT T1 VALUES ( 'Lisa', NULL, NULL ) !
 
Enter command:
INSERT T2 VALUES ( 20, 'Paul', 'Muenchen' ) !
 
Enter command:
INSERT T2 VALUES ( 100, 'Emil', 'Hannover' ) !
 
Enter command:
INSERT T2 VALUES ( 100, 'Emma', NULL ) !
 
Enter command:
INSERT T3 VALUES ( 'Karl', 'Hannover', 1 ) !
 
Enter command:
INSERT T3 VALUES ( 'Otto', 'Dortmund', 300 ) !
 
Enter command:
INSERT T3 VALUES ( NULL, NULL, NULL ) !
 
Enter command:
INSERT T3 VALUES ( 'Ilse', 'Hamm', 200 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM T1, T3
  WHERE T1XC2 < ALL ( SELECT T3XC2 FROM T3 WHERE T3XC2 IS NOT NULL )
    AND ( T3XC2 IN ( SELECT T2XC3 FROM T2 WHERE T2XC3 <> 'Muenchen' )
     OR T3XC2 < 'F' ) !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
 
resultcount :                     4
 
Enter command:
SELECT * FROM T1, T3
  WHERE T1XC2 < ALL ( SELECT T3XC2 FROM T3 WHERE T3XC2 IS NOT NULL )
    AND ( T3XC2 IN ( SELECT T2XC3 FROM T2 WHERE T2XC3 <> 'Muenchen' )
     OR T3XC2 < 'F' )
UNION ALL
SELECT * FROM T1, T3
  WHERE T1XC2 < ALL ( SELECT T3XC2 FROM T3 WHERE T3XC2 IS NOT NULL )
    AND ( T3XC2 IN ( SELECT T2XC3 FROM T2 WHERE T2XC3 <> 'Muenchen' )
     OR T3XC2 < 'F' ) !
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
 
resultcount :                     8
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
DROP TABLE T3 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A FIXED(5) )!
 
Enter command:
INSERT T1 SET A = 1 !
 
Enter command:
INSERT T1 SET A = 2 !
 
Enter command:
INSERT T1 SET A = 3 !
 
Enter command:
INSERT T1 SET A = 4 !
 
Enter command:
INSERT T1 SET A = 5 !
 
Enter command:
INSERT T1 SET A = 2 !
 
Enter command:
INSERT T1 SET A = 3 !
 
Enter command:
INSERT T1 SET A = 4 !
 
Enter command:
CREATE TABLE T2 ( B FIXED(5) )!
 
Enter command:
INSERT T2 SET B = 3 !
 
Enter command:
INSERT T2 SET B = 4 !
 
Enter command:
INSERT T2 SET B = 5 !
 
Enter command:
INSERT T2 SET B = 6 !
 
Enter command:
INSERT T2 SET B = 7 !
 
Enter command:
INSERT T2 SET B = 4 !
 
Enter command:
INSERT T2 SET B = 5 !
 
Enter command:
INSERT T2 SET B = 6 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM (SELECT A, A A1 FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B))
UNION
SELECT B, B FROM T2 WHERE B <> B + 10
 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A      | A1
-------+-------
     3 |      3
     4 |      4
     5 |      5
     6 |      6
     7 |      7
 
resultcount :                     5
 
Enter command:
SELECT B FROM T2,T1 WHERE A (+)= B !
 
resultcount :                    11
 
Enter command:
FETCH !
 
B
------
     3
     4
     4
     5
     5
     3
     4
     4
     6
     6
     7
 
resultcount :                    11
 
Enter command:
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1) !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A
------
     3
     4
     5
     3
     4
 
resultcount :                     5
 
Enter command:
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A = B) !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A
------
     3
     3
     4
     4
     5
 
resultcount :                     5
 
Enter command:
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B) !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A
------
     3
     3
     4
     4
     5
 
resultcount :                     5
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B) !
 
resultcount :                     5
 
Enter command:
FETCH ERG1 !
 
A
------
     3
     3
     4
     4
     5
 
resultcount :                     5
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM (SELECT A, A A1 FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B)) !
 
resultcount :                     5
 
Enter command:
SELECT * FROM ERG
UNION
SELECT B, B FROM T2 WHERE B <> B + 10
 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A      | A1
-------+-------
     3 |      3
     4 |      4
     5 |      5
     6 |      6
     7 |      7
 
resultcount :                     5
 
Enter command:
SELECT B, B FROM T2 WHERE B <> B + 10
UNION
SELECT * FROM (SELECT A, A A1 FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B))
 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
B      | B
-------+-------
     3 |      3
     4 |      4
     5 |      5
     6 |      6
     7 |      7
 
resultcount :                     5
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5), A2 CHAR(5)) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b'
UNION ALL
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
HUGO
-----
bbbbb
bbbbb
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) KEY, A2 CHAR(5)) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b'
UNION ALL
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
HUGO
-----
bbbbb
bbbbb
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT (KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE LEER (A CHAR)!
 
Enter command:
SELECT A FROM LEER UNION ALL SELECT A FROM <DUAL, LEER>!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL!
 
resultcount :               unknown
 
Enter command:
CREATE VIEW V AS SELECT A FROM LEER UNION ALL SELECT A FROM <DUAL, LEER>!
 
Enter command:
SELECT * FROM V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL!
 
resultcount :               unknown
 
Enter command:
ROLLBACK WORK !
 
Enter command:
 
CREATE TABLE TA ( A FIXED(6)) !
 
Enter command:
INSERT TA SET A = 1 !
 
Enter command:
SELECT TA.* FROM <TA, TA T1> WHERE 1 = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
SELECT TA.* FROM <TA T1, TA> WHERE 1 = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
SELECT TA.* FROM <TA, TA T1> WHERE TA.A = 1 AND T1.A = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
SELECT TA.* FROM <TA T1, TA> WHERE  TA.A = 1 AND T1.A = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE WORKER1 (W_NO FIXED(5) KEY, W_VORNAME CHAR(20),
             W_NAME CHAR(20) NOT NULL, W_WOHNORT FIXED(4)) !
 
Enter command:
CREATE TABLE WORKER2 (W_NO FIXED(5) KEY, GEB DATE,
             ABTEILUNG FIXED(4)) !
 
Enter command:
CREATE TABLE STADT (PLZ FIXED(4) KEY, TOWN_NAME CHAR(20))!
 
Enter command:
CREATE TABLE ABTEILUNG (ABT_NO FIXED(4) KEY, ABT_NAME CHAR(20),
                        ABT_ORT FIXED(4)) !
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE WORKER1 FOREIGN KEY WORKER (W_NO)
                        REFERENCES WORKER2 !
 
Enter command:
ALTER TABLE WORKER1 FOREIGN KEY WORKER_WOHNORT (W_WOHNORT)
                        REFERENCES STADT !
 
Enter command:
ALTER TABLE WORKER2 FOREIGN KEY WORKER_ABT (ABTEILUNG)
                        REFERENCES ABTEILUNG !
 
Enter command:
ALTER TABLE ABTEILUNG FOREIGN KEY ABT_STADT (ABT_ORT)
                        REFERENCES STADT !
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW WORKER (W_NO, VORNAME, NACHNAME, PLZ, WOHNORT,
                         GEB, ABT_NO, ABT_NAME, ABT_PLZ, ABT_STADT)
            AS SELECT
               WORKER1.W_NO, W_VORNAME, W_NAME, W_WOHNORT,
               W_STADT.TOWN_NAME, GEB, ABTEILUNG,
               ABT_NAME, ABT_ORT, ABT_STADT.TOWN_NAME
            FROM STADT ABT_STADT, ABTEILUNG, STADT W_STADT,
                 WORKER1, WORKER2
            WHERE ABT_ORT           = ABT_STADT.PLZ     AND
                  WORKER1.W_NO = WORKER2.W_NO AND
                  W_WOHNORT         = W_STADT.PLZ       AND
                  ABTEILUNG         = ABTEILUNG.ABT_NO
            WITH CHECK OPTION !
 
Enter command:
FILE SEL_COLS_TAB ( WORKER !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'WORKER'
  ORDER BY POS !
 
resultcount :                    10
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  W_NO
MOD               :  KEY
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  VORNAME
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  NACHNAME
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  PLZ
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  WOHNORT
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  GEB
MOD               :  OPT
DATATYPE          :  DATE
CODE              :
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_NO
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_NAME
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_PLZ
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_STADT
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                    10
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
INSERT WORKER VALUES (1, 'Fritz', 'Meier', 1000, 'Berlin',
           '19500304', 100, 'Buchhaltung', 1000, 'Berlin') !
 
Enter command:
SELECT * FROM WORKER1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | W_VORNAME            | W_NAME               | W_WOHNORT
-------+----------------------+----------------------+----------
     1 | Fritz                | Meier                |  1000
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | GEB        | ABTEILUNG
-------+------------+----------
     1 | 19500304   |   100
 
resultcount :                     1
 
Enter command:
SELECT * FROM ABTEILUNG !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
ABT_NO | ABT_NAME             | ABT_ORT
-------+----------------------+--------
  100  | Buchhaltung          |  1000
 
resultcount :                     1
 
Enter command:
SELECT * FROM STADT !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
PLZ   | TOWN_NAME
------+---------------------
 1000 | Berlin
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     1
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     1
 
Enter command:
INSERT WORKER VALUES (2, 'Anton', 'Schmidt', 1000, 'Berlin',
           '19601105', 100, 'Buchhaltung', 1000, 'Berlin') !
 
Enter command:
INSERT WORKER VALUES (3, 'Harry', 'Hirsch', 8000, 'Muenchen',
           '19370825', 200, 'Entwicklung', 8000, 'Muenchen') !
 
Enter command:
INSERT WORKER VALUES (4, 'Stefan', 'May', 8000, 'Muenchen',
           '19370825', 200, 'Entwicklung', 8000, 'Stuttgart') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     3
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
resultcount :                     3
 
Enter command:
INSERT WORKER VALUES (2, 'Anton', 'Schmidt', 1000, 'Berlin',
           '19601105', 100, 'Buchhaltung', 1000, 'Berlin') !
 
***ERROR    200 Duplicate key                                              0108
 
Enter command:
INSERT WORKER SET W_NO    = 4,    VORNAME   = 'Willi',
                       PLZ     = 5000, WOHNORT   = 'Koeln',
                       ABT_NO  = 311,  ABT_NAME  = 'Personalwesen',
                       ABT_PLZ = 8000, ABT_STADT = 'Muenchen' !
 
***ERROR  -5005 Missing non-NULL value:NACHNAME                            0001
 
Enter command:
INSERT WORKER SET W_NO     = 4,    VORNAME   = 'Willi',
                       NACHNAME = 'Wacker',
                       PLZ      = 5000, WOHNORT   = 'Koeln',
                       ABT_NO   = 311,  ABT_NAME  = 'Personalwesen',
                       ABT_PLZ  = 8000, ABT_STADT = 'Muenchen' !
 
Enter command:
INSERT WORKER SET W_NO     = 5,    VORNAME   = 'Knut',
                       NACHNAME = 'Wuchtig',
                       WOHNORT   = 'Koeln',
                       ABT_NO   = 311,  ABT_NAME  = 'Personalwesen',
                       ABT_PLZ  = 8000, ABT_STADT = 'Muenchen' !
 
***ERROR  -5005 Missing non-NULL value:PLZ                                 0001
 
Enter command:
EXPLAIN SELECT * FROM WORKER !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | WORKER2            |                    | TABLE SCAN                               |          1
KERN               | ABTEILUNG          | ABT_NO             | JOIN VIA KEY COLUMN                      |          1
KERN               | STADT              | PLZ                | JOIN VIA KEY COLUMN                      |          1
KERN               | STADT              |                    | TABLE SCAN                               |          1
KERN               | WORKER1            | W_NO               | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         10
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   5000
WOHNORT           :  Koeln
GEB               :  ?????
ABT_NO            :    311
ABT_NAME          :  Personalwesen
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
resultcount :                     4
 
Enter command:
UPDATE WORKER SET GEB = '19400522' KEY W_NO = 4 !
 
Enter command:
UPDATE WORKER SET PLZ = 1000 KEY W_NO = 4 !
 
***ERROR  -5013 Missing update column:WOHNORT                              0001
 
Enter command:
UPDATE WORKER SET PLZ = 1000, WOHNORT = 'Berlin' KEY W_NO = 4 !
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    311
ABT_NAME          :  Personalwesen
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
resultcount :                     4
 
Enter command:
UPDATE WORKER SET GEB = '19400522' KEY W_NO = 4 , NACHNAME = 'A' !
 
***ERROR  -8007 Column must be key column:NACHNAME                         0063
 
Enter command:
UPDATE WORKER SET GEB = '19400522' KEY NACHNAME = 'A' !
 
***ERROR  -5003 Missing key specification:W_NO                             0001
 
Enter command:
UPDATE WORKER SET ABT_NO = 100, ABT_NAME = 'Buchhaltung'
                   KEY W_NO = 4 !
 
***ERROR  -5013 Missing update column:ABT_STADT                            0001
 
Enter command:
UPDATE WORKER SET ABT_NO  = 100,  ABT_NAME  = 'Buchhaltung',
                       ABT_PLZ = 1000, ABT_STADT = 'Berlin'
                   KEY W_NO = 4 !
 
Enter command:
COMMIT !
 
Enter command:
DECLARE RES CURSOR FOR
SELECT * FROM WORKER FOR UPDATE !
tablename    : "KERN"."WORKER"
 
resultcount :                     4
 
Enter command:
FETCH FIRST RES !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
Enter command:
UPDATE WORKER SET GEB = '19450404' WHERE CURRENT OF RES !
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19450404
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     4
 
Enter command:
FETCH POS (2) RES INTO :A, :B, :C, :D, :E, :F, :G, :H, :I, :J !
 
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
Enter command:
UPDATE WORKER SET ABT_PLZ = 8000, ABT_STADT = 'Muenchen'
      WHERE CURRENT OF RES !
 
***ERROR  -5013 Missing update column                                      0001
 
Enter command:
UPDATE WORKER SET PLZ = 8000, WOHNORT = 'Muenchen'
      WHERE CURRENT OF RES !
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19450404
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     4
 
Enter command:
COMMIT !
 
Enter command:
DELETE WORKER WHERE CURRENT OF RES !
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     3
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19450404
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     3
 
Enter command:
DELETE WORKER KEY W_NO = 1 !
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     2
 
Enter command:
FETCH !
 
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     2
 
Enter command:
SELECT * FROM WORKER1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | W_VORNAME            | W_NAME               | W_WOHNORT
-------+----------------------+----------------------+----------
     3 | Harry                | Hirsch               |  8000
     4 | Willi                | Wacker               |  1000
 
resultcount :                     2
 
Enter command:
SELECT * FROM WORKER2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | GEB        | ABTEILUNG
-------+------------+----------
     3 | 19370825   |   200
     4 | 19400522   |   100
 
resultcount :                     2
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW WORKER KEY W_NO = 3 IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
 
resultcount :                     2
 
Enter command:
DECLARE RES CURSOR FOR
SELECT * FROM WORKER FOR UPDATE !
tablename    : "KERN"."WORKER"
 
resultcount :                     2
 
Enter command:
FETCH FIRST RES !
 
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW WORKER CURRENT OF RES IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
 
resultcount :                     2
 
Enter command:
DROP TABLE WORKER1 !
 
Enter command:
DROP TABLE WORKER2 !
 
Enter command:
DROP TABLE STADT !
 
Enter command:
DROP TABLE ABTEILUNG !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 * PTS 1588 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "M4SYS_MOD_USUARIO " (
"DATO"    CHAR      (1) ASCII    ,
"USUARIO" VARCHAR   (8) ASCII    ,
"COMENT"  VARCHAR   (254) ASCII    ,
"FEC_ULT_ACTUALIZAC" TIMESTAMP DEFAULT   TIMESTAMP,
"ID_USUARIO" VARCHAR   (64) ASCII    DEFAULT USER ,
PRIMARY KEY ("DATO")) !
 
Enter command:
 
CREATE TABLE "M4T_DEPARTAMENTOS " (
"ID_SOCIEDAD" VARCHAR   (2) ASCII    ,
"ID_DEPARTAMENTO" VARCHAR   (8) ASCII    ,
"N_DEPARTAMENTO" VARCHAR   (40) ASCII    NOT NULL,
"FEC_ULT_ACTUALIZAC" TIMESTAMP DEFAULT TIMESTAMP,
"COMENT" VARCHAR   (254) ASCII    ,
"ID_USUARIO" VARCHAR   (64) ASCII    DEFAULT USER,
"ID_RESPONSABLE" VARCHAR   (10) ASCII    NOT NULL
, PRIMARY KEY ("ID_SOCIEDAD" ,"ID_DEPARTAMENTO")) !
 
Enter command:
 
CREATE TABLE "M4T_HIST_DEPARTAM " (
"ID_SOCIEDAD" VARCHAR (2) ASCII  ,
"ID_EMPLEADO" VARCHAR (10) ASCII  ,
"FEC_ALTA_EMPLEADO" DATE  ,
"FEC_INICIO" DATE  ,
"FEC_FIN" DATE  ,
"COMENT" VARCHAR (254) ASCII  ,
"FEC_ULT_ACTUALIZAC" TIMESTAMP DEFAULT TIMESTAMP,
"ID_USUARIO" VARCHAR (64) ASCII  DEFAULT USER,
"ID_DEPARTAMENTO" VARCHAR (8) ASCII  NOT NULL,
"ID_MOTIVO_CAMBIO" VARCHAR (2) ASCII  DEFAULT     '0' ,
PRIMARY KEY ("ID_SOCIEDAD" ,"ID_EMPLEADO" ,"FEC_ALTA_EMPLEADO"
         ,"FEC_INICIO"),
FOREIGN KEY "FK_DEPTOS_HDEPTOS " ("ID_SOCIEDAD   " ,"ID_DEPARTAMENTO "
) REFERENCES "M4T_DEPARTAMENTOS "
("ID_SOCIEDAD   " ,"ID_DEPARTAMENTO ") ON DELETE RESTRICT ) !
 
Enter command:
 
 CREATE VIEW M4_DEPARTAMENTOS AS SELECT * FROM M4T_DEPARTAMENTOS
WITH CHECK OPTION !
 
Enter command:
 
 CREATE VIEW M4_HIST_DEPARTAM AS SELECT * FROM M4T_HIST_DEPARTAM
WITH CHECK OPTION !
 
Enter command:
 
 CREATE VIEW M4VH_1 AS SELECT H1.*, D.N_DEPARTAMENTO FROM
M4_HIST_DEPARTAM H1, M4_DEPARTAMENTOS D WHERE H1.FEC_FIN IS NULL AND
H1.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO AND H1.ID_SOCIEDAD = D.ID_SOCIEDAD
WITH CHECK OPTION !
 
Enter command:
 
 CREATE VIEW M4VH_2 AS SELECT H1.*, D.N_DEPARTAMENTO FROM
M4_HIST_DEPARTAM H1, M4_DEPARTAMENTOS D WHERE H1.FEC_FIN IS NULL AND
H1.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO AND H1.ID_SOCIEDAD = D.ID_SOCIEDAD!
 
Enter command:
FILE SEL_TABLE !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER <> 'SUT'
    AND TABLENAME <> 'SEL_TAB' !
 
resultcount :                     7
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  KERN
TABLENAME         :  M4SYS_MOD_USUARIO
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4T_DEPARTAMENTOS
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4T_HIST_DEPARTAM
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4VH_1
PRIVILEGES        :  SEL+UPD+DEL+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4VH_2
PRIVILEGES        :  SEL+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4_DEPARTAMENTOS
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4_HIST_DEPARTAM
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
 
resultcount :                     7
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT NOT NULL) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
INSERT T2 VALUES (20, 30) !
 
Enter command:
INSERT T2 VALUES (50, 500) !
 
Enter command:
INSERT T1 VALUES (10, 20) !
 
Enter command:
INSERT T1 VALUES (20, 20) !
 
Enter command:
CREATE VIEW V1 (A,B,C) AS SELECT A1, A2, B2 FROM T1, T2 WHERE
     A2 = B1 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          20 |          30
         20 |          20 |          30
 
resultcount :                     2
 
Enter command:
COMMIT !
 
Enter command:
UPDATE V1 SET B = B + C, C = 300 + 200 KEY A = 10 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          50 |         500
         20 |          20 |          30
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          20 |          30
         20 |          20 |          30
 
resultcount :                     2
 
Enter command:
UPDATE V1 SET B = B + C, C = 300 + 200 WHERE A >= 10 !
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          50 |         500
         20 |          50 |         500
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT, A3 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT KEY, B3 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2, A3) REFERENCES T2 !
 
Enter command:
CREATE VIEW V1 AS SELECT A1, A2, A3, B3 FROM T1, T2 WHERE A2 = B1 AND
               A3 = B2 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
INSERT V1 VALUES (1,2,3,4) !
 
Enter command:
INSERT V1 VALUES (2,3,3,5) !
 
Enter command:
COMMIT !
 
Enter command:
UPDATE V1 SET A2 = 3, B3 = 5 * A1 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2          | A3          | B3
------------+-------------+-------------+------------
          1 |           3 |           3 |           5
          2 |           3 |           3 |           5
 
resultcount :                     2
 
Enter command:
UPDATE V1 SET A2 = 3, A3 = 4, B3 = 5 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2          | A3          | B3
------------+-------------+-------------+------------
          1 |           3 |           4 |           5
          2 |           3 |           3 |           5
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (S1 CHAR(5) KEY, S2 CHAR(5), S3 CHAR(5),S4 CHAR(5),
S5 CHAR(5)) !
 
Enter command:
CREATE TABLE T2 (S1 CHAR(5) KEY, S2 CHAR(5) KEY, S3 CHAR(5) KEY,
                 S5 CHAR(5)) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (S2,S3,S4) REFERENCES T2 !
 
Enter command:
CREATE VIEW V (A,B,C,D,E,F) AS SELECT
     T1.S1, T1.S2, T1.S3, T1.S4, T1.S5, T2.S5
     FROM T1, T2
     WHERE T1.S4 = T2.S3 AND
           T1.S3 = T2.S2 AND
           T1.S2 = T2.S1 AND
           T1.S5 > T2.S5 WITH CHECK OPTION !
 
Enter command:
INSERT V VALUES ('aaaaa', 'bbbbb', 'ccccc', 'd', 'fffff','eeeee') !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B     | C     | D     | E     | F
------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | d     | fffff | eeeee
 
resultcount :                     1
 
Enter command:
UPDATE V SET E = 'ggggg' KEY A = 'aaaaa' !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B     | C     | D     | E     | F
------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | d     | ggggg | eeeee
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT NOT NULL) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
INSERT T2 VALUES (20, 30) !
 
Enter command:
INSERT T2 VALUES (50, 500) !
 
Enter command:
INSERT T1 VALUES (10, 20) !
 
Enter command:
INSERT T1 VALUES (20, 50) !
 
Enter command:
COMMIT !
 
Enter command:
SELECT A1, A2, B2 FROM T1, T2 WHERE A2 = B1 !
 
resultcount :                     2
 
Enter command:
CREATE VIEW V1 (A,B,C) AS SELECT A1, A2, B2 FROM T1, T2 WHERE
     A2 = B1 WITH CHECK OPTION !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          20 |          30
         20 |          50 |         500
 
resultcount :                     2
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE V1 SET B = B + :C, C = 300 + 200 KEY A = 10 !
 
n 38 10
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          30 |         500
         20 |          50 |         500
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 CHAR(5)) !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5) KEY, B2 CHAR(5)) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, B2 FROM T1, T2 WHERE A2 = B1
            WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
INSERT V VALUES (10, 'bbbbb', 'ccccc') !
 
Enter command:
INSERT V VALUES (20, 'eeeee', 'fffff') !
 
Enter command:
COMMIT !
 
Enter command:
DELETE V WHERE A1 = 10 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         20 | eeeee | fffff
 
resultcount :                     1
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | bbbbb | ccccc
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE V SET A2 = :A, B2 = :B WHERE A1 = :C !
 
c 5 'xxxxx'
c 5 'yyyyy'
n 10 10
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | xxxxx | yyyyy
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT KEY, A3 INT KEY, A4 INT, A5 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT, B3 INT) !
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A4) REFERENCES T2 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, A3, A4, A5, B2, B3 FROM T1, T2
                 WHERE A4 = B1 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT V VALUES (1,1,1,10,1000,20,30) !
 
Enter command:
 
INSERT V VALUES (:A,:B,:C,:E,:F,:G,:H) !
 
n 10 2
n 10 2
n 10 2
n 10 20
n 10 50
n 10 1100
n 10 40
 
Enter command:
INSERT V VALUES (:A,:B,:C,:E,:F,:G,:H) !
 
n 10 2
n 10 2
n 10 2
n 10 20
n 10 90
n 10 1100
n 10 80
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V VALUES (:A,:B,:C,:E,:F,:G,:H) !
 
n 10 3
n 10 3
n 10 3
n 10 20
n 10 60
n 10 1100
n 10 50
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V VALUES (3,:B,3,:E,:F,:G,:H) !
 
n 10 3
n 10 20
n 10 50
n 10 1100
n 10 40
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     3
 
Enter command:
FETCH !
 
A1                :            1
A2                :            1
A3                :            1
A4                :           10
A5                :         1000
B2                :           20
B3                :           30
--------------------------------
A1                :            2
A2                :            2
A3                :            2
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
--------------------------------
A1                :            3
A2                :            3
A3                :            3
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
 
resultcount :                     3
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE V SET A4 = :D KEY A1 = :A, A2 = :B, A3 = :C !
 
***ERROR  -5013 Missing update column:B2                                   0001
 
Enter command:
 
UPDATE V SET A4 = :D , B2 = 30, B3 = 40 KEY A1 = :A, A2 = :B, A3 = :C !
 
n 10 20
n 10 1
n 10 1
n 10 1
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
UPDATE V SET A4 = :D , B2 = 1100, B3 = 40 KEY A1 = :A, A2 = :B, A3 = :C !
 
n 10 20
n 10 1
n 10 1
n 10 1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     3
 
Enter command:
FETCH !
 
A1                :            1
A2                :            1
A3                :            1
A4                :           20
A5                :         1000
B2                :         1100
B3                :           40
--------------------------------
A1                :            2
A2                :            2
A3                :            2
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
--------------------------------
A1                :            3
A2                :            3
A3                :            3
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
 
resultcount :                     3
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 CHAR(5)) !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5) KEY, B2 CHAR(5)) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, B2 FROM T1, T2 WHERE A2 = B1
            WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
INSERT V VALUES (10, 'bbbbb', 'ccccc') !
 
Enter command:
INSERT V VALUES (20, 'eeeee', 'fffff') !
 
Enter command:
COMMIT !
 
Enter command:
DELETE V WHERE A1 = 10 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         20 | eeeee | fffff
 
resultcount :                     1
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | bbbbb | ccccc
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
UPDATE V SET A2 = 'xxxxx', B2 = 'yyyyy' WHERE A1 = 10 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | xxxxx | yyyyy
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT NOT NULL, B3 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, B3 FROM T1, T2 WHERE
                    A2 = B1 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
FILE SEL_PRIV_ON_TAB ( V !
 
Enter command:
DECLARE SEL_PRIVS CURSOR FOR
 SELECT SCHEMANAME,TABLENAME,COLUMNNAME,PRIVILEGES,GRANTOR
   FROM SYSDD.DB_PRIVILEGES
  WHERE GRANTOR NOT IN ('SUT','SUPERDBA')
    AND (SCHEMANAME = USER OR USERNAME = USER OR USERNAME = 'PUBLIC')
    AND TABLENAME = 'V' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_PRIVS INTO :A,:B,:C,:D,:E !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_PRIVS !
 
Enter command:
INSERT T2 VALUES (2,3,4) !
 
Enter command:
INSERT T1 VALUES (1,2) !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2          | B3
------------+-------------+------------
          1 |           2 |           4
 
resultcount :                     1
 
Enter command:
UPDATE V SET A2 = 3, B3 = 4 KEY A1 = 1 !
 
***ERROR  -8035 Foreign key must exist                                     0001
 
Enter command:
INSERT T2 VALUES (3,100,4) !
 
Enter command:
UPDATE V SET A2 = 3, B3 = 4 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2          | B3
------------+-------------+------------
          1 |           3 |           4
 
resultcount :                     1
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) ASCII KEY, A2 CHAR(5) ASCII KEY,
      A3 CHAR(5) ASCII KEY, A4 CHAR(5) ASCII ) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb','ccccc', 'ddddd') !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5) ASCII KEY, B2 CHAR(5) ASCII KEY,
      B3 CHAR(5) ASCII KEY, B4 CHAR(5)) !
 
Enter command:
INSERT T2 VALUES ('aaaaa','bbbbb','ccccc', 'ddddd') !
 
Enter command:
CREATE TABLE T3 (C1 CHAR(5) ASCII KEY, C2 CHAR(5) ASCII KEY,
      C3 CHAR(5) ASCII KEY, C4 CHAR(5) ASCII) !
 
Enter command:
INSERT T3 VALUES ('aaaaa','bbbbb','ccccc', 'ddddd') !
 
Enter command:
CREATE TABLE T4 (D1 CHAR(5) ASCII KEY, D2 CHAR(5) ASCII KEY,
      D3 CHAR(5) ASCII KEY, D4 CHAR(5)) !
 
Enter command:
INSERT T4 VALUES ('bbbbb','ccccc', 'ddddd', 'eeeee') !
 
Enter command:
SELECT A4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A4
-----
ddddd
 
resultcount :                     1
 
Enter command:
SELECT B1, A2, B3, A4, B4, C4, D4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
B1    | A2    | B3    | A4    | B4    | C4    | D4
------+-------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd | ddddd | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L  (A1,A2,A3) REFERENCES T2 !
 
Enter command:
ALTER TABLE T2 FOREIGN KEY L1 (B1,B2,B3) REFERENCES T3 !
 
Enter command:
ALTER TABLE T3 FOREIGN KEY L2 (C2,C3,C4) REFERENCES T4 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, A3, A4, B4, C4, D4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
FILE SEL_PRIV_ON_TAB ( V !
 
Enter command:
DECLARE SEL_PRIVS CURSOR FOR
 SELECT SCHEMANAME,TABLENAME,COLUMNNAME,PRIVILEGES,GRANTOR
   FROM SYSDD.DB_PRIVILEGES
  WHERE GRANTOR NOT IN ('SUT','SUPERDBA')
    AND (SCHEMANAME = USER OR USERNAME = USER OR USERNAME = 'PUBLIC')
    AND TABLENAME = 'V' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_PRIVS INTO :A,:B,:C,:D,:E !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_PRIVS !
 
Enter command:
FILE SEL_COLS_TAB ( V !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'V'
  ORDER BY POS !
 
resultcount :                     7
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  A1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A2
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A3
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  B4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  C4
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  D4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     7
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW V KEY A1 = 'aaaaa', A2 = 'bbbbb', A3 = 'cc' IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
LOCK ROW V KEY A1 = :A, A2 = :B, A3 = :C IN EXCLUSIVE MODE !
 
c 5 'aaaaa'
c 5 'bbbbb'
c 5 'cc'
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
CREATE VIEW V1 AS SELECT B1, A2, B3, A4, B4, C4, D4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
FILE SEL_PRIV_ON_TAB ( V1 !
 
Enter command:
DECLARE SEL_PRIVS CURSOR FOR
 SELECT SCHEMANAME,TABLENAME,COLUMNNAME,PRIVILEGES,GRANTOR
   FROM SYSDD.DB_PRIVILEGES
  WHERE GRANTOR NOT IN ('SUT','SUPERDBA')
    AND (SCHEMANAME = USER OR USERNAME = USER OR USERNAME = 'PUBLIC')
    AND TABLENAME = 'V1' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_PRIVS INTO :A,:B,:C,:D,:E !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_PRIVS !
 
Enter command:
FILE SEL_COLS_TAB ( V1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'V1'
  ORDER BY POS !
 
resultcount :                     7
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  B1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A2
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  B3
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  B4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  C4
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  D4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     7
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
B1    | A2    | B3    | A4    | B4    | C4    | D4
------+-------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd | ddddd | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
INSERT V1 VALUES
    ('aaaaa', 'bbbbb', 'ccccc', 'xxxxx', 'vvvvv','ddddd', 'yyyyy') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V1 VALUES
    ('aaaab', 'bbbbb', 'ccccc', 'xxxxx', 'vvvvv','ddddd', 'yyyyy') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V1 VALUES
    ('aaaac', 'bbbbb', 'ccccc', 'xxxxx', 'vvvvv','ddddd', 'zzzzz') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
B1    | A2    | B3    | A4    | B4    | C4    | D4
------+-------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd | ddddd | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A1    | A2    | A3    | A4
------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd
 
resultcount :                     1
 
Enter command:
SELECT * FROM T2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
B1    | B2    | B3    | B4
------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd
 
resultcount :                     1
 
Enter command:
SELECT * FROM T3 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
C1    | C2    | C3    | C4
------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd
 
resultcount :                     1
 
Enter command:
SELECT * FROM T4 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
D1    | D2    | D3    | D4
------+-------+-------+------
bbbbb | ccccc | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW V1 KEY B1 = 'aaaaa', A2 = 'bbbbb', B3 = 'cc' IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
LOCK ROW V1 KEY B1 = :A, A2 = :B, B3 = :C IN EXCLUSIVE MODE !
 
c 5 'aaaaa'
c 5 'bbbbb'
c 5 'cc'
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
DROP TABLE T3 !
 
Enter command:
DROP TABLE T4 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT, A2 INT, A3 INT, PRIMARY KEY (A1, A2)) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L1 (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V1 AS SELECT A1, B1, A3, B2 FROM T1, T2 WHERE
      A2 = B1 WITH CHECK OPTION !
 
Enter command:
INSERT V1 VALUES (1,2,3,4) !
 
Enter command:
UPDATE V1 SET A3 = 3 KEY A1 = 1, B1 = 2 !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT, A2 INT, A3 INT, PRIMARY KEY (A1)) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L1 (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V1 AS SELECT A1, B1, A3, B2 FROM T1, T2 WHERE
      A2 = B1 WITH CHECK OPTION !
 
Enter command:
CREATE INDEX I1 ON T1 (A2) !
 
Enter command:
INSERT V1 VALUES (1,2,3,4) !
 
Enter command:
UPDATE V1 SET A3 = 3 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | B1          | A3          | B2
------------+-------------+-------------+------------
          1 |           2 |           3 |           4
 
resultcount :                     1
 
Enter command:
DELETE V1 WHERE A1 = 1 !
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 FIXED(3) KEY, T1XC2 FIXED(3) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(3) KEY, T2XC2 FIXED(3),
                  T2XC3 FIXED(3) ) !
 
Enter command:
ALTER TABLE T2 FOREIGN KEY T2LT1 (T2XC2) REFERENCES T1 !
 
Enter command:
CREATE VIEW V1 AS SELECT T1XC1, T1XC2, T2XC1, T2XC3
   FROM T1, T2 WHERE T1XC1 = T2XC2 WITH CHECK OPTION !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT T1 VALUES ( 5, 3 ) !
 
Enter command:
INSERT T1 VALUES ( 8, 3 ) !
 
Enter command:
INSERT T1 VALUES ( 4, 1 ) !
 
Enter command:
INSERT T1 VALUES ( 3, 1 ) !
 
Enter command:
INSERT T1 VALUES ( 2, 3 ) !
 
Enter command:
INSERT T2 VALUES ( 7, 8, 3 ) !
 
Enter command:
INSERT T2 VALUES ( 3, 5, 4 ) !
 
Enter command:
INSERT T2 VALUES ( 5, 3, 4 ) !
 
Enter command:
INSERT T2 VALUES ( 4, 2, 3 ) !
 
Enter command:
INSERT T2 VALUES ( 9, 4, 2 ) !
 
Enter command:
INSERT T2 VALUES ( 1, 3, 8 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM V1 WHERE T1XC2 < T2XC1 ORDER BY 1,2,3,4!
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC3
------+-------+-------+------
   2  |    3  |    4  |    3
   3  |    1  |    5  |    4
   4  |    1  |    9  |    2
   8  |    3  |    7  |    3
 
resultcount :                     4
 
Enter command:
INSERT V1 VALUES ( 1, 2, 6, 3 ) !
 
Enter command:
INSERT INTO V1 SET T1XC1 = 6, T2XC1 = 8, T2XC3 = 2 !
 
Enter command:
SELECT * FROM V1 ORDER BY 1,2,3,4!
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC3
------+-------+-------+------
   1  |    2  |    6  |    3
   2  |    3  |    4  |    3
   3  |    1  |    1  |    8
   3  |    1  |    5  |    4
   4  |    1  |    9  |    2
   5  |    3  |    3  |    4
   6  | ????  |    8  |    2
   8  |    3  |    7  |    3
 
resultcount :                     8
 
Enter command:
UPDATE V1 SET T1XC2 = 3, T1XC1 = 5, T2XC3 = 4 KEY T2XC1 = 6 !
 
Enter command:
DELETE V1 KEY T2XC1 = 7 !
 
Enter command:
SELECT * FROM V1 ORDER BY 1,2,3,4!
 
resultcount :                     7
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC3
------+-------+-------+------
   2  |    3  |    4  |    3
   3  |    1  |    1  |    8
   3  |    1  |    5  |    4
   4  |    1  |    9  |    2
   5  |    3  |    3  |    4
   5  |    3  |    6  |    4
   6  | ????  |    8  |    2
 
resultcount :                     7
 
Enter command:
COMMIT WORK !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE JOIN_U ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 ( T1C1 CHAR(5) ,
                    T1C2 CHAR(5) ASCII,
                    T1C3 FIXED(6,2),
                    T1C4 FLOAT,
                    T1C5 CHAR(5) BYTE )!
 
Enter command:
CREATE TABLE TAB2 ( T2C1 CHAR(10) ,
                    T2C2 CHAR(10) ASCII,
                    T2C3 FIXED(8,2),
                    T2C4 FLOAT,
                    T2C5 CHAR(10) BYTE )!
 
Enter command:
CREATE TABLE TAB3 ( T3C1 CHAR(25) ,
                    T3C2 CHAR(25) ASCII,
                    T3C3 FIXED(10,2),
                    T3C4 FLOAT,
                    T3C5 CHAR(25) BYTE )!
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT TAB1 SET T1C1 = '111ab',
                T1C2 = '121ab',
                T1C3 = 113.01,
                T1C4 = 114.01,
                T1C5 = X'f1f5f18182' !
 
Enter command:
INSERT TAB1 SET T1C1 = '112ab',
                T1C2 = '122ab',
                T1C3 = 213.02,
                T1C4 = 214.02,
                T1C5 = X'f1f5f28182' !
 
Enter command:
INSERT TAB1 SET T1C1 = '113ab',
                T1C2 = '123ab',
                T1C3 = 313.03,
                T1C4 = 314.03,
                T1C5 = X'f1f5f38182' !
 
Enter command:
INSERT TAB1 SET T1C1 = '114ab',
                T1C2 = '124ab',
                T1C3 = 413.04,
                T1C4 = 414.04,
                T1C5 = X'f1f5f48182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '211abcde',
                T2C2 = '221abcde',
                T2C3 = 20123.01,
                T2C4 = 20124.01,
                T2C5 = X'f2f5f18182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '212abcde',
                T2C2 = '222abcde',
                T2C3 = 20223.02,
                T2C4 = 20224.02,
                T2C5 = X'f2f5f28182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '213abcde',
                T2C2 = '223abcde',
                T2C3 = 20323.03,
                T2C4 = 20324.03,
                T2C5 = X'f2f5f38182' !
 
Enter command:
INSERT TAB2 SET T2C1 = '214abcde',
                T2C2 = '224abcde',
                T2C3 = 20423.04,
                T2C4 = 20424.04,
                T2C5 = X'f2f5f48182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '311abcdefghij',
                T3C2 = '321abcdefghij',
                T3C3 = 3020123.01,
                T3C4 = 3020124.01,
                T3C5 = X'f3f5f18182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '312abcdefghij',
                T3C2 = '322abcdefghij',
                T3C3 = 3020223.02,
                T3C4 = 3020224.02,
                T3C5 = X'f3f5f28182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '313abcdefghij',
                T3C2 = '323abcdefghij',
                T3C3 = 3020323.03,
                T3C4 = 3020324.03,
                T3C5 = X'f3f5f38182' !
 
Enter command:
INSERT TAB3 SET T3C1 = '314abcdefghij',
                T3C2 = '324abcdefghij',
                T3C3 = 3020433.04,
                T3C4 = 3020434.04,
                T3C5 = X'f3f5f48182' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT DISTINCT T1C1 FROM TAB1, TAB2 GROUP BY T1C1!
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1C1
-----
111ab
112ab
113ab
114ab
 
resultcount :                     4
 
Enter command:
SELECT T1C1 FROM TAB1, TAB2 GROUP BY T1C1
   UNION SELECT T1C1 FROM TAB2, TAB1 GROUP BY T1C1!
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1C1
-----
111ab
112ab
113ab
114ab
 
resultcount :                     4
 
Enter command:
SELECT T3C1 FROM TAB2, TAB3 GROUP BY T3C1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T3C1
-------------------------
311abcdefghij
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                     4
 
Enter command:
SELECT T1C1 FROM TAB1, TAB2 GROUP BY T1C1
   UNION ALL SELECT T3C1 FROM TAB2, TAB3 GROUP BY T3C1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
112ab
113ab
114ab
311abcdefghij
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                     8
 
Enter command:
SELECT T1C1 FROM TAB1, TAB2
   UNION ALL SELECT DISTINCT T3C1 FROM TAB2, TAB3 !
 
resultcount :                    20
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
111ab
111ab
111ab
112ab
112ab
112ab
112ab
113ab
113ab
113ab
113ab
114ab
114ab
114ab
114ab
311abcdefghij
 
T1C1
-------------------------
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                    20
 
Enter command:
SELECT DISTINCT T1C1 FROM TAB1, TAB2
   UNION ALL SELECT DISTINCT T3C1 FROM TAB2, TAB3 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
112ab
113ab
114ab
311abcdefghij
312abcdefghij
313abcdefghij
314abcdefghij
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT T1C1 FROM TAB1, TAB2
   UNION ALL SELECT T3C1 FROM TAB2, TAB3 !
 
resultcount :                    20
 
Enter command:
FETCH !
 
T1C1
-------------------------
111ab
112ab
113ab
114ab
311abcdefghij
311abcdefghij
311abcdefghij
311abcdefghij
312abcdefghij
312abcdefghij
312abcdefghij
312abcdefghij
313abcdefghij
313abcdefghij
313abcdefghij
313abcdefghij
314abcdefghij
 
T1C1
-------------------------
314abcdefghij
314abcdefghij
314abcdefghij
 
resultcount :                    20
 
Enter command:
SELECT COUNT(*) FROM TAB1, TAB2 GROUP BY T1C2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          4
          4
          4
          4
 
resultcount :                     4
 
Enter command:
SELECT COUNT(*) FROM TAB3 GROUP BY T3C2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
          1
          1
          1
 
resultcount :                     4
 
Enter command:
SELECT COUNT(*) FROM TAB1, TAB2 GROUP BY T1C2
UNION ALL SELECT COUNT(*) FROM TAB3 GROUP BY T3C2 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
          1
          1
          1
          4
          4
          4
          4
 
resultcount :                     8
 
Enter command:
SELECT COUNT(*) FROM TAB1, TAB2 GROUP BY T1C2
UNION SELECT COUNT(*) FROM TAB3 GROUP BY T3C2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          1
          4
 
resultcount :                     2
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB5 ( SPALTE1 FIXED(5),
                    SPALTE2 FIXED(11,6),
                    SPALTE3 FIXED(3,3),
                    SPALTE4 FLOAT(7) ) !
 
Enter command:
CREATE TABLE TAB6 ( SPALTE1 FLOAT(12), COL2 FIXED(5,2) ) !
 
Enter command:
INSERT TAB5 VALUES ( 348  , 76543.21, - 0.623, -12.3E12 ) !
 
Enter command:
INSERT TAB5 VALUES ( -9999,        0,   0.003, 12345E-7 ) !
 
Enter command:
INSERT TAB5 VALUES (  NULL,  -5.1234,       0,     NULL ) !
 
Enter command:
INSERT TAB5 VALUES (     0,     NULL,    NULL,    3E-32 ) !
 
Enter command:
INSERT TAB6 VALUES ( 1.34E+1,   22.33 ) !
 
Enter command:
INSERT TAB6 VALUES (   -0.18, -123.07 ) !
 
Enter command:
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 ))
UNION
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 )) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2       | SPALTE3 | SPALTE4       | SPALTE1            | COL2
--------+---------------+---------+---------------+--------------------+--------
 -9999  |      0.000000 |  0.003  |  1.234500E-03 |  1.34000000000E+01 |   22.33
 -9999  |      0.000000 |  0.003  |  1.234500E-03 | -1.80000000000E-01 | -123.07
     0  | ????????????? | ?????   |  3.000000E-32 |  1.34000000000E+01 |   22.33
     0  | ????????????? | ?????   |  3.000000E-32 | -1.80000000000E-01 | -123.07
   348  |  76543.210000 | -0.623  | -1.230000E+13 |  1.34000000000E+01 |   22.33
   348  |  76543.210000 | -0.623  | -1.230000E+13 | -1.80000000000E-01 | -123.07
 
resultcount :                     6
 
Enter command:
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 ))
UNION ALL
SELECT *  FROM TAB5, TAB6 REF
   WHERE +ABS(TAB5.SPALTE1 + REF.SPALTE1 )
       > TRUNC(REF.SPALTE1 -  ABS( -REF.COL2 )) !
 
resultcount :                    12
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2       | SPALTE3 | SPALTE4       | SPALTE1            | COL2
--------+---------------+---------+---------------+--------------------+--------
 -9999  |      0.000000 |  0.003  |  1.234500E-03 |  1.34000000000E+01 |   22.33
 -9999  |      0.000000 |  0.003  |  1.234500E-03 |  1.34000000000E+01 |   22.33
 -9999  |      0.000000 |  0.003  |  1.234500E-03 | -1.80000000000E-01 | -123.07
 -9999  |      0.000000 |  0.003  |  1.234500E-03 | -1.80000000000E-01 | -123.07
     0  | ????????????? | ?????   |  3.000000E-32 |  1.34000000000E+01 |   22.33
     0  | ????????????? | ?????   |  3.000000E-32 |  1.34000000000E+01 |   22.33
     0  | ????????????? | ?????   |  3.000000E-32 | -1.80000000000E-01 | -123.07
     0  | ????????????? | ?????   |  3.000000E-32 | -1.80000000000E-01 | -123.07
   348  |  76543.210000 | -0.623  | -1.230000E+13 |  1.34000000000E+01 |   22.33
   348  |  76543.210000 | -0.623  | -1.230000E+13 |  1.34000000000E+01 |   22.33
   348  |  76543.210000 | -0.623  | -1.230000E+13 | -1.80000000000E-01 | -123.07
   348  |  76543.210000 | -0.623  | -1.230000E+13 | -1.80000000000E-01 | -123.07
 
resultcount :                    12
 
Enter command:
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ) NEU,
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ) NEU,
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL
UNION
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ),
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
 
resultcount :                     6
 
Enter command:
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ) NEU,
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL
UNION ALL
SELECT  3*TRUNC(  SPALTE3 ) / ABS(REF.COL2 * ABS(-1.0)),
        ABS ( COL2 ),
        KERN.TAB5.SPALTE4 + TRUNC(-32.7 )
  FROM TAB5,TAB6 REF WHERE TAB5.SPALTE3 IS NOT NULL !
 
resultcount :                    12
 
Enter command:
FETCH !
 
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -3.1998765500000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :    22.33
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :        0.00000000000000000000000000000000
NEU               :   123.07
EXPRESSION2       :  -1.2300000000032000000000000000000000000E+13
 
resultcount :                    12
 
Enter command:
DROP TABLE TAB5 !
 
Enter command:
DROP TABLE TAB6 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 CHAR(10) ASCII KEY,
                  T1XC2 CHAR(20) ,
                  T1XC3 FIXED(5,2) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(7,2) KEY,
                  T2XC2 CHAR(10)  KEY,
                  T2XC3 CHAR(20) ASCII ) !
 
Enter command:
CREATE TABLE T3 ( T3XC1 CHAR(15) ASCII,
                  T3XC2 CHAR(20) ,
                  T3XC3 FIXED(6,3) ) !
 
Enter command:
INSERT T1 VALUES ( 'Hans', 'Bremen', 1 ) !
 
Enter command:
INSERT T1 VALUES ( 'Karl', 'Bremen', 100 ) !
 
Enter command:
INSERT T1 VALUES ( 'Karin', 'Hamburg', NULL ) !
 
Enter command:
INSERT T1 VALUES ( 'Lisa', NULL, NULL ) !
 
Enter command:
INSERT T2 VALUES ( 20, 'Paul', 'Muenchen' ) !
 
Enter command:
INSERT T2 VALUES ( 100, 'Emil', 'Hannover' ) !
 
Enter command:
INSERT T2 VALUES ( 100, 'Emma', NULL ) !
 
Enter command:
INSERT T3 VALUES ( 'Karl', 'Hannover', 1 ) !
 
Enter command:
INSERT T3 VALUES ( 'Otto', 'Dortmund', 300 ) !
 
Enter command:
INSERT T3 VALUES ( NULL, NULL, NULL ) !
 
Enter command:
INSERT T3 VALUES ( 'Ilse', 'Hamm', 200 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM T1, T3
  WHERE T1XC2 < ALL ( SELECT T3XC2 FROM T3 WHERE T3XC2 IS NOT NULL )
    AND ( T3XC2 IN ( SELECT T2XC3 FROM T2 WHERE T2XC3 <> 'Muenchen' )
     OR T3XC2 < 'F' ) !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
 
resultcount :                     4
 
Enter command:
SELECT * FROM T1, T3
  WHERE T1XC2 < ALL ( SELECT T3XC2 FROM T3 WHERE T3XC2 IS NOT NULL )
    AND ( T3XC2 IN ( SELECT T2XC3 FROM T2 WHERE T2XC3 <> 'Muenchen' )
     OR T3XC2 < 'F' )
UNION ALL
SELECT * FROM T1, T3
  WHERE T1XC2 < ALL ( SELECT T3XC2 FROM T3 WHERE T3XC2 IS NOT NULL )
    AND ( T3XC2 IN ( SELECT T2XC3 FROM T2 WHERE T2XC3 <> 'Muenchen' )
     OR T3XC2 < 'F' ) !
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Karl
T3XC2             :  Hannover
T3XC3             :     1.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Hans
T1XC2             :  Bremen
T1XC3             :     1.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
-----------------------------------------
T1XC1             :  Karl
T1XC2             :  Bremen
T1XC3             :   100.00
T3XC1             :  Otto
T3XC2             :  Dortmund
T3XC3             :   300.000
 
resultcount :                     8
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
DROP TABLE T3 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A FIXED(5) )!
 
Enter command:
INSERT T1 SET A = 1 !
 
Enter command:
INSERT T1 SET A = 2 !
 
Enter command:
INSERT T1 SET A = 3 !
 
Enter command:
INSERT T1 SET A = 4 !
 
Enter command:
INSERT T1 SET A = 5 !
 
Enter command:
INSERT T1 SET A = 2 !
 
Enter command:
INSERT T1 SET A = 3 !
 
Enter command:
INSERT T1 SET A = 4 !
 
Enter command:
CREATE TABLE T2 ( B FIXED(5) )!
 
Enter command:
INSERT T2 SET B = 3 !
 
Enter command:
INSERT T2 SET B = 4 !
 
Enter command:
INSERT T2 SET B = 5 !
 
Enter command:
INSERT T2 SET B = 6 !
 
Enter command:
INSERT T2 SET B = 7 !
 
Enter command:
INSERT T2 SET B = 4 !
 
Enter command:
INSERT T2 SET B = 5 !
 
Enter command:
INSERT T2 SET B = 6 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM (SELECT A, A A1 FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B))
UNION
SELECT B, B FROM T2 WHERE B <> B + 10
 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A      | A1
-------+-------
     3 |      3
     4 |      4
     5 |      5
     6 |      6
     7 |      7
 
resultcount :                     5
 
Enter command:
SELECT B FROM T2,T1 WHERE A (+)= B !
 
resultcount :                    11
 
Enter command:
FETCH !
 
B
------
     3
     3
     4
     4
     5
     6
     7
     4
     4
     5
     6
 
resultcount :                    11
 
Enter command:
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1) !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A
------
     3
     4
     5
     3
     4
 
resultcount :                     5
 
Enter command:
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A = B) !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A
------
     3
     3
     4
     4
     5
 
resultcount :                     5
 
Enter command:
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B) !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A
------
     3
     3
     4
     4
     5
 
resultcount :                     5
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT * FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B) !
 
resultcount :                     5
 
Enter command:
FETCH ERG1 !
 
A
------
     3
     3
     4
     4
     5
 
resultcount :                     5
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM (SELECT A, A A1 FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B)) !
 
resultcount :                     5
 
Enter command:
SELECT * FROM ERG
UNION
SELECT B, B FROM T2 WHERE B <> B + 10
 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A      | A1
-------+-------
     3 |      3
     4 |      4
     5 |      5
     6 |      6
     7 |      7
 
resultcount :                     5
 
Enter command:
SELECT B, B FROM T2 WHERE B <> B + 10
UNION
SELECT * FROM (SELECT A, A A1 FROM T1 REF WHERE A IN
       (SELECT B FROM T2,T1 WHERE REF.A (+)= B))
 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
B      | B
-------+-------
     3 |      3
     4 |      4
     5 |      5
     6 |      6
     7 |      7
 
resultcount :                     5
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5), A2 CHAR(5)) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b'
UNION ALL
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
HUGO
-----
bbbbb
bbbbb
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) KEY, A2 CHAR(5)) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b'
UNION ALL
SELECT T2.A2 HUGO FROM T1, T1 T2
WHERE T1.A1 = T2.A1
AND T1.A2 > 'b' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
HUGO
-----
bbbbb
bbbbb
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT (KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE LEER (A CHAR)!
 
Enter command:
SELECT A FROM LEER UNION ALL SELECT A FROM <DUAL, LEER>!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL!
 
resultcount :               unknown
 
Enter command:
CREATE VIEW V AS SELECT A FROM LEER UNION ALL SELECT A FROM <DUAL, LEER>!
 
Enter command:
SELECT * FROM V !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL!
 
resultcount :               unknown
 
Enter command:
ROLLBACK WORK !
 
Enter command:
 
CREATE TABLE TA ( A FIXED(6)) !
 
Enter command:
INSERT TA SET A = 1 !
 
Enter command:
SELECT TA.* FROM <TA, TA T1> WHERE 1 = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
SELECT TA.* FROM <TA T1, TA> WHERE 1 = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
SELECT TA.* FROM <TA, TA T1> WHERE TA.A = 1 AND T1.A = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
SELECT TA.* FROM <TA T1, TA> WHERE  TA.A = 1 AND T1.A = 0
UNION ALL
SELECT TA.* FROM TA , TA T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
-------
      1
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE WORKER1 (W_NO FIXED(5) KEY, W_VORNAME CHAR(20),
             W_NAME CHAR(20) NOT NULL, W_WOHNORT FIXED(4)) !
 
Enter command:
CREATE TABLE WORKER2 (W_NO FIXED(5) KEY, GEB DATE,
             ABTEILUNG FIXED(4)) !
 
Enter command:
CREATE TABLE STADT (PLZ FIXED(4) KEY, TOWN_NAME CHAR(20))!
 
Enter command:
CREATE TABLE ABTEILUNG (ABT_NO FIXED(4) KEY, ABT_NAME CHAR(20),
                        ABT_ORT FIXED(4)) !
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE WORKER1 FOREIGN KEY WORKER (W_NO)
                        REFERENCES WORKER2 !
 
Enter command:
ALTER TABLE WORKER1 FOREIGN KEY WORKER_WOHNORT (W_WOHNORT)
                        REFERENCES STADT !
 
Enter command:
ALTER TABLE WORKER2 FOREIGN KEY WORKER_ABT (ABTEILUNG)
                        REFERENCES ABTEILUNG !
 
Enter command:
ALTER TABLE ABTEILUNG FOREIGN KEY ABT_STADT (ABT_ORT)
                        REFERENCES STADT !
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW WORKER (W_NO, VORNAME, NACHNAME, PLZ, WOHNORT,
                         GEB, ABT_NO, ABT_NAME, ABT_PLZ, ABT_STADT)
            AS SELECT
               WORKER1.W_NO, W_VORNAME, W_NAME, W_WOHNORT,
               W_STADT.TOWN_NAME, GEB, ABTEILUNG,
               ABT_NAME, ABT_ORT, ABT_STADT.TOWN_NAME
            FROM STADT ABT_STADT, ABTEILUNG, STADT W_STADT,
                 WORKER1, WORKER2
            WHERE ABT_ORT           = ABT_STADT.PLZ     AND
                  WORKER1.W_NO = WORKER2.W_NO AND
                  W_WOHNORT         = W_STADT.PLZ       AND
                  ABTEILUNG         = ABTEILUNG.ABT_NO
            WITH CHECK OPTION !
 
Enter command:
FILE SEL_COLS_TAB ( WORKER !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'WORKER'
  ORDER BY POS !
 
resultcount :                    10
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  W_NO
MOD               :  KEY
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  VORNAME
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  NACHNAME
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  PLZ
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  WOHNORT
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  GEB
MOD               :  OPT
DATATYPE          :  DATE
CODE              :
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_NO
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_NAME
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_PLZ
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ABT_STADT
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     20
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                    10
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
INSERT WORKER VALUES (1, 'Fritz', 'Meier', 1000, 'Berlin',
           '19500304', 100, 'Buchhaltung', 1000, 'Berlin') !
 
Enter command:
SELECT * FROM WORKER1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | W_VORNAME            | W_NAME               | W_WOHNORT
-------+----------------------+----------------------+----------
     1 | Fritz                | Meier                |  1000
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | GEB        | ABTEILUNG
-------+------------+----------
     1 | 19500304   |   100
 
resultcount :                     1
 
Enter command:
SELECT * FROM ABTEILUNG !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
ABT_NO | ABT_NAME             | ABT_ORT
-------+----------------------+--------
  100  | Buchhaltung          |  1000
 
resultcount :                     1
 
Enter command:
SELECT * FROM STADT !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
PLZ   | TOWN_NAME
------+---------------------
 1000 | Berlin
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     1
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     1
 
Enter command:
INSERT WORKER VALUES (2, 'Anton', 'Schmidt', 1000, 'Berlin',
           '19601105', 100, 'Buchhaltung', 1000, 'Berlin') !
 
Enter command:
INSERT WORKER VALUES (3, 'Harry', 'Hirsch', 8000, 'Muenchen',
           '19370825', 200, 'Entwicklung', 8000, 'Muenchen') !
 
Enter command:
INSERT WORKER VALUES (4, 'Stefan', 'May', 8000, 'Muenchen',
           '19370825', 200, 'Entwicklung', 8000, 'Stuttgart') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     3
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
resultcount :                     3
 
Enter command:
INSERT WORKER VALUES (2, 'Anton', 'Schmidt', 1000, 'Berlin',
           '19601105', 100, 'Buchhaltung', 1000, 'Berlin') !
 
***ERROR    200 Duplicate key                                              0108
 
Enter command:
INSERT WORKER SET W_NO    = 4,    VORNAME   = 'Willi',
                       PLZ     = 5000, WOHNORT   = 'Koeln',
                       ABT_NO  = 311,  ABT_NAME  = 'Personalwesen',
                       ABT_PLZ = 8000, ABT_STADT = 'Muenchen' !
 
***ERROR  -5005 Missing non-NULL value:NACHNAME                            0001
 
Enter command:
INSERT WORKER SET W_NO     = 4,    VORNAME   = 'Willi',
                       NACHNAME = 'Wacker',
                       PLZ      = 5000, WOHNORT   = 'Koeln',
                       ABT_NO   = 311,  ABT_NAME  = 'Personalwesen',
                       ABT_PLZ  = 8000, ABT_STADT = 'Muenchen' !
 
Enter command:
INSERT WORKER SET W_NO     = 5,    VORNAME   = 'Knut',
                       NACHNAME = 'Wuchtig',
                       WOHNORT   = 'Koeln',
                       ABT_NO   = 311,  ABT_NAME  = 'Personalwesen',
                       ABT_PLZ  = 8000, ABT_STADT = 'Muenchen' !
 
***ERROR  -5005 Missing non-NULL value:PLZ                                 0001
 
Enter command:
EXPLAIN SELECT * FROM WORKER !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | WORKER2            |                    | TABLE SCAN                               |          1
KERN               | ABTEILUNG          | ABT_NO             | JOIN VIA KEY COLUMN                      |          1
KERN               | STADT              | PLZ                | JOIN VIA KEY COLUMN                      |          1
KERN               | WORKER1            | W_NO               | JOIN VIA KEY COLUMN                      |          1
KERN               | STADT              | PLZ                | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          6
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   5000
WOHNORT           :  Koeln
GEB               :  ?????
ABT_NO            :    311
ABT_NAME          :  Personalwesen
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
resultcount :                     4
 
Enter command:
UPDATE WORKER SET GEB = '19400522' KEY W_NO = 4 !
 
Enter command:
UPDATE WORKER SET PLZ = 1000 KEY W_NO = 4 !
 
***ERROR  -5013 Missing update column:WOHNORT                              0001
 
Enter command:
UPDATE WORKER SET PLZ = 1000, WOHNORT = 'Berlin' KEY W_NO = 4 !
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    311
ABT_NAME          :  Personalwesen
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
resultcount :                     4
 
Enter command:
UPDATE WORKER SET GEB = '19400522' KEY W_NO = 4 , NACHNAME = 'A' !
 
***ERROR  -8007 Column must be key column:NACHNAME                         0063
 
Enter command:
UPDATE WORKER SET GEB = '19400522' KEY NACHNAME = 'A' !
 
***ERROR  -5003 Missing key specification:W_NO                             0001
 
Enter command:
UPDATE WORKER SET ABT_NO = 100, ABT_NAME = 'Buchhaltung'
                   KEY W_NO = 4 !
 
***ERROR  -5013 Missing update column:ABT_STADT                            0001
 
Enter command:
UPDATE WORKER SET ABT_NO  = 100,  ABT_NAME  = 'Buchhaltung',
                       ABT_PLZ = 1000, ABT_STADT = 'Berlin'
                   KEY W_NO = 4 !
 
Enter command:
COMMIT !
 
Enter command:
DECLARE RES CURSOR FOR
SELECT * FROM WORKER FOR UPDATE !
tablename    : "KERN"."WORKER"
 
resultcount :                     4
 
Enter command:
FETCH FIRST RES !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19500304
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
Enter command:
UPDATE WORKER SET GEB = '19450404' WHERE CURRENT OF RES !
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19450404
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     4
 
Enter command:
FETCH POS (2) RES INTO :A, :B, :C, :D, :E, :F, :G, :H, :I, :J !
 
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
Enter command:
UPDATE WORKER SET ABT_PLZ = 8000, ABT_STADT = 'Muenchen'
      WHERE CURRENT OF RES !
 
***ERROR  -5013 Missing update column                                      0001
 
Enter command:
UPDATE WORKER SET PLZ = 8000, WOHNORT = 'Muenchen'
      WHERE CURRENT OF RES !
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     4
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19450404
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       2
VORNAME           :  Anton
NACHNAME          :  Schmidt
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19601105
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     4
 
Enter command:
COMMIT !
 
Enter command:
DELETE WORKER WHERE CURRENT OF RES !
 
resultcount :                     1
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     3
 
Enter command:
FETCH !
 
W_NO              :       1
VORNAME           :  Fritz
NACHNAME          :  Meier
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19450404
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
-----------------------------------------
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     3
 
Enter command:
DELETE WORKER KEY W_NO = 1 !
 
Enter command:
SELECT * FROM WORKER !
 
resultcount :                     2
 
Enter command:
FETCH !
 
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
-----------------------------------------
W_NO              :       4
VORNAME           :  Willi
NACHNAME          :  Wacker
PLZ               :   1000
WOHNORT           :  Berlin
GEB               :  19400522
ABT_NO            :    100
ABT_NAME          :  Buchhaltung
ABT_PLZ           :   1000
ABT_STADT         :  Berlin
 
resultcount :                     2
 
Enter command:
SELECT * FROM WORKER1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | W_VORNAME            | W_NAME               | W_WOHNORT
-------+----------------------+----------------------+----------
     3 | Harry                | Hirsch               |  8000
     4 | Willi                | Wacker               |  1000
 
resultcount :                     2
 
Enter command:
SELECT * FROM WORKER2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
W_NO   | GEB        | ABTEILUNG
-------+------------+----------
     3 | 19370825   |   200
     4 | 19400522   |   100
 
resultcount :                     2
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW WORKER KEY W_NO = 3 IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
 
resultcount :                     2
 
Enter command:
DECLARE RES CURSOR FOR
SELECT * FROM WORKER FOR UPDATE !
tablename    : "KERN"."WORKER"
 
resultcount :                     2
 
Enter command:
FETCH FIRST RES !
 
W_NO              :       3
VORNAME           :  Harry
NACHNAME          :  Hirsch
PLZ               :   8000
WOHNORT           :  Muenchen
GEB               :  19370825
ABT_NO            :    200
ABT_NAME          :  Entwicklung
ABT_PLZ           :   8000
ABT_STADT         :  Muenchen
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW WORKER CURRENT OF RES IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  WORKER2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :      3
ROWID_HEX         :  00C130
ROWID             :
 
resultcount :                     2
 
Enter command:
DROP TABLE WORKER1 !
 
Enter command:
DROP TABLE WORKER2 !
 
Enter command:
DROP TABLE STADT !
 
Enter command:
DROP TABLE ABTEILUNG !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 * PTS 1588 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "M4SYS_MOD_USUARIO " (
"DATO"    CHAR      (1) ASCII    ,
"USUARIO" VARCHAR   (8) ASCII    ,
"COMENT"  VARCHAR   (254) ASCII    ,
"FEC_ULT_ACTUALIZAC" TIMESTAMP DEFAULT   TIMESTAMP,
"ID_USUARIO" VARCHAR   (64) ASCII    DEFAULT USER ,
PRIMARY KEY ("DATO")) !
 
Enter command:
 
CREATE TABLE "M4T_DEPARTAMENTOS " (
"ID_SOCIEDAD" VARCHAR   (2) ASCII    ,
"ID_DEPARTAMENTO" VARCHAR   (8) ASCII    ,
"N_DEPARTAMENTO" VARCHAR   (40) ASCII    NOT NULL,
"FEC_ULT_ACTUALIZAC" TIMESTAMP DEFAULT TIMESTAMP,
"COMENT" VARCHAR   (254) ASCII    ,
"ID_USUARIO" VARCHAR   (64) ASCII    DEFAULT USER,
"ID_RESPONSABLE" VARCHAR   (10) ASCII    NOT NULL
, PRIMARY KEY ("ID_SOCIEDAD" ,"ID_DEPARTAMENTO")) !
 
Enter command:
 
CREATE TABLE "M4T_HIST_DEPARTAM " (
"ID_SOCIEDAD" VARCHAR (2) ASCII  ,
"ID_EMPLEADO" VARCHAR (10) ASCII  ,
"FEC_ALTA_EMPLEADO" DATE  ,
"FEC_INICIO" DATE  ,
"FEC_FIN" DATE  ,
"COMENT" VARCHAR (254) ASCII  ,
"FEC_ULT_ACTUALIZAC" TIMESTAMP DEFAULT TIMESTAMP,
"ID_USUARIO" VARCHAR (64) ASCII  DEFAULT USER,
"ID_DEPARTAMENTO" VARCHAR (8) ASCII  NOT NULL,
"ID_MOTIVO_CAMBIO" VARCHAR (2) ASCII  DEFAULT     '0' ,
PRIMARY KEY ("ID_SOCIEDAD" ,"ID_EMPLEADO" ,"FEC_ALTA_EMPLEADO"
         ,"FEC_INICIO"),
FOREIGN KEY "FK_DEPTOS_HDEPTOS " ("ID_SOCIEDAD   " ,"ID_DEPARTAMENTO "
) REFERENCES "M4T_DEPARTAMENTOS "
("ID_SOCIEDAD   " ,"ID_DEPARTAMENTO ") ON DELETE RESTRICT ) !
 
Enter command:
 
 CREATE VIEW M4_DEPARTAMENTOS AS SELECT * FROM M4T_DEPARTAMENTOS
WITH CHECK OPTION !
 
Enter command:
 
 CREATE VIEW M4_HIST_DEPARTAM AS SELECT * FROM M4T_HIST_DEPARTAM
WITH CHECK OPTION !
 
Enter command:
 
 CREATE VIEW M4VH_1 AS SELECT H1.*, D.N_DEPARTAMENTO FROM
M4_HIST_DEPARTAM H1, M4_DEPARTAMENTOS D WHERE H1.FEC_FIN IS NULL AND
H1.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO AND H1.ID_SOCIEDAD = D.ID_SOCIEDAD
WITH CHECK OPTION !
 
Enter command:
 
 CREATE VIEW M4VH_2 AS SELECT H1.*, D.N_DEPARTAMENTO FROM
M4_HIST_DEPARTAM H1, M4_DEPARTAMENTOS D WHERE H1.FEC_FIN IS NULL AND
H1.ID_DEPARTAMENTO = D.ID_DEPARTAMENTO AND H1.ID_SOCIEDAD = D.ID_SOCIEDAD!
 
Enter command:
FILE SEL_TABLE !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER <> 'SUT'
    AND TABLENAME <> 'SEL_TAB' !
 
resultcount :                     7
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  KERN
TABLENAME         :  M4SYS_MOD_USUARIO
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4T_DEPARTAMENTOS
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4T_HIST_DEPARTAM
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4VH_1
PRIVILEGES        :  SEL+UPD+DEL+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4VH_2
PRIVILEGES        :  SEL+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4_DEPARTAMENTOS
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  M4_HIST_DEPARTAM
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
 
resultcount :                     7
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT NOT NULL) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
INSERT T2 VALUES (20, 30) !
 
Enter command:
INSERT T2 VALUES (50, 500) !
 
Enter command:
INSERT T1 VALUES (10, 20) !
 
Enter command:
INSERT T1 VALUES (20, 20) !
 
Enter command:
CREATE VIEW V1 (A,B,C) AS SELECT A1, A2, B2 FROM T1, T2 WHERE
     A2 = B1 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          20 |          30
         20 |          20 |          30
 
resultcount :                     2
 
Enter command:
COMMIT !
 
Enter command:
UPDATE V1 SET B = B + C, C = 300 + 200 KEY A = 10 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          50 |         500
         20 |          20 |          30
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          20 |          30
         20 |          20 |          30
 
resultcount :                     2
 
Enter command:
UPDATE V1 SET B = B + C, C = 300 + 200 WHERE A >= 10 !
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          50 |         500
         20 |          50 |         500
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT, A3 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT KEY, B3 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2, A3) REFERENCES T2 !
 
Enter command:
CREATE VIEW V1 AS SELECT A1, A2, A3, B3 FROM T1, T2 WHERE A2 = B1 AND
               A3 = B2 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
INSERT V1 VALUES (1,2,3,4) !
 
Enter command:
INSERT V1 VALUES (2,3,3,5) !
 
Enter command:
COMMIT !
 
Enter command:
UPDATE V1 SET A2 = 3, B3 = 5 * A1 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2          | A3          | B3
------------+-------------+-------------+------------
          1 |           3 |           3 |           5
          2 |           3 |           3 |           5
 
resultcount :                     2
 
Enter command:
UPDATE V1 SET A2 = 3, A3 = 4, B3 = 5 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2          | A3          | B3
------------+-------------+-------------+------------
          1 |           3 |           4 |           5
          2 |           3 |           3 |           5
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (S1 CHAR(5) KEY, S2 CHAR(5), S3 CHAR(5),S4 CHAR(5),
S5 CHAR(5)) !
 
Enter command:
CREATE TABLE T2 (S1 CHAR(5) KEY, S2 CHAR(5) KEY, S3 CHAR(5) KEY,
                 S5 CHAR(5)) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (S2,S3,S4) REFERENCES T2 !
 
Enter command:
CREATE VIEW V (A,B,C,D,E,F) AS SELECT
     T1.S1, T1.S2, T1.S3, T1.S4, T1.S5, T2.S5
     FROM T1, T2
     WHERE T1.S4 = T2.S3 AND
           T1.S3 = T2.S2 AND
           T1.S2 = T2.S1 AND
           T1.S5 > T2.S5 WITH CHECK OPTION !
 
Enter command:
INSERT V VALUES ('aaaaa', 'bbbbb', 'ccccc', 'd', 'fffff','eeeee') !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B     | C     | D     | E     | F
------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | d     | fffff | eeeee
 
resultcount :                     1
 
Enter command:
UPDATE V SET E = 'ggggg' KEY A = 'aaaaa' !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B     | C     | D     | E     | F
------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | d     | ggggg | eeeee
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT NOT NULL) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
INSERT T2 VALUES (20, 30) !
 
Enter command:
INSERT T2 VALUES (50, 500) !
 
Enter command:
INSERT T1 VALUES (10, 20) !
 
Enter command:
INSERT T1 VALUES (20, 50) !
 
Enter command:
COMMIT !
 
Enter command:
SELECT A1, A2, B2 FROM T1, T2 WHERE A2 = B1 !
 
resultcount :                     2
 
Enter command:
CREATE VIEW V1 (A,B,C) AS SELECT A1, A2, B2 FROM T1, T2 WHERE
     A2 = B1 WITH CHECK OPTION !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          20 |          30
         20 |          50 |         500
 
resultcount :                     2
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE V1 SET B = B + :C, C = 300 + 200 KEY A = 10 !
 
n 38 10
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A           | B           | C
------------+-------------+------------
         10 |          30 |         500
         20 |          50 |         500
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 CHAR(5)) !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5) KEY, B2 CHAR(5)) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, B2 FROM T1, T2 WHERE A2 = B1
            WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
INSERT V VALUES (10, 'bbbbb', 'ccccc') !
 
Enter command:
INSERT V VALUES (20, 'eeeee', 'fffff') !
 
Enter command:
COMMIT !
 
Enter command:
DELETE V WHERE A1 = 10 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         20 | eeeee | fffff
 
resultcount :                     1
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | bbbbb | ccccc
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE V SET A2 = :A, B2 = :B WHERE A1 = :C !
 
c 5 'xxxxx'
c 5 'yyyyy'
n 10 10
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | xxxxx | yyyyy
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT KEY, A3 INT KEY, A4 INT, A5 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT, B3 INT) !
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A4) REFERENCES T2 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, A3, A4, A5, B2, B3 FROM T1, T2
                 WHERE A4 = B1 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT V VALUES (1,1,1,10,1000,20,30) !
 
Enter command:
 
INSERT V VALUES (:A,:B,:C,:E,:F,:G,:H) !
 
n 10 2
n 10 2
n 10 2
n 10 20
n 10 50
n 10 1100
n 10 40
 
Enter command:
INSERT V VALUES (:A,:B,:C,:E,:F,:G,:H) !
 
n 10 2
n 10 2
n 10 2
n 10 20
n 10 90
n 10 1100
n 10 80
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V VALUES (:A,:B,:C,:E,:F,:G,:H) !
 
n 10 3
n 10 3
n 10 3
n 10 20
n 10 60
n 10 1100
n 10 50
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V VALUES (3,:B,3,:E,:F,:G,:H) !
 
n 10 3
n 10 20
n 10 50
n 10 1100
n 10 40
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     3
 
Enter command:
FETCH !
 
A1                :            1
A2                :            1
A3                :            1
A4                :           10
A5                :         1000
B2                :           20
B3                :           30
--------------------------------
A1                :            2
A2                :            2
A3                :            2
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
--------------------------------
A1                :            3
A2                :            3
A3                :            3
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
 
resultcount :                     3
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE V SET A4 = :D KEY A1 = :A, A2 = :B, A3 = :C !
 
***ERROR  -5013 Missing update column:B2                                   0001
 
Enter command:
 
UPDATE V SET A4 = :D , B2 = 30, B3 = 40 KEY A1 = :A, A2 = :B, A3 = :C !
 
n 10 20
n 10 1
n 10 1
n 10 1
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
UPDATE V SET A4 = :D , B2 = 1100, B3 = 40 KEY A1 = :A, A2 = :B, A3 = :C !
 
n 10 20
n 10 1
n 10 1
n 10 1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     3
 
Enter command:
FETCH !
 
A1                :            1
A2                :            1
A3                :            1
A4                :           20
A5                :         1000
B2                :         1100
B3                :           40
--------------------------------
A1                :            2
A2                :            2
A3                :            2
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
--------------------------------
A1                :            3
A2                :            3
A3                :            3
A4                :           20
A5                :           50
B2                :         1100
B3                :           40
 
resultcount :                     3
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 CHAR(5)) !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5) KEY, B2 CHAR(5)) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, B2 FROM T1, T2 WHERE A2 = B1
            WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
INSERT V VALUES (10, 'bbbbb', 'ccccc') !
 
Enter command:
INSERT V VALUES (20, 'eeeee', 'fffff') !
 
Enter command:
COMMIT !
 
Enter command:
DELETE V WHERE A1 = 10 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         20 | eeeee | fffff
 
resultcount :                     1
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | bbbbb | ccccc
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
UPDATE V SET A2 = 'xxxxx', B2 = 'yyyyy' WHERE A1 = 10 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A1          | A2    | B2
------------+-------+------
         10 | xxxxx | yyyyy
         20 | eeeee | fffff
 
resultcount :                     2
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT KEY, A2 INT) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT NOT NULL, B3 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, B3 FROM T1, T2 WHERE
                    A2 = B1 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
FILE SEL_PRIV_ON_TAB ( V !
 
Enter command:
DECLARE SEL_PRIVS CURSOR FOR
 SELECT SCHEMANAME,TABLENAME,COLUMNNAME,PRIVILEGES,GRANTOR
   FROM SYSDD.DB_PRIVILEGES
  WHERE GRANTOR NOT IN ('SUT','SUPERDBA')
    AND (SCHEMANAME = USER OR USERNAME = USER OR USERNAME = 'PUBLIC')
    AND TABLENAME = 'V' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_PRIVS INTO :A,:B,:C,:D,:E !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_PRIVS !
 
Enter command:
INSERT T2 VALUES (2,3,4) !
 
Enter command:
INSERT T1 VALUES (1,2) !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2          | B3
------------+-------------+------------
          1 |           2 |           4
 
resultcount :                     1
 
Enter command:
UPDATE V SET A2 = 3, B3 = 4 KEY A1 = 1 !
 
***ERROR  -8035 Foreign key must exist                                     0001
 
Enter command:
INSERT T2 VALUES (3,100,4) !
 
Enter command:
UPDATE V SET A2 = 3, B3 = 4 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | A2          | B3
------------+-------------+------------
          1 |           3 |           4
 
resultcount :                     1
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) ASCII KEY, A2 CHAR(5) ASCII KEY,
      A3 CHAR(5) ASCII KEY, A4 CHAR(5) ASCII ) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb','ccccc', 'ddddd') !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5) ASCII KEY, B2 CHAR(5) ASCII KEY,
      B3 CHAR(5) ASCII KEY, B4 CHAR(5)) !
 
Enter command:
INSERT T2 VALUES ('aaaaa','bbbbb','ccccc', 'ddddd') !
 
Enter command:
CREATE TABLE T3 (C1 CHAR(5) ASCII KEY, C2 CHAR(5) ASCII KEY,
      C3 CHAR(5) ASCII KEY, C4 CHAR(5) ASCII) !
 
Enter command:
INSERT T3 VALUES ('aaaaa','bbbbb','ccccc', 'ddddd') !
 
Enter command:
CREATE TABLE T4 (D1 CHAR(5) ASCII KEY, D2 CHAR(5) ASCII KEY,
      D3 CHAR(5) ASCII KEY, D4 CHAR(5)) !
 
Enter command:
INSERT T4 VALUES ('bbbbb','ccccc', 'ddddd', 'eeeee') !
 
Enter command:
SELECT A4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A4
-----
ddddd
 
resultcount :                     1
 
Enter command:
SELECT B1, A2, B3, A4, B4, C4, D4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
B1    | A2    | B3    | A4    | B4    | C4    | D4
------+-------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd | ddddd | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L  (A1,A2,A3) REFERENCES T2 !
 
Enter command:
ALTER TABLE T2 FOREIGN KEY L1 (B1,B2,B3) REFERENCES T3 !
 
Enter command:
ALTER TABLE T3 FOREIGN KEY L2 (C2,C3,C4) REFERENCES T4 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW V AS SELECT A1, A2, A3, A4, B4, C4, D4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
FILE SEL_PRIV_ON_TAB ( V !
 
Enter command:
DECLARE SEL_PRIVS CURSOR FOR
 SELECT SCHEMANAME,TABLENAME,COLUMNNAME,PRIVILEGES,GRANTOR
   FROM SYSDD.DB_PRIVILEGES
  WHERE GRANTOR NOT IN ('SUT','SUPERDBA')
    AND (SCHEMANAME = USER OR USERNAME = USER OR USERNAME = 'PUBLIC')
    AND TABLENAME = 'V' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_PRIVS INTO :A,:B,:C,:D,:E !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_PRIVS !
 
Enter command:
FILE SEL_COLS_TAB ( V !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'V'
  ORDER BY POS !
 
resultcount :                     7
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  A1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A2
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A3
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  B4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  C4
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  D4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     7
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW V KEY A1 = 'aaaaa', A2 = 'bbbbb', A3 = 'cc' IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
LOCK ROW V KEY A1 = :A, A2 = :B, A3 = :C IN EXCLUSIVE MODE !
 
c 5 'aaaaa'
c 5 'bbbbb'
c 5 'cc'
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
CREATE VIEW V1 AS SELECT B1, A2, B3, A4, B4, C4, D4 FROM T1, T2, T3, T4
     WHERE A1 = B1 AND A2 = B2 AND A3 = B3 AND
           B1 = C1 AND B2 = C2 AND B3 = C3 AND
           C2 = D1 AND C3 = D2 AND C4 = D3 WITH CHECK OPTION !
 
Enter command:
COMMIT !
 
Enter command:
FILE SEL_PRIV_ON_TAB ( V1 !
 
Enter command:
DECLARE SEL_PRIVS CURSOR FOR
 SELECT SCHEMANAME,TABLENAME,COLUMNNAME,PRIVILEGES,GRANTOR
   FROM SYSDD.DB_PRIVILEGES
  WHERE GRANTOR NOT IN ('SUT','SUPERDBA')
    AND (SCHEMANAME = USER OR USERNAME = USER OR USERNAME = 'PUBLIC')
    AND TABLENAME = 'V1' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_PRIVS INTO :A,:B,:C,:D,:E !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_PRIVS !
 
Enter command:
FILE SEL_COLS_TAB ( V1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'V1'
  ORDER BY POS !
 
resultcount :                     7
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  B1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A2
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  B3
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  A4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  B4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  C4
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  D4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     7
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
B1    | A2    | B3    | A4    | B4    | C4    | D4
------+-------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd | ddddd | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
INSERT V1 VALUES
    ('aaaaa', 'bbbbb', 'ccccc', 'xxxxx', 'vvvvv','ddddd', 'yyyyy') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V1 VALUES
    ('aaaab', 'bbbbb', 'ccccc', 'xxxxx', 'vvvvv','ddddd', 'yyyyy') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
INSERT V1 VALUES
    ('aaaac', 'bbbbb', 'ccccc', 'xxxxx', 'vvvvv','ddddd', 'zzzzz') !
 
***ERROR    360 Foreign key integrity violation                            0001
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
B1    | A2    | B3    | A4    | B4    | C4    | D4
------+-------+-------+-------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd | ddddd | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A1    | A2    | A3    | A4
------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd
 
resultcount :                     1
 
Enter command:
SELECT * FROM T2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
B1    | B2    | B3    | B4
------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd
 
resultcount :                     1
 
Enter command:
SELECT * FROM T3 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
C1    | C2    | C3    | C4
------+-------+-------+------
aaaaa | bbbbb | ccccc | ddddd
 
resultcount :                     1
 
Enter command:
SELECT * FROM T4 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
D1    | D2    | D3    | D4
------+-------+-------+------
bbbbb | ccccc | ddddd | eeeee
 
resultcount :                     1
 
Enter command:
COMMIT !
 
Enter command:
LOCK ROW V1 KEY B1 = 'aaaaa', A2 = 'bbbbb', B3 = 'cc' IN EXCLUSIVE MODE !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
COMMIT !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
LOCK ROW V1 KEY B1 = :A, A2 = :B, B3 = :C IN EXCLUSIVE MODE !
 
c 5 'aaaaa'
c 5 'bbbbb'
c 5 'cc'
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
SELECT PROCESS, USERNAME, LOCK_TIMEOUT, REQ_TIMEOUT,
LOCK_MODE, LOCK_STATE, REQ_MODE, REQ_STATE,
OWNER, TABLENAME, TABLEID, ROWID_LENGTH, ROWID_HEX, ROWID
FROM SYSDD.LOCKS WHERE TABLENAME <> 'DUAL' !
 
resultcount :                     3
 
Enter command:
FETCH !
 
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T1
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T2
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
--------------------------------------------------------------------------------
PROCESS           :           1
USERNAME          :  KERN
LOCK_TIMEOUT      :  ?????
REQ_TIMEOUT       :  ?????
LOCK_MODE         :  row_exclusive
LOCK_STATE        :  ?????
REQ_MODE          :  ?????
REQ_STATE         :  ?????
OWNER             :  KERN
TABLENAME         :  T3
TABLEID           :  0000000000000XYZ
ROWID_LENGTH      :     15
ROWID_HEX         :  206161616161206262626262206363
ROWID             :  'aaaaa'.'bbbbb'.'cc'
 
resultcount :                     3
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
DROP TABLE T3 !
 
Enter command:
DROP TABLE T4 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT, A2 INT, A3 INT, PRIMARY KEY (A1, A2)) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L1 (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V1 AS SELECT A1, B1, A3, B2 FROM T1, T2 WHERE
      A2 = B1 WITH CHECK OPTION !
 
Enter command:
INSERT V1 VALUES (1,2,3,4) !
 
Enter command:
UPDATE V1 SET A3 = 3 KEY A1 = 1, B1 = 2 !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 INT, A2 INT, A3 INT, PRIMARY KEY (A1)) !
 
Enter command:
CREATE TABLE T2 (B1 INT KEY, B2 INT) !
 
Enter command:
ALTER TABLE T1 FOREIGN KEY L1 (A2) REFERENCES T2 !
 
Enter command:
CREATE VIEW V1 AS SELECT A1, B1, A3, B2 FROM T1, T2 WHERE
      A2 = B1 WITH CHECK OPTION !
 
Enter command:
CREATE INDEX I1 ON T1 (A2) !
 
Enter command:
INSERT V1 VALUES (1,2,3,4) !
 
Enter command:
UPDATE V1 SET A3 = 3 KEY A1 = 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1          | B1          | A3          | B2
------------+-------------+-------------+------------
          1 |           2 |           3 |           4
 
resultcount :                     1
 
Enter command:
DELETE V1 WHERE A1 = 1 !
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 FIXED(3) KEY, T1XC2 FIXED(3) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(3) KEY, T2XC2 FIXED(3),
                  T2XC3 FIXED(3) ) !
 
Enter command:
ALTER TABLE T2 FOREIGN KEY T2LT1 (T2XC2) REFERENCES T1 !
 
Enter command:
CREATE VIEW V1 AS SELECT T1XC1, T1XC2, T2XC1, T2XC3
   FROM T1, T2 WHERE T1XC1 = T2XC2 WITH CHECK OPTION !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT T1 VALUES ( 5, 3 ) !
 
Enter command:
INSERT T1 VALUES ( 8, 3 ) !
 
Enter command:
INSERT T1 VALUES ( 4, 1 ) !
 
Enter command:
INSERT T1 VALUES ( 3, 1 ) !
 
Enter command:
INSERT T1 VALUES ( 2, 3 ) !
 
Enter command:
INSERT T2 VALUES ( 7, 8, 3 ) !
 
Enter command:
INSERT T2 VALUES ( 3, 5, 4 ) !
 
Enter command:
INSERT T2 VALUES ( 5, 3, 4 ) !
 
Enter command:
INSERT T2 VALUES ( 4, 2, 3 ) !
 
Enter command:
INSERT T2 VALUES ( 9, 4, 2 ) !
 
Enter command:
INSERT T2 VALUES ( 1, 3, 8 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM V1 WHERE T1XC2 < T2XC1 ORDER BY 1,2,3,4!
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC3
------+-------+-------+------
   2  |    3  |    4  |    3
   3  |    1  |    5  |    4
   4  |    1  |    9  |    2
   8  |    3  |    7  |    3
 
resultcount :                     4
 
Enter command:
INSERT V1 VALUES ( 1, 2, 6, 3 ) !
 
Enter command:
INSERT INTO V1 SET T1XC1 = 6, T2XC1 = 8, T2XC3 = 2 !
 
Enter command:
SELECT * FROM V1 ORDER BY 1,2,3,4!
 
resultcount :                     8
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC3
------+-------+-------+------
   1  |    2  |    6  |    3
   2  |    3  |    4  |    3
   3  |    1  |    1  |    8
   3  |    1  |    5  |    4
   4  |    1  |    9  |    2
   5  |    3  |    3  |    4
   6  | ????  |    8  |    2
   8  |    3  |    7  |    3
 
resultcount :                     8
 
Enter command:
UPDATE V1 SET T1XC2 = 3, T1XC1 = 5, T2XC3 = 4 KEY T2XC1 = 6 !
 
Enter command:
DELETE V1 KEY T2XC1 = 7 !
 
Enter command:
SELECT * FROM V1 ORDER BY 1,2,3,4!
 
resultcount :                     7
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC3
------+-------+-------+------
   2  |    3  |    4  |    3
   3  |    1  |    1  |    8
   3  |    1  |    5  |    4
   4  |    1  |    9  |    2
   5  |    3  |    3  |    4
   5  |    3  |    6  |    4
   6  | ????  |    8  |    2
 
resultcount :                     7
 
Enter command:
COMMIT WORK !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
