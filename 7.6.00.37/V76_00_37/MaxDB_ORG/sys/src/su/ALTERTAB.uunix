ALTERTAB.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (S1 CHAR(5 ),
                 S2 CHAR(10),
                 S3 CHAR(10)) !
 
Enter command:
INSERT T1 VALUES ('aaaa', 'aaaaa', 'aaaaaaaaaa') !
 
Enter command:
CREATE INDEX I0 ON T1 (S1) !
 
Enter command:
CREATE INDEX I1 ON T1 (S2, S1) !
 
Enter command:
CREATE INDEX I2 ON T1 (S1, S2) !
 
Enter command:
CREATE INDEX I3 ON T1 (S1, S2, S3) !
 
Enter command:
CREATE INDEX I4 ON T1 (S2, S3) !
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE T1 COLUMN S1 CHAR(5) ASCII NOT NULL !
 
Enter command:
FILE SEL_COLS_TAB ( T1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T1'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  S1
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
INSERT T1 VALUES ('bbbb', 'bbbbb', 'bbbbbb') !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
bbbb  | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
bbbb  | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
bbbb  | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
bbbb  | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1    | S2         | S3
------+------------+-----------
aaaa  | aaaaa      | aaaaaaaaaa
bbbb  | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
ALTER TABLE T1 COLUMN S1 CHAR(8) NOT NULL !
 
Enter command:
FILE SEL_COLS_TAB ( T1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T1'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  S1
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      8
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
INSERT T1 VALUES ('bbbb', 'bbbbb', 'bbbbbb') !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
ALTER TABLE T1 COLUMN S1 CHAR(8) ASCII NOT NULL !
 
Enter command:
FILE SEL_COLS_TAB ( T1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T1'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  S1
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      8
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
INSERT T1 VALUES ('bbbb', 'bbbbb', 'bbbbbb') !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
ALTER TABLE T1 COLUMN S1 ADD DEFAULT 'xxxxx' !
 
Enter command:
ALTER TABLE T1 COLUMN S1 CHAR(8) ASCII NOT NULL !
 
Enter command:
FILE SEL_COLS_TAB ( T1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T1'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  S1
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      8
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  xxxxx
--------------------------------------------------------------------------------
COLUMNNAME        :  S2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
INSERT T1 SET S2 = 'bbbbb', S3 = 'bbbbbb' !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
xxxxx    | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
xxxxx    | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
xxxxx    | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
xxxxx    | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
xxxxx    | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
ALTER TABLE T1 ADD CONSTRAINT C1 CHECK "S1" > 'a' !
 
Enter command:
ALTER TABLE T1 ADD CONSTRAINT C2 CHECK S1 > 'a' AND S2 > 'a' !
 
Enter command:
ALTER TABLE T1 ADD CONSTRAINT C3 CHECK S1 > 'a' AND S3 > 'a' !
 
Enter command:
ALTER TABLE T1 COLUMN S1 CHAR(8) ASCII NOT NULL !
 
Enter command:
FILE SEL_COLS_TAB ( T1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T1'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  S1
MOD               :  MAN
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      8
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S2
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  S3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :     10
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
FILE SEL_CONSTRAINT ( T1 !
 
Enter command:
DECLARE SEL_CONS CURSOR FOR
 SELECT OWNER,TABLENAME,CONSTRAINTNAME
   FROM DOMAIN.CONSTRAINTS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_CONS INTO :A,:B,:C !
 
OWNER             :  KERN
TABLENAME         :  T1
CONSTRAINTNAME    :  C1
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  T1
CONSTRAINTNAME    :  C2
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  T1
CONSTRAINTNAME    :  C3
 
resultcount :                     3
 
Enter command:
CLOSE SEL_CONS !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
 
resultcount :                     1
 
Enter command:
 
INSERT T1 SET S1 = 'bbbb', S2 = 'bbbbb', S3 = 'bbbbbb' !
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I0                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I0)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I1                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I1)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I2                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I2)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I3                 | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          1
 
Enter command:
SELECT /*+INDEXACCESS(I3)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
EXPLAIN
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T1                 | I4                 | INDEX SCAN                               |          1
                   |                    |                    |    RESULT IS NOT COPIED , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+INDEXACCESS(I4)*/ * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
S1       | S2         | S3
---------+------------+-----------
aaaa     | aaaaa      | aaaaaaaaaa
bbbb     | bbbbb      | bbbbbb
 
resultcount :                     2
 
Enter command:
 
INSERT T1 VALUES ('a', 'x', 'x') !
 
***ERROR    300 Integrity violation:C1,T1,KERN                             0001
 
Enter command:
INSERT T1 VALUES ('x', 'a', 'x') !
 
***ERROR    300 Integrity violation:C2,T1,KERN                             0001
 
Enter command:
INSERT T1 VALUES ('x', 'x', 'a') !
 
***ERROR    300 Integrity violation:C3,T1,KERN                             0001
 
Enter command:
CREATE TABLE T2 (S1 INT, S2 INT) !
 
Enter command:
INSERT T2 VALUES (1,1) !
 
Enter command:
ALTER TABLE T2 ADD S3 CHAR(3000) ASCII !
 
Enter command:
UPDATE T2 SET S3 = 'aaaaaaaaaaaaa' !
 
resultcount :                     1
 
Enter command:
SELECT * FROM T2 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S1                :            1
S2                :            1
S3                :  aaaaaaaaaaaaa
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE ADMI_STATS (
"DOCUMENT" VARCHAR(6) ASCII DEFAULT '000000',
"DB_SPACE_W" FLOAT(20) DEFAULT 0.0000000000000000000E+00,
"DB_SPACE_D" FLOAT(20) DEFAULT 0.0000000000000000000E+00,
"DB_CLUST_W" FLOAT(20) DEFAULT 0.0000000000000000000E+00,
"DB_CLUST_D" FLOAT(20) DEFAULT 0.0000000000000000000E+00,
"FILE_HEAD" FLOAT(20) DEFAULT 0.0000000000000000000E+00,
"FILE_DATA" FLOAT(20) DEFAULT 0.0000000000000000000E+00,
"RUN_TIME_W" VARCHAR(6) ASCII DEFAULT '000000',
"RUN_TIME_D" VARCHAR(6) ASCII DEFAULT '000000',
"INACCURATE" VARCHAR(1) ASCII DEFAULT ' ',
"DB_SPACE_L" FLOAT(20) ,
"DB_INDEX_W" FLOAT(20) ,
"DB_INDEX_D" FLOAT(20) ,
"DB_INDEX_L" FLOAT(20) ,
"DB_CLUST_L" FLOAT(20) ,
"DB_STRUC_W" FLOAT(20) ,
"DB_STRUC_D" FLOAT(20) ,
"DB_STRUC_L" FLOAT(20) ,
"JOB_TIME_W" FIXED(10,0) ,
"JOB_TIME_D" FIXED(10,0) ,
"JOB_TIME_L" FIXED(10,0) ,
"OBJ_CNT_W" FIXED(10,0) ,
"OBJ_CNT_D" FIXED(10,0) ,
"OBJ_CNT_L" FIXED(10,0) ,
"DEL_JOBCNT" FIXED(10,0),
PRIMARY KEY ("DOCUMENT"))!
 
Enter command:
 
PARS_THEN_EX!
 
Enter command:
 
ALTER TABLE "ADMI_STATS" MODIFY (
"DB_SPACE_L" DEFAULT 0 NOT NULL ,
"DB_INDEX_W" DEFAULT 0 NOT NULL ,
"DB_INDEX_D" DEFAULT 0 NOT NULL ,
"DB_INDEX_L" DEFAULT 0 NOT NULL ,
"DB_CLUST_L" DEFAULT 0 NOT NULL ,
"DB_STRUC_W" DEFAULT 0 NOT NULL ,
"DB_STRUC_D" DEFAULT 0 NOT NULL ,
"DB_STRUC_L" DEFAULT 0 NOT NULL ,
"JOB_TIME_W" DEFAULT 0 NOT NULL ,
"JOB_TIME_D" DEFAULT 0 NOT NULL ,
"JOB_TIME_L" DEFAULT 0 NOT NULL ,
"OBJ_CNT_W" DEFAULT 0 NOT NULL ,
"OBJ_CNT_D" DEFAULT 0 NOT NULL ,
"OBJ_CNT_L" DEFAULT 0 NOT NULL ,
"DEL_JOBCNT" DEFAULT 0 NOT NULL )!
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
 
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PROJECTS (ID FIXED (6) PRIMARY KEY,
    NAME CHAR(20))!
 
Enter command:
CREATE TABLE STUNDEN (ANZAHL INT)!
 
Enter command:
ALTER TABLE STUNDEN ADD PROJECT FIXED(6)
 REFERENCES PROJECTS(ID) ON DELETE SET NULL!
 
Enter command:
SELECT * FROM SYSDD.FOREIGN_KEYS  WHERE OWNER = 'KERN'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
TABLENAME         :  STUNDEN
COLUMNNAME        :  PROJECT
OWNER             :  KERN
REFNAME           :  PROJECTS_STUNDEN
REFSCHEMANAME     :  KERN
REFTABLENAME      :  PROJECTS
REFCOLUMNNAME     :  ID
REFOWNER          :  KERN
RULE              :  DELETE SET NULL
DATE              :  DATEXXXX
TIME              :  TIMEYYYY
C_COMMENT         :  ?????
COMMENT           :  ?????
KEYCOLUMNNO       :      1
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A INT)!
 
Enter command:
INSERT T VALUES (12345)!
 
Enter command:
ALTER TABLE T MODIFY A FLOAT (6)!
 
Enter command:
SELECT * FROM COLUMNS WHERE OWNER = 'KERN' AND TABLENAME = 'T'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
COLUMNNAME        :  A
MODE              :  OPT
DATATYPE          :  FLOAT
CODETYPE          :
LEN               :      6
DEC               :  ????
NULLABLE          :  YES
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
DEFAULTFUNCTION   :  ?????
DOMAINOWNER       :  ?????
DOMAINNAME        :  ?????
POS               :      1
KEYPOS            :  ?????
PHYSICALPOS       :      2
CREATEDATE        :  DATEXXXX
CREATETIME        :  TIMEYYYY
ALTERDATE         :  DATEXXXX
ALTERTIME         :  TIMEYYYY
TABLETYPE         :  TABLE
COMMENT           :  ?????
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( T_CODE INTEGER KEY NOT NULL, DESCRIPTION VARCHAR(128))!
 
Enter command:
INSERT T VALUES (1, 'aaa')!
 
Enter command:
INSERT T VALUES (2, 'bbb')!
 
Enter command:
INSERT T VALUES (3, 'ccc')!
 
Enter command:
INSERT T VALUES (4, 'ddd')!
 
Enter command:
INSERT T VALUES (5, 'eee')!
 
Enter command:
INSERT T VALUES (6, 'fff')!
 
Enter command:
COMMIT !
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
T_CODE            :            1
DESCRIPTION       :  aaa
--------------------------------------------------------------------------------
T_CODE            :            2
DESCRIPTION       :  bbb
--------------------------------------------------------------------------------
T_CODE            :            3
DESCRIPTION       :  ccc
--------------------------------------------------------------------------------
T_CODE            :            4
DESCRIPTION       :  ddd
--------------------------------------------------------------------------------
T_CODE            :            5
DESCRIPTION       :  eee
--------------------------------------------------------------------------------
T_CODE            :            6
DESCRIPTION       :  fff
 
resultcount :                     6
 
Enter command:
ALTER TABLE T MODIFY T_CODE SMALLINT!
 
Enter command:
SELECT * FROM T!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
T_CODE            :       1
DESCRIPTION       :  aaa
--------------------------------------------------------------------------------
T_CODE            :       2
DESCRIPTION       :  bbb
--------------------------------------------------------------------------------
T_CODE            :       3
DESCRIPTION       :  ccc
--------------------------------------------------------------------------------
T_CODE            :       4
DESCRIPTION       :  ddd
--------------------------------------------------------------------------------
T_CODE            :       5
DESCRIPTION       :  eee
--------------------------------------------------------------------------------
T_CODE            :       6
DESCRIPTION       :  fff
 
resultcount :                     6
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "KERN"."3_0_TEST"
(
 "ID"               FIXED (10,0)    NOT NULL    DEFAULT SERIAL (1),
 "NAME"               VARCHAR (30) ASCII,
 "DATE"               TIMESTAMP    DEFAULT TIMESTAMP,
 PRIMARY KEY ("ID")
)!
 
Enter command:
ALTER TABLE "3_0_TEST" MODIFY ("DATE" DATE) !
 
***ERROR  -7029 Function not allowed for this data type:TIMESTAMP          0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( K SERIAL PRIMARY KEY, A CHAR (15), B CHAR (15), C CHAR (15))!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
SELECT * FROM TABLESTATISTICS
WHERE OWNER = 'KERN' AND TABLENAME = 'T' AND
DESCRIPTION LIKE '%row length' !
 
resultcount :                     3
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Avg row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Min row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Max row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
 
resultcount :                     3
 
Enter command:
DROP TABLE T !
 
Enter command:
CREATE TABLE T ( K SERIAL PRIMARY KEY, A CHAR (15), B CHAR (15), C CHAR (15))
NO FIXED LENGTH COLUMN!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
INSERT INTO T (A,B,C) VALUES ('a', 'b', 'c')!
 
Enter command:
SELECT * FROM TABLESTATISTICS
WHERE OWNER = 'KERN' AND TABLENAME = 'T' AND
DESCRIPTION LIKE '%row length' !
 
resultcount :                     3
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Avg row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Min row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Max row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
 
resultcount :                     3
 
Enter command:
ALTER TABLE T DROP PRIMARY KEY !
 
Enter command:
SELECT * FROM TABLESTATISTICS
WHERE OWNER = 'KERN' AND TABLENAME = 'T' AND
DESCRIPTION LIKE '%row length' !
 
resultcount :                     3
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Avg row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           30
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Min row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           30
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Max row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           30
 
resultcount :                     3
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (K) !
 
Enter command:
SELECT * FROM TABLESTATISTICS
WHERE OWNER = 'KERN' AND TABLENAME = 'T' AND
DESCRIPTION LIKE '%row length' !
 
resultcount :                     3
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Avg row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Min row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
-------------------------------------------------------------
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
DESCRIPTION       :  Max row length
CHAR_VALUE        :  ?????
NUMERIC_VALUE     :           20
 
resultcount :                     3
 
Enter command:
SELECT * FROM TABLES
WHERE OWNER = 'KERN' AND TABLENAME = 'T'!
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  T
PRIVILEGES        :  SEL+UPD-DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
TABLETYPE         :  TABLE
CREATEDATE        :  DATEXXXX
CREATETIME        :  TIMEYYYY
UPDSTATDATE       :  DATEXXXX
UPDSTATTIME       :  TIMEYYYY
ALTERDATE         :  DATEXXXX
ALTERTIME         :  TIMEYYYY
UNLOADED          :  NO
SAMPLE_PERCENT    :  ????
SAMPLE_ROWS       :        20000
COMMENT           :  ?????
TABLEID           :  0000000000000XYZ
DYNAMIC           :  NO
ARCHIVE           :  NO
VARIABLE_COLUMNS  :  YES
VIRTUALKEY        :  NO
 
resultcount :                     1
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "KORTELE"
(
 "K_ID"               INTEGER    NOT NULL,
 "K_NR"               INTEGER    NOT NULL,
 "K_DATA"               DATE    NOT NULL,
 "K_SUNAIKINTAGYVPLOTO"               SMALLINT    DEFAULT      0,
 "K_SUNAIKINTANEGYVPLOTO"               INTEGER    DEFAULT           0,
 "K_SUGADINTAGYVPLOTO"               SMALLINT    DEFAULT      0,
 "K_SUGADITANEGYVPLOTO"               INTEGER    DEFAULT           0,
 "K_UZPILDE"               INTEGER    NOT NULL,
 "K_UZPILDATA"               DATE    NOT NULL    DEFAULT DATE,
 "K_PADALINYS"               SMALLINT    NOT NULL,
 "K_DARBU_ATLIKIMO_METAI"               SMALLINT    NOT NULL,
 "K_UZPILLAIKAS"               TIME    NOT NULL    DEFAULT TIME,
 PRIMARY KEY ("K_ID"),
 CONSTRAINT "CNSTR_DARBU_ATLIKIMO_METAI"
 CHECK K_DARBU_ATLIKIMO_METAI=YEAR(K_DATA)) !
 
Enter command:
INSERT "KORTELE"
( "K_ID",
 "K_NR" ,
 "K_DATA" ,
 "K_UZPILDE" ,
 "K_UZPILDATA",
 "K_PADALINYS" ,
 "K_DARBU_ATLIKIMO_METAI",
 "K_UZPILLAIKAS" )
VALUES
(1,2,DATE,4,DATE,5,2006,TIME)!
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE "KORTELE" MODIFY (K_SUNAIKINTAGYVPLOTO INTEGER,
K_SUGADINTAGYVPLOTO INTEGER) !
 
Enter command:
INSERT "KORTELE"
( "K_ID",
 "K_NR" ,
 "K_DATA" ,
 "K_UZPILDE" ,
 "K_UZPILDATA",
 "K_PADALINYS" ,
 "K_DARBU_ATLIKIMO_METAI",
 "K_UZPILLAIKAS" )
VALUES
(2,2,DATE,4,DATE,5,2006,TIME)!
 
Enter command:
SELECT * FROM "KORTELE"!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K_ID              :            1
K_NR              :            2
K_DATA            :  DATEXXXX
K_SUNAIKINTAGYVPLOTO
K_SUNAIKINTAGYV...:            0
K_SUNAIKINTANEGYVPLOTO
K_SUNAIKINTANEG...:            0
K_SUGADINTAGYVPLOTO
K_SUGADINTAGYVP...:            0
K_SUGADITANEGYVPLOTO
K_SUGADITANEGYV...:            0
K_UZPILDE         :            4
K_UZPILDATA       :  DATEXXXX
K_PADALINYS       :       5
K_DARBU_ATLIKIMO_METAI
K_DARBU_ATLIKIM...:    2006
K_UZPILLAIKAS     :  TIMEYYYY
-------------------------------------------
K_ID              :            2
K_NR              :            2
K_DATA            :  DATEXXXX
K_SUNAIKINTAGYVPLOTO
K_SUNAIKINTAGYV...:            0
K_SUNAIKINTANEGYVPLOTO
K_SUNAIKINTANEG...:            0
K_SUGADINTAGYVPLOTO
K_SUGADINTAGYVP...:            0
K_SUGADITANEGYVPLOTO
K_SUGADITANEGYV...:            0
K_UZPILDE         :            4
K_UZPILDATA       :  DATEXXXX
K_PADALINYS       :       5
K_DARBU_ATLIKIMO_METAI
K_DARBU_ATLIKIM...:    2006
K_UZPILLAIKAS     :  TIMEYYYY
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A INT, B INT, PRIMARY KEY (A))!
 
Enter command:
ALTER TABLE T ALTER PRIMARY KEY (A,C)!
 
***ERROR  -4005 Unknown column name:C                                      0036
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SELECT COUNT(*) FROM ROOTS WHERE TABLEID < X'8000000000000000'!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
         70
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (A INT, L LONGFILE)!
 
Enter command:
INSERT T VALUES (1, 'abc') !
 
Enter command:
COMMIT !
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (A)!
 
Enter command:
ROLLBACK !
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A           | L
------------+---------------------------------------------------
          1 | abc
 
resultcount :                     1
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (A)!
 
Enter command:
COMMIT !
 
Enter command:
INSERT T VALUES (2, 'abc') !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
A           | L
------------+---------------------------------------------------
          1 | abc
          2 | abc
 
resultcount :                     2
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SELECT COUNT(*) FROM ROOTS WHERE TABLEID < X'8000000000000000'!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
         70
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A INT, B CHAR (150) UNICODE, C CHAR (150) UNICODE)!
 
Enter command:
INSERT T VALUES (1, 'bbbbb', 'ccccc')!
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (A)!
 
Enter command:
ALTER TABLE T ADD D CHAR (150) UNICODE!
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A                 :            1
B                 :  bbbbb
C                 :  ccccc
D                 :  ?????
 
resultcount :                     1
 
Enter command:
ALTER TABLE T MODIFY A FIXED (12) !
 
Enter command:
ALTER TABLE T MODIFY A INT !
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A                 :            1
B                 :  bbbbb
C                 :  ccccc
D                 :  ?????
 
resultcount :                     1
 
Enter command:
UPDATE T SET D = 'ddd' !
 
resultcount :                     1
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A                 :            1
B                 :  bbbbb
C                 :  ccccc
D                 :  ddd
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER SNR_TEST PASSWORD SNR_TEST DBA NOT EXCLUSIVE
!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SNR_TEST SNR_TEST !
 
Enter command:
CONNECT SNR_TEST IDENTIFIED BY SNR_TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE SNR_SYSTEM_MESSAGES
 (SSM_ID INTEGER NOT NULL DEFAULT SERIAL PRIMARY KEY
 ,MOD_ID INTEGER
 ,DATASET_VERSION INTEGER NOT NULL DEFAULT 1
 ,MESSAGE_NO INTEGER NOT NULL
 ,MESSAGE_CLASS VARCHAR(3) NOT NULL
 CONSTRAINT SSM_CHK_MSG_CLASS CHECK MESSAGE_CLASS IN
 ('CFM','CHK','PUT','DEL','UPD','SYS','DB','CON','NET','MSG')
 ,MESSAGE_TEXT VARCHAR(50) NOT NULL
 ,DESCRIPTION VARCHAR(300)
 ,CREATE_DATE TIMESTAMP NOT NULL DEFAULT TIMESTAMP
 ,CREATE_USER VARCHAR(50) NOT NULL DEFAULT USER
 ,UPDATE_DATE TIMESTAMP
 ,UPDATE_USER VARCHAR(50)
 ,CONSTRAINT SSM_UK_I UNIQUE (MESSAGE_NO)
 )
!
 
Enter command:
 
CREATE TABLE SNR_SYSTEM_LOG
 (SSL_ID INTEGER NOT NULL DEFAULT SERIAL PRIMARY KEY
 ,SSM_ID INTEGER
 ,SSL_DATE TIMESTAMP NOT NULL DEFAULT TIMESTAMP
 ,MESSAGE_CLASS VARCHAR(3) NOT NULL
 CONSTRAINT SSL_CHK_MSG_CLASS CHECK MESSAGE_CLASS IN
 ('CFM','CHK','PUT','DEL','UPD','SYS','DB','CON','NET','MSG')
 ,CALLING_USER VARCHAR(50) NOT NULL DEFAULT USER
 ,DB_MESSAGE_NO INTEGER
 ,DB_MESSAGE_TEXT VARCHAR(300)
 ,DESCRIPTION VARCHAR(300)
 )
!
 
Enter command:
CREATE TABLE TEST_CENTRES
 (TCE_ID INTEGER NOT NULL DEFAULT SERIAL PRIMARY KEY
 ,DATASET_VERSION INTEGER NOT NULL DEFAULT 1
 ,TEST_CENTRE_NAME VARCHAR(50) NOT NULL
 ,LOCAL_TEST_CENTRE_FLAG VARCHAR(1) NOT NULL DEFAULT 'N'
 CONSTRAINT TCE_CHK_LOCAL_TCE CHECK LOCAL_TEST_CENTRE_FLAG IN ('Y','N')
 ,LOCATION VARCHAR(50) NOT NULL
 ,DESCRIPTION VARCHAR(300)
 ,CREATE_DATE TIMESTAMP NOT NULL DEFAULT TIMESTAMP
 ,CREATE_USER VARCHAR(50) NOT NULL DEFAULT USER
 ,UPDATE_DATE TIMESTAMP
 ,UPDATE_USER VARCHAR(50)
 ,CONSTRAINT TCE_UK1_I UNIQUE (TEST_CENTRE_NAME)
 )
!
 
Enter command:
CREATE PUBLIC SYNONYM TEST_CENTRES FOR TEST_CENTRES
!
 
Enter command:
CREATE DBPROC SNR_PUT_SYSTEM_LOG
 (IN  PIN_MSG_NO_IN       INTEGER
 ,IN  PIN_MSG_CLASS       CHAR(3)
 ,IN  PIN_MSG_TEXT        CHAR(80)
 ,IN  PIN_DESCRIPTION     CHAR(300)
 ,IN  PIN_CURRENT_USER    CHAR(50)
 ,OUT POUT_MSG_NO_OUT     INTEGER
 ) AS
 
 
VAR
  V_MSG_NO          INTEGER;
  V_MSG_CLASS       CHAR(3);
  V_DESCRIPTION     CHAR(300);
  V_CURRENT_USER    CHAR(50);
  V_DB_MESSAGE_NO   INTEGER;
  V_DB_MESSAGE_TEXT CHAR(80);
  V_DB_RETURN_CODE  INTEGER;
  V_DB_ERROR_MSG    CHAR(80);
  V_SSM_ID          INTEGER;
  V_MSG_NO_OUT      INTEGER;
 
TRY
 
  SET V_MSG_NO = PIN_MSG_NO_IN;
  SET V_MSG_CLASS = PIN_MSG_CLASS;
  SET V_DB_MESSAGE_TEXT = PIN_MSG_TEXT;
  SET V_DESCRIPTION = PIN_DESCRIPTION;
  SET V_CURRENT_USER = PIN_CURRENT_USER;
  SET V_DB_RETURN_CODE = 77777777;
  SET V_DB_ERROR_MSG = '## SNR_INIT ##';
  SET V_DB_MESSAGE_NO = 77777777;
  SET V_SSM_ID = 0;
  SET V_MSG_NO_OUT = 77777777;
 
  IF (V_MSG_CLASS IS NOT NULL) AND (V_CURRENT_USER IS NOT NULL)
  AND (V_MSG_NO IS NOT NULL) THEN
    BEGIN /* (V_MSG_CLASS IS NOT NULL) AND (V_CURRENT_USER IS NOT NULL)
     AND (V_MSG_NO IS NOT NULL) */
      IF V_MSG_CLASS = 'DB' THEN  /* SYSTEM MESSAGE FROM DB SERVER */
        BEGIN /* V_MSG_CLASS = 'DB' */
          SET V_DB_MESSAGE_NO = PIN_MSG_NO_IN;
          SET V_SSM_ID = NULL;
          INSERT INTO SNR_TEST.SNR_SYSTEM_LOG
            (MESSAGE_CLASS,SSM_ID,DB_MESSAGE_NO,
            DB_MESSAGE_TEXT,DESCRIPTION)
            VALUES
            (:V_MSG_CLASS,:V_SSM_ID,:V_DB_MESSAGE_NO,
            :V_DB_MESSAGE_TEXT,:V_DESCRIPTION);
          SET V_MSG_NO_OUT = 101;
          /* SNR1 CONFIRM: SNR_PUT_SYS_LOG_OK */
        END /* V_MSG_CLASS = 'DB' */
      ELSE
        BEGIN /* V_MSG_CLASS <> 'DB' */
          SET V_DB_MESSAGE_NO = NULL;
          SELECT SSM_ID,MESSAGE_CLASS INTO :V_SSM_ID,:V_MSG_CLASS
           /* QUERY FOR SNR1 SYSTEM MESSAGE ID */
            FROM SNR_TEST.SNR_SYSTEM_MESSAGES
            WHERE MESSAGE_NO = :V_MSG_NO;
          INSERT INTO SNR_TEST.SNR_SYSTEM_LOG
            (MESSAGE_CLASS,SSM_ID,DB_MESSAGE_NO,
            DB_MESSAGE_TEXT,DESCRIPTION)
            VALUES
            (:V_MSG_CLASS,:V_SSM_ID,:V_DB_MESSAGE_NO,
            :V_DB_MESSAGE_TEXT,:V_DESCRIPTION);
          SET V_MSG_NO_OUT = 101;
          /* SNR1 ERROR: SNR_PUT_SYS_LOG_OK */
        END; /* V_MSG_CLASS <> 'DB' */
    END  /* (V_MSG_CLASS IS NOT NULL) AND
    (V_CURRENT_USER IS NOT NULL) AND (V_MSG_NO IS NOT NULL) */
  ELSE
    BEGIN /* (V_MSG_CLASS IS NULL) OR
    (V_CURRENT_USER IS NULL) OR (V_MSG_NO IS NOT NULL) */
      SET V_MSG_NO_OUT = 301; /* SNR1 ERROR: SNR_PUT_SYS_LOG_ERR */
      SET V_DB_MESSAGE_NO = NULL;
      SET V_DB_MESSAGE_TEXT = NULL;
      IF V_MSG_CLASS IS NULL THEN
        SET V_DESCRIPTION = '## ERROR: pin_msg_class IS NULL;'
      ELSE
        SET V_DESCRIPTION = '## ERROR: ';
      IF V_CURRENT_USER IS NULL THEN
        BEGIN /* V_CURRENT_USER IS NULL */
          SET V_CURRENT_USER = USER;
          SET V_DESCRIPTION = V_DESCRIPTION||
          ' pin_current_user IS NULL;';
        END;  /* V_CURRENT_USER IS NULL */
      IF V_MSG_NO IS NULL THEN
        SET V_DESCRIPTION = V_DESCRIPTION||' pin_msg_no IS NULL';
      SET V_DESCRIPTION = V_DESCRIPTION||' ##';
      SELECT SSM_ID,MESSAGE_CLASS INTO :V_SSM_ID,:V_MSG_CLASS
      /* QUERY FOR SNR1 SYSTEM MESSAGE ID */
        FROM SNR_TEST.SNR_SYSTEM_MESSAGES
        WHERE MESSAGE_NO = :V_MSG_NO_OUT;
      INSERT INTO SNR_TEST.SNR_SYSTEM_LOG
        (MESSAGE_CLASS,SSM_ID,DB_MESSAGE_NO,DB_MESSAGE_TEXT,DESCRIPTION)
        VALUES
        (:V_MSG_CLASS,:V_SSM_ID,:V_DB_MESSAGE_NO,
        :V_DB_MESSAGE_TEXT,:V_DESCRIPTION);
    END;  /* (V_MSG_CLASS IS NULL) OR NO IS NOT NULL) */
 
CATCH
  BEGIN /* BEGIN CATCH BLOCK: OTHER DB ERRORS */
    SET V_DB_RETURN_CODE = $RC;
    IF V_DB_RETURN_CODE <> 0 THEN /* VERIFY IF DB ERRORS OCCURED */
      BEGIN /* V_DB_RETURN_CODE <> 0 */
        SET V_MSG_NO_OUT = 301; /* SNR1 ERROR: SNR_PUT_SYS_LOG_ERR */
        SET V_DB_ERROR_MSG = $ERRMSG;
        SET V_DESCRIPTION = '## ERROR when INSERT in SNR_SYSTEM_LOG ##';
        INSERT INTO SNR_TEST.SNR_SYSTEM_LOG
          (MESSAGE_CLASS,SSM_ID,DB_MESSAGE_NO,DB_MESSAGE_TEXT,DESCRIPTION)
        VALUES
          ('DB',NULL,:V_DB_RETURN_CODE,:V_DB_ERROR_MSG,:V_DESCRIPTION);
      END;  /* V_DB_RETURN_CODE <> 0 */
  END;  /* END CATCH BLOCK: OTHER DB ERRORS */
 
SET POUT_MSG_NO_OUT = V_MSG_NO_OUT;
!
 
Enter command:
 
CREATE DBPROC SNR_CHECK_LOCAL_TEST_CENTRE
 (IN  PIN_CURRENT_USER   CHAR(50)
 ,OUT POUT_CHECK_RESULT  BOOLEAN
 ,OUT POUT_MSG_NO_OUT    INTEGER
 ,OUT POUT_DESCR_OUT     CHAR(300)
 ) AS
 
 
VAR
  V_CURRENT_USER            CHAR(50);
  V_LOCAL_TEST_CENTRE_COUNT INTEGER;
  V_MSG_NO_OUT              INTEGER;
  V_MSG_NO_IN               INTEGER;
  V_CHECK_RESULT            BOOLEAN;
  V_DESCRIPTION             CHAR(300);
  V_MSG_CLASS               CHAR(3);
  V_DB_RETURN_CODE          INTEGER;
  V_DB_ERROR_MSG            CHAR(80);
 
TRY
  SET V_CURRENT_USER = PIN_CURRENT_USER;
  SET V_LOCAL_TEST_CENTRE_COUNT = -1;
  SET V_CHECK_RESULT = FALSE;
  SET V_MSG_NO_OUT = 7777777;
  SET V_MSG_NO_IN = 7777777;
  SET V_DESCRIPTION = '## SNR_INIT ##';
  SET V_MSG_CLASS = '###';
  SET V_DB_RETURN_CODE = 77777777;
  SET V_DB_ERROR_MSG = '## SNR_INIT ##';
 
  IF (V_CURRENT_USER IS NOT NULL) THEN
    BEGIN /* V_CURRENT_USER IS NOT NULL */
      SELECT COUNT(*) INTO :V_LOCAL_TEST_CENTRE_COUNT
        FROM SNR_TEST.TEST_CENTRES
        WHERE LOCAL_TEST_CENTRE_FLAG = 'Y';
      IF (V_LOCAL_TEST_CENTRE_COUNT <= 1) THEN
        BEGIN /* (V_LOCAL_TEST_CENTRE_COUNT <= 1) */
          SET V_MSG_NO_OUT = 122;
          /* SNR1 SYSTEM MESSAGE: SNR_CHECK_TCE_OK */
          SET V_CHECK_RESULT = TRUE;
          SET V_DESCRIPTION = '## OK: not more than but ONE ';
        END   /* (V_LOCAL_TEST_CENTRE_COUNT <= 1) */
      ELSE
        BEGIN /* (V_LOCAL_TEST_CENTRE_COUNT > 1) */
          SET V_MSG_NO_OUT = 212;
          /* SNR1 SYSTEM MESSAGE: SNR_LOCAL_TCE_ERR */
          SET V_CHECK_RESULT = FALSE;
          SET V_DESCRIPTION = '## ERROR: more than but ';
        END;  /* (V_LOCAL_TEST_CENTRE_COUNT > 1) */
    END   /* V_CURRENT_USER IS NOT NULL */
  ELSE
    BEGIN /* V_CURRENT_USER IS NULL */
      SET V_MSG_NO_OUT = 521;
      /* SNR1 SYSTEM MESSAGE: SNR_CHECK_TCE_ERR */
      SET V_CHECK_RESULT = FALSE;
      SET V_DESCRIPTION = '## ERROR: missing test centre ';
    END;  /* V_CURRENT_USER IS NULL */
 
CATCH
  BEGIN /* CATCH BLOCK: OTHER DB ERRORS */
    SET V_DB_RETURN_CODE = $RC;
    IF V_DB_RETURN_CODE <> 0 THEN /* CHECK IF DB ERRORS OCCURRED */
      BEGIN /* V_DB_RETURN_CODE <> 0 */
        SET V_MSG_NO_OUT = 521;
        /* SNR1 SYSTEM MESSAGE: SNR_CHECK_TCE_ERR */
        SET V_CHECK_RESULT = FALSE;
        SET V_MSG_CLASS = 'DB';
        SET V_DB_ERROR_MSG = $ERRMSG;
        SET V_DESCRIPTION = '## ERROR while executing ';
        CALL SNR_TEST.SNR_PUT_SYSTEM_LOG(:V_DB_RETURN_CODE,
        :V_MSG_CLASS,:V_DB_ERROR_MSG,:V_DESCRIPTION,
        :V_CURRENT_USER,:V_MSG_NO_IN);
      END;  /* V_DB_RETURN_CODE <> 0 */
  END;  /* CATCH BLOCK: OTHER DB ERRORS */
 
SET POUT_CHECK_RESULT = V_CHECK_RESULT;
SET POUT_MSG_NO_OUT = V_MSG_NO_OUT;
SET POUT_DESCR_OUT = V_DESCRIPTION;
!
 
Enter command:
 
 
 
CREATE TRIGGER TRG_AFT_INS_TCE FOR TEST_CENTRES
  AFTER INSERT
    EXECUTE (
      VAR
        V_DESCRIPTION     CHAR(300);
        V_MSG_NO_IN       INTEGER;
        V_MSG_NO_OUT      INTEGER;
        V_CHECK_RESULT    BOOLEAN;
      CALL SNR_TEST.SNR_CHECK_LOCAL_TEST_CENTRE
      (USER,:V_CHECK_RESULT,:V_MSG_NO_IN,:V_DESCRIPTION);
      IF NOT V_CHECK_RESULT THEN
        BEGIN /* V_CHECK_RESULT = FALSE */
          UPDATE SNR_TEST.TEST_CENTRES
            SET LOCAL_TEST_CENTRE_FLAG = 'N'
            ,DESCRIPTION = :V_DESCRIPTION;
          CALL SNR_TEST.SNR_PUT_SYSTEM_LOG
          (:V_MSG_NO_IN,'CHK','INSERT of TEST_CENTRES',:V_DESCRIPTION,
          USER,:V_MSG_NO_OUT);
        END;  /* V_CHECK_RESULT = FALSE */
  )
!
 
Enter command:
CREATE TRIGGER TRG_AFT_UPD_TCE FOR TEST_CENTRES
  AFTER UPDATE (TCE_ID
    ,TEST_CENTRE_NAME
    ,LOCAL_TEST_CENTRE_FLAG
    ,LOCATION
    ,CREATE_DATE
    ,CREATE_USER)
    EXECUTE (
      VAR
        V_DESCRIPTION     CHAR(300);
        V_DESCR_ERR       CHAR(300);
        V_MSG_NO_IN       INTEGER;
        V_MSG_NO_OUT      INTEGER;
        V_CHECK_RESULT    BOOLEAN;
      CALL SNR_TEST.SNR_CHECK_LOCAL_TEST_CENTRE
      (USER,:V_CHECK_RESULT,:V_MSG_NO_IN,:V_DESCR_ERR);
      IF NOT V_CHECK_RESULT THEN
        BEGIN /* V_CHECK_RESULT = FALSE */
          CALL SNR_TEST.SNR_PUT_SYSTEM_LOG(:V_MSG_NO_IN,
          'CHK','UPDATE on TEST_CENTRES',:V_DESCR_ERR,USER,
          :V_MSG_NO_OUT);
          SELECT SUBSTR('Old values:tce_id='||CHR(:OLD.TCE_ID)
              ||';dataset_version='||CHR(:OLD.DATASET_VERSION)
              ||';test_centre_name='||TRIM(:OLD.TEST_CENTRE_NAME)
              ||';create_date='||CHAR(:OLD.CREATE_DATE)
              ||';create_user='||TRIM(:OLD.CREATE_USER),1,300)
            INTO :V_DESCRIPTION
            FROM SNR_TEST.TEST_CENTRES
            WHERE TCE_ID = :OLD.TCE_ID;
          CALL SNR_TEST.SNR_PUT_SYSTEM_LOG(500,'SYS',
          'UPDATE on TEST_CENTRES',:V_DESCRIPTION,USER,:V_MSG_NO_OUT);
          UPDATE SNR_TEST.TEST_CENTRES
            SET LOCAL_TEST_CENTRE_FLAG = 'N'
            ,DESCRIPTION = :V_DESCR_ERR
            ,UPDATE_USER = USER
            ,UPDATE_DATE = TIMESTAMP
            ,DATASET_VERSION = :OLD.DATASET_VERSION + 1;
        END  /* V_CHECK_RESULT = FALSE */
      ELSE
        BEGIN /* V_CHECK_RESULT = TRUE */
          SELECT SUBSTR('Old values:tce_id='||CHR(:OLD.TCE_ID)
              ||';dataset_version='||CHR(:OLD.DATASET_VERSION)
              ||';test_centre_name='||TRIM(:OLD.TEST_CENTRE_NAME)
              ||';create_date='||CHAR(:OLD.CREATE_DATE)
              ||';create_user='||TRIM(:OLD.CREATE_USER),1,300)
            INTO :V_DESCRIPTION
            FROM SNR_TEST.TEST_CENTRES
            WHERE TCE_ID = :OLD.TCE_ID;
          CALL SNR_TEST.SNR_PUT_SYSTEM_LOG(0,'CFM','UPDATE on TEST_CENTRES',
          :V_DESCRIPTION,USER,:V_MSG_NO_OUT);
          UPDATE SNR_TEST.TEST_CENTRES
            SET UPDATE_USER = USER
              ,UPDATE_DATE = TIMESTAMP
              ,DATASET_VERSION = :OLD.DATASET_VERSION + 1
            WHERE TCE_ID = :OLD.TCE_ID;
        END;  /* V_CHECK_RESULT = TRUE */
  )
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,0,'CFM','SNR_OP_OK',
  'OK: no error; transaktion successfully finished')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,500,'SYS','SNR_OP_ERR',
  'ERROR: an error occurred; dataset disabled')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,101,'CFM','SNR_PUT_SYS_LOG_OK',
  'OK: new entry in system log was successful')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,301,'PUT','SNR_PUT_SYS_LOG_PUT_ERR',
  'ERROR when inserting in SNR1 system log')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,122,'CFM','SNR_CHECK_TCE_OK',
  'OK: Not more than one flagged local test centre detected')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,212,'CHK','SNR_LOCAL_TCE_ERR',
  'ERROR More then one flagged local test centre detected')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_SYSTEM_MESSAGES
  (MOD_ID,MESSAGE_NO,MESSAGE_CLASS,MESSAGE_TEXT,DESCRIPTION)
  VALUES
  (NULL,521,'SYS','SNR_CHECK_TCE_ERR',
  'ERROR when calling the module')
!
 
Enter command:
COMMIT
!
 
Enter command:
 
INSERT INTO SNR_TEST.TEST_CENTRES
  (TEST_CENTRE_NAME,LOCAL_TEST_CENTRE_FLAG,LOCATION,DESCRIPTION)
  VALUES
  ('IMO TeCH','Y','Hamburg','local test centre')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_TEST.TEST_CENTRES
  (TEST_CENTRE_NAME,LOCAL_TEST_CENTRE_FLAG,LOCATION,DESCRIPTION)
  VALUES
  ('PST','N','Bangkok','local test centre')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_TEST.TEST_CENTRES
  (TEST_CENTRE_NAME,LOCAL_TEST_CENTRE_FLAG,LOCATION,DESCRIPTION)
  VALUES
  ('PSK','Y','Kaohsiung','local test centre')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_TEST.TEST_CENTRES
  (TEST_CENTRE_NAME,LOCAL_TEST_CENTRE_FLAG,LOCATION,DESCRIPTION)
  VALUES
  ('PSC','Y','Calamba','local test centre')
!
 
Enter command:
COMMIT
!
 
Enter command:
INSERT INTO SNR_TEST.TEST_CENTRES
  (TEST_CENTRE_NAME,LOCAL_TEST_CENTRE_FLAG,LOCATION,DESCRIPTION)
  VALUES
  ('IMO TCN','Y','Nyjmegen','local test centre')
!
 
Enter command:
COMMIT
!
 
Enter command:
ALTER TABLE TEST_CENTRES ADD
(PRODUCTION_HOST VARCHAR(15) ,PRODUCTION_DB_NAME VARCHAR(8) )!
 
Enter command:
UPDATE TEST_CENTRES
SET PRODUCTION_HOST='localhost'
,PRODUCTION_DB_NAME='S_TEST'!
 
resultcount :                     5
 
Enter command:
ALTER TABLE TEST_CENTRES MODIFY (PRODUCTION_HOST VARCHAR(15) NOT NULL,
PRODUCTION_DB_NAME VARCHAR(8) NOT NULL)!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER SNR_TEST !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 * PTS 1131705 / 1137199 / 1137201 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 CREATE TABLE "C""ITY"
(
 "ZIP"               CHAR (5) ASCII    NOT NULL,
 "N""AME"""    CHAR (30) ASCII    NOT NULL,
 "S""TATE"      CHAR (2) ASCII    NOT NULL
)!
 
Enter command:
ALTER TABLE "C""ITY" ADD CONSTRAINT ABC CHECK "N""AME""" IS NOT NULL!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
