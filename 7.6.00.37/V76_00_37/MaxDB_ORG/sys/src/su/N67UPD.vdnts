*   *ID* N67UPD   VDNTEST  changed on 1992-09-28-13.27.03 by ADMIN     *
file xinitdbk !
file connect ( kern test !
create table t1 ( t1xc1 fixed(5) key,
                  t1xc2 char(10) ,
                  t1xc3 char(10)  ) !
create table t2 ( t2xc1 fixed(5) key,
                  t2xc2 char(10) ,
                  t2xc3 char(10)  ) !
insert t1 values ( 5, 'aa', 'ddd' ) !
insert t2 values ( 3, 'ff', 'kkk' ) !
commit work !
update t1 ref1 ( t1xc3 ) values ( 'aaa' ) !
update t1 ref1 set t1xc2 = 'bb' !
update t1 ref1 set t1xc2 = ref1.t1Xc2 || 'b' !
update of t1 ref1 set t1xc2 = ref1.t1Xc2 || 'b' key t1xc1 = 5 !
select * from t1 !
fetch !
rollback work !
update t1 ref1 set t1xc3 = ref1.t1xc2 where ref1.t1xc2 = 'aa' !
update t1 ref1
   set t1xc3 = ref1.t1xc2 & ref1.t1xc3, t1xc2 = substr(ref1.t1xc2,1)
   where ref1.t1xc2 >= 'aa' !
update t1 ref1 set t1xc3 = ref1.t1xc2
   key t1xc1 = 5 where ref1.t1xc2 < ref1.t1xc3 !
select * from t1 !
fetch !
rollback work !
update t1 ref1 set t1xc3 = 'bbb'
  where ref1.t1xc2 < ( select t2xc2 from t2 where ref1.t1xc1 > t2xc1 ) !
rollback work !
update t1 ref1 set t1xc2 = 'fff'
  where ref1.t1xc1 < ( select sum(t2xc1) from t2
  where ref1.t1xc2 < ( select max(t2xc2) from t2
  where ref1.t1xc3 < t2xc2 )) !
rollback work !
update t1 ref1 set t1xc2 = 'ggg' where t1.t1xc1 = 5 !
update t1 ref1 set t1.t1xc2 = 'ggg' !
update t1 set t1xc2 = 'hhh'
  where t1xc1 > ( select sum(t2xc1) from t2 where t1.t1xc3 < t2xc3 ) !
update t1 ref1 set t1xc3 = 'ddd'
  where exists ( select * from t2 ref2 where ref1.t1xc1 <
  ( select max(t2xc1) from t2 where ref2.t2xc2 < ref1.t1xc2 ) ) !
drop table t1 !
drop table t2 !
commit !
CREATE TABLE T ( A DATE)!
* had problems with date-time-format and datatype-compatibility !
INSERT T SET A = DATE!
UPDATE T SET A = (SELECT DATE FROM DUAL)!
SET FORMAT EUR!
UPDATE T SET A = (SELECT DATE FROM DUAL)!
UPDATE T SET A = (SELECT DATE FROM DUAL
                  UNION
                  SELECT DATE FROM DUAL)!
set format internal!
rollback work release !
file connect ( kern test !
create table t (a char (8) ascii key, b char (8)) !
insert t values ('aaa', 'bbb')!
insert t values ('kkk', 'b2')!
commit !
delete t key a = 'aaa' !
select * from sysdd.locks where tablename <> 'DUAL' !
fetch !
rollback !
pars_then_ex !
delete t key a = 'aaa' !
pars_execute!
select * from sysdd.locks where tablename <> 'DUAL' !
fetch !
rollback !
pars_execute!
delete t where b = 'bbb'!
select * from sysdd.locks where tablename <> 'DUAL' !
fetch !
rollback !
pars_then_ex !
delete t where b = 'bbb'!
pars_execute!
select * from sysdd.locks where tablename <> 'DUAL' !
fetch !
rollback !
pars_execute!
update t set b = 'xyz' where b = 'bbb'!
select * from sysdd.locks where tablename <> 'DUAL' !
fetch !
rollback !
pars_then_ex !
update t set b = 'xyz' where b = 'bbb'!
pars_execute!
select * from sysdd.locks where tablename <> 'DUAL' !
fetch !
rollback !
drop table t!
commit release !
connect kern identified by test isolation level  9 !
* wuerth'sches ISOLEVEL together with WHERE in SELECT FIRST
* did not work by 07/25/95 !
create table t ( a char (8) key, b char (8), c fixed (7), d char (3))!
insert t values ( 'aaa', 'bbb', 3, 'ddd') !
insert t values ( 'Baa', 'bbb', 3, 'ddd')!
create index i1 on t (b, c) !
commit !
pars_then_ex !
data !
update t set a = 'vvv' key a = :a!
c 8 'aaa'

update t set a = 'vvv' key a = :a!
c 8 'Baa'

nodata !
update t set a = 'www' key a = 'vvv'!
pars_execute!
drop table t !
commit release !
* Main Test of SET (x,y,...) = (SELECT ...) !
file connect ( kern test !
create table t ( a char (8), b fixed (5), c char (12) byte)!
insert t set a = 'neu', b = 2, c = x'3132333333343536'!
create table y ( a char (12), b float (7), c char (8) byte)!
insert y values ('alt',1, x'6162636465')!
commit release !
file connect ( kern test !
select * from y !
fetch into :a, :b, :c!
update y set (a,b) = (select * from t)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b,c) = (select a,b from t)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select a,c from t)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select a||a||a,b from t)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select a||a||a||a||a,b from t)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select a,b from t)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set a = (select a from t where y.b = t.b)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select a,b from t where y.b = t.b)!
select * from y !
fetch into :a, :b, :c!
rollback !
insert into y values ('alt',2, x'6161636365')!
commit !
update y set (a,b) = (select a||a||a,b from t where y.b = t.b)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select substr(a,1,3),b from t where y.b = t.b)!
select * from y !
fetch into :a, :b, :c!
rollback !
update y set (a,b) = (select a,b from t where y.b = t.b)!
select * from y !
fetch into :a, :b, :c!
rollback !
drop table t !
drop table y!
commit release !
file connect ( kern test !
* tables from UPDJV.vdnts !
create table worker1 (w_no fixed(5) key, w_vorname char(20),
             w_name char(20) not null, w_wohnort fixed(4)) !
create table worker2 (w_no fixed(5) key, geb date,
             abteilung fixed(4)) !
create table stadt (plz fixed(4) key, town_name char(20))!
create table abteilung (abt_no fixed(4) key, abt_name char(20),
                        abt_ort fixed(4)) !
commit !
alter table worker1 foreign key worker (w_no)
                        references worker2 !
alter table worker1 foreign key worker_wohnort (w_wohnort)
                        references stadt !
alter table worker2 foreign key worker_abt (abteilung)
                        references abteilung !
alter table abteilung foreign key abt_stadt (abt_ort)
                        references stadt !
commit !
create view worker (w_no, vorname, nachname, plz, wohnort,
                         geb, abt_no, abt_name, abt_plz, abt_stadt)
            as select
               worker1.w_no, w_vorname, w_name, w_wohnort,
               w_stadt.town_name, geb, abteilung,
               abt_name, abt_ort, abt_stadt.town_name
            from stadt abt_stadt, abteilung, stadt w_stadt,
                 worker1, worker2
            where abt_ort           = abt_stadt.plz     and
                  worker1.w_no = worker2.w_no and
                  w_wohnort         = w_stadt.plz       and
                  abteilung         = abteilung.abt_no
            with check option !
file sel_cols_tab ( WORKER !
insert worker values (1, 'Fritz', 'Meier', 1000, 'Berlin',
           '19500304', 100, 'Buchhaltung', 1000, 'Berlin') !
select * from worker1 !
fetch !
select * from worker2 !
fetch !
select * from abteilung !
fetch !
select * from stadt !
fetch !
select vorname, nachname, plz, geb from worker order by nachname !
fetch !
insert worker values (2, 'Anton', 'Schmidt', 1000, 'Berlin',
           '19601105', 100, 'Buchhaltung', 1000, 'Berlin') !
insert worker values (3, 'Harry', 'Hirsch', 8000, 'Muenchen',
           '19370825', 200, 'Entwicklung', 8000, 'Muenchen') !
select * from worker order by nachname !
fetch !
insert worker set w_no     = 4,    vorname   = 'Willi',
                       nachname = 'Wacker',
                       plz      = 5000, wohnort   = 'Koeln',
                       abt_no   = 311,  abt_name  = 'Personalwesen',
                       abt_plz  = 8000, abt_stadt = 'Muenchen' !
commit !
select vorname, nachname, plz, geb from worker order by nachname !
fetch !
update worker set geb = '19211231' 
  where geb <> all (select '19400522' from dual) !
select vorname, nachname, plz, geb from worker order by nachname !
fetch into :a, :b, :c, :d!
rollback !
update worker set geb = (select '19400522' from dual)
                  key w_no = 4 !
select vorname, nachname, plz, geb from worker order by nachname !
fetch into :a, :b, :c, :d!
rollback !
update worker set (geb,plz) = (select '19400522',1000 from dual)
                  key w_no = 4 !
select vorname, nachname, plz, geb from worker order by nachname !
fetch into :a, :b, :c, :d!
rollback !
select vorname, nachname, plz, geb from worker order by nachname !
fetch into :a, :b, :c, :d!
update worker set (geb,plz) = (select '19400522',1000 from dual)
                  where w_no = 4 !
select vorname, nachname, plz, geb from worker order by nachname !
fetch into :a, :b, :c, :d!
rollback !
commit release !
file connect ( kern test sqlmode oracle!
update worker set (geb,plz) = (select '19400522',1000 from dual)
                  where w_no = 4 !
select vorname, nachname, plz, geb from worker order by nachname !
fetch into :a, :b, :c, :d, :e, :f, :g, :h !
drop table worker1 !
drop table worker2 !
drop table stadt !
drop table abteilung !
commit release !
* PTS 1116323 !
file connect ( kern test !
CREATE TABLE T ( A CHAR (300))!
INSERT T VALUES ('aaaaabbbbbcccccdddddeeeeefffffggggghhhhhiiiiijj')!
update t set a = a || '050' || a || '100' || a || '150' ||
                 a || '200' || a || '250' || a || '300'!
CREATE TABLE T1 (F INT , A CHAR (300))!
INSERT T1 VALUES (1, 'x')!
SELECT * FROM T1!
FETCH!
UPDATE T1 SET A = (SELECT A FROM T )!
SELECT * FROM T1!
FETCH!
rollback release!
*PTS 1122102-4 !
file connect ( kern test !
create table t1 ( a int, b int, c int)!
insert t1 values (1,1,1)!
create table t2 (a int, b int, c int) !
insert t2 values (3,2,1)!
update t1 set (a,b) = (select t1.a + t2.a, t1.b + t2.b
                               from t2
                               where t1.c = t2.c)!
select * from t1 !
fetch!
rollback release !
 * PTS 1138368/9 !
file connect ( kern test !
create table t (a char (8) primary key, b integer)!
create table tprot (text char (50), retcode integer)!
commit ! 
insert t values ('aaa', 1)!
insert tprot values ('insert aaa, 1', 0)!
commit !
insert t values ('aaa', 2) update duplicates !
update tprot set retcode = 100 
    where text = 'insert aaa, 1' with commit !
select * from t !
fetch!
select * from tprot !
fetch!
rollback !
select * from t !
fetch!
select * from tprot !
fetch!
update tprot set retcode = 100 where text = 
   any (select a from t) with commit !
select * from tprot !
fetch!
pars_then_ex !
update tprot set retcode = 0815 
    where text = 'insert aaa, 1' with commit !
pars_execute !
select * from tprot !
fetch!
commit release !
connect kern identified by test isolation level 3 !
select * from t !
update tprot set retcode = 4711 
   where text = 'insert aaa, 1' with commit !
select LOCKMODE, LOCKSTATE, SCHEMANAME, TABLENAME from domain.locks !
fetch!
drop table t !
drop table tprot !

* PTS 1140960

CREATE TABLE TAB1 
(K0 CHAR (240) KEY, K1 FIXED (10) KEY, 
I1 FIXED (10), I2 FIXED (10), C1 CHAR (20),
C2 VARCHAR(20) NOT NULL, I3 FIXED(10) NOT NULL, 
CLLEN FIXED (10), CF0 CHAR(1500), CLB LONG,
BI_1 CHAR(5), BI_2 CHAR(5), BI_3 CHAR(5), BI_4 CHAR(5), BI_5 CHAR(5), 
BI_6 CHAR(5), BI_7 CHAR(5), BI_8 CHAR(5), BI_9 CHAR(5), BI_10 CHAR(5), 
BI_11 CHAR(5), BI_12 CHAR(5), BI_13 CHAR(5), BI_14 CHAR(5), BI_15 CHAR(5), 
BI_16 CHAR(5), BI_17 CHAR(5), BI_18 CHAR(5), BI_19 CHAR(5), BI_20 CHAR(5), 
BI_21 CHAR(5), BI_22 CHAR(5), BI_23 CHAR(5), BI_24 CHAR(5), BI_25 CHAR(5), 
BI_26 CHAR(5), BI_27 CHAR(5), BI_28 CHAR(5), BI_29 CHAR(5), BI_30 CHAR(5), 
BI_31 CHAR(5), BI_32 CHAR(5), BI_33 CHAR(5), BI_34 CHAR(5), BI_35 CHAR(5), 
BI_36 CHAR(5), BI_37 CHAR(5), BI_38 CHAR(5), BI_39 CHAR(5), BI_40 CHAR(5), 
BI_41 CHAR(5), BI_42 CHAR(5), BI_43 CHAR(5), BI_44 CHAR(5), BI_45 CHAR(5), 
BI_46 CHAR(5), BI_47 CHAR(5), BI_48 CHAR(5), BI_49 CHAR(5), BI_50 CHAR(5), 
BI_51 CHAR(5), BI_52 CHAR(5), BI_53 CHAR(5), BI_54 CHAR(5), BI_55 CHAR(5), 
BI_56 CHAR(5), BI_57 CHAR(5), BI_58 CHAR(5), BI_59 CHAR(5), BI_60 CHAR(5), 
BI_61 CHAR(5), BI_62 CHAR(5), BI_63 CHAR(5), BI_64 CHAR(5), BI_65 CHAR(5), 
BI_66 CHAR(5), BI_67 CHAR(5), BI_68 CHAR(5), BI_69 CHAR(5), BI_70 CHAR(5), 
BI_71 CHAR(5), BI_72 CHAR(5), BI_73 CHAR(5), BI_74 CHAR(5), BI_75 CHAR(5), 
BI_76 CHAR(5), BI_77 CHAR(5), BI_78 CHAR(5), BI_79 CHAR(5), BI_80 CHAR(5), 
BI_81 CHAR(5), BI_82 CHAR(5), BI_83 CHAR(5), BI_84 CHAR(5), BI_85 CHAR(5), 
BI_86 CHAR(5), BI_87 CHAR(5), BI_88 CHAR(5), BI_89 CHAR(5), BI_90 CHAR(5), 
BI_91 CHAR(5), BI_92 CHAR(5), BI_93 CHAR(5), BI_94 CHAR(5), BI_95 CHAR(5), 
BI_96 CHAR(5), BI_97 CHAR(5), BI_98 CHAR(5), BI_99 CHAR(5), BI_100 CHAR(5), 
BI_101 CHAR(1), BI_102 CHAR(1), BI_103 CHAR(1), 
BI_104 CHAR(1), BI_105 CHAR(1), 
BI_106 CHAR(1), BI_107 CHAR(1), BI_108 CHAR(1), 
BI_109 CHAR(1), BI_110 CHAR(1), 
BI_111 CHAR(1), BI_112 CHAR(1), BI_113 CHAR(1),
BI_114 CHAR(1), BI_115 CHAR(1), 
BI_116 CHAR(1), BI_117 CHAR(1), BI_118 CHAR(1),
BI_119 CHAR(1), BI_120 CHAR(1), 
BI_121 CHAR(1), BI_122 CHAR(1), BI_123 CHAR(1), 
BI_124 CHAR(1), BI_125 CHAR(1), 
BI_126 CHAR(1), BI_127 CHAR(1), BI_128 CHAR(1),
BI_129 CHAR(1), BI_130 CHAR(1), 
BI_131 CHAR(1), BI_132 CHAR(1), BI_133 CHAR(1),
BI_134 CHAR(1), BI_135 CHAR(1), 
BI_136 CHAR(1), BI_137 CHAR(1), BI_138 CHAR(1),
BI_139 CHAR(1), BI_140 CHAR(1), 
BI_141 CHAR(1), BI_142 CHAR(1), BI_143 CHAR(1),
BI_144 CHAR(1), BI_145 CHAR(1), 
BI_146 CHAR(1), BI_147 CHAR(1), BI_148 CHAR(1),
BI_149 CHAR(1), BI_150 CHAR(1), 
BI_151 CHAR(1), BI_152 CHAR(1), BI_153 CHAR(1),
BI_154 CHAR(1), BI_155 CHAR(1), 
BI_156 CHAR(1), BI_157 CHAR(1), BI_158 CHAR(1),
BI_159 CHAR(1), BI_160 CHAR(1), 
BI_161 CHAR(1), BI_162 CHAR(1), BI_163 CHAR(1),
BI_164 CHAR(1), BI_165 CHAR(1), 
BI_166 CHAR(1), BI_167 CHAR(1), BI_168 CHAR(1),
BI_169 CHAR(1), BI_170 CHAR(1), 
BI_171 CHAR(1), BI_172 CHAR(1), BI_173 CHAR(1),
BI_174 CHAR(1), BI_175 CHAR(1), 
BI_176 CHAR(1), BI_177 CHAR(1), BI_178 CHAR(1),
BI_179 CHAR(1), BI_180 CHAR(1), 
BI_181 CHAR(1), BI_182 CHAR(1), BI_183 CHAR(1),
BI_184 CHAR(1), BI_185 CHAR(1), 
BI_186 CHAR(1), BI_187 CHAR(1), BI_188 CHAR(1),
BI_189 CHAR(1), BI_190 CHAR(1), 
BI_191 CHAR(1), BI_192 CHAR(1), BI_193 CHAR(1),
BI_194 CHAR(1), BI_195 CHAR(1), 
BI_196 CHAR(1), BI_197 CHAR(1), BI_198 CHAR(1),
BI_199 CHAR(1), BI_200 CHAR(1), 
BI_201 CHAR(1), BI_202 CHAR(1), BI_203 CHAR(1), 
BI_204 CHAR(1), BI_205 CHAR(1), 
BI_206 CHAR(1), BI_207 CHAR(1), BI_208 CHAR(1),
BI_209 CHAR(1), BI_210 CHAR(1), 
BI_211 CHAR(1), BI_212 CHAR(1), BI_213 CHAR(1),
BI_214 CHAR(1), BI_215 CHAR(1), 
BI_216 CHAR(1), BI_217 CHAR(1), BI_218 CHAR(1), 
BI_219 CHAR(1), BI_220 CHAR(1), 
BI_221 CHAR(1), BI_222 CHAR(1), BI_223 CHAR(1), 
BI_224 CHAR(1), BI_225 CHAR(1), 
BI_226 CHAR(1), BI_227 CHAR(1), BI_228 CHAR(1),
BI_229 CHAR(1), BI_230 CHAR(1), 
BI_231 CHAR(1), BI_232 CHAR(1), BI_233 CHAR(1),
BI_234 CHAR(1), BI_235 CHAR(1), 
BI_236 CHAR(1), BI_237 CHAR(1), BI_238 CHAR(1),
BI_239 CHAR(1), BI_240 CHAR(1), 
BI_241 CHAR(1), BI_242 CHAR(1), BI_243 CHAR(1),
BI_244 CHAR(1), BI_245 CHAR(1), 
BI_246 CHAR(1), BI_247 CHAR(1), BI_248 CHAR(1),
BI_249 CHAR(1), BI_250 CHAR(1), 
BI_251 CHAR(1), BI_252 CHAR(1), BI_253 CHAR(1),
BI_254 CHAR(1), BI_255 CHAR(1), 
BI_256 CHAR(1), BI_257 CHAR(1), BI_258 CHAR(1),
BI_259 CHAR(1), BI_260 CHAR(1), 
BI_261 CHAR(1), BI_262 CHAR(1), BI_263 CHAR(1),
BI_264 CHAR(1), BI_265 CHAR(1), 
BI_266 CHAR(1), BI_267 CHAR(1), BI_268 CHAR(1),
BI_269 CHAR(1), BI_270 CHAR(1), 
BI_271 CHAR(1), BI_272 CHAR(1), BI_273 CHAR(1),
BI_274 CHAR(1), BI_275 CHAR(1), 
BI_276 CHAR(1), BI_277 CHAR(1), BI_278 CHAR(1),
BI_279 CHAR(1), BI_280 CHAR(1), 
BI_281 CHAR(1), BI_282 CHAR(1), BI_283 CHAR(1),
BI_284 CHAR(1), BI_285 CHAR(1), 
BI_286 CHAR(1), BI_287 CHAR(1), BI_288 CHAR(1),
BI_289 CHAR(1), BI_290 CHAR(1), 
BI_291 CHAR(1), BI_292 CHAR(1), BI_293 CHAR(1),
BI_294 CHAR(1), BI_295 CHAR(1), 
BI_296 CHAR(1), BI_297 CHAR(1), BI_298 CHAR(1),
BI_299 CHAR(1), BI_300 CHAR(1), 
BI_301 CHAR(1), BI_302 CHAR(1), BI_303 CHAR(1),
BI_304 CHAR(1), BI_305 CHAR(1), 
BI_306 CHAR(1), BI_307 CHAR(1), BI_308 CHAR(1),
BI_309 CHAR(1), BI_310 CHAR(1), 
BI_311 CHAR(1), BI_312 CHAR(1), BI_313 CHAR(1),
BI_314 CHAR(1), BI_315 CHAR(1), 
BI_316 CHAR(1), BI_317 CHAR(1), BI_318 CHAR(1),
BI_319 CHAR(1), BI_320 CHAR(1), 
BI_321 FIXED(2) DEFAULT 1, BI_322 FIXED(2) DEFAULT 1, 
BI_323 FIXED(2) DEFAULT 1, 
BI_324 FIXED(2) DEFAULT 1, BI_325 FIXED(2) DEFAULT 1,
BI_326 FIXED(2) DEFAULT 1, 
BI_327 FIXED(2) DEFAULT 1, BI_328 FIXED(2) DEFAULT 1,
BI_329 FIXED(2) DEFAULT 1, 
BI_330 FIXED(2) DEFAULT 1, BI_331 FIXED(2) DEFAULT 1,
BI_332 FIXED(2) DEFAULT 1, 
BI_333 FIXED(2) DEFAULT 1, BI_334 FIXED(2) DEFAULT 1,
BI_335 FIXED(2) DEFAULT 1, 
BI_336 FIXED(2) DEFAULT 1, BI_337 FIXED(2) DEFAULT 1,
BI_338 FIXED(2) DEFAULT 1, 
BI_339 FIXED(2) DEFAULT 1, BI_340 FIXED(2) DEFAULT 1,
BI_341 FIXED(2) DEFAULT 1, 
BI_342 FIXED(2) DEFAULT 1, BI_343 FIXED(2) DEFAULT 1,
BI_344 FIXED(2) DEFAULT 1, 
BI_345 FIXED(2) DEFAULT 1, BI_346 FIXED(2) DEFAULT 1,
BI_347 FIXED(2) DEFAULT 1, 
BI_348 FIXED(2) DEFAULT 1, BI_349 FIXED(2) DEFAULT 1,
BI_350 FIXED(2) DEFAULT 1, 
BI_351 FIXED(2), BI_352 FIXED(2), BI_353 FIXED(2),
BI_354 FIXED(2), BI_355 FIXED(2), 
BI_356 FIXED(2), BI_357 FIXED(2), BI_358 FIXED(2),
BI_359 FIXED(2), BI_360 FIXED(2), 
BI_361 FIXED(2), BI_362 FIXED(2), BI_363 FIXED(2),
BI_364 FIXED(2), BI_365 FIXED(2), 
BI_366 FIXED(2), BI_367 FIXED(2), BI_368 FIXED(2),
BI_369 FIXED(2), BI_370 FIXED(2), 
BI_371 FIXED(2), BI_372 FIXED(2), BI_373 FIXED(2),
BI_374 FIXED(2), BI_375 FIXED(2), 
BI_376 FIXED(2), BI_377 FIXED(2), BI_378 FIXED(2),
BI_379 FIXED(2), BI_380 FIXED(2), 
BI_381 FIXED(2), BI_382 FIXED(2), BI_383 FIXED(2),
BI_384 FIXED(2), BI_385 FIXED(2),
I_386 VARCHAR(5) DEFAULT 'a', I_387 VARCHAR(5) DEFAULT 'a',
I_388 VARCHAR(5) DEFAULT 'a', 
I_389 VARCHAR(5) DEFAULT 'a', I_390 VARCHAR(5) DEFAULT 'a',
I_391 VARCHAR(5) DEFAULT 'a', 
I_392 VARCHAR(5) DEFAULT 'a', I_393 VARCHAR(5) DEFAULT 'a',
I_394 VARCHAR(5) DEFAULT 'a', 
I_395 VARCHAR(5) DEFAULT 'a', I_396 VARCHAR(5) DEFAULT 'a',
I_397 VARCHAR(5) DEFAULT 'a', 
I_398 VARCHAR(5) DEFAULT 'a', I_399 VARCHAR(5) DEFAULT 'a',
I_400 VARCHAR(5) DEFAULT 'a', 
I_401 VARCHAR(5) DEFAULT 'a', I_402 VARCHAR(5) DEFAULT 'a',
I_403 VARCHAR(5) DEFAULT 'a', 
I_404 VARCHAR(5) DEFAULT 'a', I_405 VARCHAR(5) DEFAULT 'a',
I_406 VARCHAR(5) DEFAULT 'a', 
I_407 VARCHAR(5) DEFAULT 'a', I_408 VARCHAR(5) DEFAULT 'a',
I_409 VARCHAR(5) DEFAULT 'a', 
I_410 VARCHAR(5) DEFAULT 'a', I_411 VARCHAR(5) DEFAULT 'a',
I_412 VARCHAR(5) DEFAULT 'a', 
I_413 VARCHAR(5) DEFAULT 'a', I_414 VARCHAR(5) DEFAULT 'a',
I_415 VARCHAR(5) DEFAULT 'a', 
I_416 VARCHAR(5) DEFAULT 'a', I_417 VARCHAR(5) DEFAULT 'a',
I_418 VARCHAR(5) DEFAULT 'a', 
I_419 VARCHAR(5) DEFAULT 'a', I_420 VARCHAR(5) DEFAULT 'a',
I_421 VARCHAR(5) DEFAULT 'a', 
I_422 VARCHAR(5) DEFAULT 'a', I_423 VARCHAR(5) DEFAULT 'a',
I_424 VARCHAR(5) DEFAULT 'a', 
I_425 VARCHAR(5) DEFAULT 'a', I_426 VARCHAR(5) DEFAULT 'a',
I_427 VARCHAR(5) DEFAULT 'a', 
I_428 VARCHAR(5) DEFAULT 'a', I_429 VARCHAR(5) DEFAULT 'a',
I_430 VARCHAR(5) DEFAULT 'a', 
I_431 VARCHAR(5) DEFAULT 'a', I_432 VARCHAR(5) DEFAULT 'a',
I_433 VARCHAR(5) DEFAULT 'a', 
I_434 VARCHAR(5) DEFAULT 'a', I_435 VARCHAR(5) DEFAULT 'a',
I_436 VARCHAR(5) DEFAULT 'a', 
I_437 VARCHAR(5) DEFAULT 'a', I_438 VARCHAR(5) DEFAULT 'a',
I_439 VARCHAR(5) DEFAULT 'a', 
I_440 VARCHAR(5) DEFAULT 'a', I_441 VARCHAR(5) DEFAULT 'a',
I_442 VARCHAR(5) DEFAULT 'a', 
I_443 VARCHAR(5) DEFAULT 'a', I_444 VARCHAR(5) DEFAULT 'a',
I_445 VARCHAR(5) DEFAULT 'a', 
I_446 VARCHAR(5), I_447 VARCHAR(5), I_448 VARCHAR(5), I_449 VARCHAR(5),
I_450 VARCHAR(5), 
I_451 VARCHAR(5), I_452 VARCHAR(5), I_453 VARCHAR(5), I_454 VARCHAR(5),
I_455 VARCHAR(5), 
I_456 VARCHAR(5), I_457 VARCHAR(5), I_458 VARCHAR(5), I_459 VARCHAR(5),
I_460 VARCHAR(5), 
I_461 VARCHAR(5), I_462 VARCHAR(5), I_463 VARCHAR(5), I_464 VARCHAR(5),
I_465 VARCHAR(5), 
I_466 VARCHAR(5), I_467 VARCHAR(5), I_468 VARCHAR(5), I_469 VARCHAR(5),
I_470 VARCHAR(5), 
I_471 VARCHAR(5), I_472 VARCHAR(5), I_473 VARCHAR(5), I_474 VARCHAR(5),
I_475 VARCHAR(5), 
I_476 VARCHAR(5), I_477 VARCHAR(5), I_478 VARCHAR(5), I_479 VARCHAR(5),
I_480 VARCHAR(5), 
I_481 VARCHAR(5), I_482 VARCHAR(5), I_483 VARCHAR(5), I_484 VARCHAR(5),
I_485 VARCHAR(5), 
I_486 VARCHAR(5), I_487 VARCHAR(5), I_488 VARCHAR(5), I_489 VARCHAR(5),
I_490 VARCHAR(5), 
I_491 VARCHAR(5), I_492 VARCHAR(5), I_493 VARCHAR(5), I_494 VARCHAR(5),
I_495 VARCHAR(5), 
I_496 VARCHAR(5), I_497 VARCHAR(5), I_498 VARCHAR(5), I_499 VARCHAR(5),
I_500 VARCHAR(5))!

CREATE TABLE TAB2
(I3_2 FIXED (10) KEY, 
I4    FIXED (10), 
C3    CHAR (20) NOT NULL)!

ALTER TABLE TAB1 DROP PRIMARY KEY!

ALTER TABLE TAB1 ADD PRIMARY KEY (K0,K1)!

ALTER TABLE TAB1 FOREIGN KEY LLLL ( I3 ) REFERENCES TAB2 ON DELETE CASCADE!

CREATE VIEW TABV1 AS 
SELECT K0 , K1 , I1 , I2 , C1 , C2 , I3 , I4 , C3 
FROM TAB1 , TAB2 
WHERE TAB1.I3 = TAB2.I3_2 
WITH CHECK OPTION!

diagnose analyze on!

parsing!
UPDATE TABV1 SET I1 = ? WHERE I3 = ?!

pars_execute!

commit release ! 
file shutdwnk !
vdnexit !
