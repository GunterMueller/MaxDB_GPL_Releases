#! python
#
#    ========== licence begin  GPL
#    Copyright (c) 2000-2005 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end

import sys
pdiff = sys.argv [1]

from undiffLib import Undiffer, change

def RECOVTEST1undiff (undiffer):

  numberRE = '[0-9]+'
  changeRE = '[0-9]+(,[0-9]+)?c[0-9]+(,[0-9]+)?'

  undiffer.removeAll (changeRE + """
< 1,Backupmedium #1 \(s/avetest.pages[1-9]\) wrong path specified [[]3[]]
---
> 1,Backupmedium #1 \(s/avetest.pages[1-9]\) Could not open volume""")

  undiffer.removeAll (changeRE + """
< 1,Backupmedium #1 \(s/avetest.data[1-9]\) wrong path specified [[]3[]]
---
> 1,Backupmedium #1 \(s/avetest.data[1-9]\) Could not open volume""")

  undiffer.removeAll (changeRE + """
< from      1 to  \d+:[^\n]*
---
> from      1 to  \d+:[^\n]*""")

  undiffer.removeAll (changeRE + """
< from  26003 to  \d+:[^\n]*
---
> from  26003 to  \d+:[^\n]*""")

  undiffer.removeAll (changeRE + """
< 10,Job 1 \(Backup / Restore Medium Task\) [[]executing[]] WaitingT\d+ Result=1040
---
> 10,Job 1 \(Backup / Restore Medium Task\) [[]executing[]] WaitingT\d+ Result=1040""")

  undiffer.removeAll (changeRE + """
< 10,Job 1 \(Backup / Restore Medium Task\) [[]executing[]] WaitingT\d+ Result=3700
---
> 10,Job 1 \(Backup / Restore Medium Task\) [[]executing[]] WaitingT\d+ Result=3700""")

  undiffer.write ()

Undiffer (pdiff).runSafe (RECOVTEST1undiff)
