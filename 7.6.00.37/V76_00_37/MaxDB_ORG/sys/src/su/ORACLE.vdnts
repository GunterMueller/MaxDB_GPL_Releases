*   *ID* ORACLE   VDNTEST  changed on 1992-10-02-14.23.51 by KERN      *
file xinitdbk !
file connect ( kern test sqlmode oracle !
errormsg long !
parsing !
create table t1 (s01_char        char(10),
                 s02_char        character(20),
                 s03_varc        varchar(10),
                 s04_date        date,
                 s05_longv       long varchar,
                 s06_raw         raw (30),
                 s07_num         number,
                 s08_n_s         number(*),
                 s10_n_s5        number (*, 5),
                 s11_n_38        number (38),
                 s12_n10_5       number (10, 5),
                 s13_dec         decimal,
                 s14_decs        decimal(*),
                 s15_d_s_5       decimal (*, 5),
                 s16_dec38       decimal (38),
                 s17_d10_2       decimal (10, 2),
                 s18_int         integer,
                 s19_small       smallint,
                 s20_float       float,
                 s21_f_s         float(*),
                 s22_f_10        float(10),
                 s23_f_126       float(126),
                 s24_real        real,
                 s25_doubp       double precision) !
executing !
create !
1
pars_execute !
create table t2 (s01intkey integer primary key,
                 s02 long raw)
                 pctfree  10
                 pctused  20
                 initrans 10
                 maxtrans 30
                 tablespace t2space
                 storage ( initial 10 minextents 10 maxextents 20 ) !
create table t3 (s1, s2) pctfree 10 pctused 20
    as select * from t2 !
create table t4 (a1 char(5) primary key,
     a2 integer constraint chck  check (a2 > 0)
                constraint unque unique) !
create table t4_like like t4 !
create table t5 (a1 char(5) primary key,
     a2 integer default 1 not null constraint a check (a2 > 0),
     a3 char(5) references t4 (a1),
     constraint a unique(a2)) !
create sequence kern.seq01 increment by 1 start with 100 nomaxvalue
       nominvalue cycle cache 100 order !
grant select on seq01 to sut !
grant select on seq01 to public !
create table t6 (a char (12), s1 number (10)) !
insert into t6 values ('abcdefghijkl', seq01.nextval) !
pars_then_ex !
data !
insert into t6 values (:a, seq01.nextval) !
c 12 'abcdefghijkl'

nodata !
pars_execute !
declare c cursor for select * from t6 !
fetch c into :a, :b !
commit release !
file connect ( kern test sqlmode oracle !
revoke select on seq01 from sut !
drop sequence kern.seq01 !
drop table t6 !
create table t6 (s1 number (10)) !
create sequence kern.seq02 increment by 10 start with 100
       maxvalue 200 minvalue 10 cycle cache 100 order !
insert into t6 values (seq02.currval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.currval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.currval) !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.nextval) !
declare c cursor for select * from t6 !
fetch c into :a !
pars_then_ex !
insert into t6 values (seq02.nextval) !
insert into t6 values (seq02.currval) !
pars_execute !
declare c cursor for select * from t6 !
fetch c into :a !
* PTS 1112079 !
select seq02.currval into :a from dual !
declare c cursor for select seq02.nextval from dual !
fetch c into :a !
declare c cursor for select seq02.nextval from dual !
fetch c into :a !
delete from t6 !
create sequence kern.seq03 increment by -10 start with -10
       maxvalue 20 minvalue -20 cycle cache 100 order !
parsing !
insert into t6 values (seq03.nextval) !
insert into t6 values (seq03.currval) !
executing !
insert !
1
insert !
1
insert !
2
insert !
1
insert !
1
pars_execute !
declare c cursor for select * from t6 !
fetch c into :a !
delete from t6 !
create sequence kern.seq04 increment by 1 start with 1
       maxvalue 2 minvalue 1 nocycle cache 100 order !
insert into t6 values (seq04.nextval) !
insert into t6 values (seq04.nextval) !
insert into t6 values (seq04.nextval) !
create synonym kern.syn01 for t1 !
create view v1 as select * from t4 with check option constraint chck !
commit release !
file connect ( kern test sqlmode internal !
file sel_cols_tab ( T1 !
file sel_cols_tab ( T2 !
file sel_cols_tab ( T3 !
file sel_cols_tab ( T4 !
file sel_cols_tab ( T4_LIKE !
file sel_primkey ( KERN T4_LIKE !
file sel_cols_tab ( T5 !
file sel_cols_tab ( T6 !
file sel_constraint !
file sel_foreignkey ( KERN T5 !
drop table t1!
drop table t2!
drop table t3!
drop table t4!
drop table t5!
drop table t6!
commit release !
file connect ( kern test sqlmode oracle!
drop sequence kern.seq02 !
drop sequence kern.seq03 !
drop sequence kern.seq04 !
create sequence abc increment by 2 start with 100 maxvalue 1000 !
create table t ( a number(8), b number(10))!
* number (*) is too short !
insert into t values (acb.nextval, 1)!
insert into t values (2, abc.nextval)!
pars_then_ex !
insert into t values (3, abc.nextval)!
pars_execute !
insert into kern.t values (nvl(4,2), abc.nextval)!
insert into      t values (nvl(5,2), abc.nextval)!
create table t1 (a number (8), n number (12), c number (10))!
select abc.currval into :a from dual !
insert into t1 select a, abc.nextval, b from t !
select * from t !
fetch into :a, :b !
select * from t1 !
fetch into :a, :b, :c !
select abc.currval into :a from dual !
insert into t1 select a, abc.currval, b from t !
select * from t1 !
fetch into :a, :b, :c !
pars_then_ex !
select abc.currval into :a from dual !
insert into t1 select a, abc.nextval, b from t !
insert into t1 select a, abc.currval, b from t !
pars_execute!
select * from t1 !
fetch into :a, :b, :c !
declare c cursor for select * from t for update of b !
fetch1 c into :a, :b !
update t set b = abc.nextval where current of c !
select * from t !
fetch into :a, :b !
update t set b = abc.nextval where a < 4 !
select * from t !
fetch into :a, :b !
select * from t where b < abc.nextval !
fetch into :a, :b !
select * from t where b > abc.nextval !
fetch into :a, :b !
select abc.currval into :a from dual !
select *, abc.nextval from t !
fetch into :a, :b, :c !
commit work !
create table t7 (s1 number (10) primary key) !
insert into t7 values (abc.nextval) !
pars_then_ex !
insert into t7 values (abc.nextval) !
pars_execute !
declare c cursor for select * from t7 !
fetch c into :a !
rollback !
drop sequence abc !
drop table t !
drop table t1 !
* mit minvalue um -maxint4 herum ging bis 6.1.1 Cl15C verschiedenes
* schief !
create table t ( a number(12) , b char (3))!
create sequence langseq minvalue -2147483647!
create sequence superlangseq minvalue -2147483648!
insert into t values (langseq.nextval, 'aaa')!
insert into t values (langseq.nextval, 'bbb')!
insert into t values (superlangseq.nextval, 'ccc')!
insert into t values (superlangseq.nextval, 'ddd')!
pars_then_ex !
insert into t values (langseq.nextval, 'eee')!
insert into t values (superlangseq.nextval, 'fff')!
pars_execute!
select * from t !
fetch into :a, :b !
drop table t !
commit release !
file oracle1 !
file oracle2 !
file oracle3 !
file oracle4 !
file oracle5 !
file oraconv !
file oranull !
file oracle7 !
file connect ( kern test !
create table t ( a fixed (3), b fixed (18))!
commit work release!
file connect ( kern test sqlmode oracle !
create sequence kern.seq01 increment by 1 start with 100 nomaxvalue
       nominvalue cycle cache 100 order !
commit work release!
file connect ( kern test !
pars_then_ex !
select kern.seq01.nextval into :a from dual !
insert into t values (1,kern.seq01.nextval)!
pars_execute!
insert into t values (1+1,kern.seq01.nextval)!
insert into t values (2+1,seq01.nextval)!
select * from t !
fetch into :a, :b !
commit work release!
file connect ( kern test sqlmode oracle !
select kern.seq01.nextval into :a from dual !
insert into t values (3+1,kern.seq01.nextval)!
select * from t !
fetch into :a, :b !
drop table t !
* is the result table dropped after last found result, even with
* MFETCH ? It was not done by 20.3.97, PTS 4044 !
create table t (a char (12), b numeric (6))!
insert into t values ('aaa', 1)!
insert into t values ('bbb', 2)!
insert into t values ('ccc', 3)!
select * from t !
fetch1 into :a, :b !
fetch1 into :a, :b !
fetch1 into :a, :b !
fetch1 into :a, :b !
fetch1 into :a, :b !
select * from t !
mfetch into :a, :b !
4
fetch1 into :a, :b !
drop table t !
drop sequence seq01 !
commit work release !
* PTS3499 ist wegen nextval hier !
file connect ( sut sut !
create sequence seq1 start with 10 increment by 10 maxvalue 100 !
commit !
create sequence seq2 cache 10 !
select * from sysdd.sequences !
fetch !
create table t1 (s1 int, s2 int) !
create view v1 as select s1, s2 from t1 where s1 < 20 and s2 < 30
       with check option !
commit !
pars_then_ex !
insert v1 values (seq1.nextval, seq2.nextval) !
pars_execute !
select * from v1 !
fetch!
select * from t1 !
fetch!
drop sequence seq1 !
drop sequence seq2 !
drop table t1 !
commit release !
* PTS3876.vdnts!
file connect ( kern test sqlmode oracle !
select chr(10) into :a from dual !
create table xxx ( col1 char (1))!
insert into xxx values (chr(10))!
update xxx set col1 =  chr(10)!
drop table xxx !
commit work release !
* PTS 1110096 !
file connect ( kern test !
create sequence seq01 !
create sequence seq02 !
create sequence seq03 !
create sequence seq04 !
create sequence seq05 !
create sequence seq06 !
create sequence seq07 !
create sequence seq08 !
create sequence seq09 !
create sequence seq10 !
create sequence seq11 !
create sequence seq12 !
create sequence seq13!
create sequence seq14 !
create sequence seq15 !
create sequence seq16 !
create sequence seq17 !
create sequence seq18 !
create sequence seq19 !
create sequence seq20 !
create sequence seq21 !
create sequence seq22 !
create sequence seq23 !
create sequence seq24 !
create sequence seq25 !
create sequence seq26 !
create sequence seq27 !
create sequence seq28 !
create sequence seq29 !
create sequence seq30 !
create sequence seq31 !
create sequence seq32 !
create sequence seq33 !
select seq01.nextval into :a from dual !
select seq02.nextval into :a from dual !
select seq03.nextval into :a from dual !
select seq04.nextval into :a from dual !
select seq05.nextval into :a from dual !
select seq06.nextval into :a from dual !
select seq07.nextval into :a from dual !
select seq08.nextval into :a from dual !
select seq09.nextval into :a from dual !
select seq10.nextval into :a from dual !
select seq11.nextval into :a from dual !
select seq12.nextval into :a from dual !
select seq13.nextval into :a from dual !
select seq14.nextval into :a from dual !
select seq15.nextval into :a from dual !
select seq16.nextval into :a from dual !
select seq17.nextval into :a from dual !
select seq18.nextval into :a from dual !
select seq19.nextval into :a from dual !
select seq20.nextval into :a from dual !
select seq21.nextval into :a from dual !
select seq22.nextval into :a from dual !
select seq23.nextval into :a from dual !
select seq24.nextval into :a from dual !
select seq25.nextval into :a from dual !
select seq26.nextval into :a from dual !
select seq27.nextval into :a from dual !
select seq28.nextval into :a from dual !
select seq29.nextval into :a from dual !
select seq30.nextval into :a from dual !
select seq31.nextval into :a from dual !
select seq32.nextval into :a from dual !
* the first nextval value will be thrown away 
* if more than 32 sequences !
select seq01.currval into :a from dual !
select seq32.currval into :a from dual !
select seq33.nextval into :a from dual !
select seq33.currval into :a from dual !
select seq01.currval into :a from dual !
drop sequence seq01 !
drop sequence seq02 !
drop sequence seq03 !
drop sequence seq04 !
drop sequence seq05 !
drop sequence seq06 !
drop sequence seq07 !
drop sequence seq08 !
drop sequence seq09 !
drop sequence seq10 !
drop sequence seq11 !
drop sequence seq12 !
drop sequence seq13!
drop sequence seq14 !
drop sequence seq15 !
drop sequence seq16 !
drop sequence seq17 !
drop sequence seq18 !
drop sequence seq19 !
drop sequence seq20 !
drop sequence seq21 !
drop sequence seq22 !
drop sequence seq23 !
drop sequence seq24 !
drop sequence seq25 !
drop sequence seq26 !
drop sequence seq27 !
drop sequence seq28 !
drop sequence seq29 !
drop sequence seq30 !
drop sequence seq31 !
drop sequence seq32 !
drop sequence seq33 !
commit release !
* PTS 1113262-4 !
file connect ( kern test sqlmode oracle !
 CREATE TABLE TAB11_BASE
      ( COL1_BASE  NUMBER(4),
        COL2_BASE  CHAR(4),
        CONSTRAINT pk_COL1_BASE
            PRIMARY  KEY (COL1_BASE) )!
    CREATE TABLE TAB11
      ( COL1  NUMBER(4),
        COL2  CHAR(4),
        CONSTRAINT fk_COL1_BASE
            FOREIGN  KEY (COL1)
            REFERENCES  TAB11_BASE(COL1_BASE)
            ON DELETE SET NULL) !
drop table tab11_base !
drop table tab11 !
commit work release !
* PTS 1124490-3 !
file connect ( kern test sqlmode oracle !
create table t ( a int )!
insert into t values (1)!
insert into t values (2)!
insert into t values (3)!
commit !
delete t!
rollback !
select count(*) into :a from t!
truncate table t !
drop table t !
commit release !
file shutdwnk !
vdnexit !
