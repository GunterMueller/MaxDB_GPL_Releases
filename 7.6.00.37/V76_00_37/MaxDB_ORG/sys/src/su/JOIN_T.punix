JOIN_T.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_T ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EMP  ( NAME CHAR (15) ASCII KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       CURRSAL FIXED (5) NOT NULL,
                       MANAGER CHAR (15) NOT NULL,
                       STARTSAL FIXED (5) NOT NULL,
                       SEX CHAR (6) NOT NULL ) !
 
Enter command:
CREATE TABLE FAM   ( NAME CHAR (15) ASCII KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       STATUS CHAR (8) NOT NULL,
                       DEPEND FIXED (2) NOT NULL RANGE BETWEEN 0 AND 15,
                       ADDRESS CHAR (30) NOT NULL ) !
 
Enter command:
CREATE TABLE DEPT  ( DEPTNO FIXED (2) KEY RANGE BETWEEN 10 AND 90 ,
                        DEPTNAME CHAR (10) NOT NULL,
                        LOCNAME  CHAR (15) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW MARRIED AS SELECT *
                       FROM FAM
                       WHERE ( STATUS = 'married' ) !
 
Enter command:
CREATE VIEW DIVORCED AS SELECT *
                        FROM FAM
                        WHERE ( STATUS = 'divorced' ) !
 
Enter command:
CREATE VIEW SINGLE AS SELECT *
                      FROM FAM
                      WHERE (STATUS = 'single' ) !
 
Enter command:
CREATE VIEW RICH_EMP AS SELECT *
                        FROM EMP
                        WHERE ( CURRSAL > 15000 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE EMP, FAM, DEPT IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO EMP SET NAME = 'Fred Gerard',
             DEPTNO = 50,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Norma Wilson',
             DEPTNO = 40,
             CURRSAL = 15500,
             MANAGER = 'Jill Crowley',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Brown',
             DEPTNO = 70,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 7000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Rogers',
             DEPTNO = 40,
             CURRSAL = 15000,
             MANAGER = 'Jill Crowley',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'John Johnes',
             DEPTNO = 60,
             CURRSAL = 16500,
             MANAGER = 'Dana Smith',
             STARTSAL = 8500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Pat Mingo',
             DEPTNO = 50,
             CURRSAL = 13000,
             MANAGER = 'Fred Gerard',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dana Smith',
             DEPTNO = 60,
             CURRSAL = 16000,
             MANAGER = 'George Taylor',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Mary Rowen',
             DEPTNO = 60,
             CURRSAL = 15500,
             MANAGER = 'Dana Smith',
             STARTSAL = 9000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jill Crowley',
             DEPTNO = 40,
             CURRSAL = 17000,
             MANAGER = 'George Taylor',
             STARTSAL = 8250,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jerry Denny',
             DEPTNO = 70,
             CURRSAL = 14000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Alice Teir',
             DEPTNO = 50,
             CURRSAL = 13500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dave Cowel',
             DEPTNO = 60,
             CURRSAL = 14000,
             MANAGER = 'Dana Smith',
             STARTSAL = 7500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'George Taylor',
             DEPTNO = 10,
             CURRSAL = 20000,
             MANAGER = ' ',
             STARTSAL = 10000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joan Bird',
             DEPTNO = 50,
             CURRSAL = 14500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Ed Nader',
             DEPTNO = 70,
             CURRSAL = 8000,
             MANAGER = 'Paul Brown',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joyce Adams',
             DEPTNO = 70,
             CURRSAL = 16000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Fred Gerard',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '37 Drake St. #2, Carmichael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Norma Wilson',
                    DEPTNO = 40,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '4175 Oak Ct., Daly City'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Brown',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '271 Oxnard St., Lodi'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Rogers',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 5,
               ADDRESS = '27811 Embarcodero, S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'John Johnes',
                    DEPTNO = 60,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2785 Drake St., Stockton'!
 
Enter command:
INSERT INTO  FAM SET NAME = 'Pat Mingo',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '2751 Peer St., #1, Reno'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dana Smith',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = 'PO Box 571, Rt 51, Waterloo'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Mary Rowen',
                    DEPTNO = 60,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '27451 Mills St., San Rafael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jill Crowley',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '5671 Powell St., S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jerry Denny',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '67511 Market St., Stockton'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Alice Teir',
                    DEPTNO = 50,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2751 Maple Ct., Davis'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dave Cowel',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '1561 Main St., French Camp'!
 
Enter command:
INSERT INTO FAM SET NAME = 'George Taylor',
                    DEPTNO = 10,
               STATUS = 'married',
               DEPEND = 5,
               ADDRESS = '56715 - 31st St., Sacramento'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joan Bird',
                    DEPTNO = 50,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '2731 Coronado Wy, Pacifica'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Ed Nader',
                    DEPTNO = 70,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '774 S. St., Victor'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joyce Adams',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '8741 Takay Bowl Blvd, Lodi'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 10,
              DEPTNAME = 'Management',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 40,
              DEPTNAME = 'Sales',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 50,
              DEPTNAME = 'Materials',
              LOCNAME   = 'Sacramento'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 60,
              DEPTNAME = 'Production',
              LOCNAME  = 'Stockton'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 70,
              DEPTNAME = 'Supply',
              LOCNAME  = 'Lodi'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT EMP.NAME, FAM.ADDRESS, EMP.CURRSAL
  FROM EMP, FAM
  WHERE  FAM.STATUS = 'married'
                   AND DEPEND > 2
                   AND FAM.NAME = EMP.NAME   !
 
resultcount :                     5
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | CURRSAL
----------------+--------------------------------+--------
Fred Gerard     | 37 Drake St. #2, Carmichael    |  15000
George Taylor   | 56715 - 31st St., Sacramento   |  20000
Jerry Denny     | 67511 Market St., Stockton     |  14000
Mary Rowen      | 27451 Mills St., San Rafael    |  15500
Paul Brown      | 271 Oxnard St., Lodi           |  15000
 
resultcount :                     5
 
Enter command:
CLOSE !
 
Enter command:
 
DECLARE RES CURSOR FOR
SELECT MANAGER.NAME MAN_NAME, MANAGER.CURRSAL MAN_SAL ,
                      EMP.NAME EMP_NAME , EMP.CURRSAL EMP_SAL
  FROM EMP, EMP  MANAGER
  WHERE MANAGER.SEX = 'female'
            AND MANAGER.NAME = EMP.MANAGER
            AND EMP.SEX = 'male'  !
 
resultcount :                     3
 
Enter command:
FETCH RES!
 
MAN_NAME        | MAN_SAL | EMP_NAME        | EMP_SAL
----------------+---------+-----------------+--------
Dana Smith      |  16000  | Dave Cowel      |  14000
Dana Smith      |  16000  | John Johnes     |  16500
Jill Crowley    |  17000  | Paul Rogers     |  15000
 
resultcount :                     3
 
Enter command:
CLOSE RES!
 
Enter command:
DECLARE RES CURSOR FOR
SELECT EMP.NAME EMP_NAME, EMP.CURRSAL EMP_SAL,
            MANAGER.NAME MAN_NAME , MANAGER.CURRSAL MAN_SAL
   FROM EMP, EMP  MANAGER
   WHERE EMP.MANAGER = MANAGER.NAME
             AND EMP.CURRSAL > MANAGER.CURRSAL  !
 
resultcount :                     2
 
Enter command:
FETCH RES!
 
EMP_NAME        | EMP_SAL | MAN_NAME        | MAN_SAL
----------------+---------+-----------------+--------
John Johnes     |  16500  | Dana Smith      |  16000
Joyce Adams     |  16000  | Paul Brown      |  15000
 
resultcount :                     2
 
Enter command:
CLOSE RES!
 
Enter command:
DECLARE RES CURSOR FOR
SELECT EMP.NAME,FAM.STATUS,DEPT.LOCNAME,FAM.ADDRESS
  FROM EMP, FAM, DEPT
  WHERE EMP.SEX = 'female'
            AND EMP.NAME = FAM.NAME
            AND FAM.STATUS = 'single'
            AND FAM.DEPTNO = DEPT.DEPTNO
  ORDER BY NAME!
 
resultcount :                     2
 
Enter command:
FETCH RES!
 
NAME            | STATUS   | LOCNAME         | ADDRESS
----------------+----------+-----------------+-------------------------------
Alice Teir      | single   | Sacramento      | 2751 Maple Ct., Davis
Norma Wilson    | single   | San Francisco   | 4175 Oak Ct., Daly City
 
resultcount :                     2
 
Enter command:
CLOSE RES !
 
Enter command:
 
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, DEPT.LOCNAME FROM FAM, DEPT
       WHERE FAM.ADDRESS NOT LIKE '%Stockton%'
                 AND FAM.DEPTNO = DEPT.DEPTNO
                 AND DEPT.LOCNAME = 'Stockton' !
 
resultcount :                     3
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | LOCNAME
----------------+--------------------------------+----------------
Dana Smith      | PO Box 571, Rt 51, Waterloo    | Stockton
Dave Cowel      | 1561 Main St., French Camp     | Stockton
Mary Rowen      | 27451 Mills St., San Rafael    | Stockton
 
resultcount :                     3
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, EMP.CURRSAL, DEPT.LOCNAME
       FROM DEPT, EMP, FAM
       WHERE FAM.NAME SOUNDS 'Marie Rown'
                  AND FAM.DEPTNO = DEPT.DEPTNO
                  AND FAM.NAME = EMP.NAME !
 
resultcount :                     1
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | CURRSAL | LOCNAME
----------------+--------------------------------+---------+----------------
Mary Rowen      | 27451 Mills St., San Rafael    |  15500  | Stockton
 
resultcount :                     1
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, DEPT.LOCNAME FROM DEPT, FAM
       WHERE FAM.DEPTNO = DEPT.DEPTNO
                  AND DEPT.DEPTNO BETWEEN 40 AND 60
       ORDER BY DEPT.LOCNAME, FAM.NAME !
 
resultcount :                    11
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | LOCNAME
----------------+--------------------------------+----------------
Alice Teir      | 2751 Maple Ct., Davis          | Sacramento
Fred Gerard     | 37 Drake St. #2, Carmichael    | Sacramento
Joan Bird       | 2731 Coronado Wy, Pacifica     | Sacramento
Pat Mingo       | 2751 Peer St., #1, Reno        | Sacramento
Jill Crowley    | 5671 Powell St., S.F.          | San Francisco
Norma Wilson    | 4175 Oak Ct., Daly City        | San Francisco
Paul Rogers     | 27811 Embarcodero, S.F.        | San Francisco
Dana Smith      | PO Box 571, Rt 51, Waterloo    | Stockton
Dave Cowel      | 1561 Main St., French Camp     | Stockton
John Johnes     | 2785 Drake St., Stockton       | Stockton
Mary Rowen      | 27451 Mills St., San Rafael    | Stockton
 
resultcount :                    11
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT MANAGER.NAME MAN_NAME , MANAGER.CURRSAL MAN_SAL ,
               EMP.NAME EMP_NAME, EMP.CURRSAL EMP_SAL , FAM.ADDRESS
       FROM EMP, EMP  MANAGER, FAM
       WHERE MANAGER.SEX = 'female'
                 AND MANAGER.NAME = EMP.MANAGER
                 AND EMP.NAME = FAM.NAME
                 AND (FAM.ADDRESS LIKE '%Stockton'
                 OR FAM.ADDRESS LIKE '%San Rafael')
       ORDER BY EMP.NAME, MANAGER.NAME !
 
resultcount :                     2
 
Enter command:
FETCH RESULT!
 
MAN_NAME          :  Dana Smith
MAN_SAL           :   16000
EMP_NAME          :  John Johnes
EMP_SAL           :   16500
ADDRESS           :  2785 Drake St., Stockton
---------------------------------------------------
MAN_NAME          :  Dana Smith
MAN_SAL           :   16000
EMP_NAME          :  Mary Rowen
EMP_SAL           :   15500
ADDRESS           :  27451 Mills St., San Rafael
 
resultcount :                     2
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT EMP.NAME, FAM.STATUS, DEPT.LOCNAME, FAM.ADDRESS
       FROM EMP, FAM, DEPT
       WHERE EMP.SEX = 'female'
                AND EMP.NAME = FAM.NAME
                AND FAM.ADDRESS LIKE '27_1%'
                AND FAM.DEPTNO = DEPT.DEPTNO !
 
resultcount :                     3
 
Enter command:
FETCH RESULT!
 
NAME            | STATUS   | LOCNAME         | ADDRESS
----------------+----------+-----------------+-------------------------------
Alice Teir      | single   | Sacramento      | 2751 Maple Ct., Davis
Joan Bird       | divorced | Sacramento      | 2731 Coronado Wy, Pacifica
Pat Mingo       | married  | Sacramento      | 2751 Peer St., #1, Reno
 
resultcount :                     3
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT NAME, CURRSAL, STARTSAL FROM EMP
       WHERE NAME NOT LIKE '____ %'
       ORDER BY CURRSAL, STARTSAL !
 
resultcount :                     7
 
Enter command:
FETCH RESULT!
 
NAME            | CURRSAL | STARTSAL
----------------+---------+---------
Ed Nader        |   8000  |   8000
Pat Mingo       |  13000  |   6500
Alice Teir      |  13500  |   8500
Jerry Denny     |  14000  |   6000
Norma Wilson    |  15500  |   7500
Joyce Adams     |  16000  |   6500
George Taylor   |  20000  |  10000
 
resultcount :                     7
 
Enter command:
CLOSE RESULT!
 
Enter command:
SELECT NAME, CURRSAL, STARTSAL FROM EMP
       WHERE NAME LIKE '____ %'
       ORDER BY CURRSAL, STARTSAL !
 
resultcount :                     9
 
Enter command:
FETCH!
 
NAME            | CURRSAL | STARTSAL
----------------+---------+---------
Dave Cowel      |  14000  |   7500
Joan Bird       |  14500  |   8000
Paul Brown      |  15000  |   7000
Fred Gerard     |  15000  |   8000
Paul Rogers     |  15000  |   8000
Mary Rowen      |  15500  |   9000
Dana Smith      |  16000  |   7500
John Johnes     |  16500  |   8500
Jill Crowley    |  17000  |   8250
 
resultcount :                     9
 
Enter command:
CLOSE !
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, DEPT.LOCNAME FROM DEPT, FAM
       WHERE FAM.ADDRESS NOT LIKE '%Stockton%'
                AND FAM.DEPTNO = DEPT.DEPTNO
                AND DEPT.LOCNAME = 'Stockton' !
 
resultcount :                     3
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | LOCNAME
----------------+--------------------------------+----------------
Dana Smith      | PO Box 571, Rt 51, Waterloo    | Stockton
Dave Cowel      | 1561 Main St., French Camp     | Stockton
Mary Rowen      | 27451 Mills St., San Rafael    | Stockton
 
resultcount :                     3
 
Enter command:
CLOSE RESULT!
 
Enter command:
CREATE INDEX "emp.manager" ON EMP( MANAGER ) !
 
Enter command:
CREATE INDEX "fam.status" ON FAM( STATUS ) !
 
Enter command:
CREATE INDEX "dept.locname" ON DEPT( LOCNAME ) !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE DEPT !
 
Enter command:
DROP TABLE EMP !
 
Enter command:
DROP TABLE FAM !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST ISOLATION LEVEL  0 !
 
Enter command:
CREATE TABLE P3   (K1 CHAR(1) KEY, F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE P4   (K1 CHAR(1) KEY, F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE P5   (K1 CHAR(1) KEY, F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P31 AS
       SELECT * FROM P3
              WHERE K1 < 'd' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P32 AS
       SELECT * FROM P3
              WHERE K1 >= 'b' AND K1 < 'r' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P33 AS
       SELECT * FROM P3
              WHERE K1 = 'c' OR K1 = 'x' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P34 AS
       SELECT * FROM P3
              WHERE K1 = 'c' OR F1 = 'x' !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P3 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P3 SET K1 = 'c', F1 = 'c' !
 
Enter command:
INSERT INTO P3 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P4 SET K1 = 'u', F1 = 'u' !
 
Enter command:
INSERT INTO P4 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P4 SET K1 = 'b', F1 = 'c' !
 
Enter command:
INSERT INTO P5 SET K1 = 'l', F1 = 'l' !
 
Enter command:
INSERT INTO P5 SET K1 = 'm', F1 = 'c' !
 
Enter command:
INSERT INTO P5 SET K1 = 'n', F1 = 'u' !
 
Enter command:
INSERT INTO P5 SET K1 = 'o', F1 = 'o' !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT P3.K1 F1,P3.F1 F2,P4.K1 F3,P4.F1 F4
     FROM P3, P4
     WHERE P3.F1 = P4.F1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG4 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | x  | x
 
resultcount :                     3
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P4.F1 = P3.F1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | x  | x
 
resultcount :                     3
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.K1 = P4.F1 AND
             P3.K1 = P4.K1 !
 
resultcount :                     1
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.F1 = P4.F1 AND
             P3.K1 <> P4.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.F1 = P4.F1 AND
             P3.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.F1 = P4.F1 AND
             P3.K1 = 'b' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG5 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 = P4.F1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | x  | x
 
resultcount :                     3
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 > P4.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | b  | c
x  | x  | u  | u
 
resultcount :                     2
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 < P4.F1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | u  | u
c  | c  | u  | u
a  | c  | x  | x
c  | c  | x  | x
 
resultcount :                     4
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 >= P4.F1 !
 
resultcount :                     5
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | b  | c
x  | x  | u  | u
x  | x  | x  | x
 
resultcount :                     5
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 <= P4.F1 !
 
resultcount :                     7
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
a  | c  | u  | u
c  | c  | u  | u
a  | c  | x  | x
c  | c  | x  | x
x  | x  | x  | x
 
resultcount :                     7
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 <> P4.F1 !
 
resultcount :                     6
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | b  | c
a  | c  | u  | u
c  | c  | u  | u
x  | x  | u  | u
a  | c  | x  | x
c  | c  | x  | x
 
resultcount :                     6
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 = P4.K1 !
 
resultcount :                     1
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 > P4.K1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
c  | c  | b  | c
x  | x  | b  | c
x  | x  | u  | u
 
resultcount :                     3
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 < P4.K1 !
 
resultcount :                     5
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
a  | c  | u  | u
c  | c  | u  | u
a  | c  | x  | x
c  | c  | x  | x
 
resultcount :                     5
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 >= P4.K1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
c  | c  | b  | c
x  | x  | b  | c
x  | x  | u  | u
x  | x  | x  | x
 
resultcount :                     4
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 <= P4.K1 !
 
resultcount :                     6
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
a  | c  | u  | u
c  | c  | u  | u
a  | c  | x  | x
c  | c  | x  | x
x  | x  | x  | x
 
resultcount :                     6
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 <> P4.K1 !
 
resultcount :                     8
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | b  | c
a  | c  | u  | u
c  | c  | u  | u
x  | x  | u  | u
a  | c  | x  | x
c  | c  | x  | x
 
resultcount :                     8
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P3.F1 = P4.F1 AND
           P4.F1 = P5.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P5.F1 = P4.F1 AND
           P4.F1 = P3.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P5.F1 = P4.F1 AND
           P3.F1 = P4.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P3.F1 = P4.F1 AND
           P5.F1 = P4.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P4.F1 = P3.F1 AND
           P4.F1 = P5.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P4.F1 = P5.F1 AND
           P4.F1 = P3.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
       FROM P3, P4, P5
       WHERE P3.F1 = P4.F1 AND
             P4.K1 = P5.K1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
       FROM P3, P4, P5
       WHERE P3.F1 = P4.F1 AND
             P4.K1 < P5.K1 !
 
resultcount :                     8
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | l  | l
a  | c  | b  | c  | m  | c
a  | c  | b  | c  | n  | u
a  | c  | b  | c  | o  | o
c  | c  | b  | c  | l  | l
c  | c  | b  | c  | m  | c
c  | c  | b  | c  | n  | u
c  | c  | b  | c  | o  | o
 
resultcount :                     8
 
Enter command:
CLOSE ERG7 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE KERN.P6 (K1 CHAR(1) KEY RANGE IN ('a','c','x'),
                    F1 CHAR(1) NOT NULL RANGE IN ('c','x') ) !
 
Enter command:
CREATE TABLE KERN.P7   (K1 CHAR(1) KEY RANGE IN ('a','x'),
                    F1 CHAR(1) NOT NULL RANGE IN ('u','x','c')) !
 
Enter command:
CREATE TABLE KERN.P8   (K1 CHAR(1) KEY,
                    F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE P6 , P7 IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO P6 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P6 SET K1 = 'c', F1 = 'c' !
 
Enter command:
INSERT INTO P6 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P7 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P7 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P8 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P8 SET K1 = 'a', F1 = 'c' !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | a  | c
x  | x  | x  | x
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 AND
       P6.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 AND
       P6.K1 = 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | a  | c
x  | x  | x  | x
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 AND
       P6.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 AND
       P6.K1 = 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE JOIN_T ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EMP  ( NAME CHAR (15) ASCII KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       CURRSAL FIXED (5) NOT NULL,
                       MANAGER CHAR (15) NOT NULL,
                       STARTSAL FIXED (5) NOT NULL,
                       SEX CHAR (6) NOT NULL ) !
 
Enter command:
CREATE TABLE FAM   ( NAME CHAR (15) ASCII KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       STATUS CHAR (8) NOT NULL,
                       DEPEND FIXED (2) NOT NULL RANGE BETWEEN 0 AND 15,
                       ADDRESS CHAR (30) NOT NULL ) !
 
Enter command:
CREATE TABLE DEPT  ( DEPTNO FIXED (2) KEY RANGE BETWEEN 10 AND 90 ,
                        DEPTNAME CHAR (10) NOT NULL,
                        LOCNAME  CHAR (15) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW MARRIED AS SELECT *
                       FROM FAM
                       WHERE ( STATUS = 'married' ) !
 
Enter command:
CREATE VIEW DIVORCED AS SELECT *
                        FROM FAM
                        WHERE ( STATUS = 'divorced' ) !
 
Enter command:
CREATE VIEW SINGLE AS SELECT *
                      FROM FAM
                      WHERE (STATUS = 'single' ) !
 
Enter command:
CREATE VIEW RICH_EMP AS SELECT *
                        FROM EMP
                        WHERE ( CURRSAL > 15000 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE EMP, FAM, DEPT IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO EMP SET NAME = 'Fred Gerard',
             DEPTNO = 50,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Norma Wilson',
             DEPTNO = 40,
             CURRSAL = 15500,
             MANAGER = 'Jill Crowley',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Brown',
             DEPTNO = 70,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 7000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Rogers',
             DEPTNO = 40,
             CURRSAL = 15000,
             MANAGER = 'Jill Crowley',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'John Johnes',
             DEPTNO = 60,
             CURRSAL = 16500,
             MANAGER = 'Dana Smith',
             STARTSAL = 8500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Pat Mingo',
             DEPTNO = 50,
             CURRSAL = 13000,
             MANAGER = 'Fred Gerard',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dana Smith',
             DEPTNO = 60,
             CURRSAL = 16000,
             MANAGER = 'George Taylor',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Mary Rowen',
             DEPTNO = 60,
             CURRSAL = 15500,
             MANAGER = 'Dana Smith',
             STARTSAL = 9000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jill Crowley',
             DEPTNO = 40,
             CURRSAL = 17000,
             MANAGER = 'George Taylor',
             STARTSAL = 8250,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jerry Denny',
             DEPTNO = 70,
             CURRSAL = 14000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Alice Teir',
             DEPTNO = 50,
             CURRSAL = 13500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dave Cowel',
             DEPTNO = 60,
             CURRSAL = 14000,
             MANAGER = 'Dana Smith',
             STARTSAL = 7500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'George Taylor',
             DEPTNO = 10,
             CURRSAL = 20000,
             MANAGER = ' ',
             STARTSAL = 10000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joan Bird',
             DEPTNO = 50,
             CURRSAL = 14500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Ed Nader',
             DEPTNO = 70,
             CURRSAL = 8000,
             MANAGER = 'Paul Brown',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joyce Adams',
             DEPTNO = 70,
             CURRSAL = 16000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Fred Gerard',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '37 Drake St. #2, Carmichael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Norma Wilson',
                    DEPTNO = 40,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '4175 Oak Ct., Daly City'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Brown',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '271 Oxnard St., Lodi'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Rogers',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 5,
               ADDRESS = '27811 Embarcodero, S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'John Johnes',
                    DEPTNO = 60,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2785 Drake St., Stockton'!
 
Enter command:
INSERT INTO  FAM SET NAME = 'Pat Mingo',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '2751 Peer St., #1, Reno'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dana Smith',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = 'PO Box 571, Rt 51, Waterloo'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Mary Rowen',
                    DEPTNO = 60,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '27451 Mills St., San Rafael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jill Crowley',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '5671 Powell St., S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jerry Denny',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '67511 Market St., Stockton'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Alice Teir',
                    DEPTNO = 50,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2751 Maple Ct., Davis'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dave Cowel',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '1561 Main St., French Camp'!
 
Enter command:
INSERT INTO FAM SET NAME = 'George Taylor',
                    DEPTNO = 10,
               STATUS = 'married',
               DEPEND = 5,
               ADDRESS = '56715 - 31st St., Sacramento'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joan Bird',
                    DEPTNO = 50,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '2731 Coronado Wy, Pacifica'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Ed Nader',
                    DEPTNO = 70,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '774 S. St., Victor'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joyce Adams',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '8741 Takay Bowl Blvd, Lodi'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 10,
              DEPTNAME = 'Management',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 40,
              DEPTNAME = 'Sales',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 50,
              DEPTNAME = 'Materials',
              LOCNAME   = 'Sacramento'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 60,
              DEPTNAME = 'Production',
              LOCNAME  = 'Stockton'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 70,
              DEPTNAME = 'Supply',
              LOCNAME  = 'Lodi'!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT EMP.NAME, FAM.ADDRESS, EMP.CURRSAL
  FROM EMP, FAM
  WHERE  FAM.STATUS = 'married'
                   AND DEPEND > 2
                   AND FAM.NAME = EMP.NAME   !
 
resultcount :                     5
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | CURRSAL
----------------+--------------------------------+--------
Fred Gerard     | 37 Drake St. #2, Carmichael    |  15000
George Taylor   | 56715 - 31st St., Sacramento   |  20000
Jerry Denny     | 67511 Market St., Stockton     |  14000
Mary Rowen      | 27451 Mills St., San Rafael    |  15500
Paul Brown      | 271 Oxnard St., Lodi           |  15000
 
resultcount :                     5
 
Enter command:
CLOSE !
 
Enter command:
 
DECLARE RES CURSOR FOR
SELECT MANAGER.NAME MAN_NAME, MANAGER.CURRSAL MAN_SAL ,
                      EMP.NAME EMP_NAME , EMP.CURRSAL EMP_SAL
  FROM EMP, EMP  MANAGER
  WHERE MANAGER.SEX = 'female'
            AND MANAGER.NAME = EMP.MANAGER
            AND EMP.SEX = 'male'  !
 
resultcount :                     3
 
Enter command:
FETCH RES!
 
MAN_NAME        | MAN_SAL | EMP_NAME        | EMP_SAL
----------------+---------+-----------------+--------
Dana Smith      |  16000  | Dave Cowel      |  14000
Dana Smith      |  16000  | John Johnes     |  16500
Jill Crowley    |  17000  | Paul Rogers     |  15000
 
resultcount :                     3
 
Enter command:
CLOSE RES!
 
Enter command:
DECLARE RES CURSOR FOR
SELECT EMP.NAME EMP_NAME, EMP.CURRSAL EMP_SAL,
            MANAGER.NAME MAN_NAME , MANAGER.CURRSAL MAN_SAL
   FROM EMP, EMP  MANAGER
   WHERE EMP.MANAGER = MANAGER.NAME
             AND EMP.CURRSAL > MANAGER.CURRSAL  !
 
resultcount :                     2
 
Enter command:
FETCH RES!
 
EMP_NAME        | EMP_SAL | MAN_NAME        | MAN_SAL
----------------+---------+-----------------+--------
John Johnes     |  16500  | Dana Smith      |  16000
Joyce Adams     |  16000  | Paul Brown      |  15000
 
resultcount :                     2
 
Enter command:
CLOSE RES!
 
Enter command:
DECLARE RES CURSOR FOR
SELECT EMP.NAME,FAM.STATUS,DEPT.LOCNAME,FAM.ADDRESS
  FROM EMP, FAM, DEPT
  WHERE EMP.SEX = 'female'
            AND EMP.NAME = FAM.NAME
            AND FAM.STATUS = 'single'
            AND FAM.DEPTNO = DEPT.DEPTNO
  ORDER BY NAME!
 
resultcount :                     2
 
Enter command:
FETCH RES!
 
NAME            | STATUS   | LOCNAME         | ADDRESS
----------------+----------+-----------------+-------------------------------
Alice Teir      | single   | Sacramento      | 2751 Maple Ct., Davis
Norma Wilson    | single   | San Francisco   | 4175 Oak Ct., Daly City
 
resultcount :                     2
 
Enter command:
CLOSE RES !
 
Enter command:
 
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, DEPT.LOCNAME FROM FAM, DEPT
       WHERE FAM.ADDRESS NOT LIKE '%Stockton%'
                 AND FAM.DEPTNO = DEPT.DEPTNO
                 AND DEPT.LOCNAME = 'Stockton' !
 
resultcount :                     3
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | LOCNAME
----------------+--------------------------------+----------------
Dana Smith      | PO Box 571, Rt 51, Waterloo    | Stockton
Dave Cowel      | 1561 Main St., French Camp     | Stockton
Mary Rowen      | 27451 Mills St., San Rafael    | Stockton
 
resultcount :                     3
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, EMP.CURRSAL, DEPT.LOCNAME
       FROM DEPT, EMP, FAM
       WHERE FAM.NAME SOUNDS 'Marie Rown'
                  AND FAM.DEPTNO = DEPT.DEPTNO
                  AND FAM.NAME = EMP.NAME !
 
resultcount :                     1
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | CURRSAL | LOCNAME
----------------+--------------------------------+---------+----------------
Mary Rowen      | 27451 Mills St., San Rafael    |  15500  | Stockton
 
resultcount :                     1
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, DEPT.LOCNAME FROM DEPT, FAM
       WHERE FAM.DEPTNO = DEPT.DEPTNO
                  AND DEPT.DEPTNO BETWEEN 40 AND 60
       ORDER BY DEPT.LOCNAME, FAM.NAME !
 
resultcount :                    11
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | LOCNAME
----------------+--------------------------------+----------------
Alice Teir      | 2751 Maple Ct., Davis          | Sacramento
Fred Gerard     | 37 Drake St. #2, Carmichael    | Sacramento
Joan Bird       | 2731 Coronado Wy, Pacifica     | Sacramento
Pat Mingo       | 2751 Peer St., #1, Reno        | Sacramento
Jill Crowley    | 5671 Powell St., S.F.          | San Francisco
Norma Wilson    | 4175 Oak Ct., Daly City        | San Francisco
Paul Rogers     | 27811 Embarcodero, S.F.        | San Francisco
Dana Smith      | PO Box 571, Rt 51, Waterloo    | Stockton
Dave Cowel      | 1561 Main St., French Camp     | Stockton
John Johnes     | 2785 Drake St., Stockton       | Stockton
Mary Rowen      | 27451 Mills St., San Rafael    | Stockton
 
resultcount :                    11
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT MANAGER.NAME MAN_NAME , MANAGER.CURRSAL MAN_SAL ,
               EMP.NAME EMP_NAME, EMP.CURRSAL EMP_SAL , FAM.ADDRESS
       FROM EMP, EMP  MANAGER, FAM
       WHERE MANAGER.SEX = 'female'
                 AND MANAGER.NAME = EMP.MANAGER
                 AND EMP.NAME = FAM.NAME
                 AND (FAM.ADDRESS LIKE '%Stockton'
                 OR FAM.ADDRESS LIKE '%San Rafael')
       ORDER BY EMP.NAME, MANAGER.NAME !
 
resultcount :                     2
 
Enter command:
FETCH RESULT!
 
MAN_NAME          :  Dana Smith
MAN_SAL           :   16000
EMP_NAME          :  John Johnes
EMP_SAL           :   16500
ADDRESS           :  2785 Drake St., Stockton
---------------------------------------------------
MAN_NAME          :  Dana Smith
MAN_SAL           :   16000
EMP_NAME          :  Mary Rowen
EMP_SAL           :   15500
ADDRESS           :  27451 Mills St., San Rafael
 
resultcount :                     2
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT EMP.NAME, FAM.STATUS, DEPT.LOCNAME, FAM.ADDRESS
       FROM EMP, FAM, DEPT
       WHERE EMP.SEX = 'female'
                AND EMP.NAME = FAM.NAME
                AND FAM.ADDRESS LIKE '27_1%'
                AND FAM.DEPTNO = DEPT.DEPTNO !
 
resultcount :                     3
 
Enter command:
FETCH RESULT!
 
NAME            | STATUS   | LOCNAME         | ADDRESS
----------------+----------+-----------------+-------------------------------
Alice Teir      | single   | Sacramento      | 2751 Maple Ct., Davis
Joan Bird       | divorced | Sacramento      | 2731 Coronado Wy, Pacifica
Pat Mingo       | married  | Sacramento      | 2751 Peer St., #1, Reno
 
resultcount :                     3
 
Enter command:
CLOSE RESULT!
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT NAME, CURRSAL, STARTSAL FROM EMP
       WHERE NAME NOT LIKE '____ %'
       ORDER BY CURRSAL, STARTSAL !
 
resultcount :                     7
 
Enter command:
FETCH RESULT!
 
NAME            | CURRSAL | STARTSAL
----------------+---------+---------
Ed Nader        |   8000  |   8000
Pat Mingo       |  13000  |   6500
Alice Teir      |  13500  |   8500
Jerry Denny     |  14000  |   6000
Norma Wilson    |  15500  |   7500
Joyce Adams     |  16000  |   6500
George Taylor   |  20000  |  10000
 
resultcount :                     7
 
Enter command:
CLOSE RESULT!
 
Enter command:
SELECT NAME, CURRSAL, STARTSAL FROM EMP
       WHERE NAME LIKE '____ %'
       ORDER BY CURRSAL, STARTSAL !
 
resultcount :                     9
 
Enter command:
FETCH!
 
NAME            | CURRSAL | STARTSAL
----------------+---------+---------
Dave Cowel      |  14000  |   7500
Joan Bird       |  14500  |   8000
Paul Brown      |  15000  |   7000
Fred Gerard     |  15000  |   8000
Paul Rogers     |  15000  |   8000
Mary Rowen      |  15500  |   9000
Dana Smith      |  16000  |   7500
John Johnes     |  16500  |   8500
Jill Crowley    |  17000  |   8250
 
resultcount :                     9
 
Enter command:
CLOSE !
 
Enter command:
DECLARE RESULT CURSOR FOR
SELECT FAM.NAME, FAM.ADDRESS, DEPT.LOCNAME FROM DEPT, FAM
       WHERE FAM.ADDRESS NOT LIKE '%Stockton%'
                AND FAM.DEPTNO = DEPT.DEPTNO
                AND DEPT.LOCNAME = 'Stockton' !
 
resultcount :                     3
 
Enter command:
FETCH RESULT!
 
NAME            | ADDRESS                        | LOCNAME
----------------+--------------------------------+----------------
Dana Smith      | PO Box 571, Rt 51, Waterloo    | Stockton
Dave Cowel      | 1561 Main St., French Camp     | Stockton
Mary Rowen      | 27451 Mills St., San Rafael    | Stockton
 
resultcount :                     3
 
Enter command:
CLOSE RESULT!
 
Enter command:
CREATE INDEX "emp.manager" ON EMP( MANAGER ) !
 
Enter command:
CREATE INDEX "fam.status" ON FAM( STATUS ) !
 
Enter command:
CREATE INDEX "dept.locname" ON DEPT( LOCNAME ) !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE DEPT !
 
Enter command:
DROP TABLE EMP !
 
Enter command:
DROP TABLE FAM !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST ISOLATION LEVEL  0 !
 
Enter command:
CREATE TABLE P3   (K1 CHAR(1) KEY, F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE P4   (K1 CHAR(1) KEY, F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE P5   (K1 CHAR(1) KEY, F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P31 AS
       SELECT * FROM P3
              WHERE K1 < 'd' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P32 AS
       SELECT * FROM P3
              WHERE K1 >= 'b' AND K1 < 'r' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P33 AS
       SELECT * FROM P3
              WHERE K1 = 'c' OR K1 = 'x' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW P34 AS
       SELECT * FROM P3
              WHERE K1 = 'c' OR F1 = 'x' !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P3 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P3 SET K1 = 'c', F1 = 'c' !
 
Enter command:
INSERT INTO P3 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P4 SET K1 = 'u', F1 = 'u' !
 
Enter command:
INSERT INTO P4 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P4 SET K1 = 'b', F1 = 'c' !
 
Enter command:
INSERT INTO P5 SET K1 = 'l', F1 = 'l' !
 
Enter command:
INSERT INTO P5 SET K1 = 'm', F1 = 'c' !
 
Enter command:
INSERT INTO P5 SET K1 = 'n', F1 = 'u' !
 
Enter command:
INSERT INTO P5 SET K1 = 'o', F1 = 'o' !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT P3.K1 F1,P3.F1 F2,P4.K1 F3,P4.F1 F4
     FROM P3, P4
     WHERE P3.F1 = P4.F1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG4 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | x  | x
 
resultcount :                     3
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P4.F1 = P3.F1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | x  | x
 
resultcount :                     3
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.K1 = P4.F1 AND
             P3.K1 = P4.K1 !
 
resultcount :                     1
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.F1 = P4.F1 AND
             P3.K1 <> P4.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.F1 = P4.F1 AND
             P3.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG5 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
       FROM P3, P4
       WHERE P3.F1 = P4.F1 AND
             P3.K1 = 'b' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG5 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG5 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 = P4.F1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | x  | x
 
resultcount :                     3
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 > P4.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | b  | c
x  | x  | u  | u
 
resultcount :                     2
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 < P4.F1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | u  | u
a  | c  | x  | x
c  | c  | u  | u
c  | c  | x  | x
 
resultcount :                     4
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 >= P4.F1 !
 
resultcount :                     5
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
c  | c  | b  | c
x  | x  | b  | c
x  | x  | u  | u
x  | x  | x  | x
 
resultcount :                     5
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 <= P4.F1 !
 
resultcount :                     7
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
a  | c  | u  | u
a  | c  | x  | x
c  | c  | b  | c
c  | c  | u  | u
c  | c  | x  | x
x  | x  | x  | x
 
resultcount :                     7
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.F1 <> P4.F1 !
 
resultcount :                     6
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | u  | u
a  | c  | x  | x
c  | c  | u  | u
c  | c  | x  | x
x  | x  | b  | c
x  | x  | u  | u
 
resultcount :                     6
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 = P4.K1 !
 
resultcount :                     1
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 > P4.K1 !
 
resultcount :                     3
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
c  | c  | b  | c
x  | x  | b  | c
x  | x  | u  | u
 
resultcount :                     3
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 < P4.K1 !
 
resultcount :                     5
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
a  | c  | u  | u
a  | c  | x  | x
c  | c  | u  | u
c  | c  | x  | x
 
resultcount :                     5
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 >= P4.K1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
c  | c  | b  | c
x  | x  | b  | c
x  | x  | u  | u
x  | x  | x  | x
 
resultcount :                     4
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 <= P4.K1 !
 
resultcount :                     6
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
a  | c  | u  | u
a  | c  | x  | x
c  | c  | u  | u
c  | c  | x  | x
x  | x  | x  | x
 
resultcount :                     6
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4
     FROM P3, P4
     WHERE P3.K1 <> P4.K1 !
 
resultcount :                     8
 
Enter command:
FETCH ERG6 !
 
E1 | E2 | E3 | E4
---+----+----+---
a  | c  | b  | c
a  | c  | u  | u
a  | c  | x  | x
c  | c  | b  | c
c  | c  | u  | u
c  | c  | x  | x
x  | x  | b  | c
x  | x  | u  | u
 
resultcount :                     8
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P3.F1 = P4.F1 AND
           P4.F1 = P5.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P5.F1 = P4.F1 AND
           P4.F1 = P3.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P5.F1 = P4.F1 AND
           P3.F1 = P4.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P3.F1 = P4.F1 AND
           P5.F1 = P4.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P4.F1 = P3.F1 AND
           P4.F1 = P5.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
     FROM P3, P4, P5
     WHERE P4.F1 = P5.F1 AND
           P4.F1 = P3.F1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
       FROM P3, P4, P5
       WHERE P3.F1 = P4.F1 AND
             P4.K1 = P5.K1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P3.K1 E1,P3.F1 E2,P4.K1 E3,P4.F1 E4,P5.K1 E5,P5.F1 E6
       FROM P3, P4, P5
       WHERE P3.F1 = P4.F1 AND
             P4.K1 < P5.K1 !
 
resultcount :                     8
 
Enter command:
FETCH ERG7 !
 
E1 | E2 | E3 | E4 | E5 | E6
---+----+----+----+----+---
a  | c  | b  | c  | l  | l
c  | c  | b  | c  | l  | l
a  | c  | b  | c  | m  | c
c  | c  | b  | c  | m  | c
a  | c  | b  | c  | n  | u
c  | c  | b  | c  | n  | u
a  | c  | b  | c  | o  | o
c  | c  | b  | c  | o  | o
 
resultcount :                     8
 
Enter command:
CLOSE ERG7 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE KERN.P6 (K1 CHAR(1) KEY RANGE IN ('a','c','x'),
                    F1 CHAR(1) NOT NULL RANGE IN ('c','x') ) !
 
Enter command:
CREATE TABLE KERN.P7   (K1 CHAR(1) KEY RANGE IN ('a','x'),
                    F1 CHAR(1) NOT NULL RANGE IN ('u','x','c')) !
 
Enter command:
CREATE TABLE KERN.P8   (K1 CHAR(1) KEY,
                    F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE P6 , P7 IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO P6 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P6 SET K1 = 'c', F1 = 'c' !
 
Enter command:
INSERT INTO P6 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P7 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P7 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P8 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P8 SET K1 = 'a', F1 = 'c' !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | a  | c
x  | x  | x  | x
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 AND
       P6.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 AND
       P6.K1 = 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | a  | c
x  | x  | x  | x
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 AND
       P6.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR
SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 AND
       P6.K1 = 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
