*   *ID* N42ROWNO VDNTEST  changed on 1992-09-28-13.26.32 by ADMIN     *
file xinitdbk !
file connect ( kern test !
create table tab ( rowno fixed(5) ) !
create table tab1 ( spalte1 fixed(5) key,
                    spalte2 char(10) key,
                    spalte3 fixed(5) ) !
create table tab2 ( col1 fixed(5),
                    col2 fixed(5),
                    col3 char(10) ,
                    col4 char(10) ) !
insert tab1 values ( 1 , 'Hans' , 1 ) !
insert tab1 values ( 2 , 'Otto' , null ) !
insert tab1 values ( 2 , 'Hans' , 3 ) !
insert tab1 values ( 9 , 'Paul', 1  ) !
insert tab1 values ( 4 , 'Ilse', 1 ) !
insert tab1 values ( 9 , 'Ilse', null ) !
insert tab2 values ( null, null, null, null ) !
insert tab2 values ( 4 , 5, 'Hans' , 'Paul' ) !
insert tab2 values ( 1, 8 , 'Paul', 'ILse' ) !
insert tab2 values ( 3, 4, 'Hans' , 'Hans' ) !
insert tab2 values ( 3, 9 , 'Otto' , null ) !
insert tab2 values ( 1 , null , 'Karin', 'Paul' ) !
insert tab2 values ( 7, 1, 'Ilse', 'Hans' ) !
select * from tab1 !
fetch !
select * from tab2 !
fetch !
commit work !
select * from tab1 where rowno <  5 !
fetch !
select * from tab1 where rowno <= 5 !
fetch !
select * from tab1 where rowno <  7 !
fetch !
select * from tab1 where rowno <  9 !
fetch !
select * from tab1 where ( rowno < 5 ) !
fetch !
select * from tab1 where rowno < (5) !
select * from tab1 where ( rowno ) < 5 !
select * from tab1 where rowno < +5 !
select * from tab1 where rowno < 5.0 !
select * from tab1 where rowno <  1 !
select * from tab1 where rowno <  0 !
select * from tab1 where rowno < -5 !
select * from tab1 where rowno =  5 !
select * from tab1 where rowno >  5 !
select * from tab1 where rowno <> 5 !
select * from tab1 where rowno >= 5 !
select * from tab1 where rowno < 5*3 !
select * from tab1 where 3 * rowno < 5 !
select * from tab1 where not rowno < 5 !
select * from tab1 where not rowno > 5 !
select * from tab1 where not ( rowno < 5 ) !
select * from tab1 where not ( not ( rowno < 5 )) !
select * from tab1 where rowno < 5 or spalte2 = 'Hans' !
select * from tab1 where rowno < 5 and spalte2 = 'Hans' !
fetch !
select * from tab1 where rowno < 5 and spalte2 = 'Karin' !
select * from tab1 where rowno < 5 and spalte2 = 'Paul' !
fetch !
select * from tab1 where rowno < 3 and spalte3 < 2 !
fetch !
select * from tab1 where spalte3 < 2 and rowno < 3 !
fetch !
select * from tab1 where spalte2 = 'Hans' or rowno < 5 !
select * from tab1 where rowno < 3 and spalte3 < 2 or spalte2 = 'Otto' !
select * from tab1 where rowno<3 and (spalte3 < 2 or spalte2 = 'Otto')!
fetch !
select * from tab1 where spalte2 > 'K' and ROWNO<3 and spalte3 < 2 !
fetch !
select * from tab1 where not ( spalte2 > 'K' and rowno < 3 ) !
select * from tab1 where not ( spalte2 > 'K' ) and rowno < 3 !
select  * from  tab1 where rowno < 5 and rowno < 3 !
select distinct spalte3 from tab1
    where ( rowno < 2 ) and ( spalte1 > 0 )!
fetch !
 *************************************************************!
select tab1.spalte1, tab1.spalte2, col4 from tab1, tab2
    where col4 = spalte2 and rowno <= 3 !
fetch !
select distinct spalte2 , col4 from tab1 , tab2
    where col4 =spalte2 and rowno <= 3
    order by tab1.spalte2 !
fetch !
select col4, spalte2 from tab1 , tab2
    where col4 = spalte2 and not ( rowno <= 3 ) !
select distinct spalte3, col3 from tab1, tab2
  where spalte3 is null and col3 is null and rowno < 3 !
fetch !
 *************************************************************!
select rowno from tab1 !
fetch !
select 5 rowno from tab1 !
select rowno, spalte1 from tab1 !
fetch !
select rowno, spalte1 from tab1 !
fetch !
select rowno, spalte1, rowno from tab1 !
fetch !
select rowno, * from tab1 where rowno < 5 !
fetch !
declare erg1 cursor for 
select rowno, spalte2 from tab1 where rowno < 5 for reuse!
fetch erg1 !
select * from erg1 !
fetch !
select * from erg1 where rowno < 2 !
fetch !
select * from erg1 order by 1 !
select rowno, erg2 ( spalte2 ) from tab1 where rowno < 5 !
 *************************************************************!
select sum ( spalte1 ) from tab1 where rowno < 4 !
fetch !
select sum ( spalte1 ) from tab1 where rowno < 4 group by spalte2 !
fetch !
select rowno, spalte2 from tab1 where rowno < 4 order by 1 desc !
select rowno, spalte2 from tab1 where rowno < 4 order by rowno asc !
select rowno, spalte2 from tab1 where rowno < 4 order by 2 asc !
fetch !
select spalte2, rowno from tab1 where rowno < 4 order by 2 asc !
select rowno c, spalte1 from tab1 !
fetch !
select spalte1, sum (spalte3)  from tab1
    where rowno <4 group by spalte1 order by spalte1 asc !
fetch !
select sum ( distinct spalte1 ) , rowno from tab1
    where rowno < 2 group by spalte1 order by 1 !
fetch !
select * from tab1 where spalte3 < any
    ( select col1 from tab2 where rowno < 3 ) !
fetch !
select * from tab1 where spalte3 < any ( select rowno from tab2 ) !
fetch !
select sum ( spalte1 + col1 ) , rowno from tab1 , tab2
    where spalte2 = col3 and rowno < 4 group by col1 !
fetch !
select distinct sum ( spalte1 ) from tab1 group by spalte2
    having rowno < 4 !
select distinct spalte2, tab2.col3 from tab1, tab2
    where col3 is not null and rowno < 6
    order by tab1.spalte2 desc, tab2.col3 !
fetch !
select spalte3, rowno from tab1 order by 2 !
select rowno + 3 c from tab1 !
select  distinct sum ( distinct spalte1 ),  spalte2,
    sum ( distinct tab2.col1 )
    from tab1, tab2 where tab1.spalte2 < tab2.col4 and ( rowno <=5 )
    group by spalte2 order by spalte2 !
fetch !
select count ( * ), rowno from tab1 group by spalte3 !
fetch !
select count ( spalte1 ), sum ( spalte1 ) from tab1 where rowno <= 5
    group by spalte2 order by 1 desc !
fetch !
select tab1.spalte1, ref.spalte3, tab2.col1 from tab1, tab1 ref, tab2
    where ( tab1.spalte1 < ref.spalte3 and rowno < 4 ) and
    tab1.spalte1 < tab2.col1 !
fetch !
 *************************************************************!
select spalte1, rowno from tab1!
fetch!
select distinct spalte1, rowno from tab1!
fetch!
select spalte1, rowno from tab1 group by spalte1 !
fetch!
select tab1.spalte1, rowno from tab1 t, tab1 !
fetch!
select tab1.spalte1, rowno, 
       tab1.spalte2, rowno 
   from tab1 t , tab1 !
fetch!
select tab1.spalte1, rowno from tab1 t , tab1 group by tab1.spalte1!
fetch!
select spalte1, col1 from tab1, tab2 !
fetch !
select rowno, spalte1, col1 from tab1, tab2 !
fetch !
select distinct rowno, spalte1, col1 from tab1, tab2 !
fetch !
select distinct rowno, spalte1, col1 from tab1, tab2 where spalte1=col1!
fetch !
create view viewtab1 as select * from tab1 where rowno < 5 !
create view viewtab2 as select spalte1, rowno from tab1 !
commit release !
file connect ( kern test sqlmode sapr3 !
select * from tab1 where rownum <= 5 !
mfetch into :a, :b, :c !
200
select * from tab1 where rownum <= 5 !
mfetch into :a, :b, :c !
2
mfetch into :a, :b, :c !
2
mfetch into :a, :b, :c !
2
commit release !
file connect ( kern test !
drop table tab1 !
drop table tab2 !
commit work release !
 * ROWNO as last predicate and ROWNO together with COUNT
 * resulted in crashes, kb_stack_type_illegal, or too many
 * results, because in count_bd no rowno was used !
file connect ( kern test !
create table t ( a char (8) key, b char (4))!
insert t values ('aaa', 'aaa')!
insert t values ('a1a', 'a1a')!
create table t1 (c char (8) key, d fixed (6))!
insert t1 values ('aaa', 1)!
insert t1 values ('bbb', 5)!
insert t1 values ('ccc', 1)!
create table t2 ( e fixed (6)) !
create index i2 on t2 (e)!
insert t2 set e = 1!
insert t2 set e = 5!
select count(*) from t1 !
fetch!
select * from t1 where rowno <= 1 !
fetch!
select count(*) from t1 where rowno <= 1!
fetch!
select count(*) from t,t1!
fetch!
select * from t,t1 where rowno <= 1 !
fetch!
create view v as select * from t,t1 !
select * from v !
fetch!
select * from v order by c, a !
fetch!
select count(*) from v !
fetch!
select max(c) from v!
fetch!
select max(c) from v where rowno <= 1!
fetch!
select max(c) from v where rowno <= 3!
fetch!
select * from v where rowno <= 1!
fetch!
select count(*) from v where rowno <= 1!
fetch!
select count(*) from v where b = 'aaa' and rowno <= 1!
fetch!
select count(*), c from v group by c !
fetch!
select count(*), c from v where rowno <= 1 group by c !
fetch!
create view vv as select t.* from t,t tt where t.a=tt.a!
select * from vv !
fetch!
select count(*) from vv !
fetch!
select * from vv where rowno <= 1!
fetch!
select count(*) from vv where rowno <= 1!
fetch!
select count(*) from vv where rowno <= 1 and b = 'aaa' !
fetch!
select count(*) from vv where b = 'aaa' and rowno <= 1!
fetch!
create view v1 as select * from t,t1,t2
  where a=c and d=e !
commit !
select * from v1 !
fetch!
select * from v1 where b = 'aaa' and e = 1!
fetch!
select * from v1 where b = 'aaa' and e = 1 and rowno <= 1!
fetch!
select count(*) from v1!
fetch !
select count(*) from v1 where b = 'aaa' and e = 1!
fetch!
select count(*) from v1 where b = 'aaa' and e = 1 and rowno <= 1!
select max(a) from v1 where b = 'aaa' and e = 1 and rowno <= 1!
fetch!
drop table t!
drop table t1!
drop table t2!
commit release !
 * PTS 1102326 !
file connect ( kern test sqlmode sapr3 !
create table vbap (mandt char (3), vbeln char (10),
posnr integer, FAKSP char (1), primary key (mandt, vbeln,posnr))!
insert into vbap values ('204', '0070000147', 1, 'y')!
insert into vbap values ('204', '0070000147', 2, 'y')!
insert into vbap values ('204', '0070000147', 3, 'y')!
insert into vbap values ('204', '0070000147', 4, 'y')!
insert into vbap values ('204', '0070000147', 5, 'y')!
insert into vbap values ('204', '0070000147', 6, 'y')!
insert into vbap values ('204', '0070000147', 7, 'y')!
insert into vbap values ('204', '0070000147', 9, 'y')!
insert into vbap values ('204', '0070000250', 1, 'y')!
analyze table vbap statistics !
create table vbup (mandt char (3), vbeln char (10),
posnr integer, FKSTA char (1), FKSAA char(1),
primary key (mandt, vbeln,posnr))!
insert into vbup values ('204', '0070000147', 2, 'y', 'y')!
insert into vbup values ('204', '0070000147', 3, 'y', 'y')!
insert into vbup values ('204', '0070000147', 4, 'y', 'y')!
insert into vbup values ('204', '0070000147', 5, 'y', 'y')!
insert into vbup values ('204', '0070000300', 1, 'y', 'y')!
declare c cursor for 
SELECT T1."MANDT", T1."VBELN", T1."POSNR", T1."FAKSP", T2."FKSTA", 
    T2."FKSAA"                                                                 
  FROM <"VBAP" T1, "VBUP" T2>                                                      
 WHERE T2."MANDT" = T1."MANDT" AND T2."VBELN" = T1."VBELN" AND 
       T2."POSNR" = T1."POSNR" AND T2."FKSTA" <> 'C' AND 
       T2."FKSAA" <> 'C' and t1.mandt = '204' and 
       t1.vbeln = '0070000147' !
fetch c into :a, :b, :c, :d, :e, :f, :g, :h, :i ! 

pars_then_ex !
data !
declare c cursor for 
SELECT T1."MANDT", T1."VBELN", T1."POSNR", T1."FAKSP", T2."FKSTA", 
    T2."FKSAA"                                                                 
  FROM <"VBAP" T1, "VBUP" T2>                                                      
 WHERE T2."MANDT" = T1."MANDT" AND T2."VBELN" = T1."VBELN" AND 
       T2."POSNR" = T1."POSNR" AND T2."FKSTA" <> 'C' AND 
       T2."FKSAA" <> 'C' 
       and T1.mandt = :q and T1.vbeln = :r and rownum <= 1 !
c 3 '204' c 10 '0070000147'

nodata !
fetch c into :a, :b, :c, :d, :e, :f, :g, :h, :i! 
pars_execute !
rollback release !
* PTS 1104644 !
file connect ( kern test !
select * from sysdd.tables where rowno < 1 !
select * from dual where rowno <= 1 !

*>>> PTS 1115880
create table Tab1 ( 
k00  int, k01 int, k02 int, k03 int, k04 int, primary key(k00)) !
insert into Tab1 values ( 1, 11, 111, 1111, 3 )!
insert into Tab1 values ( 2, 22, 222, 2222, 3 )!
insert into Tab1 values ( 3, 33, 333, 3333, 2 )!
insert into Tab1 values ( 4, 44, 444, 4444, 2 )!
insert into Tab1 values ( 5, 55, 555, 5555, 1 )!
insert into Tab1 values ( 6, 66, 666, 6666, 1 )!
create index ind1 on Tab1(k04) !

!* test fetching with primary keys
* rowno > result count
explain select /*+keyaccess*/ * from tab1 where rowno <= 8!
select /*+keyaccess*/ * from tab1 where rowno <= 8!
fetch last!
fetch1 prev!
mfetch last!
3
fetch1 prev!

* rowno = result count
select /*+keyaccess*/ * from tab1 where rowno <= 6!
fetch last!
fetch1 prev!
mfetch last!
8
fetch1 prev!

* rowno < result count
select /*+keyaccess*/ * from tab1 where rowno <= 4!
fetch1 absolute -2!
fetch last!
fetch1 prev!
mfetch last!
3
fetch1 prev!

!* test fetching with secondary keys
explain select /*+indexaccess*/ * from tab1 !
select /*+indexaccess*/ * from tab1 !
fetch!
* rowno > result count
explain select /*+indexaccess*/ * from tab1 where rowno <= 8!
select /*+indexaccess*/ * from tab1 where rowno <= 8!
mfetch last!
1
mfetch prev!
1
mfetch last!
3
mfetch prev!
1

* rowno = result count
select /*+indexaccess*/ * from tab1 where rowno <= 6!
mfetch last!
1
mfetch prev!
1
mfetch last!
8
mfetch prev!
1

* rowno < result count
select /*+indexaccess*/ * from tab1 where rowno <= 4!
mfetch last!
1
mfetch prev!
1
mfetch last!
3
mfetch prev!
1

!* test fetching with secondary keys and distinct optimization
* rowno > result count
explain select /*+indexaccess*/ distinct k04 from tab1 where rowno <= 8!
select /*+indexaccess*/ distinct k04 from tab1 where rowno <= 8!
mfetch last!
1
mfetch prev!
1
mfetch last!
2
mfetch prev!
1

* rowno = result count
select /*+indexaccess*/ distinct k04 from tab1 where rowno <= 6!
mfetch last!
1
mfetch prev!
1
mfetch last!
3
mfetch prev!
1

* rowno < result count
select /*+indexaccess*/ distinct k04 from tab1 where rowno <= 4!
mfetch last!
1
mfetch prev!
1
mfetch last!
2
mfetch prev!
1
*<<< PTS 1115880

commit !

create table t1( c1 int )!
insert into t1 values( NULL )!
insert into t1 values( 1 )!
insert into t1 values( 1 )!
insert into t1 values( 10 )!
insert into t1 values( 10 )!

select count(*) into :a from t1 where rowno <= 3!
select count(*) from t1 where rowno <= 3!
fetch!
select count(c1) into :a from t1 where rowno <= 3!
select count(c1) from t1 where rowno <= 3!
fetch!
select avg(c1) into :a from t1 where rowno <= 3!
select avg(c1) from t1 where rowno <= 3!
fetch!
select c1 into :a from t1 where rowno <= 3 !
select c1 into :a from t1 where rowno <= 1 !

drop table t1 !
commit release!
* PTS 1125032-5 / 1124863 !
file connect ( kern test !
create table t ( a int, b char (8))!
insert t values (  1, 'aaa')!
insert t values (  2, 'aaa')!
insert t values (  3, 'aaa')!
insert t values (  4, 'bbb')!
insert t values (  5, 'bbb')!
insert t values (  6, 'aaa')!
insert t values (  7, 'aaa')!
insert t values (  8, 'aaa')!
insert t values (  9, 'aaa')!
insert t values ( 10, 'aaa')!
insert t values ( 11, 'aaa')!
insert t values ( 12, 'aaa')!
commit !
select count (*) into :a from t !
delete t where rowno <= 8 !
select count (*) into :a from t !
select * from t !
fetch!
rollback !
update t set b = 'neu' where b = 'aaa' and rowno < 6 !
select * from t !
fetch!
rollback !

select * from t !
fetch!
create table temp.t1 as select * from t !
select * from t where b = (select b from temp.t1 
                            where b = 'aaa' and t.a = temp.t1.a) 
                  and rowno < 6 !
fetch!
update t set b = 'neu' where b = (select b from temp.t1 
                                   where b = 'aaa' and t.a = temp.t1.a) 
                         and rowno < 6 !
select * from t !
fetch!
drop table t!
commit release !
file connect ( kern test sqlmode oracle !
CREATE TABLE SMODILOG
(
	"OBJ_TYPE"               Varchar (4) ,
	"OBJ_NAME"               Varchar (40) ,
	"SUB_TYPE"               Varchar (4) ,
	"SUB_NAME"               Varchar (120) ,
	"INT_TYPE"               Varchar (4) ,
	"INT_NAME"               Varchar (40) ,
	"OPERATION"               Varchar (4) ,
	"MAIN_PROG"               Varchar (40) ,
	"INCLUDE"               Varchar (40) ,
	"MOD_NAME"               Varchar (40) ,
	"MOD_LANGU"               Varchar (1) ,
	"MOD_USER"               Varchar (12) ,
	"MOD_DATE"               Varchar (8),
	"MOD_TIME"               Varchar (6) ,
	"ACTIVE"               Varchar (1) ,
	"INACTIVE"               Varchar (1) ,
	"UPGRADE"               Varchar (1) ,
	"PRE_CORR"               Varchar (1) ,
	"PROT_ONLY"               Varchar (1) ,
	"UPG_MODE"               Varchar (1) ,
	"MARK"               Varchar (1) ,
	"SPAU"               Varchar (1) ,
	"TRKORR"               Varchar (20) ,
	"SPAU_CODE"               Varchar (1) ,
	PRIMARY KEY ("OBJ_TYPE", "OBJ_NAME", "SUB_TYPE", "SUB_NAME", 
	"INT_TYPE", "INT_NAME", "OPERATION"))!
parsing !
SELECT                                                                          
  "OBJ_TYPE" , "OBJ_NAME" , "MAIN_PROG" , "UPGRADE" , "PROT_ONLY" ,             
  "INACTIVE" , "UPG_MODE" , "SPAU" , "SPAU_CODE" , "ACTIVE" , "SUB_TYPE" ,      
  "SUB_NAME" , "MOD_LANGU" , "MOD_USER" , "MOD_DATE" , "MOD_TIME" , "TRKORR" ,  
  "MARK"                                                                        
FROM                                                                            
  "SMODILOG"                                                                    
WHERE                                                                           
  "INT_TYPE" <> ? AND NOT "OPERATION" IN ( ? , ? ) AND "PROT_ONLY" = ? AND (    
  "UPGRADE" = ? OR "UPGRADE" = ? AND "ACTIVE" = ? ) AND "SPAU" = ? AND          
  "INACTIVE" = ? AND ROWNUM <= ?                                                
!
pars_execute!
rollback release !
* PTS 1137170-1 !
file connect ( kern test !
create table t ( a char (8), b int, primary key (a,b))!
insert t values ('abc',1)!
insert t values ('def',1)!
insert t values ('ghi',1)!
insert t values ('jkl',1)!
insert t values ('mno',1)!
insert t values ('pqr',1)!
insert t values ('stu',1)!
pars_then_ex !
data !
select * from t 
where rowno <= ?
order by a,b !
n 10 3

mfetch into :a, :b !
30000

pars_execute !
nodata !
rollback release !

file connect ( kern test !
CREATE TABLE "/BIC/TCSN_COMP"
(
"/BIC/CSN_COMP" Varchar (30) ASCII    NOT NULL    DEFAULT ' ',
"LANGU" Varchar (1) ASCII    NOT NULL    DEFAULT ' ',
"TXTSH" Varchar (20) ASCII    NOT NULL    DEFAULT ' ',
"TXTMD" Varchar (40) ASCII    NOT NULL    DEFAULT ' ',
"TXTLG" Varchar (60) ASCII    NOT NULL    DEFAULT ' ',
PRIMARY KEY ("/BIC/CSN_COMP", "LANGU")
)!

CREATE TABLE "/BIC/PCSN_COMP"
(
"/BIC/CSN_COMP"  Varchar (30) ASCII    NOT NULL    DEFAULT ' ',
"OBJVERS"        Varchar (1) ASCII    NOT NULL    DEFAULT ' ',
"CHANGED"        Varchar (1) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/CSN_GROUP"   Varchar (10) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/CSN_RESP"   Varchar (12) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/DEV_FKTR"   Fixed (17,3)    NOT NULL    DEFAULT 0.000,
"/BIC/SERVICE"   Varchar (3) ASCII    NOT NULL    DEFAULT ' ',
"/BIC/THEMKEXT"   Varchar (20) ASCII    NOT NULL    DEFAULT ' ',
PRIMARY KEY ("/BIC/CSN_COMP", "OBJVERS")
)!

CREATE VIEW "/BI0/0300000617" AS 
SELECT /*+ SHORT_SUM_VALUES */ 
 "P"."/BIC/CSN_COMP",
 "P"."/BIC/CSN_GROUP",
 "T"."TXTSH",
 "T"."TXTMD",
 "T"."TXTLG" 
FROM 
 "/BIC/PCSN_COMP" "P", 
 "/BIC/TCSN_COMP" "T" 
WHERE 
 "P"."/BIC/CSN_COMP" = "T"."/BIC/CSN_COMP"(+) AND 
 "P"."OBJVERS" = 'A' AND 
 "T"."LANGU"(+) = 'E' !

commit !

parsing !

SELECT * FROM "/BI0/0300000617" WHERE ROWNO <= ? !


pars_execute!

rollback work release !

* pts 1136687

file connect ( kern test !

CREATE TABLE "TBLTEST_ASSETS"
(
"REC_ID" Fixed (15,0) NOT NULL,
"INVENTORY_NO" Varchar (50) ASCII,
"IMPORT_OP_ID" Integer,
PRIMARY KEY ("REC_ID")
)!

CREATE TABLE "TBLTEST_OPERATIONS"
(
"REC_ID" Fixed (15,0) NOT NULL,
"OPERATION_ID" Integer,
"OPERATION_TYPE" Varchar (50) ASCII,
PRIMARY KEY ("REC_ID")
)!

INSERT INTO "TBLTEST_OPERATIONS" VALUES(1,1,'Import')!
INSERT INTO "TBLTEST_OPERATIONS" VALUES(2,2,'Acceptation')!

INSERT INTO "TBLTEST_ASSETS" VALUES(1,'A0001',NULL)!
INSERT INTO "TBLTEST_ASSETS" VALUES(2,'A0002',1)!
INSERT INTO "TBLTEST_ASSETS" VALUES(3,'A0003',2)!

SELECT A.REC_ID, A.INVENTORY_NO, OP_I.OPERATION_TYPE AS I_OP_TYPE
FROM TBLTEST_ASSETS A, TBLTEST_OPERATIONS OP_I
WHERE OP_I.OPERATION_ID(+)=A.IMPORT_OP_ID
AND ROWNO <= 2!
fetch !
rollback work release !
file connect ( kern test !
create table t ( a char (8), b int)!
insert t values ('ccc', 3)!
insert t values ('aaa', 1)!
insert t values ('ddd', 4)!
insert t values ('fff', 6)!
insert t values ('bbb', 2)!
insert t values ('ggg', 7)!
insert t values ('eee', 5)!
create table t1 (a1, b1) as select * from t !
file limit !
file limit ( pars_then_ex !
pars_then_ex !
data !
select * from t where rowno <= :r !
n 10 5

nodata!
fetch!
mfetch first !
10
mfetch first !
5
mfetch !
5
fetch1 pos (6)!
fetch1 pos (3)!
data !
select * from t,t1 where a = a1 and rowno <= :r !
n 10 5

nodata!
fetch!
mfetch first !
10
mfetch first !
5
mfetch !
5
data !
select * from t where rowno <= :r order by b !
n 10 5

nodata!
fetch!
data !
select max(a), b from t where rowno <= :r group by b ! 
n 10 5

nodata!
fetch!
data !
select sum(b), max(a1), a from t,t1 
where rowno <= :n
group by a !
n 10 5

nodata!
fetch!
data !
declare c cursor for 
  with recursive px (px_a, px_b) as
  (select a, b from t where b in (1,3)
   union all
   select a, b from t, px
       where px_b * 2 = t.b
  )
select *
from px where rowno <= :r order by px_a !
n 10 3

nodata!
fetch c !
data !
select top :r * from t !
n 10 1

nodata!
fetch!
data !
declare c cursor for select top :r * from t for reuse !
n 10 1

nodata!
fetch c!
data !
select top :r * from t !
n 10 5

nodata!
fetch!
data !
select top :r * from t order by b !
n 10 5

nodata!
fetch!
data !
select top :r * from t,t1 where a = a1 order by b !
n 10 5

nodata!
fetch!
data !
select top :r * from t,t1 where a = a1 order by b !
n 10 1

nodata!
fetch!
data !
select top :r max(a), b from t group by b ! 
n 10 5

nodata!
fetch!
data !
select top :r max(a), b from t group by b ! 
n 10 1

nodata!
fetch!
data !
select top :r sum(b), max(a1), a from t,t1 
group by a !
n 10 5

nodata!
fetch!
data !
declare c cursor for 
  with recursive px (px_a, px_b) as
  (select a, b from t where b in (1,3)
   union all
   select a, b from t, px
       where px_b * 2 = t.b
  )
select top :r *
from px order by px_a !
n 10 3

nodata!
fetch c !
data !
select * from t limit :r!
n 10 1

nodata!
fetch!
data !
declare c cursor for select * from t for reuse limit :r !
n 10 1

nodata!
fetch c!
data !
select * from t limit :r !
n 10 5

nodata!
fetch!
data !
select * from t order by b limit :r !
n 10 5

nodata!
fetch!
data !
select max(a), b from t group by b limit :r ! 
n 10 5

nodata!
fetch!
data !
select sum(b), max(a1), a from t,t1 
group by a limit :n!
n 10 5

nodata!
fetch!
data !
select top 5 sum(b), max(a1), a from t,t1 
group by a limit 2 :n !
n 10 3

nodata!
fetch!
data !
select * from t limit :o 3 !
n 10 2

nodata!
fetch!
fetch1 last !
fetch1 prev !
fetch1 prev !
fetch first !
fetch !
fetch1 pos (6)!
fetch1 pos (3)!
data !
select * from t,t1 where a = a1 limit 2 :n !
n 10 3

nodata!
fetch!
mfetch first !
10
mfetch first !
3
mfetch !
5
data !
select * from t order by b limit :o :n !
n 10 2
n 10 3

nodata!
fetch!
fetch1 last !
fetch1 prev !
fetch1 prev !
fetch first !
fetch !
fetch1 pos (6)!
fetch1 pos (3)!
data !
select max(a), b from t group by b limit :o :n ! 
n 10 2
n 10 3

nodata!
fetch!
data !
declare c cursor for 
  with recursive px (px_a, px_b) as
  (select a, b from t where b in (1,3)
   union all
   select a, b from t, px
       where px_b * 2 = t.b
  )
select *
from px order by px_a limit :r !
n 10 3

nodata!
fetch c !
pars_execute !
select *, (select top 2 a from t where a in (select a from t)) from t !
select *, (select top 1 a from t where a in (select a from t)) from t !
fetch!
select *, (select top 1 a from t where b >= 4) from t !
fetch!
select * from t where b = (select top 3 b1 from t1)!
select * from t where b = ANY (select top 3 b1 from t1)!
fetch!
select * from t where b = ANY (select top 3 b1 from t,t1)!
fetch!
select * from t where b = (select top 1 b1 from t1)!
fetch!
select * from t where b = (select top 1 b1 from t,t1)!
fetch!
pars_then_ex !
data !
select *, (select top :t a from t where a in (select a from t)) from t !
n 38 2

select *, (select top :t a from t where a in (select a from t)) from t !
n 38 1

nodata !
fetch!
data !
select *, (select top :t a from t where b >= 4) from t !
n 38 1

nodata !
fetch!
data !
select * from t where b = (select top :t b1 from t1)!
n 38 3

select * from t where b = ANY (select top :t b1 from t1)!
n 38 3

nodata !
fetch!
select * from t where rowno <= 100 and
   b <= ANY (select b1 from t1 where rowno <= 3)!
fetch!   
data !
select * from t where rowno <= :r1 and
   b <= ANY (select b1 from t1 where rowno <= :r2)!
n 10 100
n 10 3

nodata !
fetch!
data !
select * from t where b = ANY (select top :t b1 from t,t1)!
n 38 3

nodata !
fetch!
data !
select * from t where b = (select top :t b1 from t1)!
n 38 1

nodata !
fetch!
data !
select * from t where b = (select top :t b1 from t,t1)!
n 38 1

nodata !
fetch!
data !
pars_execute !
nodata !
rollback release !
file shutdwnk!
vdnexit !
