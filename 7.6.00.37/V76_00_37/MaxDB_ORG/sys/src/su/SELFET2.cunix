SELFET2.vdnts
 
Enter command:
FILE XINITDBK!
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4) KEY, B CHAR (11) KEY,
   C CHAR (3850), D CHAR (5) NOT NULL, E CHAR (7),
                  F FIXED (6), G LONG ASCII)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SCROLLFEAT OFF !
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
PARSING !
 
Enter command:
PARSE
    SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
    SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
Parsing idnr :      1
 
c 7 'MANNN' c 11 'ABCDEFG'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :A, :B, :G, :C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
PARSING !
 
Enter command:
PARSE
    SELECT C,A,B FROM T1 WHERE E = :E AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
    SELECT C,A,B FROM T1 WHERE E = :E AND  B = :B !
Parsing idnr :      1
 
c 7 'MANNN' c 11 'ABCDEFG'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :A, :B, :C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('eins', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('drei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('zwei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. eins !'
c 4 'eins' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. drei'
c 4 'drei' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. zwei'
c 4 'zwei' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
CLOSE ERG !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1 WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
CLOSE ERG !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1 WHERE E = :E AND  B = :B !
 
c 7 'noe-noe' c 11 'das ist b'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
CLOSE ERG !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DECLARE ERG CURSOR FOR SELECT * FROM T1 !
 
resultcount :                     0
 
Enter command:
FETCH ERG  INTO :A, :B, :G, :C, :D, :E, :F !
 
A                 :  drei
B                 :  das ist b
C                 :  c ist in ascii
D                 :  d c_5
E                 :  e char7
F                 :        4
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
A                 :  eins
B                 :  das ist b
C                 :  c ist in ascii
D                 :  d c_5
E                 :  e char7
F                 :        4
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
A                 :  zwei
B                 :  das ist b
C                 :  c ist in ascii
D                 :  d c_5
E                 :  e char7
F                 :        4
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                     3
 
Enter command:
CLOSE ERG !
 
Enter command:
INSERT INTO T1 VALUES ('fil1', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil2', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil3', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil4', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil5', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil6', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil7', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil8', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil9', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filA', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filB', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filC', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filD', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filE', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filF', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil1'
c 4 'fil7' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil4'
c 4 'filA' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil7'
c 4 'filD' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. filB'
c 4 'fil2' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    340:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil1
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil2
B                 :  das ist b
G                 :
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil3
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil4
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil5
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil6
B                 :  das ist b
G                 :  ?????
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
C                 :  c ist in ascii
A                 :  fil7
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil1
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil8
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil9
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filA
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil4
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filB
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filC
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filD
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil7
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filE
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filF
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                    18
 
Enter command:
CLOSE ERG !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1 WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    340:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil1
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil2
B                 :  das ist b
G                 :
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil3
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil4
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil5
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil6
B                 :  das ist b
G                 :  ?????
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
C                 :  c ist in ascii
A                 :  fil7
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil1
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil8
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil9
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filA
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil4
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filB
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filC
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filD
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil7
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filE
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filF
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                    18
 
Enter command:
PARSING !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1 WHERE A < :A AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
DECLARE ERG !
Parsing idnr :      1
 
c 4 'f' c 11 'das ist b'
 
resultcount :                     0
 
1                 :  c ist in ascii
2                 :  drei
3                 :  das ist b
4                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  eins
3                 :  das ist b
4                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
PARSING NOINIT !
 
Enter command:
PARSE FETCH ERG INTO :C, :A, :B, :G !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
EXECUTING !
 
Enter command:
FETCH ERG INTO !
Parsing idnr :      2
 
***ERROR  -3005 Invalid SQL statement                                      0001
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
DECLARE ERG !
Parsing idnr :      1
 
c 4 'zz' c 11 'das ist b'
 
resultcount :                     0
 
1                 :  c ist in ascii
2                 :  drei
3                 :  das ist b
4                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  eins
3                 :  das ist b
4                 :
from      1 to    340:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  fil1
3                 :  das ist b
4                 :  ?????
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  fil2
3                 :  das ist b
4                 :
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  fil3
3                 :  das ist b
4                 :  ?????
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  fil4
3                 :  das ist b
4                 :  ?????
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  fil5
3                 :  das ist b
4                 :  ?????
--------------------------------------------------------------------------------
1                 :  c ist in ascii
2                 :  fil6
3                 :  das ist b
4                 :  ?????
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
EXECUTING !
 
Enter command:
FETCH ERG INTO !
Parsing idnr :      2
 
***ERROR  -3005 Invalid SQL statement                                      0001
 
Enter command:
PARS_EXECUTE !
 
Enter command:
CREATE INDEX I1 ON T1 (E,F,D)!
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
DECLARE ERG !
Parsing idnr :      1
 
c 4 'zz' c 11 'das ist b'
 
***ERROR     -9 USE NEW PARSINFO                                           0001
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
SCROLLFEAT OFF !
FILE CONNECT ( SUT SUT SQLMODE ORACLE !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "PVC_DEVLINE"
("OBJSTATE"           INTEGER)!
 
Enter command:
INSERT INTO PVC_DEVLINE VALUES(1)!
 
Enter command:
INSERT INTO PVC_DEVLINE VALUES(1)!
 
Enter command:
INSERT INTO PVC_DEVLINE VALUES(1)!
 
Enter command:
INSERT INTO PVC_DEVLINE VALUES(1)!
 
Enter command:
PARSING!
 
Enter command:
PARSE SELECT AVG(OBJSTATE) FROM PVC_DEVLINE
UNION ALL
SELECT AVG(OBJSTATE) FROM PVC_DEVLINE !
parsing idnr :       1
 
Enter command:
EXECUTING!
 
Enter command:
SELECT!
Parsing idnr :      1
 
resultcount :                     0
 
1
--------------------------------------------
 1.0000000000000000000000000000000000000E+00
 1.0000000000000000000000000000000000000E+00
 
resultcount :                     0
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE "PVC_DEVLINE" !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SCROLLFEAT ON !
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT!
SESSION END
 
