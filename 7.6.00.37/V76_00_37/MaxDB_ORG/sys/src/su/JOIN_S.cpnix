JOIN_S.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_S ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE STATISTIK (KDNR   DECIMAL NOT NULL,
                        MONAT  DECIMAL NOT NULL,
                        UMSATZ DECIMAL NOT NULL)!
 
Enter command:
INSERT STATISTIK VALUES (1, 1, 100)!
 
Enter command:
INSERT STATISTIK VALUES (3, 1, 200)!
 
Enter command:
INSERT STATISTIK VALUES (1, 3, 500)!
 
Enter command:
INSERT STATISTIK VALUES (2, 4, 100)!
 
Enter command:
INSERT STATISTIK VALUES (3, 4, 300)!
 
Enter command:
INSERT STATISTIK VALUES (1, 7, 800)!
 
Enter command:
INSERT STATISTIK VALUES (2, 7, 900)!
 
Enter command:
INSERT STATISTIK VALUES (3,10, 200)!
 
Enter command:
INSERT STATISTIK VALUES (2,11,1000)!
 
Enter command:
INSERT STATISTIK VALUES (1,12, 200)!
 
Enter command:
INSERT STATISTIK VALUES (3,12, 500)!
 
Enter command:
SELECT A.KDNR, A.MONAT, A.UMSATZ, SUM (B.UMSATZ) KUMUMSATZ
FROM STATISTIK A, STATISTIK B
WHERE A.KDNR = B.KDNR
  AND A.MONAT >= B.MONAT
GROUP BY A.KDNR, A.MONAT, A.UMSATZ
ORDER BY A.KDNR, A.MONAT !
 
resultcount :                    11
 
Enter command:
FETCH!
 
KDNR   | MONAT  | UMSATZ | KUMUMSATZ
-------+--------+--------+---------------------------------------------
     1 |      1 |    100 |  1.0000000000000000000000000000000000000E+02
     1 |      3 |    500 |  6.0000000000000000000000000000000000000E+02
     1 |      7 |    800 |  1.4000000000000000000000000000000000000E+03
     1 |     12 |    200 |  1.6000000000000000000000000000000000000E+03
     2 |      4 |    100 |  1.0000000000000000000000000000000000000E+02
     2 |      7 |    900 |  1.0000000000000000000000000000000000000E+03
     2 |     11 |   1000 |  2.0000000000000000000000000000000000000E+03
     3 |      1 |    200 |  2.0000000000000000000000000000000000000E+02
     3 |      4 |    300 |  5.0000000000000000000000000000000000000E+02
     3 |     10 |    200 |  7.0000000000000000000000000000000000000E+02
     3 |     12 |    500 |  1.2000000000000000000000000000000000000E+03
 
resultcount :                    11
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PERSONEN (PERS_NR DECIMAL (6),
                       NAME    CHAR   (30))!
 
Enter command:
INSERT INTO PERSONEN VALUES (1, 'Schmitz,Peter')!
 
Enter command:
INSERT INTO PERSONEN VALUES (2, 'Hofer,Anette')!
 
Enter command:
INSERT INTO PERSONEN VALUES (3, 'Moericke,Michael')!
 
Enter command:
CREATE TABLE SPRACHE (PERS_NR DECIMAL (6),
                      SPRACHE CHAR (12))!
 
Enter command:
INSERT INTO SPRACHE VALUES (1, 'Englisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (1, 'Tuerkisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (1, 'Arabisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (2, 'Englisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (2, 'Franzoesisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (3, 'Englisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (3, 'Spanisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (3, 'Russisch')!
 
Enter command:
CREATE TABLE ANFORDERUNG (SPRACHE CHAR (12))!
 
Enter command:
INSERT INTO ANFORDERUNG VALUES ('Arabisch')!
 
Enter command:
INSERT INTO ANFORDERUNG VALUES ('Englisch')!
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P
 WHERE NOT EXISTS
       (SELECT *
         FROM ANFORDERUNG A
         WHERE NOT EXISTS
               (SELECT * FROM SPRACHE S
                 WHERE S.PERS_NR = P.PERS_NR
                   AND S.SPRACHE = A.SPRACHE))!
 
resultcount :                     1
 
Enter command:
FETCH !
 
PERS_NR | NAME
--------+-------------------------------
      1 | Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P, (SELECT COUNT(*) CNT FROM ANFORDERUNG) ACNT
 WHERE ACNT.CNT = (SELECT COUNT (*)
                     FROM ANFORDERUNG A, SPRACHE S
                    WHERE S.SPRACHE = A.SPRACHE
                      AND S.PERS_NR = P.PERS_NR) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
PERS_NR | NAME
--------+-------------------------------
      1 | Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT P.NAME
  FROM PERSONEN P
 WHERE P.PERS_NR IN
       (SELECT S.PERS_NR
          FROM SPRACHE S, ANFORDERUNG A
         WHERE S.SPRACHE = A.SPRACHE
         GROUP BY S.PERS_NR
         HAVING COUNT (*) =
                (SELECT COUNT (*) FROM ANFORDERUNG)) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
NAME
------------------------------
Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P
 WHERE NOT EXISTS
       (SELECT *
          FROM SPRACHE S, ANFORDERUNG A
         WHERE S.SPRACHE(+) = A.SPRACHE
           AND S.PERS_NR(+) = P.PERS_NR
           AND S.SPRACHE IS NULL) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
PERS_NR | NAME
--------+-------------------------------
      1 | Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P
 WHERE NOT EXISTS
       (SELECT *
          FROM SPRACHE S, ANFORDERUNG A
         WHERE S.SPRACHE(+) = A.SPRACHE
           AND S.PERS_NR(+) = P.PERS_NR)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8) ASCII KEY, B CHAR (5) ASCII KEY,
  C CHAR (8) ASCII)!
 
Enter command:
INSERT T VALUES ('aaa', 'bb', 'ccc')!
 
Enter command:
INSERT T VALUES ('neu', '22', 'c2c')!
 
Enter command:
INSERT T VALUES ('neu', 'bb', '333')!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE MARA (
MANDT              CHAR       ( 3 ),
MATNR              CHAR       ( 18 ),
ERSDA              CHAR       ( 8 ),
ERNAM              CHAR       ( 12 ),
LAEDA              CHAR       ( 8 ),
AENAM              CHAR       ( 12 ),
VPSTA              CHAR       ( 15 ),
PSTAT              CHAR       ( 15 ),
LVORM              CHAR       ( 1 ),
MTART              CHAR       ( 4 ),
MBRSH              CHAR       ( 1 ),
MATKL              CHAR       ( 9 ),
BISMT              CHAR (   18           ),
MEINS              CHAR (    3           ),
BSTME              CHAR (    3           ),
ZEINR              CHAR (   22           ),
ZEIAR              CHAR (    3           ),
ZEIVR              CHAR (    2           ),
ZEIFO              CHAR (    4           ),
AESZN              CHAR (    6           ),
BLATT              CHAR (    3           ),
BLANZ              CHAR (    3           ),
FERTH              CHAR (   18           ),
FORMT              CHAR (    4           ),
GROES              CHAR (   32           ),
WRKST              CHAR (   14           ),
NORMT              CHAR (   18           ),
LABOR              CHAR (    3           ),
EKWSL              CHAR (    4           ),
BRGEW              FIXED (          13 , 3 ),
NTGEW              FIXED (          13 , 3 ),
GEWEI              CHAR (    3           ),
VOLUM              FIXED (          13 , 3 ),
VOLEH              CHAR (    3           ),
BEHVO              CHAR (    2           ),
RAUBE              CHAR (    2           ),
TEMPB              CHAR (    2           ),
DISST              CHAR (    3           ),
TRAGR              CHAR (    4           ),
STOFF              CHAR (   18           ),
SPART              CHAR (    2           ),
KUNNR              CHAR (   10           ),
EANNR              CHAR (   14           ),
WESCH              FIXED (          13 , 3 ),
BWVOR              CHAR (    1           ),
BWSCL              CHAR (    1           ),
SAISO              CHAR (    4           ),
ETIAR              CHAR (    2           ),
ETIFO              CHAR (    2           ),
ENTAR              CHAR (    1           ),
EAN11              CHAR (   18           ),
NUMTP              CHAR (    2           ),
LAENG              FIXED (          13 , 3 ),
BREIT              FIXED (          13 , 3 ),
HOEHE              FIXED (          13 , 3 ),
MEABM              CHAR (    3           ),
PRDHA              CHAR (   18           ),
PRIMARY KEY  (MANDT, MATNR))!
 
Enter command:
INSERT INTO MARA (MANDT, MATNR) VALUES ('900', 'SD000001')!
 
Enter command:
 
CREATE TABLE MAKT (
MANDT                 CHAR (       3       ),
MATNR                 CHAR (      18       ),
SPRAS                 CHAR (       1       ),
MAKTX                 CHAR (      40       ),
PRIMARY KEY (MANDT, MATNR, SPRAS))!
 
Enter command:
INSERT INTO MAKT (MANDT, MATNR, SPRAS) VALUES ('900', 'SD000001', 'a')!
 
Enter command:
 
CREATE TABLE MVKE (
MANDT                 CHAR (       3       ),
MATNR                 CHAR (      18       ),
VKORG                 CHAR (       4       ),
VTWEG                 CHAR (       2       ),
LVORM                 CHAR (       1       ),
VERSG                 CHAR (       1       ),
BONUS                 CHAR (       2       ),
PROVG                 CHAR (       2       ),
SKTOF                 CHAR (       1       ),
VMSTA                 CHAR (       2       ),
VMSTD                 CHAR (       8       ),
AUMNG                 FIXED (        13 ,  3  ),
LFMNG                 FIXED (        13 ,  3  ),
EFMNG                 FIXED (        13 ,  3  ),
SCMNG                 FIXED (        13 ,  3  ),
SCHME                 CHAR (       3       ),
VRKME                 CHAR (       3       ),
MTPOS                 CHAR (       4       ),
DWERK                 CHAR (       4       ),
PRODH                 CHAR (      18       ),
PMATN                 CHAR (      18       ),
KONDM                 CHAR (       2       ),
KTGRM                 CHAR (       2       ),
MVGR1                 CHAR (       3       ),
MVGR2                 CHAR (       3       ),
MVGR3                 CHAR (       3       ),
MVGR4                 CHAR (       3       ),
MVGR5                 CHAR (       3       ),
PRIMARY KEY (MANDT, MATNR, VKORG, VTWEG))!
 
Enter command:
INSERT INTO MVKE (MANDT, MATNR, VKORG, VTWEG) VALUES (
'900', 'SD000001', 'vier', 'a')!
 
Enter command:
CREATE VIEW MAPOV ( MANDT , MATNR , SPRAS , VKORG , VTWEG , ZIEME , BRGEW ,
       NTGEW , GEWEI , VOLUM , VOLEH , RAUBE , TEMPB , DISST , EAN11 , NUMTP ,
       LAENG , BREIT , HOEHE , MEABM , PRDHA , KUNNR , VERSG , BONUS , PROVG ,
       SKTOF , VMSTA , VMSTD , AUMNG , LFMNG , EFMNG , SCHME , SCMNG , VRKME ,
       SPART , ARKTX , PRODH , PMATN , MTPOS , DWERK , MEINS , TRAGR , MATKL ,
       MTART , KTGRM , KONDM , LVORM , MVGR1 , MVGR2 , MVGR3 , MVGR4 , MVGR5 )
AS SELECT
       T0001.MANDT , T0001.MATNR , T0002.SPRAS , T0003.VKORG , T0003.VTWEG ,
       T0003.VRKME , T0001.BRGEW , T0001.NTGEW , T0001.GEWEI , T0001.VOLUM ,
       T0001.VOLEH , T0001.RAUBE , T0001.TEMPB , T0001.DISST , T0001.EAN11 ,
       T0001.NUMTP , T0001.LAENG , T0001.BREIT , T0001.HOEHE , T0001.MEABM ,
       T0001.PRDHA , T0001.KUNNR , T0003.VERSG , T0003.BONUS , T0003.PROVG ,
       T0003.SKTOF , T0003.VMSTA , T0003.VMSTD , T0003.AUMNG , T0003.LFMNG ,
       T0003.EFMNG , T0003.SCHME , T0003.SCMNG , T0003.VRKME , T0001.SPART ,
       T0002.MAKTX , T0003.PRODH , T0003.PMATN , T0003.MTPOS , T0003.DWERK ,
       T0001.MEINS , T0001.TRAGR , T0001.MATKL , T0001.MTART , T0003.KTGRM ,
       T0003.KONDM , T0003.LVORM , T0003.MVGR1 , T0003.MVGR2 , T0003.MVGR3 ,
       T0003.MVGR4 , T0003.MVGR5
FROM MARA T0001, MAKT T0002, MVKE T0003
WHERE T0001.MANDT = T0002.MANDT
  AND T0001.MATNR = T0002.MATNR
  AND T0001.MANDT = T0003.MANDT
  AND T0001.MATNR = T0003.MATNR   !
 
Enter command:
SELECT * FROM MAPOV WHERE MANDT = '900' AND
MATNR IN ('SD000004', 'SD000003', 'SD000002', 'SD000001', 'SD000000')!
 
resultcount :                     1
 
Enter command:
FETCH!
 
MANDT             :  900
MATNR             :  SD000001
SPRAS             :  a
VKORG             :  vier
VTWEG             :  a
ZIEME             :  ?????
BRGEW             :  ???????????????
NTGEW             :  ???????????????
GEWEI             :  ?????
VOLUM             :  ???????????????
VOLEH             :  ?????
RAUBE             :  ?????
TEMPB             :  ?????
DISST             :  ?????
EAN11             :  ?????
NUMTP             :  ?????
LAENG             :  ???????????????
BREIT             :  ???????????????
HOEHE             :  ???????????????
MEABM             :  ?????
PRDHA             :  ?????
KUNNR             :  ?????
VERSG             :  ?????
BONUS             :  ?????
PROVG             :  ?????
SKTOF             :  ?????
VMSTA             :  ?????
VMSTD             :  ?????
AUMNG             :  ???????????????
LFMNG             :  ???????????????
EFMNG             :  ???????????????
SCHME             :  ?????
SCMNG             :  ???????????????
VRKME             :  ?????
SPART             :  ?????
ARKTX             :  ?????
PRODH             :  ?????
PMATN             :  ?????
MTPOS             :  ?????
DWERK             :  ?????
MEINS             :  ?????
TRAGR             :  ?????
MATKL             :  ?????
MTART             :  ?????
KTGRM             :  ?????
KONDM             :  ?????
LVORM             :  ?????
MVGR1             :  ?????
MVGR2             :  ?????
MVGR3             :  ?????
MVGR4             :  ?????
MVGR5             :  ?????
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "KERN              "."TVEU12            " (
"K1N5              " CHAR      (5) ASCII    ,
"F1I4              " FIXED     (10,0) NOT NULL,
"F2F8              " FLOAT     (18) NOT NULL,
"F3CH              " CHAR      (30) ASCII    NOT NULL,
"F4TI              " CHAR      (6) ASCII    NOT NULL
, PRIMARY KEY ("K1N5              "
)) !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00001',     1, 1.00000000000000010E-01,
    'SATZNUMMER : 00001............', '093839') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00002',     9, 9.00000000000000020E-01,
    'SATZNUMMER : 00002............', '093838') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00011',    40, 4.00000000000000000E+00,
    'SATZNUMMER : 00011............', '093829') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00051',   100, 1.00000000000000000E+01,
    'SATZNUMMER : 00051............', '093749') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00151',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00151............', '093609') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00153',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00153............', '093607') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00155',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00155............', '093605') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00157',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00157............', '093603') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00159',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00159............', '093601') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00161',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00161............', '093559') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00163',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00163............', '093557') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00165',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00165............', '093555') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00167',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00167............', '093553') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00169',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00169............', '093551') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00171',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00171............', '093549') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00173',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00173............', '093547') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00175',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00175............', '093545') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00177',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00177............', '093543') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00179',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00179............', '093541') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00181',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00181............', '093539') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00183',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00183............', '093537') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00185',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00185............', '093535') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00187',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00187............', '093533') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00189',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00189............', '093531') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00191',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00191............', '093529') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00193',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00193............', '093527') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00195',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00195............', '093525') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00197',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00197............', '093523') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00199',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00199............', '093521') !
 
Enter command:
CREATE TABLE "KERN              "."TVEU13            " (
"K1N5              " CHAR      (5) ASCII    ,
"K2N5              " CHAR      (5) ASCII    ,
"F1I4              " FIXED     (10,0) NOT NULL,
"F2TX              " CHAR      (30) ASCII    NOT NULL,
"F3TI              " CHAR      (6) ASCII    NOT NULL
, PRIMARY KEY ("K1N5              "
,"K2N5              "
)) !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00001', '00001',   1,
     '%Die Mitternacht  ............', '093839') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00002',   1,
     '_zog naeher schon,............', '093838') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00003',   2,
     '%in stiller Ruh   ............', '093837') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00004',   3,
     '_lag Babylon.     ............', '093836') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00005',   4,
     '%Die Mitternacht  ............', '093835') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00006',   5,
     '_zog naeher schon,............', '093834') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00007',   6,
     '%in stiller Ruh   ............', '093833') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00008',   7,
     '_lag Babylon.     ............', '093832') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00009',   8,
     '%Die Mitternacht  ............', '093831') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00010',   9,
     '_zog naeher schon,............', '093830') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00011',   1,
     '%in stiller Ruh   ............', '093829') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00012',   2,
     '_lag Babylon.     ............', '093828') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00013',   3,
     '%Die Mitternacht  ............', '093827') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00014',   4,
     '_zog naeher schon,............', '093826') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00015',   5,
     '%in stiller Ruh   ............', '093825') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00016',   6,
     '_lag Babylon.     ............', '093824') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00017',   7,
     '%Die Mitternacht  ............', '093823') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00018',   8,
     '_zog naeher schon,............', '093822') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00019',   9,
     '%in stiller Ruh   ............', '093821') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00020',  10,
     '_lag Babylon.     ............', '093820') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00021',  11,
     '%Die Mitternacht  ............', '093819') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00022',  12,
     '_zog naeher schon,............', '093818') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00023',  13,
     '%in stiller Ruh   ............', '093817') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00024',  14,
     '_lag Babylon.     ............', '093816') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00025',  15,
     '%Die Mitternacht  ............', '093815') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00026',  16,
     '_zog naeher schon,............', '093814') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00027',  17,
     '%in stiller Ruh   ............', '093813') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00028',  18,
     '_lag Babylon.     ............', '093812') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00029',  19,
     '%Die Mitternacht  ............', '093811') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00030',  20,
     '_zog naeher schon,............', '093810') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00031',  21,
     '%in stiller Ruh   ............', '093809') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00032',  22,
     '_lag Babylon.     ............', '093808') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00033',  23,
     '%Die Mitternacht  ............', '093807') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00034',  24,
     '_zog naeher schon,............', '093806') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00035',  25,
     '%in stiller Ruh   ............', '093805') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00036',  26,
     '_lag Babylon.     ............', '093804') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00037',  27,
     '%Die Mitternacht  ............', '093803') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00038',  28,
     '_zog naeher schon,............', '093802') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00039',  29,
     '%in stiller Ruh   ............', '093801') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00040',  30,
     '_lag Babylon.     ............', '093800') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00041',  31,
     '%Die Mitternacht  ............', '093759') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00042',  32,
     '_zog naeher schon,............', '093758') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00043',  33,
     '%in stiller Ruh   ............', '093757') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00044',  34,
     '_lag Babylon.     ............', '093756') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00045',  35,
     '%Die Mitternacht  ............', '093755') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00046',  36,
     '_zog naeher schon,............', '093754') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00047',  37,
     '%in stiller Ruh   ............', '093753') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00048',  38,
     '_lag Babylon.     ............', '093752') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00049',  39,
     '%Die Mitternacht  ............', '093751') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00050',  40,
     '_zog naeher schon,............', '093750') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00051',   1,
     '%in stiller Ruh   ............', '093749') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00052',   2,
     '_lag Babylon.     ............', '093748') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00053',   3,
     '%Die Mitternacht  ............', '093747') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00054',   4,
     '_zog naeher schon,............', '093746') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00055',   5,
     '%in stiller Ruh   ............', '093745') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00056',   6,
     '_lag Babylon.     ............', '093744') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00057',   7,
     '%Die Mitternacht  ............', '093743') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00058',   8,
     '_zog naeher schon,............', '093742') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00059',   9,
     '%in stiller Ruh   ............', '093741') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00060',  10,
     '_lag Babylon.     ............', '093740') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00061',  11,
     '%Die Mitternacht  ............', '093739') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00062',  12,
     '_zog naeher schon,............', '093738') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00063',  13,
     '%in stiller Ruh   ............', '093737') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00064',  14,
     '_lag Babylon.     ............', '093736') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00065',  15,
     '%Die Mitternacht  ............', '093735') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00066',  16,
     '_zog naeher schon,............', '093734') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00067',  17,
     '%in stiller Ruh   ............', '093733') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00068',  18,
     '_lag Babylon.     ............', '093732') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00069',  19,
     '%Die Mitternacht  ............', '093731') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00070',  20,
     '_zog naeher schon,............', '093730') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00071',  21,
     '%in stiller Ruh   ............', '093729') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00072',  22,
     '_lag Babylon.     ............', '093728') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00073',  23,
     '%Die Mitternacht  ............', '093727') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00074',  24,
     '_zog naeher schon,............', '093726') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00075',  25,
     '%in stiller Ruh   ............', '093725') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00076',  26,
     '_lag Babylon.     ............', '093724') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00077',  27,
     '%Die Mitternacht  ............', '093723') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00078',  28,
     '_zog naeher schon,............', '093722') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00079',  29,
     '%in stiller Ruh   ............', '093721') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00080',  30,
     '_lag Babylon.     ............', '093720') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00081',  31,
     '%Die Mitternacht  ............', '093719') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00082',  32,
     '_zog naeher schon,............', '093718') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00083',  33,
     '%in stiller Ruh   ............', '093717') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00084',  34,
     '_lag Babylon.     ............', '093716') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00085',  35,
     '%Die Mitternacht  ............', '093715') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00086',  36,
     '_zog naeher schon,............', '093714') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00087',  37,
     '%in stiller Ruh   ............', '093713') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00088',  38,
     '_lag Babylon.     ............', '093712') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00089',  39,
     '%Die Mitternacht  ............', '093711') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00090',  40,
     '_zog naeher schon,............', '093710') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00091',  41,
     '%in stiller Ruh   ............', '093709') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00092',  42,
     '_lag Babylon.     ............', '093708') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00093',  43,
     '%Die Mitternacht  ............', '093707') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00094',  44,
     '_zog naeher schon,............', '093706') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00095',  45,
     '%in stiller Ruh   ............', '093705') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00096',  46,
     '_lag Babylon.     ............', '093704') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00097',  47,
     '%Die Mitternacht  ............', '093703') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00098',  48,
     '_zog naeher schon,............', '093702') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00099',  49,
     '%in stiller Ruh   ............', '093701') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00100',  50,
     '_lag Babylon.     ............', '093700') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00101',  51,
     '%Die Mitternacht  ............', '093659') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00102',  52,
     '_zog naeher schon,............', '093658') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00103',  53,
     '%in stiller Ruh   ............', '093657') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00104',  54,
     '_lag Babylon.     ............', '093656') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00105',  55,
     '%Die Mitternacht  ............', '093655') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00106',  56,
     '_zog naeher schon,............', '093654') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00107',  57,
     '%in stiller Ruh   ............', '093653') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00108',  58,
     '_lag Babylon.     ............', '093652') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00109',  59,
     '%Die Mitternacht  ............', '093651') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00110',  60,
     '_zog naeher schon,............', '093650') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00111',  61,
     '%in stiller Ruh   ............', '093649') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00112',  62,
     '_lag Babylon.     ............', '093648') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00113',  63,
     '%Die Mitternacht  ............', '093647') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00114',  64,
     '_zog naeher schon,............', '093646') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00115',  65,
     '%in stiller Ruh   ............', '093645') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00116',  66,
     '_lag Babylon.     ............', '093644') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00117',  67,
     '%Die Mitternacht  ............', '093643') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00118',  68,
     '_zog naeher schon,............', '093642') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00119',  69,
     '%in stiller Ruh   ............', '093641') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00120',  70,
     '_lag Babylon.     ............', '093640') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00121',  71,
     '%Die Mitternacht  ............', '093639') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00122',  72,
     '_zog naeher schon,............', '093638') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00123',  73,
     '%in stiller Ruh   ............', '093637') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00124',  74,
     '_lag Babylon.     ............', '093636') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00125',  75,
     '%Die Mitternacht  ............', '093635') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00126',  76,
     '_zog naeher schon,............', '093634') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00127',  77,
     '%in stiller Ruh   ............', '093633') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00128',  78,
     '_lag Babylon.     ............', '093632') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00129',  79,
     '%Die Mitternacht  ............', '093631') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00130',  80,
     '_zog naeher schon,............', '093630') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00131',  81,
     '%in stiller Ruh   ............', '093629') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00132',  82,
     '_lag Babylon.     ............', '093628') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00133',  83,
     '%Die Mitternacht  ............', '093627') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00134',  84,
     '_zog naeher schon,............', '093626') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00135',  85,
     '%in stiller Ruh   ............', '093625') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00136',  86,
     '_lag Babylon.     ............', '093624') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00137',  87,
     '%Die Mitternacht  ............', '093623') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00138',  88,
     '_zog naeher schon,............', '093622') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00139',  89,
     '%in stiller Ruh   ............', '093621') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00140',  90,
     '_lag Babylon.     ............', '093620') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00141',  91,
     '%Die Mitternacht  ............', '093619') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00142',  92,
     '_zog naeher schon,............', '093618') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00143',  93,
     '%in stiller Ruh   ............', '093617') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00144',  94,
     '_lag Babylon.     ............', '093616') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00145',  95,
     '%Die Mitternacht  ............', '093615') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00146',  96,
     '_zog naeher schon,............', '093614') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00147',  97,
     '%in stiller Ruh   ............', '093613') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00148',  98,
     '_lag Babylon.     ............', '093612') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00149',  99,
     '%Die Mitternacht  ............', '093611') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00150', 100,
     '_zog naeher schon,............', '093610') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00151', '00151',   1,
     '%in stiller Ruh   ............', '093609') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00151', '00152',   2,
     '_lag Babylon.     ............', '093608') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00153', '00153',   1,
     '%Die Mitternacht  ............', '093607') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00153', '00154',   2,
     '_zog naeher schon,............', '093606') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00155', '00155',   1,
     '%in stiller Ruh   ............', '093605') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00155', '00156',   2,
     '_lag Babylon.     ............', '093604') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00157', '00157',   1,
     '%Die Mitternacht  ............', '093603') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00157', '00158',   2,
     '_zog naeher schon,............', '093602') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00159', '00159',   1,
     '%in stiller Ruh   ............', '093601') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00159', '00160',   2,
     '_lag Babylon.     ............', '093600') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00161', '00161',   1,
     '%Die Mitternacht  ............', '093559') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00161', '00162',   2,
     '_zog naeher schon,............', '093558') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00163', '00163',   1,
     '%in stiller Ruh   ............', '093557') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00163', '00164',   2,
     '_lag Babylon.     ............', '093556') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00165', '00165',   1,
     '%Die Mitternacht  ............', '093555') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00165', '00166',   2,
     '_zog naeher schon,............', '093554') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00167', '00167',   1,
     '%in stiller Ruh   ............', '093553') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00167', '00168',   2,
     '_lag Babylon.     ............', '093552') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00169', '00169',   1,
     '%Die Mitternacht  ............', '093551') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00169', '00170',   2,
     '_zog naeher schon,............', '093550') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00171', '00171',   1,
     '%in stiller Ruh   ............', '093549') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00171', '00172',   2,
     '_lag Babylon.     ............', '093548') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00173', '00173',   1,
     '%Die Mitternacht  ............', '093547') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00173', '00174',   2,
     '_zog naeher schon,............', '093546') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00175', '00175',   1,
     '%in stiller Ruh   ............', '093545') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00175', '00176',   2,
     '_lag Babylon.     ............', '093544') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00177', '00177',   1,
     '%Die Mitternacht  ............', '093543') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00177', '00178',   2,
     '_zog naeher schon,............', '093542') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00179', '00179',   1,
     '%in stiller Ruh   ............', '093541') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00179', '00180',   2,
     '_lag Babylon.     ............', '093540') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00181', '00181',   1,
     '%Die Mitternacht  ............', '093539') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00181', '00182',   2,
     '_zog naeher schon,............', '093538') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00183', '00183',   1,
     '%in stiller Ruh   ............', '093537') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00183', '00184',   2,
     '_lag Babylon.     ............', '093536') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00185', '00185',   1,
     '%Die Mitternacht  ............', '093535') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00185', '00186',   2,
     '_zog naeher schon,............', '093534') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00187', '00187',   1,
     '%in stiller Ruh   ............', '093533') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00187', '00188',   2,
     '_lag Babylon.     ............', '093532') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00189', '00189',   1,
     '%Die Mitternacht  ............', '093531') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00189', '00190',   2,
     '_zog naeher schon,............', '093530') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00191', '00191',   1,
     '%in stiller Ruh   ............', '093529') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00191', '00192',   2,
     '_lag Babylon.     ............', '093528') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00193', '00193',   1,
     '%Die Mitternacht  ............', '093527') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00193', '00194',   2,
     '_zog naeher schon,............', '093526') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00195', '00195',   1,
     '%in stiller Ruh   ............', '093525') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00195', '00196',   2,
     '_lag Babylon.     ............', '093524') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00197', '00197',   1,
     '%Die Mitternacht  ............', '093523') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00197', '00198',   2,
     '_zog naeher schon,............', '093522') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00199', '00199',   1,
     '%in stiller Ruh   ............', '093521') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00199', '00200',   2,
     '_lag Babylon.     ............', '093520') !
 
Enter command:
CREATE VIEW VVER2 (N5_12, N5_13, I4_12, CH_12, I4_13, TX_13)
AS SELECT T0001.K1N5, T0002.K2N5, T0001.F1I4, T0001.F3CH,
          T0002.F1I4, T0002.F2TX
FROM TVEU12 T0001, TVEU13 T0002
WHERE T0001.K1N5 = T0002.K1N5 AND
     ( T0002.K1N5 <= '00050' OR T0002.K1N5 > '00150' ) !
 
Enter command:
EXPLAIN SELECT * FROM VVER2 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TVEU12             |                    | TABLE SCAN                               |          1
KERN               | TVEU13             | K1N5               | JOIN VIA KEY RANGE                       |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          7
 
Enter command:
EXPLAIN SELECT T0001.K1N5, T0002.K2N5, T0001.F1I4, T0001.F3CH,
          T0002.F1I4, T0002.F2TX
FROM <TVEU12 T0001, TVEU13 T0002>
WHERE T0001.K1N5 = T0002.K1N5 AND
     ( T0002.K1N5 <= '00050' OR T0002.K1N5 > '00150' ) !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T0001              |                    | TABLE SCAN                               |          1
                   | T0002              | K1N5               | JOIN VIA KEY RANGE                       |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          7
 
Enter command:
EXPLAIN SELECT T0001.K1N5, T0002.K2N5, T0001.F1I4, T0001.F3CH,
          T0002.F1I4, T0002.F2TX
FROM <TVEU13 T0002, TVEU12 T0001>
WHERE T0001.K1N5 = T0002.K1N5 AND
     ( T0002.K1N5 <= '00050' OR T0002.K1N5 > '00150' ) !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T0002              |                    | TABLE SCAN                               |          1
                   | T0001              | K1N5               | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         10
 
Enter command:
SELECT * FROM VVER2 !
 
resultcount :                   100
 
Enter command:
FETCH !
 
N5_12             :  00001
N5_13             :  00001
I4_12             :            1
CH_12             :  SATZNUMMER : 00001............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00002
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            1
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00003
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            2
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00004
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            3
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00005
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            4
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00006
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            5
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00007
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            6
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00008
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            7
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00009
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            8
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00010
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            9
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00011
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00012
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00013
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            3
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00014
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            4
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00015
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            5
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00016
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            6
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00017
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            7
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00018
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            8
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00019
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            9
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00020
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           10
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00021
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           11
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00022
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           12
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00023
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           13
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00024
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           14
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00025
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           15
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00026
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           16
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00027
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           17
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00028
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           18
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00029
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           19
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00030
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           20
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00031
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           21
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00032
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           22
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00033
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           23
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00034
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           24
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00035
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           25
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00036
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           26
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00037
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           27
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00038
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           28
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00039
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           29
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00040
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           30
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00041
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           31
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00042
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           32
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00043
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           33
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00044
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           34
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00045
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           35
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00046
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           36
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00047
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           37
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00048
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           38
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00049
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           39
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00050
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           40
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00151
N5_13             :  00151
I4_12             :            2
CH_12             :  SATZNUMMER : 00151............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00151
N5_13             :  00152
I4_12             :            2
CH_12             :  SATZNUMMER : 00151............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00153
N5_13             :  00153
I4_12             :            2
CH_12             :  SATZNUMMER : 00153............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00153
N5_13             :  00154
I4_12             :            2
CH_12             :  SATZNUMMER : 00153............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00155
N5_13             :  00155
I4_12             :            2
CH_12             :  SATZNUMMER : 00155............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00155
N5_13             :  00156
I4_12             :            2
CH_12             :  SATZNUMMER : 00155............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00157
N5_13             :  00157
I4_12             :            2
CH_12             :  SATZNUMMER : 00157............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00157
N5_13             :  00158
I4_12             :            2
CH_12             :  SATZNUMMER : 00157............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00159
N5_13             :  00159
I4_12             :            2
CH_12             :  SATZNUMMER : 00159............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00159
N5_13             :  00160
I4_12             :            2
CH_12             :  SATZNUMMER : 00159............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00161
N5_13             :  00161
I4_12             :            2
CH_12             :  SATZNUMMER : 00161............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00161
N5_13             :  00162
I4_12             :            2
CH_12             :  SATZNUMMER : 00161............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00163
N5_13             :  00163
I4_12             :            2
CH_12             :  SATZNUMMER : 00163............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00163
N5_13             :  00164
I4_12             :            2
CH_12             :  SATZNUMMER : 00163............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00165
N5_13             :  00165
I4_12             :            2
CH_12             :  SATZNUMMER : 00165............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00165
N5_13             :  00166
I4_12             :            2
CH_12             :  SATZNUMMER : 00165............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00167
N5_13             :  00167
I4_12             :            2
CH_12             :  SATZNUMMER : 00167............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00167
N5_13             :  00168
I4_12             :            2
CH_12             :  SATZNUMMER : 00167............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00169
N5_13             :  00169
I4_12             :            2
CH_12             :  SATZNUMMER : 00169............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00169
N5_13             :  00170
I4_12             :            2
CH_12             :  SATZNUMMER : 00169............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00171
N5_13             :  00171
I4_12             :            2
CH_12             :  SATZNUMMER : 00171............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00171
N5_13             :  00172
I4_12             :            2
CH_12             :  SATZNUMMER : 00171............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00173
N5_13             :  00173
I4_12             :            2
CH_12             :  SATZNUMMER : 00173............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00173
N5_13             :  00174
I4_12             :            2
CH_12             :  SATZNUMMER : 00173............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00175
N5_13             :  00175
I4_12             :            2
CH_12             :  SATZNUMMER : 00175............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00175
N5_13             :  00176
I4_12             :            2
CH_12             :  SATZNUMMER : 00175............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00177
N5_13             :  00177
I4_12             :            2
CH_12             :  SATZNUMMER : 00177............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00177
N5_13             :  00178
I4_12             :            2
CH_12             :  SATZNUMMER : 00177............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00179
N5_13             :  00179
I4_12             :            2
CH_12             :  SATZNUMMER : 00179............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00179
N5_13             :  00180
I4_12             :            2
CH_12             :  SATZNUMMER : 00179............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00181
N5_13             :  00181
I4_12             :            2
CH_12             :  SATZNUMMER : 00181............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00181
N5_13             :  00182
I4_12             :            2
CH_12             :  SATZNUMMER : 00181............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00183
N5_13             :  00183
I4_12             :            2
CH_12             :  SATZNUMMER : 00183............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00183
N5_13             :  00184
I4_12             :            2
CH_12             :  SATZNUMMER : 00183............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00185
N5_13             :  00185
I4_12             :            2
CH_12             :  SATZNUMMER : 00185............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00185
N5_13             :  00186
I4_12             :            2
CH_12             :  SATZNUMMER : 00185............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00187
N5_13             :  00187
I4_12             :            2
CH_12             :  SATZNUMMER : 00187............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00187
N5_13             :  00188
I4_12             :            2
CH_12             :  SATZNUMMER : 00187............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00189
N5_13             :  00189
I4_12             :            2
CH_12             :  SATZNUMMER : 00189............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00189
N5_13             :  00190
I4_12             :            2
CH_12             :  SATZNUMMER : 00189............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00191
N5_13             :  00191
I4_12             :            2
CH_12             :  SATZNUMMER : 00191............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00191
N5_13             :  00192
I4_12             :            2
CH_12             :  SATZNUMMER : 00191............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00193
N5_13             :  00193
I4_12             :            2
CH_12             :  SATZNUMMER : 00193............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00193
N5_13             :  00194
I4_12             :            2
CH_12             :  SATZNUMMER : 00193............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00195
N5_13             :  00195
I4_12             :            2
CH_12             :  SATZNUMMER : 00195............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00195
N5_13             :  00196
I4_12             :            2
CH_12             :  SATZNUMMER : 00195............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00197
N5_13             :  00197
I4_12             :            2
CH_12             :  SATZNUMMER : 00197............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00197
N5_13             :  00198
I4_12             :            2
CH_12             :  SATZNUMMER : 00197............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00199
N5_13             :  00199
I4_12             :            2
CH_12             :  SATZNUMMER : 00199............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00199
N5_13             :  00200
I4_12             :            2
CH_12             :  SATZNUMMER : 00199............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
 
resultcount :                   100
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE ANLA (
"MANDT" VARCHAR   (3)  ,"BUKRS" VARCHAR   (4)  ,"ANLN1" VARCHAR   (12)  ,
"ANLN2" VARCHAR   (4)  ,
"ANLKL" VARCHAR   (8)  ,"GEGST" VARCHAR   (8)  ,
"ANLAR" VARCHAR   (5)  ,"ERNAM" VARCHAR   (12)  ,"ERDAT" VARCHAR   (8)  ,
"AENAM" VARCHAR   (12)  ,"AEDAT" VARCHAR   (8)  ,"XLOEV" VARCHAR   (1)  ,
"XSPEB" VARCHAR   (1)  ,"FELEI" VARCHAR   (4)  ,"KTOGR" VARCHAR   (8)  ,
"XOPVW" VARCHAR   (1)  ,"ANLTP" VARCHAR   (1)  ,"ZUJHR" VARCHAR   (4)  ,
"ZUPER" VARCHAR   (3)  ,"ZUGDT" VARCHAR   (8)  ,"AKTIV" VARCHAR   (8)  ,
"ABGDT" VARCHAR   (8)  ,"DEAKT" VARCHAR   (8)  ,"GPLAB" VARCHAR   (8)  ,
"BSTDT" VARCHAR   (8)  ,"ORD41" VARCHAR   (4)  ,"ORD42" VARCHAR   (4)  ,
"ORD43" VARCHAR   (4)  ,"ORD44" VARCHAR   (4)  ,"ANLUE" VARCHAR   (12)  ,
"ZUAWA" VARCHAR   (3)  ,"ANEQK" VARCHAR   (1)  ,"ANEQS" VARCHAR   (1)  ,
"LIFNR" VARCHAR   (10)  ,"LAND1" VARCHAR   (3)  ,"LIEFE" VARCHAR   (30)  ,
"HERST" VARCHAR   (30)  ,"EIGKZ" VARCHAR   (1)  ,"AIBN1" VARCHAR   (12)  ,
"AIBN2" VARCHAR   (4)  ,"AIBDT" VARCHAR   (8)  ,"URJHR" VARCHAR   (4)  ,
"URWRT" FIXED     (13,2) ,"ANTEI" FIXED     (5,2) ,"PROJN" VARCHAR   (16)  ,
"EAUFN" VARCHAR   (12)  ,"MEINS" VARCHAR   (3)  ,"MENGE" FIXED     (13,3) ,
"TYPBZ" VARCHAR   (15)  ,"IZWEK" VARCHAR   (2)  ,"INKEN" VARCHAR   (1)  ,
"IVDAT" VARCHAR   (8)  ,"INVZU" VARCHAR   (15)  ,"VMGLI" VARCHAR   (4)  ,
"XVRMW" VARCHAR   (1)  ,"WRTMA" FIXED     (13,2) ,"EHWRT" FIXED     (13,
2) ,"AUFLA" VARCHAR   (8)  ,"EHWZU" VARCHAR   (8)  ,"EHWNR" VARCHAR   (16)  ,
"GRUVO" VARCHAR   (8)  ,"GREIN" VARCHAR   (8)  ,"GRBND" VARCHAR   (5)  ,
"GRBLT" VARCHAR   (5)  ,"GRLFD" VARCHAR   (4)  ,"FLURK" VARCHAR   (4)  ,
"FLURN" VARCHAR   (5)  ,"FIAMT" VARCHAR   (25)  ,"STADT" VARCHAR   (25)  ,
"GRUND" VARCHAR   (3)  ,"FEINS" VARCHAR   (3)  ,"GRUFL" FIXED     (13,3) ,
"INVNR" VARCHAR   (25)  ,"VBUND" VARCHAR   (6)  ,"SPRAS" VARCHAR   (1)  ,
"TXT50" VARCHAR   (50)  ,"TXA50" VARCHAR   (50)  ,"XLTXID" VARCHAR   (1)  ,
"XVERID" VARCHAR   (1)  ,"XTCHID" VARCHAR   (1)  ,"XKALID" VARCHAR   (1)  ,
"XHERID" VARCHAR   (1)  ,"XLEAID" VARCHAR   (1)  ,"LEAFI" VARCHAR   (10)  ,
"LVDAT" VARCHAR   (8)  ,"LKDAT" VARCHAR   (8)  ,"LEABG" VARCHAR   (8)  ,
"LEJAR" VARCHAR   (3)  ,"LEPER" VARCHAR   (3)  ,"LRYTH" VARCHAR   (3)  ,
"LEGEB" FIXED     (13,2) ,"LBASW" FIXED     (13,2) ,"LKAUF" FIXED     (13,
2) ,"LMZIN" FIXED     (7,4) ,"LZINS" FIXED     (7,4) ,"LTZBW" VARCHAR   (8)  ,
"LKUZA" FIXED     (13,2) ,"LKUZI" FIXED     (13,2) ,"LLAVB" FIXED     (13,
2) ,"LEANZ" FIXED   (5,0) ,"LVTNR" VARCHAR   (15)  ,"LETXT" VARCHAR   (50)  ,
"XAKTIV" VARCHAR   (1)  ,"ANUPD" VARCHAR   (1)  ,"LBLNR" VARCHAR   (10)  ,
"XV0DT" VARCHAR   (8)  ,"XV0NM" VARCHAR   (12)  ,"XV1DT" VARCHAR   (8)  ,
"XV1NM" VARCHAR   (12)  ,"XV2DT" VARCHAR   (8)  ,"XV2NM" VARCHAR   (12)  ,
"XV3DT" VARCHAR   (8)  ,"XV3NM" VARCHAR   (12)  ,"XV4DT" VARCHAR   (8)  ,
"XV4NM" VARCHAR   (12)  ,"XV5DT" VARCHAR   (8)  ,"XV5NM" VARCHAR   (12)  ,
"XV6DT" VARCHAR   (8)  ,"XV6NM" VARCHAR   (12)  ,"AIMMO" VARCHAR   (1)  ,
"OBJNR" VARCHAR   (22)  ,"LEART" VARCHAR   (2)  ,"LVORS" VARCHAR   (1)  ,
"GDLGRP" VARCHAR   (8)  ,"POSNR" VARCHAR   (8)  ,"XERWRT" VARCHAR   (1)  ,
"XAFABCH" VARCHAR   (1)
, PRIMARY KEY ("MANDT","BUKRS","ANLN1","ANLN2")) !
 
Enter command:
CREATE TABLE ANEP (
"MANDT" VARCHAR   (3)  ,"BUKRS" VARCHAR   (4)  ,"ANLN1" VARCHAR   (12)  ,
"ANLN2" VARCHAR   (4)  ,"GJAHR" VARCHAR   (4)  ,"LNRAN" VARCHAR   (5)  ,
"AFABE" VARCHAR   (2)  ,"ZUJHR" VARCHAR   (4)  ,"ZUCOD" VARCHAR   (4)  ,
"PERAF" VARCHAR   (3)  ,"BELNR" VARCHAR   (10)  ,"BUZEI" VARCHAR   (3)  ,
"BZDAT" VARCHAR   (8)  ,"BWASL" VARCHAR   (3)  ,"XAFAR" VARCHAR   (1)  ,
"ANBTR" FIXED     (13,2) ,"NAFAB" FIXED     (13,2) ,"SAFAB" FIXED     (13,2) ,
"ZINSB" FIXED     (13,2) ,"XANTW" VARCHAR   (1)  ,"XAWBT" VARCHAR   (1)  ,
"LNSAN" VARCHAR   (5)  ,"ANUPD" VARCHAR   (1)  ,"AUGLN" VARCHAR   (5)
, PRIMARY KEY ("MANDT","BUKRS","ANLN1","ANLN2","GJAHR",
"LNRAN","AFABE","ZUJHR","ZUCOD"
)) !
 
Enter command:
CREATE TABLE ANLZ (
"MANDT" VARCHAR   (3)  ,"BUKRS" VARCHAR   (4)  ,"ANLN1" VARCHAR   (12)  ,
"ANLN2" VARCHAR   (4)  ,"BDATU" VARCHAR   (8)  ,"ADATU" VARCHAR   (8)  ,
"KOSTL" VARCHAR   (10)  ,"WERKS" VARCHAR   (4)  ,"GSBER" VARCHAR   (4)  ,
"LSTAR" VARCHAR   (6)  ,"MSFAK" FIXED     (3,2) ,"XSTIL" VARCHAR   (1)  ,
"STORT" VARCHAR   (10)  ,"CAUFN" VARCHAR   (12)  ,"PLAN1" VARCHAR   (12)  ,
"PLAN2" VARCHAR   (4)  ,"RAUMN" VARCHAR   (8)  ,"IAUFN" VARCHAR   (12)  ,
"IPROJ" VARCHAR   (16)  ,"TPLKZ" VARCHAR   (3)  ,"TPLNR" VARCHAR   (30)  ,
"ANUPD" VARCHAR   (1)  ,"TXJCD" VARCHAR   (15)  ,"IPSNR" VARCHAR   (8)  ,
"KFZKZ" VARCHAR   (15)
, PRIMARY KEY ("MANDT","BUKRS","ANLN1","ANLN2","BDATU")) !
 
Enter command:
 
SET FORMAT INTERNAL !
 
Enter command:
CREATE VIEW "V_ANLAB" ("MANDT","BUKRS","ANLN1","ANLN2","GJAHR","LNRAN",
"AFABE","ANEPZUJHR","ZUCOD","BDATU","ANLKL","GEGST","ANLAR","ERNAM",
"ERDAT","AENAM","AEDAT","XLOEV","XSPEB","FELEI","KTOGR","XOPVW","ANLTP",
"ZUJHR","ZUPER","ZUGDT","AKTIV","ABGDT",
"DEAKT","GPLAB","BSTDT", "ORD41","ORD42","ORD43","ORD44","ANLUE","ZUAWA",
"ANEQK","ANEQS","LIFNR","LAND1","LIEFE","HERST","EIGKZ","AIBN1",
"AIBN2","AIBDT","URJHR", "URWRT","ANTEI","PROJN","EAUFN","MEINS","MENGE",
"TYPBZ","IZWEK","INKEN","IVDAT","INVZU",
"VMGLI","XVRMW","WRTMA","EHWRT","AUFLA","EHWZU", "EHWNR","GRUVO","GREIN",
"GRBND","GRBLT","GRLFD","FLURK","FLURN","FIAMT","STADT","GRUND",
"FEINS","GRUFL","INVNR","VBUND","SPRAS","TXT50", "TXA50","XLTXID","XVERID",
"XTCHID","XKALID","XHERID","XLEAID",
"LEAFI","LVDAT","LKDAT","LEABG","LEJAR","LEPER","LRYTH","LEGEB","LBASW",
"LKAUF","LMZIN","LZINS","LTZBW","LKUZA","LKUZI","LLAVB","LEANZ",
"LVTNR","LETXT","XAKTIV","ANUPD","LBLNR","XV0DT","XV0NM","XV1DT","XV1NM",
"XV2DT","XV2NM","XV3DT","XV3NM","XV4DT",
"XV4NM","XV5DT","XV5NM","XV6DT","XV6NM","AIMMO","OBJNR","LEART","LVORS",
"GDLGRP","POSNR","XERWRT", "XAFABCH","ADATU","KOSTL","WERKS","GSBER",
"LSTAR","MSFAK","XSTIL","STORT","CAUFN","PLAN1","PLAN2","RAUMN","IAUFN",
"IPROJ","TPLKZ","TPLNR", "TXJCD",
"IPSNR") AS SELECT T0001.MANDT, T0001.BUKRS, T0001.ANLN1, T0001.ANLN2,
T0001.GJAHR, T0001.LNRAN, T0001.AFABE, T0001.ZUJHR, T0001.ZUCOD,
T0003.BDATU, T0002.ANLKL, T0002.GEGST, T0002.ANLAR, T0002.ERNAM,
T0002.ERDAT, T0002.AENAM, T0002.AEDAT, T0002.XLOEV,
T0002.XSPEB, T0002.FELEI, T0002.KTOGR, T0002.XOPVW, T0002.ANLTP,
T0002.ZUJHR, T0002.ZUPER, T0002.ZUGDT, T0002.AKTIV, T0002.ABGDT,
T0002.DEAKT, T0002.GPLAB, T0002.BSTDT, T0002.ORD41, T0002.ORD42,
T0002.ORD43, T0002.ORD44, T0002.ANLUE, T0002.ZUAWA, T0002.ANEQK,
T0002.ANEQS, T0002.LIFNR, T0002.LAND1, T0002.LIEFE, T0002.HERST,
T0002.EIGKZ, T0002.AIBN1, T0002.AIBN2, T0002.AIBDT, T0002.URJHR,
T0002.URWRT, T0002.ANTEI, T0002.PROJN, T0002.EAUFN, T0002.MEINS,
T0002.MENGE, T0002.TYPBZ, T0002.IZWEK, T0002.INKEN,
T0002.IVDAT, T0002.INVZU, T0002.VMGLI, T0002.XVRMW, T0002.WRTMA,
T0002.EHWRT, T0002.AUFLA, T0002.EHWZU, T0002.EHWNR, T0002.GRUVO,
T0002.GREIN, T0002.GRBND, T0002.GRBLT, T0002.GRLFD, T0002.FLURK,
T0002.FLURN, T0002.FIAMT, T0002.STADT, T0002.GRUND, T0002.FEINS,
T0002.GRUFL, T0002.INVNR, T0002.VBUND, T0002.SPRAS, T0002.TXT50,
T0002.TXA50, T0002.XLTXID, T0002.XVERID, T0002.XTCHID, T0002.XKALID,
T0002.XHERID, T0002.XLEAID, T0002.LEAFI, T0002.LVDAT, T0002.LKDAT,
T0002.LEABG, T0002.LEJAR, T0002.LEPER, T0002.
LRYTH, T0002.LEGEB, T0002.LBASW, T0002.LKAUF, T0002.LMZIN, T0002.LZINS,
T0002.LTZBW, T0002.LKUZA, T0002.LKUZI, T0002.LLAVB, T0002.LEANZ,
T0002.LVTNR, T0002.LETXT, T0002.XAKTIV, T0002.ANUPD, T0002.LBLNR,
T0002.XV0DT, T0002.XV0NM, T0002.XV1DT, T0002.XV1NM,
 T0002.XV2DT, T0002.XV2NM, T0002.XV3DT, T0002.XV3NM, T0002.XV4DT,
T0002.XV4NM, T0002.XV5DT, T0002.XV5NM, T0002.XV6DT, T0002.XV6NM,
T0002.AIMMO, T0002.OBJNR, T0002.LEART, T0002.LVORS, T0002.GDLGRP,
T0002.POSNR, T0002.XERWRT, T0002.XAFABCH, T0003.ADATU,
T0003.KOSTL, T0003.WERKS, T0003.GSBER, T0003.LSTAR, T0003.MSFAK,
T0003.XSTIL, T0003.STORT, T0003.CAUFN, T0003.PLAN1, T0003.PLAN2,
T0003.RAUMN, T0003.IAUFN, T0003.IPROJ, T0003.TPLKZ, T0003.TPLNR,
T0003.TXJCD, T0003.IPSNR FROM ANEP T0001, ANLA T0002, ANLZ T0003
WHERE T0002.MANDT = T0001.MANDT AND T0002.BUKRS = T0001.BUKRS
AND T0002.ANLN1 = T0001.ANLN1 AND T0002.ANLN2 = T0001.ANLN2 AND
T0002.MANDT = T0003.MANDT AND T0002.BUKRS = T0003.BUKRS AND
T0002.ANLN1 = T0003.ANLN1 AND T0002.ANLN2 = T0003.ANLN2 !
 
Enter command:
 
INSERT ANLA SET
     MANDT  = '001'          ,
     BUKRS  = 'D001'         ,
     ANLN1  = '000000940268' ,
     ANLN2  = 'xxxx' ,
     ZUJHR = '0000'          ,
     "XLOEV" = ' '  !
 
Enter command:
 
INSERT ANEP SET
     MANDT  = '001'          ,
     BUKRS  = 'D001'         ,
     ANLN1  = '000000940268' ,
     ANLN2  = 'xxxx' ,
     GJAHR = '1995' ,
     LNRAN = '54321' ,
     AFABE = '01'   ,
     ZUJHR = '0000' ,
     "ZUCOD"     = '0000' !
 
Enter command:
 
 
INSERT ANLZ SET
     MANDT  = '001'          ,
     BUKRS  = 'D001'         ,
     ANLN1  = '000000940268' ,
     ANLN2  = 'xxxx' ,
     BDATU = '19951231' ,
     ADATU = '19951231' !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE SAPR3 ISOLATION LEVEL  0 !
 
Enter command:
PARSING!
 
Enter command:
SELECT  "MANDT" ,  "BUKRS" ,  "ANLN1" ,  "ANLN2" ,  "GJAHR" ,  "LNRAN" ,
 "AFABE" ,  "ANEPZUJHR" ,  "ZUCOD" ,  "BDATU" ,  "ANLKL" ,  "GEGST" ,
 "ANLAR" , "ERNAM" ,  "ERDAT" ,  "AENAM" ,  "AEDAT" ,  "XLOEV" ,  "XSPEB" ,
 "FELEI" ,  "KTOGR" ,  "XOPVW" ,  "ANLTP" ,  "ZUJHR" ,  "ZUPER" ,  "ZUGDT" ,
 "AKTIV" ,  "ABGDT" ,  "DEAKT" ,  "GPLAB" ,  "BSTDT" ,  "ORD41" ,  "ORD42" ,
 "ORD43" ,  "ORD44" ,  "ANLUE" ,  "ZUAWA" ,  "ANEQK" ,  "ANEQS" ,  "LIFNR" ,
 "LAND1" ,  "LIEFE" ,  "HERST" ,  "EIGKZ" ,  "AIBN1" ,  "AIBN2" ,  "AIBDT" ,
 "URJHR" ,  "URWRT" ,  "ANTEI" ,  "PROJN" ,  "EAUFN" ,  "MEINS" ,  "MENGE" ,
 "TYPBZ" ,  "IZWEK" ,  "INKEN" ,  "IVDAT" ,  "INVZU" ,  "VMGLI" ,  "XVRMW" ,
 "WRTMA" ,  "EHWRT" ,  "AUFLA" ,  "EHWZU" ,  "EHWNR" ,  "GRUVO" ,  "GREIN" ,
 "GRBND" ,  "GRBLT" ,  "GRLFD" ,  "FLURK" ,  "FLURN" ,  "FIAMT" ,  "STADT" ,
 "GRUND" ,  "FEINS" ,  "GRUFL" ,  "INVNR" ,  "VBUND" ,  "SPRAS" ,  "TXT50" ,
 "TXA50" ,  "XLTXID" ,  "XVERID" ,  "XTCHID" ,  "XKALID" ,  "XHERID" ,
 "XLEAID" ,  "LEAFI" ,  "LVDAT" ,  "LKDAT" ,  "LEABG" ,  "LEJAR" ,  "LEPER" ,
 "LRYTH" ,  "LEGEB" ,  "LBASW" ,  "LKAUF" ,  "LMZIN" ,  "LZINS" ,  "LTZBW" ,
 "LKUZA" ,  "LKUZI" ,  "LLAVB" ,  "LEANZ" ,  "LVTNR" ,  "LETXT" ,  "XAKTIV" ,
 "ANUPD" ,  "LBLNR" ,  "XV0DT" ,  "XV0NM" ,  "XV1DT" ,  "XV1NM" ,  "XV2DT" ,
 "XV2NM" ,  "XV3DT" ,  "XV3NM" ,  "XV4DT" ,  "XV4NM" ,  "XV5DT" ,  "XV5NM" ,
 "XV6DT" ,  "XV6NM" ,  "AIMMO" ,  "OBJNR" ,  "LEART" ,  "LVORS" ,  "GDLGRP" ,
 "POSNR" ,  "XERWRT" ,  "XAFABCH" ,  "ADATU" ,  "KOSTL" ,  "WERKS" ,
 "GSBER" ,  "LSTAR" ,  "MSFAK" ,  "XSTIL" ,  "STORT" ,  "CAUFN" ,  "PLAN1" ,
 "PLAN2" ,  "RAUMN" ,  "IAUFN" ,  "IPROJ" ,  "TPLKZ" ,  "TPLNR" ,  "TXJCD" ,
 "IPSNR"  FROM  "V_ANLAB"
 WHERE
MANDT  = :A001 AND BUKRS = :BD001 AND
ANLN1 = :C000000940268 AND GJAHR = :D1995 AND AFABE = :E01 AND
"ANEPZUJHR"  = :F0000 AND "ZUCOD"  = :G0000 AND ( "XLOEV"  BETWEEN
:H AND :I) AND BDATU >= :J19951231 AND ADATU <= :K19951231 AND
ZUJHR >= :L0000
ORDER BY  "MANDT" ,  "BUKRS" ,  "ANLN1" ,  "ANLN2" !
parsing idnr :       1
 
Enter command:
 
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT !
Parsing idnr :      1
 
c 3 '001'
c 4 'D001'
c 12 '000000940268'
c 4 '1995'
c 2 '01'
c 4 '0000'
c 4 '0000'
c 1 ' '
c 1 ' '
c 8 '19951231'
c 8 '19951231'
c 4 '0000'
 
resultcount :                     0
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EX!
 
Enter command:
FETCH INTO :I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,:I!
 
MANDT             :  001
BUKRS             :  D001
ANLN1             :  000000940268
ANLN2             :  xxxx
GJAHR             :  1995
LNRAN             :  54321
AFABE             :  01
ANEPZUJHR         :  0000
ZUCOD             :  0000
BDATU             :  19951231
ANLKL             :  ?????
GEGST             :  ?????
ANLAR             :  ?????
ERNAM             :  ?????
ERDAT             :  ?????
AENAM             :  ?????
AEDAT             :  ?????
XLOEV             :
XSPEB             :  ?????
FELEI             :  ?????
KTOGR             :  ?????
XOPVW             :  ?????
ANLTP             :  ?????
ZUJHR             :  0000
ZUPER             :  ?????
ZUGDT             :  ?????
AKTIV             :  ?????
ABGDT             :  ?????
DEAKT             :  ?????
GPLAB             :  ?????
BSTDT             :  ?????
ORD41             :  ?????
ORD42             :  ?????
ORD43             :  ?????
ORD44             :  ?????
ANLUE             :  ?????
ZUAWA             :  ?????
ANEQK             :  ?????
ANEQS             :  ?????
LIFNR             :  ?????
LAND1             :  ?????
LIEFE             :  ?????
HERST             :  ?????
EIGKZ             :  ?????
AIBN1             :  ?????
AIBN2             :  ?????
AIBDT             :  ?????
URJHR             :  ?????
URWRT             :  ???????????????
ANTEI             :  ???????
PROJN             :  ?????
EAUFN             :  ?????
MEINS             :  ?????
MENGE             :  ???????????????
TYPBZ             :  ?????
IZWEK             :  ?????
INKEN             :  ?????
IVDAT             :  ?????
INVZU             :  ?????
VMGLI             :  ?????
XVRMW             :  ?????
WRTMA             :  ???????????????
EHWRT             :  ???????????????
AUFLA             :  ?????
EHWZU             :  ?????
EHWNR             :  ?????
GRUVO             :  ?????
GREIN             :  ?????
GRBND             :  ?????
GRBLT             :  ?????
GRLFD             :  ?????
FLURK             :  ?????
FLURN             :  ?????
FIAMT             :  ?????
STADT             :  ?????
GRUND             :  ?????
FEINS             :  ?????
GRUFL             :  ???????????????
INVNR             :  ?????
VBUND             :  ?????
SPRAS             :  ?????
TXT50             :  ?????
TXA50             :  ?????
XLTXID            :  ?????
XVERID            :  ?????
XTCHID            :  ?????
XKALID            :  ?????
XHERID            :  ?????
XLEAID            :  ?????
LEAFI             :  ?????
LVDAT             :  ?????
LKDAT             :  ?????
LEABG             :  ?????
LEJAR             :  ?????
LEPER             :  ?????
LRYTH             :  ?????
LEGEB             :  ???????????????
LBASW             :  ???????????????
LKAUF             :  ???????????????
LMZIN             :  ?????????
LZINS             :  ?????????
LTZBW             :  ?????
LKUZA             :  ???????????????
LKUZI             :  ???????????????
LLAVB             :  ???????????????
LEANZ             :  ??????
LVTNR             :  ?????
LETXT             :  ?????
XAKTIV            :  ?????
ANUPD             :  ?????
LBLNR             :  ?????
XV0DT             :  ?????
XV0NM             :  ?????
XV1DT             :  ?????
XV1NM             :  ?????
XV2DT             :  ?????
XV2NM             :  ?????
XV3DT             :  ?????
XV3NM             :  ?????
XV4DT             :  ?????
XV4NM             :  ?????
XV5DT             :  ?????
XV5NM             :  ?????
XV6DT             :  ?????
XV6NM             :  ?????
AIMMO             :  ?????
OBJNR             :  ?????
LEART             :  ?????
LVORS             :  ?????
GDLGRP            :  ?????
POSNR             :  ?????
XERWRT            :  ?????
XAFABCH           :  ?????
ADATU             :  19951231
KOSTL             :  ?????
WERKS             :  ?????
GSBER             :  ?????
LSTAR             :  ?????
MSFAK             :  ?????
XSTIL             :  ?????
STORT             :  ?????
CAUFN             :  ?????
PLAN1             :  ?????
PLAN2             :  ?????
RAUMN             :  ?????
IAUFN             :  ?????
IPROJ             :  ?????
TPLKZ             :  ?????
TPLNR             :  ?????
TXJCD             :  ?????
IPSNR             :  ?????
 
resultcount :                     1
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
 
DROP TABLE ANLA !
 
Enter command:
DROP TABLE ANEP !
 
Enter command:
DROP TABLE ANLZ !
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE SAPR3 !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE SAPR3 ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (4), B CHAR (4))!
 
Enter command:
INSERT INTO T VALUES ('aa', 'bb')!
 
Enter command:
CREATE TABLE T1 ( A1 CHAR (3))!
 
Enter command:
INSERT INTO T1 VALUES ('ccc')!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B
FROM T, T1
WHERE A IN (
:A,:A,:A,:A,:A,:A,:A,:A,:A,:A,
:A,:A,:A,:A,:A,:A,:A,:A,:A,:A
) !
 
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
 
resultcount :                     0
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J !
 
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (S1 CHAR(20) DEFAULT 'Default s1',
                 S2 CHAR(20) DEFAULT 'Default s2',
                 S3 CHAR(20) DEFAULT 'Default s3',
                 S4 CHAR(20)) !
 
Enter command:
INSERT T1 SET S1 = 'aaaaa' !
 
Enter command:
INSERT T1 SET S2 = 'bbbbb' !
 
Enter command:
INSERT T1 SET S3 = 'ccccc' !
 
Enter command:
INSERT T1 SET S1 = 'aaaaa',
              S2 = 'bbbbb',
              S3 = 'ccccc' !
 
Enter command:
CREATE TABLE T2 (S21 CHAR(20) DEFAULT 'Default s21',
                 S22 CHAR(20) DEFAULT 'Default s22',
                 S23 CHAR(20) DEFAULT 'Default s23',
                 S24 CHAR(20)) !
 
Enter command:
INSERT T2 SET S21 = 'aaaaa' !
 
Enter command:
INSERT T2 SET S22 = 'bbbbb' !
 
Enter command:
INSERT T2 SET S23 = 'ccccc' !
 
Enter command:
INSERT T2 SET S21 = 'aaaaa',
              S22 = 'bbbbb',
              S23 = 'ccccc' !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND DEFAULT = S2 AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T2,T1 WHERE S1 = 'aaaaa' AND DEFAULT = S2 AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S23 = DEFAULT !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
 
resultcount :                     2
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T2,T1 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S23 = DEFAULT !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
 
resultcount :                     2
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4) KEY, B CHAR (11) KEY,
   C CHAR (1978), D CHAR (5) NOT NULL, E CHAR (7),
                  F FIXED (6))!
 
Enter command:
CREATE TABLE T_ORA (A CHAR (80) PRIMARY KEY, D TIMESTAMP, B CHAR (40))!
 
Enter command:
INSERT T_ORA VALUES ('char_ora  1', '19941218101345000000', 'bbb')!
 
Enter command:
INSERT T_ORA VALUES ('char_ora  2', '19980219231134123456', 'bbb')!
 
Enter command:
INSERT T_ORA VALUES ('char_ora  3', '19651023090807654321', 'bbb')!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
PARSING !
 
Enter command:
PARSE
    SELECT C,A,B FROM T1, DUAL WHERE E = :E AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
    SELECT C,A,B FROM T1, DUAL WHERE E = :E AND  B = :B !
Parsing idnr :      1
 
c 7 'MANNN' c 11 'ABCDEFG'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :A, :B, :C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('eins', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('drei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('zwei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil1', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil2', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil3', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil4', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil5', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil6', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil7', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil8', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil9', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filA', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filB', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filC', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filD', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filE', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filF', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B !
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil1
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil2
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil3
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil4
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil5
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil6
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil7
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil8
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil9
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filA
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filB
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filC
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filD
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filE
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filF
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
 
resultcount :                    18
 
Enter command:
CLOSE ERG !
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4) KEY, B CHAR (11) KEY,
   C CHAR (3850), D CHAR (5) NOT NULL, E CHAR (7),
                  F FIXED (6), G LONG ASCII)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
PARSING !
 
Enter command:
PARSE
    SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
    SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
Parsing idnr :      1
 
c 7 'MANNN' c 11 'ABCDEFG'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :A, :B, :G, :C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('eins', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('drei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('zwei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. eins !'
c 4 'eins' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. drei'
c 4 'drei' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. zwei'
c 4 'zwei' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                     3
 
Enter command:
CLOSE ERG !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('fil1', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil2', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil3', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil4', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil5', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil6', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil7', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil8', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil9', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filA', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filB', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filC', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filD', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filE', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filF', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil1'
c 4 'fil7' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil4'
c 4 'filA' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil7'
c 4 'filD' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. filB'
c 4 'fil2' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil1
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil2
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. filB
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil3
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil4
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil5
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil6
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil7
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil1
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil8
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil9
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filA
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil4
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filB
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filC
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filD
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil7
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filE
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filF
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                    18
 
Enter command:
CLOSE ERG !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4),  B FIXED (3))!
 
Enter command:
INSERT T1 VALUES ('aaa', 1)!
 
Enter command:
INSERT T1 VALUES ('bbb', 1)!
 
Enter command:
SELECT A, AVG(B) FROM T1 GROUP BY A !
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | EXPRESSION1
-----+---------------------------------------------
aaa  |  1.0000000000000000000000000000000000000E+00
bbb  |  1.0000000000000000000000000000000000000E+00
 
Enter command:
CREATE TABLE T2 (A2 FIXED (5))!
 
Enter command:
INSERT T2 SET A2 = 45!
 
Enter command:
SELECT AVG(B) FROM T1, T2 !
 
resultcount :                     1
 
Enter command:
MFETCH !
3
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 ORDER BY A2 !
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | A2     | EXPRESSION1
-----+--------+---------------------------------------------
aaa  |     45 |  1.0000000000000000000000000000000000000E+00
bbb  |     45 |  1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 HAVING A < 'z'!
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | A2     | EXPRESSION1
-----+--------+---------------------------------------------
aaa  |     45 |  1.0000000000000000000000000000000000000E+00
bbb  |     45 |  1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 HAVING AVG(B) < 1000!
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | A2     | EXPRESSION1
-----+--------+---------------------------------------------
aaa  |     45 |  1.0000000000000000000000000000000000000E+00
bbb  |     45 |  1.0000000000000000000000000000000000000E+00
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE TABLE T ( A CHAR (4), B FIXED (3) )!
 
Enter command:
CREATE TABLE T1 (A1 CHAR (4) )!
 
Enter command:
INSERT T SET A = 'aaa', B = 4 !
 
Enter command:
INSERT T SET A = 'ccc', B = 4 !
 
Enter command:
INSERT T SET A = 'a11', B = 4 !
 
Enter command:
INSERT T1 SET A1 = 'a11'!
 
Enter command:
INSERT T1 SET A1 = 'yy'!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
GROUP BY A, B, A1!
 
n 38 3
 
resultcount :                     6
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
A    | A1   | EXPRESSION1                                  | EXPRESSION2
-----+------+----------------------------------------------+------------
a11  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
a11  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
 
resultcount :                     6
 
Enter command:
DATA !
 
Enter command:
SELECT B*:A, COUNT (A) FROM T, T1
GROUP BY B!
 
n 38 3
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B !
 
EXPRESSION1                                  | EXPRESSION2
---------------------------------------------+------------
 1.2000000000000000000000000000000000000E+01 |           6
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
WHERE A <> A1
GROUP BY A, B, A1 !
 
n 38 3
 
resultcount :                     5
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
A    | A1   | EXPRESSION1                                  | EXPRESSION2
-----+------+----------------------------------------------+------------
a11  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A !
 
***ERROR  -8017 Column must be group column:A1                             0011
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT A, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A , B!
 
n 38 3
 
resultcount :                     3
 
Enter command:
NODATA !
 
Enter command:
MFETCH INTO :A, :B, :C !
5
 
A    | EXPRESSION1                                  | EXPRESSION2
-----+----------------------------------------------+------------
a11  |  1.2000000000000000000000000000000000000E+01 |           1
aaa  |  1.2000000000000000000000000000000000000E+01 |           2
ccc  |  1.2000000000000000000000000000000000000E+01 |           2
 
Enter command:
DATA !
 
Enter command:
SELECT A, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A, B
HAVING COUNT (*) > 1!
 
n 38 3
 
resultcount :                     2
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C!
 
A    | EXPRESSION1                                  | EXPRESSION2
-----+----------------------------------------------+------------
aaa  |  1.2000000000000000000000000000000000000E+01 |           2
ccc  |  1.2000000000000000000000000000000000000E+01 |           2
 
resultcount :                     2
 
Enter command:
DATA !
 
Enter command:
SELECT A, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A, B
HAVING COUNT (*) > 1 ORDER BY 3!
 
n 38 3
 
resultcount :                     2
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
A    | EXPRESSION1                                  | EXPRESSION2
-----+----------------------------------------------+------------
aaa  |  1.2000000000000000000000000000000000000E+01 |           2
ccc  |  1.2000000000000000000000000000000000000E+01 |           2
 
resultcount :                     2
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A, B, A1
HAVING COUNT (*) > 0 ORDER BY A1!
 
n 38 3
 
resultcount :                     5
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
A    | A1   | EXPRESSION1                                  | EXPRESSION2
-----+------+----------------------------------------------+------------
aaa  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
a11  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
 
resultcount :                     5
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE TABLE T ( A CHAR (4), B FIXED (3) )!
 
Enter command:
CREATE TABLE T1 (A1 CHAR (4), B1 FLOAT (4))!
 
Enter command:
INSERT T SET A = 'aaa', B = 4 !
 
Enter command:
INSERT T SET A = 'ccc', B = 4 !
 
Enter command:
INSERT T SET A = 'a11', B = 4 !
 
Enter command:
INSERT T1 SET A1 = 'a11', B1 = 7!
 
Enter command:
INSERT T1 SET A1 = 'yy', B1 = 12!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT A & A1, B*B1+:A FROM T, T1 !
 
n 38 3
 
resultcount :                     6
 
Enter command:
NODATA !
 
Enter command:
MFETCH INTO :A,:B !
8
 
EXPRESSION1 | EXPRESSION2
------------+---------------------------------------------
aaaa11      |  3.1000000000000000000000000000000000000E+01
ccca11      |  3.1000000000000000000000000000000000000E+01
a11a11      |  3.1000000000000000000000000000000000000E+01
aaayy       |  5.1000000000000000000000000000000000000E+01
cccyy       |  5.1000000000000000000000000000000000000E+01
a11yy       |  5.1000000000000000000000000000000000000E+01
 
Enter command:
SELECT LENGTH(A & A1), INDEX (A & A1, 'cy'), COUNT(*) FROM T, T1!
 
***ERROR  -8017 Column must be group column:A                              0015
 
Enter command:
FETCH INTO :A, :B, :C !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT LENGTH(A & A1), INDEX (A & A1, 'cy'), COUNT(*) FROM T, T1
GROUP BY A, A1!
 
resultcount :                     6
 
Enter command:
FETCH INTO :A, :B , :C !
 
EXPRESSION1 | EXPRESSION2 | EXPRESSION3
------------+-------------+------------
    6       |    0        |           1
    5       |    0        |           1
    6       |    0        |           1
    5       |    0        |           1
    6       |    0        |           1
    5       |    3        |           1
 
resultcount :                     6
 
Enter command:
SELECT INDEX ('aaa' & A,A1), 'aaa' & A, A1,
       INDEX (A & A1, 'cy'), COUNT(*) FROM T, T1
GROUP BY A, A1!
 
resultcount :                     6
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E,:F !
 
EXPRESSION1 | EXPRESSION2 | A1   | EXPRESSION3 | EXPRESSION4
------------+-------------+------+-------------+------------
   4        | aaaa11      | a11  |    0        |           1
   0        | aaaa11      | yy   |    0        |           1
   0        | aaaaaa      | a11  |    0        |           1
   0        | aaaaaa      | yy   |    0        |           1
   0        | aaaccc      | a11  |    0        |           1
   0        | aaaccc      | yy   |    3        |           1
 
resultcount :                     6
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT B*B1+B1, COUNT (A & A1) FROM T, T1 GROUP BY B,A,A1,B1
HAVING B < 10 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1                                  | EXPRESSION2
---------------------------------------------+------------
 3.5000000000000000000000000000000000000E+01 |           1
 6.0000000000000000000000000000000000000E+01 |           1
 3.5000000000000000000000000000000000000E+01 |           1
 6.0000000000000000000000000000000000000E+01 |           1
 3.5000000000000000000000000000000000000E+01 |           1
 6.0000000000000000000000000000000000000E+01 |           1
 
resultcount :                     6
 
Enter command:
SELECT A, A1, MIN(B1) FROM T, T1 WHERE A & A1 > 'ggg' GROUP BY A, A1!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT A, A1, MIN(B1) FROM T, T1 GROUP BY A, A1 HAVING A & A1 > 'ggg'!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE CR_T ( CR CHAR (1) ASCII)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT CR_T VALUES (:A)!
 
b 1 0a
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
CREATE TABLE T ( CFK CHAR (8), CVK CHAR (8),
                 CFC CHAR (8), CVC CHAR (40),
                 ID FIXED(3), PRIMARY KEY (CFK, CVK, ID))!
 
Enter command:
INSERT T VALUES ('', '', '', '', 0)!
 
Enter command:
INSERT T VALUES (' ', ' ', ' ', ' ', 1)!
 
Enter command:
INSERT T VALUES ('  ', '  ', '  ', '  ', 2)!
 
Enter command:
INSERT T VALUES ('a', 'a', 'a', 'a', 10)!
 
Enter command:
INSERT T VALUES ('b ', 'b ', 'b ', 'b ', 21)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | 'a'
  21 | 'b'
 
resultcount :                     5
 
Enter command:
SELECT ID, '''' || LEAST     ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | ''
   1 | ''
   2 | ''
  10 | '
'
  21 | '
'
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST SPACE OPTION !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SPACE OPTION ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | ' '
   1 | ' '
   2 | ' '
  10 | 'a'
  21 | 'b'
 
resultcount :                     5
 
Enter command:
SELECT ID, '''' || LEAST     ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | '
'
  21 | '
'
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
INSERT T VALUES ('null','null', NULL, NULL, 100)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | 'a'
  21 | 'b'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT ID, '''' || LEAST     ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | ''
   1 | ''
   2 | ''
  10 | '
'
  21 | '
'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SPACE OPTION !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SPACE OPTION ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | ' '
   1 | ' '
   2 | ' '
  10 | 'a'
  21 | 'b'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT ID, '''' || LEAST     ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | '
'
  21 | '
'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE CR_T !
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE J ( J1 CHAR (1))!
 
Enter command:
INSERT J VALUES (' ')!
 
Enter command:
CREATE TABLE T ( K1 INT,
                 I1 CHAR (5) UNICODE)!
 
Enter command:
 
CREATE INDEX "t.i1" ON T( I1 ) !
 
Enter command:
COMMIT!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | t.i1               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | t.i1               | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  | t.i1               | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
KERN               | J                  |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DELETE T WHERE K1 IN (0,3)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DROP INDEX "t.i1" !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (I1)!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | I1                 | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DROP TABLE T !
 
Enter command:
DROP TABLE J !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST SPACE OPTION !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SPACE OPTION ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE J ( J1 CHAR (1))!
 
Enter command:
INSERT J VALUES (' ')!
 
Enter command:
CREATE TABLE T ( K1 INT,
                 I1 CHAR (5) UNICODE)!
 
Enter command:
 
CREATE INDEX "t.i1" ON T( I1 ) !
 
Enter command:
COMMIT!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | t.i1               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | t.i1               | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  | t.i1               | INDEX SCAN                               |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
KERN               | J                  |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DELETE T WHERE K1 IN (0,3)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DROP INDEX "t.i1" !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (I1)!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | I1                 | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DROP TABLE T !
 
Enter command:
DROP TABLE J !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE S ( SNO CHAR(5) KEY,
                 SNAME CHAR(20),
                 STATUS DECIMAL(3),
                 CITY CHAR(15) ) !
 
Enter command:
CREATE TABLE P ( PNO CHAR(6) KEY,
                 PNAME CHAR(20),
                 COLOR CHAR(6),
                 WEIGHT DECIMAL(3),
                 CITY CHAR(15) ) !
 
Enter command:
CREATE TABLE J ( JNO CHAR(4) KEY,
                 JNAME CHAR(10),
                 CITY CHAR(15) ) !
 
Enter command:
CREATE TABLE SPJ ( SNO CHAR(5) KEY,
                   PNO CHAR(6) KEY,
                   JNO CHAR(4) KEY,
                   QTY DECIMAL(5)) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT S VALUES ( 'S1' , 'Smith' , 20 , 'London' ) !
 
Enter command:
INSERT S VALUES ( 'S2' , 'Jones' , 10 , 'Paris'  ) !
 
Enter command:
INSERT S VALUES ( 'S3' , 'Blake' , 30 , 'Paris'  ) !
 
Enter command:
INSERT S VALUES ( 'S4' , 'Clark' , 20 , 'London' ) !
 
Enter command:
INSERT S VALUES ( 'S5' , 'Adams' , 30 , 'Athens' ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT P VALUES ( 'P1' , 'Nut'   , 'Red'   , 12 , 'London' ) !
 
Enter command:
INSERT P VALUES ( 'P2' , 'Bolt'  , 'Green' , 17 , 'Paris'  ) !
 
Enter command:
INSERT P VALUES ( 'P3' , 'Screw' , 'Blue'  , 17 , 'Rome'   ) !
 
Enter command:
INSERT P VALUES ( 'P4' , 'Screw' , 'Red'   , 14 , 'London' ) !
 
Enter command:
INSERT P VALUES ( 'P5' , 'Cam'   , 'Blue'  , 12 , 'Paris'  ) !
 
Enter command:
INSERT P VALUES ( 'P6' , 'Cog'   , 'Red'   , 19 , 'London' ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT J VALUES ( 'J1' , 'Sorter'   , 'Paris'  ) !
 
Enter command:
INSERT J VALUES ( 'J2' , 'Punch'    , 'Rome'   ) !
 
Enter command:
INSERT J VALUES ( 'J3' , 'Reader'   , 'Athens' ) !
 
Enter command:
INSERT J VALUES ( 'J4' , 'Console'  , 'Athens' ) !
 
Enter command:
INSERT J VALUES ( 'J5' , 'Collator' , 'London' ) !
 
Enter command:
INSERT J VALUES ( 'J6' , 'Terminal' , 'Oslo'   ) !
 
Enter command:
INSERT J VALUES ( 'J7' , 'Tape'     , 'London' ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT SPJ VALUES ( 'S1' , 'P1' , 'J1' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S1' , 'P1' , 'J4' , 700 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J1' , 400 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J2' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J3' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J4' , 500 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J5' , 600 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J6' , 400 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J7' , 800 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P5' , 'J2' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S3' , 'P3' , 'J1' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S3' , 'P4' , 'J2' , 500 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S4' , 'P6' , 'J3' , 300 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S4' , 'P6' , 'J7' , 300 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P2' , 'J2' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P2' , 'J4' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P5' , 'J5' , 500 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P5' , 'J7' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P6' , 'J2' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P1' , 'J4' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P3' , 'J4' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P4' , 'J4' , 800 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P5' , 'J4' , 400 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P6' , 'J4' , 500 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW LONDON_PROJECTS ( JNO, JNAME, CITY )
   AS SELECT J.JNO, J.JNAME, J.CITY
      FROM J
      WHERE J.CITY = 'London' !
 
Enter command:
CREATE VIEW SP ( SNO, PNO, QTY )
   AS SELECT SPJ.SNO, SPJ.PNO, SUM ( SPJ.QTY )
      FROM SPJ
      GROUP BY SPJ.SNO, SPJ.PNO !
 
Enter command:
CREATE VIEW JC ( JNO, CITY )
   AS SELECT DISTINCT J.JNO, J.CITY
      FROM J, SPJ
      WHERE J.JNO = SPJ.JNO
      AND ( SPJ.SNO = 'S1' OR
            SPJ.PNO = 'P1' ) !
 
Enter command:
SELECT * FROM JC !
 
resultcount :                     2
 
Enter command:
FETCH !
 
JNO  | CITY
-----+----------------
J1   | Paris
J4   | Athens
 
resultcount :                     2
 
Enter command:
CREATE VIEW NON_COLOCATED ( SNO, PNO )
   AS SELECT S.SNO, P.PNO
      FROM S, P
      WHERE S.CITY <> P.CITY !
 
Enter command:
SELECT * FROM NON_COLOCATED !
 
resultcount :                    20
 
Enter command:
FETCH !
 
SNO   | PNO
------+-------
S5    | P1
S2    | P1
S3    | P1
S5    | P2
S1    | P2
S4    | P2
S5    | P3
S1    | P3
S4    | P3
S2    | P3
S3    | P3
S5    | P4
S2    | P4
S3    | P4
S5    | P5
S1    | P5
S4    | P5
 
SNO   | PNO
------+-------
S5    | P6
S2    | P6
S3    | P6
 
resultcount :                    20
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT S.SNO, P.PNO, J.JNO
   FROM S, P, J
   WHERE S.CITY = P.CITY
   AND   P.CITY = J.CITY
   ORDER BY S.SNO, J.JNO, P.PNO !
 
resultcount :                    16
 
Enter command:
FETCH !
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P1     | J5
S1    | P4     | J5
S1    | P6     | J5
S1    | P1     | J7
S1    | P4     | J7
S1    | P6     | J7
S2    | P2     | J1
S2    | P5     | J1
S3    | P2     | J1
S3    | P5     | J1
S4    | P1     | J5
S4    | P4     | J5
S4    | P6     | J5
S4    | P1     | J7
S4    | P4     | J7
S4    | P6     | J7
 
resultcount :                    16
 
Enter command:
SELECT S.SNO, P.PNO, J.JNO
   FROM S, P, J
   WHERE NOT ( S.CITY = P.CITY AND P.CITY = J.CITY ) !
 
resultcount :                   194
 
Enter command:
FETCH !
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P1     | J1
S2    | P1     | J1
S3    | P1     | J1
S4    | P1     | J1
S5    | P1     | J1
S1    | P1     | J2
S2    | P1     | J2
S3    | P1     | J2
S4    | P1     | J2
S5    | P1     | J2
S1    | P1     | J3
S2    | P1     | J3
S3    | P1     | J3
S4    | P1     | J3
S5    | P1     | J3
S1    | P1     | J4
S2    | P1     | J4
 
SNO   | PNO    | JNO
------+--------+-----
S3    | P1     | J4
S4    | P1     | J4
S5    | P1     | J4
S2    | P1     | J5
S3    | P1     | J5
S5    | P1     | J5
S1    | P1     | J6
S2    | P1     | J6
S3    | P1     | J6
S4    | P1     | J6
S5    | P1     | J6
S2    | P1     | J7
S3    | P1     | J7
S5    | P1     | J7
S1    | P2     | J1
S4    | P2     | J1
S5    | P2     | J1
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P2     | J2
S2    | P2     | J2
S3    | P2     | J2
S4    | P2     | J2
S5    | P2     | J2
S1    | P2     | J3
S2    | P2     | J3
S3    | P2     | J3
S4    | P2     | J3
S5    | P2     | J3
S1    | P2     | J4
S2    | P2     | J4
S3    | P2     | J4
S4    | P2     | J4
S5    | P2     | J4
S1    | P2     | J5
S2    | P2     | J5
 
SNO   | PNO    | JNO
------+--------+-----
S3    | P2     | J5
S4    | P2     | J5
S5    | P2     | J5
S1    | P2     | J6
S2    | P2     | J6
S3    | P2     | J6
S4    | P2     | J6
S5    | P2     | J6
S1    | P2     | J7
S2    | P2     | J7
S3    | P2     | J7
S4    | P2     | J7
S5    | P2     | J7
S1    | P3     | J1
S2    | P3     | J1
S3    | P3     | J1
S4    | P3     | J1
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P3     | J1
S1    | P3     | J2
S2    | P3     | J2
S3    | P3     | J2
S4    | P3     | J2
S5    | P3     | J2
S1    | P3     | J3
S2    | P3     | J3
S3    | P3     | J3
S4    | P3     | J3
S5    | P3     | J3
S1    | P3     | J4
S2    | P3     | J4
S3    | P3     | J4
S4    | P3     | J4
S5    | P3     | J4
S1    | P3     | J5
 
SNO   | PNO    | JNO
------+--------+-----
S2    | P3     | J5
S3    | P3     | J5
S4    | P3     | J5
S5    | P3     | J5
S1    | P3     | J6
S2    | P3     | J6
S3    | P3     | J6
S4    | P3     | J6
S5    | P3     | J6
S1    | P3     | J7
S2    | P3     | J7
S3    | P3     | J7
S4    | P3     | J7
S5    | P3     | J7
S1    | P4     | J1
S2    | P4     | J1
S3    | P4     | J1
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P4     | J1
S5    | P4     | J1
S1    | P4     | J2
S2    | P4     | J2
S3    | P4     | J2
S4    | P4     | J2
S5    | P4     | J2
S1    | P4     | J3
S2    | P4     | J3
S3    | P4     | J3
S4    | P4     | J3
S5    | P4     | J3
S1    | P4     | J4
S2    | P4     | J4
S3    | P4     | J4
S4    | P4     | J4
S5    | P4     | J4
 
SNO   | PNO    | JNO
------+--------+-----
S2    | P4     | J5
S3    | P4     | J5
S5    | P4     | J5
S1    | P4     | J6
S2    | P4     | J6
S3    | P4     | J6
S4    | P4     | J6
S5    | P4     | J6
S2    | P4     | J7
S3    | P4     | J7
S5    | P4     | J7
S1    | P5     | J1
S4    | P5     | J1
S5    | P5     | J1
S1    | P5     | J2
S2    | P5     | J2
S3    | P5     | J2
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P5     | J2
S5    | P5     | J2
S1    | P5     | J3
S2    | P5     | J3
S3    | P5     | J3
S4    | P5     | J3
S5    | P5     | J3
S1    | P5     | J4
S2    | P5     | J4
S3    | P5     | J4
S4    | P5     | J4
S5    | P5     | J4
S1    | P5     | J5
S2    | P5     | J5
S3    | P5     | J5
S4    | P5     | J5
S5    | P5     | J5
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P5     | J6
S2    | P5     | J6
S3    | P5     | J6
S4    | P5     | J6
S5    | P5     | J6
S1    | P5     | J7
S2    | P5     | J7
S3    | P5     | J7
S4    | P5     | J7
S5    | P5     | J7
S1    | P6     | J1
S2    | P6     | J1
S3    | P6     | J1
S4    | P6     | J1
S5    | P6     | J1
S1    | P6     | J2
S2    | P6     | J2
 
SNO   | PNO    | JNO
------+--------+-----
S3    | P6     | J2
S4    | P6     | J2
S5    | P6     | J2
S1    | P6     | J3
S2    | P6     | J3
S3    | P6     | J3
S4    | P6     | J3
S5    | P6     | J3
S1    | P6     | J4
S2    | P6     | J4
S3    | P6     | J4
S4    | P6     | J4
S5    | P6     | J4
S2    | P6     | J5
S3    | P6     | J5
S5    | P6     | J5
S1    | P6     | J6
 
SNO   | PNO    | JNO
------+--------+-----
S2    | P6     | J6
S3    | P6     | J6
S4    | P6     | J6
S5    | P6     | J6
S2    | P6     | J7
S3    | P6     | J7
S5    | P6     | J7
 
resultcount :                   194
 
Enter command:
SELECT S.SNO, P.PNO, J.JNO
   FROM S, P, J
   WHERE S.CITY <> P.CITY
    AND  P.CITY <> J.CITY
    AND  J.CITY <> S.CITY !
 
resultcount :                    79
 
Enter command:
FETCH !
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P1     | J6
S5    | P1     | J1
S5    | P1     | J2
S2    | P1     | J3
S2    | P1     | J4
S3    | P1     | J3
S3    | P1     | J4
S2    | P1     | J6
S3    | P1     | J6
S2    | P1     | J2
S3    | P1     | J2
S5    | P2     | J5
S5    | P2     | J7
S5    | P2     | J6
S5    | P2     | J2
S1    | P2     | J3
S1    | P2     | J4
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P2     | J3
S4    | P2     | J4
S1    | P2     | J6
S4    | P2     | J6
S1    | P2     | J2
S4    | P2     | J2
S5    | P3     | J5
S5    | P3     | J7
S5    | P3     | J6
S5    | P3     | J1
S1    | P3     | J3
S1    | P3     | J4
S4    | P3     | J3
S4    | P3     | J4
S1    | P3     | J6
S4    | P3     | J6
S1    | P3     | J1
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P3     | J1
S2    | P3     | J3
S2    | P3     | J4
S3    | P3     | J3
S3    | P3     | J4
S2    | P3     | J5
S2    | P3     | J7
S3    | P3     | J5
S3    | P3     | J7
S2    | P3     | J6
S3    | P3     | J6
S5    | P4     | J6
S5    | P4     | J1
S5    | P4     | J2
S2    | P4     | J3
S2    | P4     | J4
S3    | P4     | J3
 
SNO   | PNO    | JNO
------+--------+-----
S3    | P4     | J4
S2    | P4     | J6
S3    | P4     | J6
S2    | P4     | J2
S3    | P4     | J2
S5    | P5     | J5
S5    | P5     | J7
S5    | P5     | J6
S5    | P5     | J2
S1    | P5     | J3
S1    | P5     | J4
S4    | P5     | J3
S4    | P5     | J4
S1    | P5     | J6
S4    | P5     | J6
S1    | P5     | J2
S4    | P5     | J2
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P6     | J6
S5    | P6     | J1
S5    | P6     | J2
S2    | P6     | J3
S2    | P6     | J4
S3    | P6     | J3
S3    | P6     | J4
S2    | P6     | J6
S3    | P6     | J6
S2    | P6     | J2
S3    | P6     | J2
 
resultcount :                    79
 
Enter command:
SELECT DISTINCT SPJ.PNO
   FROM SPJ, S
   WHERE SPJ.SNO = S.SNO
   AND  S.CITY = 'London' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
PNO
------
P1
P6
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SPJ.PNO
   FROM SPJ, S, J
   WHERE SPJ.SNO = S.SNO
   AND   SPJ.JNO = J.JNO
   AND   S.CITY = 'London'
   AND   J.CITY = 'London' !
 
resultcount :                     1
 
Enter command:
FETCH !
 
PNO
------
P6
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT S.CITY, J.CITY
   FROM S, SPJ, J
   WHERE S.SNO = SPJ.SNO
   AND   SPJ.JNO = J.JNO
   ORDER BY S.CITY, J.CITY !
 
resultcount :                    11
 
Enter command:
FETCH !
 
CITY            | CITY
----------------+----------------
Athens          | Athens
Athens          | London
Athens          | Rome
London          | Athens
London          | London
London          | Paris
Paris           | Athens
Paris           | London
Paris           | Oslo
Paris           | Paris
Paris           | Rome
 
resultcount :                    11
 
Enter command:
SELECT DISTINCT SPJ.PNO
   FROM SPJ, S, J
   WHERE SPJ.SNO = S.SNO
   AND   SPJ.JNO = J.JNO
   AND   S.CITY = J.CITY !
 
resultcount :                     6
 
Enter command:
FETCH !
 
PNO
------
P1
P2
P3
P4
P5
P6
 
resultcount :                     6
 
Enter command:
SELECT DISTINCT J.JNO
   FROM SPJ, S, J
   WHERE SPJ.SNO = S.SNO
   AND   SPJ.JNO = J.JNO
   AND   S.CITY <> J.CITY
   ORDER BY J.JNO !
 
resultcount :                     7
 
Enter command:
FETCH !
 
JNO
----
J1
J2
J3
J4
J5
J6
J7
 
resultcount :                     7
 
Enter command:
SELECT SPJX.PNO, SPJY.PNO
   FROM SPJ SPJX, SPJ SPJY
   WHERE SPJX.SNO = SPJY.SNO
   AND   SPJX.PNO > SPJY.PNO !
 
resultcount :                    48
 
Enter command:
FETCH !
 
PNO    | PNO
-------+-------
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P4     | P3
P2     | P1
P2     | P1
P3     | P1
P4     | P1
P5     | P1
P5     | P1
P5     | P1
P6     | P1
P6     | P1
 
PNO    | PNO
-------+-------
P3     | P2
P4     | P2
P5     | P2
P5     | P2
P5     | P2
P6     | P2
P6     | P2
P3     | P2
P4     | P2
P5     | P2
P5     | P2
P5     | P2
P6     | P2
P6     | P2
P4     | P3
P5     | P3
P5     | P3
 
PNO    | PNO
-------+-------
P5     | P3
P6     | P3
P6     | P3
P5     | P4
P5     | P4
P5     | P4
P6     | P4
P6     | P4
P6     | P5
P6     | P5
P6     | P5
P6     | P5
P6     | P5
P6     | P5
 
resultcount :                    48
 
Enter command:
ROLLBACK WORK !
 
Enter command:
CREATE TABLE REDS ( SNO CHAR(5) ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO REDS ( SNO )
       SELECT DISTINCT SPJ.SNO
       FROM SPJ, P
       WHERE SPJ.PNO = P.PNO
       AND   P.COLOR = 'Red' !
 
Enter command:
SELECT * FROM REDS !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SNO
-----
S1
S3
S4
S5
 
resultcount :                     4
 
Enter command:
ROLLBACK WORK !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT MAX(QTY) - MIN(QTY)
   FROM P PX, SPJ SPJX
   WHERE PX.PNO = SPJX.PNO
     AND SPJX.SNO =
   ANY ( SELECT S.SNO
         FROM P, SPJ, S, J
         WHERE P.PNO = SPJX.PNO
           AND S.CITY = J.CITY
           AND PX.CITY = S.CITY
         GROUP BY S.SNO )
   GROUP BY QTY !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      0
      0
      0
      0
 
resultcount :                     4
 
Enter command:
SELECT SPJX.SNO, SPJX.PNO, SPJX.JNO, S.SNAME
  FROM SPJ SPJX, S, J JX
  WHERE S.STATUS <
    ALL ( SELECT MAX(QTY) - MIN(QTY)
          FROM SPJ SPJY, J
          WHERE JX.JNO = SPJY.JNO
            AND SPJY.QTY <
                  ALL ( SELECT MAX ( SPJ.QTY)
                        FROM SPJ
                        WHERE SPJ.JNO < SPJX.JNO
                        GROUP BY SNO )
          GROUP BY QTY ) !
 
resultcount :                   360
 
Enter command:
SELECT SPJX.SNO, SPJX.PNO, SPJX.JNO, S.SNAME
  FROM SPJ SPJX, S, J JX
  WHERE S.STATUS <>
    ALL ( SELECT MAX(QTY) - MIN(QTY)
          FROM SPJ SPJY, J
          WHERE JX.JNO = SPJY.JNO
            AND SPJY.QTY <
                  ALL ( SELECT MAX ( SPJ.QTY)
                        FROM SPJ
                        WHERE SPJ.JNO < SPJX.JNO
                        GROUP BY SNO )
          GROUP BY QTY ) !
 
resultcount :                   840
 
Enter command:
SELECT DISTINCT MAX(QTY) - MIN(QTY)
   FROM P PX, SPJ SPJX
   WHERE PX.PNO = SPJX.PNO
     AND SPJX.SNO =
   ANY ( SELECT DISTINCT S.SNO
         FROM P, SPJ, S, J
         WHERE P.PNO = SPJX.PNO
           AND S.CITY = J.CITY
           AND PX.CITY = S.CITY
         GROUP BY S.SNO )
   GROUP BY QTY !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      0
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SPJX.SNO, SPJX.PNO, SPJX.JNO, S.SNAME
  FROM SPJ SPJX, S, J JX
  WHERE S.STATUS <
    ALL ( SELECT DISTINCT MAX(QTY) - MIN(QTY)
          FROM SPJ SPJY, J
          WHERE JX.JNO = SPJY.JNO
            AND SPJY.QTY <
                  ALL ( SELECT DISTINCT MAX ( SPJ.QTY)
                        FROM SPJ
                        WHERE SPJ.JNO < SPJX.JNO
                        GROUP BY SNO )
          GROUP BY QTY ) !
 
resultcount :                   105
 
Enter command:
SELECT SPJX.SNO, PX.CITY
  FROM SPJ SPJX, P PX
  WHERE SPJX.SNO IN
        ( SELECT S.SNO FROM S
          WHERE PX.PNO = SPJX.PNO )
          AND SPJX.SNO = 'S3'
           OR SPJX.SNO = 'S4' !
 
resultcount :                    14
 
Enter command:
FETCH !
 
SNO   | CITY
------+----------------
S3    | Rome
S3    | London
S4    | London
S4    | London
S4    | Paris
S4    | Paris
S4    | Rome
S4    | Rome
S4    | London
S4    | London
S4    | Paris
S4    | Paris
S4    | London
S4    | London
 
resultcount :                    14
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A FIXED(5)) !
 
Enter command:
INSERT T1 VALUES ( 1) !
 
Enter command:
INSERT T1 VALUES ( 2) !
 
Enter command:
INSERT T1 VALUES ( 3) !
 
Enter command:
INSERT T1 VALUES ( 4) !
 
Enter command:
INSERT T1 VALUES ( 4) !
 
Enter command:
INSERT T1 VALUES ( 5) !
 
Enter command:
INSERT T1 VALUES ( 5) !
 
Enter command:
CREATE TABLE T2 ( B FIXED(7)) !
 
Enter command:
INSERT T2 VALUES ( 3) !
 
Enter command:
INSERT T2 VALUES ( 3) !
 
Enter command:
INSERT T2 VALUES ( 4) !
 
Enter command:
INSERT T2 VALUES ( 4) !
 
Enter command:
INSERT T2 VALUES ( 5) !
 
Enter command:
INSERT T2 VALUES ( 6) !
 
Enter command:
INSERT T2 VALUES ( 7) !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST SQLMODE INTERNAL !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE INTERNAL ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B     !
 
resultcount :                    10
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A     = B (+) !
 
resultcount :                    10
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
     1 | ????????
     2 | ????????
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B (+) !
 
resultcount :                    12
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
     1 | ????????
     2 | ????????
 
resultcount :                    12
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM (SELECT * FROM T1), T2 WHERE A = B !
 
resultcount :                     8
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
 
resultcount :                     8
 
Enter command:
CLOSE C !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B     !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A     = B (+) !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
     1 | ????????
     2 | ????????
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B (+) !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
     1 | ????????
     2 | ????????
 
resultcount :                    12
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM (SELECT * FROM T1), T2 WHERE A = B !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
 
resultcount :                     8
 
Enter command:
CLOSE C !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER USER0 PASSWORD USER0 DBA NOT EXCLUSIVE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( USER0 USER0!
 
Enter command:
CONNECT USER0 IDENTIFIED BY USER0   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TABX
(K FIXED (18),
 I FIXED (18),
 N FIXED (18),
 F4 FIXED (5),
 F5 FIXED (5),
 FILL1 CHAR (250),
 FILL2 CHAR (250),
 FILL3 CHAR (250),
 FILL4 CHAR (250),
 PRIMARY KEY (K))!
 
Enter command:
INSERT INTO TABX VALUES(1 ,1 ,1 ,5001,1 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(2 ,4 ,5 ,5002,1 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(3 ,2 ,4 ,5003,2 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(4 ,5 ,2 ,5004,2 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(5 ,3 ,3 ,5004,3 ,'','','','')!
 
Enter command:
UPDATE TABX SET FILL1 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TABX SET FILL2 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TABX SET FILL3 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TABX SET FILL4 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
CREATE UNIQUE INDEX "TABX.I"
 ON TABX( I ) !
 
Enter command:
COMMIT!
 
Enter command:
CREATE VIEW VE1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY1 AS SELECT N,K FROM VE1
                    UNION ALL
                    SELECT N,K FROM VW1
                    UNION ALL
                    SELECT N,K FROM VS1!
 
Enter command:
CREATE VIEW VZ1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE1
                    WHERE K IN
                          (SELECT N FROM VW1
                           WHERE K IN
                                (SELECT N FROM VS1
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE1
                    WHERE (K IN
                             (SELECT N FROM VW1
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS1
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS1 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS1 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK1 AS SELECT T0.N FROM VE1 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW1 T1, VS1 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 1!
 
Enter command:
SELECT * FROM VE1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY1!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 2 1!
 
Enter command:
CREATE VIEW VE2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE1
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW1
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS1
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX2 AS SELECT T1.K,T1.N FROM VE2 T1,VW2 T2,VS2 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY2 AS SELECT N,K FROM VE2
                    UNION ALL
                    SELECT N,K FROM VW2
                    UNION ALL
                    SELECT N,K FROM VS2!
 
Enter command:
CREATE VIEW VZ2 AS SELECT T1.K,T1.N
                    FROM VE2 T1,VW2 T2,VS2 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE2
                    WHERE K IN
                          (SELECT N FROM VW2
                           WHERE K IN
                                (SELECT N FROM VS2
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE2
                    WHERE (K IN
                             (SELECT N FROM VW2
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS2
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS2 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS2 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK2 AS SELECT T0.N FROM VE2 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW2 T1, VS2 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 2!
 
Enter command:
SELECT * FROM VE2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX2!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY2!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ2!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 3 2!
 
Enter command:
CREATE VIEW VE3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE2
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW2
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS2
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX3 AS SELECT T1.K,T1.N FROM VE3 T1,VW3 T2,VS3 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY3 AS SELECT N,K FROM VE3
                    UNION ALL
                    SELECT N,K FROM VW3
                    UNION ALL
                    SELECT N,K FROM VS3!
 
Enter command:
CREATE VIEW VZ3 AS SELECT T1.K,T1.N
                    FROM VE3 T1,VW3 T2,VS3 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE3
                    WHERE K IN
                          (SELECT N FROM VW3
                           WHERE K IN
                                (SELECT N FROM VS3
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE3
                    WHERE (K IN
                             (SELECT N FROM VW3
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS3
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS3 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS3 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK3 AS SELECT T0.N FROM VE3 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW3 T1, VS3 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 3!
 
Enter command:
SELECT * FROM VE3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX3!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY3!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ3!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 4 3!
 
Enter command:
CREATE VIEW VE4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE3
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW3
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS3
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX4 AS SELECT T1.K,T1.N FROM VE4 T1,VW4 T2,VS4 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY4 AS SELECT N,K FROM VE4
                    UNION ALL
                    SELECT N,K FROM VW4
                    UNION ALL
                    SELECT N,K FROM VS4!
 
Enter command:
CREATE VIEW VZ4 AS SELECT T1.K,T1.N
                    FROM VE4 T1,VW4 T2,VS4 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE4
                    WHERE K IN
                          (SELECT N FROM VW4
                           WHERE K IN
                                (SELECT N FROM VS4
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE4
                    WHERE (K IN
                             (SELECT N FROM VW4
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS4
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS4 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS4 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK4 AS SELECT T0.N FROM VE4 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW4 T1, VS4 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 4!
 
Enter command:
SELECT * FROM VE4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX4!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY4!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ4!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 5 4!
 
Enter command:
CREATE VIEW VE5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE4
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW4
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS4
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX5 AS SELECT T1.K,T1.N FROM VE5 T1,VW5 T2,VS5 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY5 AS SELECT N,K FROM VE5
                    UNION ALL
                    SELECT N,K FROM VW5
                    UNION ALL
                    SELECT N,K FROM VS5!
 
Enter command:
CREATE VIEW VZ5 AS SELECT T1.K,T1.N
                    FROM VE5 T1,VW5 T2,VS5 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE5
                    WHERE K IN
                          (SELECT N FROM VW5
                           WHERE K IN
                                (SELECT N FROM VS5
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE5
                    WHERE (K IN
                             (SELECT N FROM VW5
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS5
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS5 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS5 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK5 AS SELECT T0.N FROM VE5 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW5 T1, VS5 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 5!
 
Enter command:
SELECT * FROM VE5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX5!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY5!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ5!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 6 5!
 
Enter command:
CREATE VIEW VE6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE5
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW5
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS5
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX6 AS SELECT T1.K,T1.N FROM VE6 T1,VW6 T2,VS6 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY6 AS SELECT N,K FROM VE6
                    UNION ALL
                    SELECT N,K FROM VW6
                    UNION ALL
                    SELECT N,K FROM VS6!
 
Enter command:
CREATE VIEW VZ6 AS SELECT T1.K,T1.N
                    FROM VE6 T1,VW6 T2,VS6 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE6
                    WHERE K IN
                          (SELECT N FROM VW6
                           WHERE K IN
                                (SELECT N FROM VS6
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE6
                    WHERE (K IN
                             (SELECT N FROM VW6
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS6
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS6 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS6 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK6 AS SELECT T0.N FROM VE6 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW6 T1, VS6 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 6!
 
Enter command:
SELECT * FROM VE6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX6!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY6!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ6!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 7 6!
 
Enter command:
CREATE VIEW VE7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE6
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW6
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS6
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX7 AS SELECT T1.K,T1.N FROM VE7 T1,VW7 T2,VS7 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY7 AS SELECT N,K FROM VE7
                    UNION ALL
                    SELECT N,K FROM VW7
                    UNION ALL
                    SELECT N,K FROM VS7!
 
Enter command:
CREATE VIEW VZ7 AS SELECT T1.K,T1.N
                    FROM VE7 T1,VW7 T2,VS7 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE7
                    WHERE K IN
                          (SELECT N FROM VW7
                           WHERE K IN
                                (SELECT N FROM VS7
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE7
                    WHERE (K IN
                             (SELECT N FROM VW7
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS7
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS7 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS7 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK7 AS SELECT T0.N FROM VE7 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW7 T1, VS7 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 7!
 
Enter command:
SELECT * FROM VE7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX7!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY7!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ7!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 8 7!
 
Enter command:
CREATE VIEW VE8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE7
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW7
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS7
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX8 AS SELECT T1.K,T1.N FROM VE8 T1,VW8 T2,VS8 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY8 AS SELECT N,K FROM VE8
                    UNION ALL
                    SELECT N,K FROM VW8
                    UNION ALL
                    SELECT N,K FROM VS8!
 
Enter command:
CREATE VIEW VZ8 AS SELECT T1.K,T1.N
                    FROM VE8 T1,VW8 T2,VS8 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE8
                    WHERE K IN
                          (SELECT N FROM VW8
                           WHERE K IN
                                (SELECT N FROM VS8
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE8
                    WHERE (K IN
                             (SELECT N FROM VW8
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS8
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS8 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS8 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK8 AS SELECT T0.N FROM VE8 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW8 T1, VS8 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 8!
 
Enter command:
SELECT * FROM VE8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX8!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY8!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ8!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 9 8!
 
Enter command:
CREATE VIEW VE9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE8
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW8
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS8
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX9 AS SELECT T1.K,T1.N FROM VE9 T1,VW9 T2,VS9 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY9 AS SELECT N,K FROM VE9
                    UNION ALL
                    SELECT N,K FROM VW9
                    UNION ALL
                    SELECT N,K FROM VS9!
 
Enter command:
CREATE VIEW VZ9 AS SELECT T1.K,T1.N
                    FROM VE9 T1,VW9 T2,VS9 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE9
                    WHERE K IN
                          (SELECT N FROM VW9
                           WHERE K IN
                                (SELECT N FROM VS9
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE9
                    WHERE (K IN
                             (SELECT N FROM VW9
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS9
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS9 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS9 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK9 AS SELECT T0.N FROM VE9 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW9 T1, VS9 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 9!
 
Enter command:
SELECT * FROM VE9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX9!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY9!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ9!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 10 9!
 
Enter command:
CREATE VIEW VE10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE9
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW9
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS9
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX10 AS SELECT T1.K,T1.N FROM VE10 T1,VW10 T2,VS10 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY10 AS SELECT N,K FROM VE10
                    UNION ALL
                    SELECT N,K FROM VW10
                    UNION ALL
                    SELECT N,K FROM VS10!
 
Enter command:
CREATE VIEW VZ10 AS SELECT T1.K,T1.N
                    FROM VE10 T1,VW10 T2,VS10 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE10
                    WHERE K IN
                          (SELECT N FROM VW10
                           WHERE K IN
                                (SELECT N FROM VS10
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE10
                    WHERE (K IN
                             (SELECT N FROM VW10
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS10
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS10 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS10 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK10 AS SELECT T0.N FROM VE10 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW10 T1, VS10 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 10!
 
Enter command:
SELECT * FROM VE10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX10!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY10!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ10!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 11 10!
 
Enter command:
CREATE VIEW VE11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE10
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW10
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS10
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX11 AS SELECT T1.K,T1.N FROM VE11 T1,VW11 T2,VS11 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY11 AS SELECT N,K FROM VE11
                    UNION ALL
                    SELECT N,K FROM VW11
                    UNION ALL
                    SELECT N,K FROM VS11!
 
Enter command:
CREATE VIEW VZ11 AS SELECT T1.K,T1.N
                    FROM VE11 T1,VW11 T2,VS11 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE11
                    WHERE K IN
                          (SELECT N FROM VW11
                           WHERE K IN
                                (SELECT N FROM VS11
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE11
                    WHERE (K IN
                             (SELECT N FROM VW11
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS11
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS11 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS11 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK11 AS SELECT T0.N FROM VE11 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW11 T1, VS11 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 11!
 
Enter command:
SELECT * FROM VE11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX11!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY11!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ11!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 12 11!
 
Enter command:
CREATE VIEW VE12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE11
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW11
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS11
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX12 AS SELECT T1.K,T1.N FROM VE12 T1,VW12 T2,VS12 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY12 AS SELECT N,K FROM VE12
                    UNION ALL
                    SELECT N,K FROM VW12
                    UNION ALL
                    SELECT N,K FROM VS12!
 
Enter command:
CREATE VIEW VZ12 AS SELECT T1.K,T1.N
                    FROM VE12 T1,VW12 T2,VS12 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE12
                    WHERE K IN
                          (SELECT N FROM VW12
                           WHERE K IN
                                (SELECT N FROM VS12
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE12
                    WHERE (K IN
                             (SELECT N FROM VW12
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS12
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS12 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS12 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK12 AS SELECT T0.N FROM VE12 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW12 T1, VS12 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 12!
 
Enter command:
SELECT * FROM VE12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX12!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY12!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ12!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
 
FILE STAUAB( 13 12!
 
Enter command:
CREATE VIEW VE13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE12
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW12
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS12
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX13 AS SELECT T1.K,T1.N FROM VE13 T1,VW13 T2,VS13 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY13 AS SELECT N,K FROM VE13
                    UNION ALL
                    SELECT N,K FROM VW13
                    UNION ALL
                    SELECT N,K FROM VS13!
 
Enter command:
CREATE VIEW VZ13 AS SELECT T1.K,T1.N
                    FROM VE13 T1,VW13 T2,VS13 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE13
                    WHERE K IN
                          (SELECT N FROM VW13
                           WHERE K IN
                                (SELECT N FROM VS13
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE13
                    WHERE (K IN
                             (SELECT N FROM VW13
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS13
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS13 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS13 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK13 AS SELECT T0.N FROM VE13 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW13 T1, VS13 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 13!
 
Enter command:
SELECT * FROM VE13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX13!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY13!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ13!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 14 13!
 
Enter command:
CREATE VIEW VE14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE13
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW13
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS13
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX14 AS SELECT T1.K,T1.N FROM VE14 T1,VW14 T2,VS14 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY14 AS SELECT N,K FROM VE14
                    UNION ALL
                    SELECT N,K FROM VW14
                    UNION ALL
                    SELECT N,K FROM VS14!
 
Enter command:
CREATE VIEW VZ14 AS SELECT T1.K,T1.N
                    FROM VE14 T1,VW14 T2,VS14 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE14
                    WHERE K IN
                          (SELECT N FROM VW14
                           WHERE K IN
                                (SELECT N FROM VS14
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE14
                    WHERE (K IN
                             (SELECT N FROM VW14
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS14
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS14 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS14 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK14 AS SELECT T0.N FROM VE14 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW14 T1, VS14 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 14!
 
Enter command:
SELECT * FROM VE14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX14!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY14!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ14!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 15 14!
 
Enter command:
CREATE VIEW VE15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE14
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW14
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS14
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX15 AS SELECT T1.K,T1.N FROM VE15 T1,VW15 T2,VS15 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY15 AS SELECT N,K FROM VE15
                    UNION ALL
                    SELECT N,K FROM VW15
                    UNION ALL
                    SELECT N,K FROM VS15!
 
Enter command:
CREATE VIEW VZ15 AS SELECT T1.K,T1.N
                    FROM VE15 T1,VW15 T2,VS15 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE15
                    WHERE K IN
                          (SELECT N FROM VW15
                           WHERE K IN
                                (SELECT N FROM VS15
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE15
                    WHERE (K IN
                             (SELECT N FROM VW15
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS15
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS15 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS15 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK15 AS SELECT T0.N FROM VE15 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW15 T1, VS15 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 15!
 
Enter command:
SELECT * FROM VE15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX15!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY15!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ15!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
DROP VIEW VE1!
 
Enter command:
COMMIT !
 
Enter command:
DROP VIEW VW1!
 
Enter command:
COMMIT !
 
Enter command:
DROP VIEW VS1!
 
Enter command:
COMMIT!
 
Enter command:
DROP TABLE TABX!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER USER0 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CROBJ!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER USERX PASSWORD USERX DBA NOT EXCLUSIVE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
 
FILE CONNECT ( USERX USERX!
 
Enter command:
CONNECT USERX IDENTIFIED BY USERX   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB0
(K FIXED (18),
 I FIXED (18),
 N FIXED (18),
 F4 FIXED (5),
 F5 FIXED (5),
 FILL1 CHAR (250),
 FILL2 CHAR (250),
 FILL3 CHAR (250),
 FILL4 CHAR (250),
 PRIMARY KEY (K)) !
 
Enter command:
INSERT INTO TAB0 VALUES(1 ,1 ,1 ,5001,1 ,'','','','')!
 
Enter command:
INSERT INTO TAB0 VALUES(2 ,4 ,5 ,5002,1 ,'','','','')!
 
Enter command:
INSERT INTO TAB0 VALUES(3 ,2 ,4 ,5003,2 ,'','','','')!
 
Enter command:
INSERT INTO TAB0 VALUES(4 ,5 ,2 ,5004,2 ,'','','','')!
 
Enter command:
INSERT INTO TAB0 VALUES(5 ,3 ,3 ,5004,3 ,'','','','')!
 
Enter command:
UPDATE TAB0 SET FILL1 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TAB0 SET FILL2 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TAB0 SET FILL3 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TAB0 SET FILL4 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
CREATE UNIQUE INDEX "TAB0.I"
 ON TAB0( I ) !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( USERX USERX!
 
Enter command:
CONNECT USERX IDENTIFIED BY USERX   ISOLATION LEVEL 1 !
 
Enter command:
FILE STAVA( TAB0!
 
Enter command:
FILE STAVAA( TAB0!
 
Enter command:
CREATE VIEW VE1 AS SELECT K,N FROM TAB0
                   WHERE I = 1!
 
Enter command:
CREATE VIEW VW1 AS SELECT K,N FROM TAB0
                   WHERE I = 1!
 
Enter command:
CREATE VIEW VS1 AS SELECT K,N FROM TAB0
                   WHERE I = 1!
 
Enter command:
CREATE VIEW VX1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY1 AS SELECT N,K FROM VE1
                    UNION ALL
                    SELECT N,K FROM VW1
                    UNION ALL
                    SELECT N,K FROM VS1!
 
Enter command:
CREATE VIEW VZ1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA1 AS SELECT K,N
                    FROM VE1
                    WHERE K IN
                          (SELECT N FROM VW1
                           WHERE K IN
                                (SELECT N FROM VS1
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB1 AS SELECT K,N
                    FROM VE1
                    WHERE (K IN
                             (SELECT N FROM VW1
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS1
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS1 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS1 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK1 AS SELECT T0.N FROM VE1 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW1 T1, VS1 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 1!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY1!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           20
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 2 1!
 
Enter command:
CREATE VIEW VE2 AS SELECT K,N FROM VE1!
 
Enter command:
CREATE VIEW VW2 AS SELECT K,N FROM VW1
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS2 AS SELECT K,N FROM VS1
WHERE K = (SELECT MIN(N) FROM VS1)!
 
Enter command:
CREATE VIEW VX2 AS SELECT T1.K,T1.N FROM VE2 T1,VW2 T2,VS2 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY2 AS SELECT N,K FROM VE2
                    UNION ALL
                    SELECT N,K FROM VW2
                    UNION ALL
                    SELECT N,K FROM VS2!
 
Enter command:
CREATE VIEW VZ2 AS SELECT T1.K,T1.N
                    FROM VE2 T1,VW2 T2,VS2 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA2 AS SELECT K,N
                    FROM VE2
                    WHERE K IN
                          (SELECT N FROM VW2
                           WHERE K IN
                                (SELECT N FROM VS2
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB2 AS SELECT K,N
                    FROM VE2
                    WHERE (K IN
                             (SELECT N FROM VW2
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS2
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS2 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS2 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK2 AS SELECT T0.N FROM VE2 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW2 T1, VS2 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 2!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY2!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           37
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 3 2!
 
Enter command:
CREATE VIEW VE3 AS SELECT K,N FROM VE2!
 
Enter command:
CREATE VIEW VW3 AS SELECT K,N FROM VW2
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS3 AS SELECT K,N FROM VS2
WHERE K = (SELECT MIN(N) FROM VS2)!
 
Enter command:
CREATE VIEW VX3 AS SELECT T1.K,T1.N FROM VE3 T1,VW3 T2,VS3 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY3 AS SELECT N,K FROM VE3
                    UNION ALL
                    SELECT N,K FROM VW3
                    UNION ALL
                    SELECT N,K FROM VS3!
 
Enter command:
CREATE VIEW VZ3 AS SELECT T1.K,T1.N
                    FROM VE3 T1,VW3 T2,VS3 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA3 AS SELECT K,N
                    FROM VE3
                    WHERE K IN
                          (SELECT N FROM VW3
                           WHERE K IN
                                (SELECT N FROM VS3
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB3 AS SELECT K,N
                    FROM VE3
                    WHERE (K IN
                             (SELECT N FROM VW3
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS3
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS3 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS3 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK3 AS SELECT T0.N FROM VE3 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW3 T1, VS3 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 3!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY3!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           67
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 4 3!
 
Enter command:
CREATE VIEW VE4 AS SELECT K,N FROM VE3!
 
Enter command:
CREATE VIEW VW4 AS SELECT K,N FROM VW3
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS4 AS SELECT K,N FROM VS3
WHERE K = (SELECT MIN(N) FROM VS3)!
 
Enter command:
CREATE VIEW VX4 AS SELECT T1.K,T1.N FROM VE4 T1,VW4 T2,VS4 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY4 AS SELECT N,K FROM VE4
                    UNION ALL
                    SELECT N,K FROM VW4
                    UNION ALL
                    SELECT N,K FROM VS4!
 
Enter command:
CREATE VIEW VZ4 AS SELECT T1.K,T1.N
                    FROM VE4 T1,VW4 T2,VS4 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA4 AS SELECT K,N
                    FROM VE4
                    WHERE K IN
                          (SELECT N FROM VW4
                           WHERE K IN
                                (SELECT N FROM VS4
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB4 AS SELECT K,N
                    FROM VE4
                    WHERE (K IN
                             (SELECT N FROM VW4
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS4
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS4 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS4 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK4 AS SELECT T0.N FROM VE4 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW4 T1, VS4 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 4!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY4!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           80
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 5 4!
 
Enter command:
CREATE VIEW VE5 AS SELECT K,N FROM VE4!
 
Enter command:
CREATE VIEW VW5 AS SELECT K,N FROM VW4
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS5 AS SELECT K,N FROM VS4
WHERE K = (SELECT MIN(N) FROM VS4)!
 
Enter command:
CREATE VIEW VX5 AS SELECT T1.K,T1.N FROM VE5 T1,VW5 T2,VS5 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY5 AS SELECT N,K FROM VE5
                    UNION ALL
                    SELECT N,K FROM VW5
                    UNION ALL
                    SELECT N,K FROM VS5!
 
Enter command:
CREATE VIEW VZ5 AS SELECT T1.K,T1.N
                    FROM VE5 T1,VW5 T2,VS5 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA5 AS SELECT K,N
                    FROM VE5
                    WHERE K IN
                          (SELECT N FROM VW5
                           WHERE K IN
                                (SELECT N FROM VS5
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB5 AS SELECT K,N
                    FROM VE5
                    WHERE (K IN
                             (SELECT N FROM VW5
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS5
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS5 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS5 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK5 AS SELECT T0.N FROM VE5 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW5 T1, VS5 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 5!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY5!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           87
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 6 5!
 
Enter command:
CREATE VIEW VE6 AS SELECT K,N FROM VE5!
 
Enter command:
CREATE VIEW VW6 AS SELECT K,N FROM VW5
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS6 AS SELECT K,N FROM VS5
WHERE K = (SELECT MIN(N) FROM VS5)!
 
Enter command:
CREATE VIEW VX6 AS SELECT T1.K,T1.N FROM VE6 T1,VW6 T2,VS6 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY6 AS SELECT N,K FROM VE6
                    UNION ALL
                    SELECT N,K FROM VW6
                    UNION ALL
                    SELECT N,K FROM VS6!
 
Enter command:
CREATE VIEW VZ6 AS SELECT T1.K,T1.N
                    FROM VE6 T1,VW6 T2,VS6 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA6 AS SELECT K,N
                    FROM VE6
                    WHERE K IN
                          (SELECT N FROM VW6
                           WHERE K IN
                                (SELECT N FROM VS6
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB6 AS SELECT K,N
                    FROM VE6
                    WHERE (K IN
                             (SELECT N FROM VW6
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS6
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS6 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS6 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK6 AS SELECT T0.N FROM VE6 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW6 T1, VS6 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 6!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY6!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          104
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 7 6!
 
Enter command:
CREATE VIEW VE7 AS SELECT K,N FROM VE6!
 
Enter command:
CREATE VIEW VW7 AS SELECT K,N FROM VW6
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS7 AS SELECT K,N FROM VS6
WHERE K = (SELECT MIN(N) FROM VS6)!
 
Enter command:
CREATE VIEW VX7 AS SELECT T1.K,T1.N FROM VE7 T1,VW7 T2,VS7 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY7 AS SELECT N,K FROM VE7
                    UNION ALL
                    SELECT N,K FROM VW7
                    UNION ALL
                    SELECT N,K FROM VS7!
 
Enter command:
CREATE VIEW VZ7 AS SELECT T1.K,T1.N
                    FROM VE7 T1,VW7 T2,VS7 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA7 AS SELECT K,N
                    FROM VE7
                    WHERE K IN
                          (SELECT N FROM VW7
                           WHERE K IN
                                (SELECT N FROM VS7
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB7 AS SELECT K,N
                    FROM VE7
                    WHERE (K IN
                             (SELECT N FROM VW7
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS7
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS7 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS7 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK7 AS SELECT T0.N FROM VE7 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW7 T1, VS7 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 7!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY7!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          105
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 8 7!
 
Enter command:
CREATE VIEW VE8 AS SELECT K,N FROM VE7!
 
Enter command:
CREATE VIEW VW8 AS SELECT K,N FROM VW7
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS8 AS SELECT K,N FROM VS7
WHERE K = (SELECT MIN(N) FROM VS7)!
 
Enter command:
CREATE VIEW VX8 AS SELECT T1.K,T1.N FROM VE8 T1,VW8 T2,VS8 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY8 AS SELECT N,K FROM VE8
                    UNION ALL
                    SELECT N,K FROM VW8
                    UNION ALL
                    SELECT N,K FROM VS8!
 
Enter command:
CREATE VIEW VZ8 AS SELECT T1.K,T1.N
                    FROM VE8 T1,VW8 T2,VS8 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA8 AS SELECT K,N
                    FROM VE8
                    WHERE K IN
                          (SELECT N FROM VW8
                           WHERE K IN
                                (SELECT N FROM VS8
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB8 AS SELECT K,N
                    FROM VE8
                    WHERE (K IN
                             (SELECT N FROM VW8
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS8
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS8 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS8 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK8 AS SELECT T0.N FROM VE8 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW8 T1, VS8 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 8!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY8!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          115
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 9 8!
 
Enter command:
CREATE VIEW VE9 AS SELECT K,N FROM VE8!
 
Enter command:
CREATE VIEW VW9 AS SELECT K,N FROM VW8
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS9 AS SELECT K,N FROM VS8
WHERE K = (SELECT MIN(N) FROM VS8)!
 
Enter command:
CREATE VIEW VX9 AS SELECT T1.K,T1.N FROM VE9 T1,VW9 T2,VS9 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY9 AS SELECT N,K FROM VE9
                    UNION ALL
                    SELECT N,K FROM VW9
                    UNION ALL
                    SELECT N,K FROM VS9!
 
Enter command:
CREATE VIEW VZ9 AS SELECT T1.K,T1.N
                    FROM VE9 T1,VW9 T2,VS9 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA9 AS SELECT K,N
                    FROM VE9
                    WHERE K IN
                          (SELECT N FROM VW9
                           WHERE K IN
                                (SELECT N FROM VS9
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB9 AS SELECT K,N
                    FROM VE9
                    WHERE (K IN
                             (SELECT N FROM VW9
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS9
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS9 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS9 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK9 AS SELECT T0.N FROM VE9 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW9 T1, VS9 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 9!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY9!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          122
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 10 9!
 
Enter command:
CREATE VIEW VE10 AS SELECT K,N FROM VE9!
 
Enter command:
CREATE VIEW VW10 AS SELECT K,N FROM VW9
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS10 AS SELECT K,N FROM VS9
WHERE K = (SELECT MIN(N) FROM VS9)!
 
Enter command:
CREATE VIEW VX10 AS SELECT T1.K,T1.N FROM VE10 T1,VW10 T2,VS10 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY10 AS SELECT N,K FROM VE10
                    UNION ALL
                    SELECT N,K FROM VW10
                    UNION ALL
                    SELECT N,K FROM VS10!
 
Enter command:
CREATE VIEW VZ10 AS SELECT T1.K,T1.N
                    FROM VE10 T1,VW10 T2,VS10 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA10 AS SELECT K,N
                    FROM VE10
                    WHERE K IN
                          (SELECT N FROM VW10
                           WHERE K IN
                                (SELECT N FROM VS10
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB10 AS SELECT K,N
                    FROM VE10
                    WHERE (K IN
                             (SELECT N FROM VW10
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS10
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS10 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS10 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK10 AS SELECT T0.N FROM VE10 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW10 T1, VS10 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 10!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY10!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          129
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 11 10!
 
Enter command:
CREATE VIEW VE11 AS SELECT K,N FROM VE10!
 
Enter command:
CREATE VIEW VW11 AS SELECT K,N FROM VW10
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS11 AS SELECT K,N FROM VS10
WHERE K = (SELECT MIN(N) FROM VS10)!
 
Enter command:
CREATE VIEW VX11 AS SELECT T1.K,T1.N FROM VE11 T1,VW11 T2,VS11 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY11 AS SELECT N,K FROM VE11
                    UNION ALL
                    SELECT N,K FROM VW11
                    UNION ALL
                    SELECT N,K FROM VS11!
 
Enter command:
CREATE VIEW VZ11 AS SELECT T1.K,T1.N
                    FROM VE11 T1,VW11 T2,VS11 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA11 AS SELECT K,N
                    FROM VE11
                    WHERE K IN
                          (SELECT N FROM VW11
                           WHERE K IN
                                (SELECT N FROM VS11
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB11 AS SELECT K,N
                    FROM VE11
                    WHERE (K IN
                             (SELECT N FROM VW11
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS11
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS11 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS11 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK11 AS SELECT T0.N FROM VE11 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW11 T1, VS11 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 11!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY11!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          133
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 12 11!
 
Enter command:
CREATE VIEW VE12 AS SELECT K,N FROM VE11!
 
Enter command:
CREATE VIEW VW12 AS SELECT K,N FROM VW11
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS12 AS SELECT K,N FROM VS11
WHERE K = (SELECT MIN(N) FROM VS11)!
 
Enter command:
CREATE VIEW VX12 AS SELECT T1.K,T1.N FROM VE12 T1,VW12 T2,VS12 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY12 AS SELECT N,K FROM VE12
                    UNION ALL
                    SELECT N,K FROM VW12
                    UNION ALL
                    SELECT N,K FROM VS12!
 
Enter command:
CREATE VIEW VZ12 AS SELECT T1.K,T1.N
                    FROM VE12 T1,VW12 T2,VS12 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA12 AS SELECT K,N
                    FROM VE12
                    WHERE K IN
                          (SELECT N FROM VW12
                           WHERE K IN
                                (SELECT N FROM VS12
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB12 AS SELECT K,N
                    FROM VE12
                    WHERE (K IN
                             (SELECT N FROM VW12
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS12
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS12 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS12 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK12 AS SELECT T0.N FROM VE12 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW12 T1, VS12 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 12!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY12!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          143
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 13 12!
 
Enter command:
CREATE VIEW VE13 AS SELECT K,N FROM VE12!
 
Enter command:
CREATE VIEW VW13 AS SELECT K,N FROM VW12
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS13 AS SELECT K,N FROM VS12
WHERE K = (SELECT MIN(N) FROM VS12)!
 
Enter command:
CREATE VIEW VX13 AS SELECT T1.K,T1.N FROM VE13 T1,VW13 T2,VS13 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY13 AS SELECT N,K FROM VE13
                    UNION ALL
                    SELECT N,K FROM VW13
                    UNION ALL
                    SELECT N,K FROM VS13!
 
Enter command:
CREATE VIEW VZ13 AS SELECT T1.K,T1.N
                    FROM VE13 T1,VW13 T2,VS13 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA13 AS SELECT K,N
                    FROM VE13
                    WHERE K IN
                          (SELECT N FROM VW13
                           WHERE K IN
                                (SELECT N FROM VS13
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB13 AS SELECT K,N
                    FROM VE13
                    WHERE (K IN
                             (SELECT N FROM VW13
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS13
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS13 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS13 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK13 AS SELECT T0.N FROM VE13 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW13 T1, VS13 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 13!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY13!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          147
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 14 13!
 
Enter command:
CREATE VIEW VE14 AS SELECT K,N FROM VE13!
 
Enter command:
CREATE VIEW VW14 AS SELECT K,N FROM VW13
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS14 AS SELECT K,N FROM VS13
WHERE K = (SELECT MIN(N) FROM VS13)!
 
Enter command:
CREATE VIEW VX14 AS SELECT T1.K,T1.N FROM VE14 T1,VW14 T2,VS14 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY14 AS SELECT N,K FROM VE14
                    UNION ALL
                    SELECT N,K FROM VW14
                    UNION ALL
                    SELECT N,K FROM VS14!
 
Enter command:
CREATE VIEW VZ14 AS SELECT T1.K,T1.N
                    FROM VE14 T1,VW14 T2,VS14 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA14 AS SELECT K,N
                    FROM VE14
                    WHERE K IN
                          (SELECT N FROM VW14
                           WHERE K IN
                                (SELECT N FROM VS14
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB14 AS SELECT K,N
                    FROM VE14
                    WHERE (K IN
                             (SELECT N FROM VW14
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS14
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS14 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS14 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK14 AS SELECT T0.N FROM VE14 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW14 T1, VS14 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 14!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY14!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          157
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 15 14!
 
Enter command:
CREATE VIEW VE15 AS SELECT K,N FROM VE14!
 
Enter command:
CREATE VIEW VW15 AS SELECT K,N FROM VW14
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS15 AS SELECT K,N FROM VS14
WHERE K = (SELECT MIN(N) FROM VS14)!
 
Enter command:
CREATE VIEW VX15 AS SELECT T1.K,T1.N FROM VE15 T1,VW15 T2,VS15 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY15 AS SELECT N,K FROM VE15
                    UNION ALL
                    SELECT N,K FROM VW15
                    UNION ALL
                    SELECT N,K FROM VS15!
 
Enter command:
CREATE VIEW VZ15 AS SELECT T1.K,T1.N
                    FROM VE15 T1,VW15 T2,VS15 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA15 AS SELECT K,N
                    FROM VE15
                    WHERE K IN
                          (SELECT N FROM VW15
                           WHERE K IN
                                (SELECT N FROM VS15
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB15 AS SELECT K,N
                    FROM VE15
                    WHERE (K IN
                             (SELECT N FROM VW15
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS15
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS15 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS15 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK15 AS SELECT T0.N FROM VE15 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW15 T1, VS15 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 15!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY15!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          164
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 16 15!
 
Enter command:
CREATE VIEW VE16 AS SELECT K,N FROM VE15!
 
Enter command:
CREATE VIEW VW16 AS SELECT K,N FROM VW15
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS16 AS SELECT K,N FROM VS15
WHERE K = (SELECT MIN(N) FROM VS15)!
 
Enter command:
CREATE VIEW VX16 AS SELECT T1.K,T1.N FROM VE16 T1,VW16 T2,VS16 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY16 AS SELECT N,K FROM VE16
                    UNION ALL
                    SELECT N,K FROM VW16
                    UNION ALL
                    SELECT N,K FROM VS16!
 
Enter command:
CREATE VIEW VZ16 AS SELECT T1.K,T1.N
                    FROM VE16 T1,VW16 T2,VS16 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA16 AS SELECT K,N
                    FROM VE16
                    WHERE K IN
                          (SELECT N FROM VW16
                           WHERE K IN
                                (SELECT N FROM VS16
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB16 AS SELECT K,N
                    FROM VE16
                    WHERE (K IN
                             (SELECT N FROM VW16
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS16
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS16 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS16 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI16 AS SELECT N FROM VE16 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW16 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ16 AS SELECT N FROM VE16 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW16 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK16 AS SELECT T0.N FROM VE16 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW16 T1, VS16 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 16!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE16!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW16!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY16!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          171
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 17 16!
 
Enter command:
CREATE VIEW VE17 AS SELECT K,N FROM VE16!
 
Enter command:
CREATE VIEW VW17 AS SELECT K,N FROM VW16
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS17 AS SELECT K,N FROM VS16
WHERE K = (SELECT MIN(N) FROM VS16)!
 
Enter command:
CREATE VIEW VX17 AS SELECT T1.K,T1.N FROM VE17 T1,VW17 T2,VS17 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY17 AS SELECT N,K FROM VE17
                    UNION ALL
                    SELECT N,K FROM VW17
                    UNION ALL
                    SELECT N,K FROM VS17!
 
Enter command:
CREATE VIEW VZ17 AS SELECT T1.K,T1.N
                    FROM VE17 T1,VW17 T2,VS17 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA17 AS SELECT K,N
                    FROM VE17
                    WHERE K IN
                          (SELECT N FROM VW17
                           WHERE K IN
                                (SELECT N FROM VS17
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB17 AS SELECT K,N
                    FROM VE17
                    WHERE (K IN
                             (SELECT N FROM VW17
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS17
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS17 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS17 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI17 AS SELECT N FROM VE17 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW17 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ17 AS SELECT N FROM VE17 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW17 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK17 AS SELECT T0.N FROM VE17 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW17 T1, VS17 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 17!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE17!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW17!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY17!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          175
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 18 17!
 
Enter command:
CREATE VIEW VE18 AS SELECT K,N FROM VE17!
 
Enter command:
CREATE VIEW VW18 AS SELECT K,N FROM VW17
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS18 AS SELECT K,N FROM VS17
WHERE K = (SELECT MIN(N) FROM VS17)!
 
Enter command:
CREATE VIEW VX18 AS SELECT T1.K,T1.N FROM VE18 T1,VW18 T2,VS18 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY18 AS SELECT N,K FROM VE18
                    UNION ALL
                    SELECT N,K FROM VW18
                    UNION ALL
                    SELECT N,K FROM VS18!
 
Enter command:
CREATE VIEW VZ18 AS SELECT T1.K,T1.N
                    FROM VE18 T1,VW18 T2,VS18 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA18 AS SELECT K,N
                    FROM VE18
                    WHERE K IN
                          (SELECT N FROM VW18
                           WHERE K IN
                                (SELECT N FROM VS18
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB18 AS SELECT K,N
                    FROM VE18
                    WHERE (K IN
                             (SELECT N FROM VW18
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS18
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS18 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS18 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI18 AS SELECT N FROM VE18 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW18 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ18 AS SELECT N FROM VE18 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW18 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK18 AS SELECT T0.N FROM VE18 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW18 T1, VS18 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 18!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE18!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW18!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY18!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          185
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 19 18!
 
Enter command:
CREATE VIEW VE19 AS SELECT K,N FROM VE18!
 
Enter command:
CREATE VIEW VW19 AS SELECT K,N FROM VW18
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS19 AS SELECT K,N FROM VS18
WHERE K = (SELECT MIN(N) FROM VS18)!
 
Enter command:
CREATE VIEW VX19 AS SELECT T1.K,T1.N FROM VE19 T1,VW19 T2,VS19 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY19 AS SELECT N,K FROM VE19
                    UNION ALL
                    SELECT N,K FROM VW19
                    UNION ALL
                    SELECT N,K FROM VS19!
 
Enter command:
CREATE VIEW VZ19 AS SELECT T1.K,T1.N
                    FROM VE19 T1,VW19 T2,VS19 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA19 AS SELECT K,N
                    FROM VE19
                    WHERE K IN
                          (SELECT N FROM VW19
                           WHERE K IN
                                (SELECT N FROM VS19
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB19 AS SELECT K,N
                    FROM VE19
                    WHERE (K IN
                             (SELECT N FROM VW19
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS19
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS19 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS19 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI19 AS SELECT N FROM VE19 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW19 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ19 AS SELECT N FROM VE19 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW19 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK19 AS SELECT T0.N FROM VE19 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW19 T1, VS19 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 19!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE19!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW19!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY19!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          192
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 20 19!
 
Enter command:
CREATE VIEW VE20 AS SELECT K,N FROM VE19!
 
Enter command:
CREATE VIEW VW20 AS SELECT K,N FROM VW19
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS20 AS SELECT K,N FROM VS19
WHERE K = (SELECT MIN(N) FROM VS19)!
 
Enter command:
CREATE VIEW VX20 AS SELECT T1.K,T1.N FROM VE20 T1,VW20 T2,VS20 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY20 AS SELECT N,K FROM VE20
                    UNION ALL
                    SELECT N,K FROM VW20
                    UNION ALL
                    SELECT N,K FROM VS20!
 
Enter command:
CREATE VIEW VZ20 AS SELECT T1.K,T1.N
                    FROM VE20 T1,VW20 T2,VS20 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA20 AS SELECT K,N
                    FROM VE20
                    WHERE K IN
                          (SELECT N FROM VW20
                           WHERE K IN
                                (SELECT N FROM VS20
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB20 AS SELECT K,N
                    FROM VE20
                    WHERE (K IN
                             (SELECT N FROM VW20
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS20
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS20 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS20 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI20 AS SELECT N FROM VE20 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW20 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ20 AS SELECT N FROM VE20 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW20 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK20 AS SELECT T0.N FROM VE20 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW20 T1, VS20 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 20!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE20!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW20!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY20!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          199
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
 * PTS 1137017-19 !
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW2 T1 WHERE K = T0.N)
  AND T0.N IN (SELECT K FROM VS2 T2 WHERE N = T0.K)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW2 T1 WHERE K = T0.N)
  AND T0.N IN (SELECT K FROM VS1
                   WHERE K = (SELECT MIN(N) FROM VS1) AND N = T0.K) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW2 T1 WHERE K = T0.N)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW1 WHERE K = 1 AND K = N
         AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1 AND  K = T0.N)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW1 WHERE K = 1 AND K = N
         AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1 AND  K = T0.N)
      AND T0.N IN (SELECT K FROM VS2 T2 WHERE N = T0.K) !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW1 WHERE K = 1 AND K = N
      AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1 AND  K = T0.N)
      AND T0.N IN (SELECT K FROM VS1
                   WHERE K = (SELECT MIN(N) FROM VS1) AND N = T0.K) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
DROP VIEW VE1!
 
Enter command:
DROP VIEW VW1!
 
Enter command:
DROP VIEW VS1!
 
Enter command:
COMMIT!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EMP  ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       CURRSAL FIXED (5) NOT NULL,
                       MANAGER CHAR (15) NOT NULL,
                       STARTSAL FIXED (5) NOT NULL,
                       SEX CHAR (6) NOT NULL ) !
 
Enter command:
CREATE TABLE FAM   ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       STATUS CHAR (8) NOT NULL,
                       DEPEND FIXED (2) NOT NULL RANGE BETWEEN 0 AND 15,
                       ADDRESS CHAR (30) NOT NULL ) !
 
Enter command:
CREATE TABLE DEPT  ( DEPTNO FIXED (2) KEY RANGE BETWEEN 10 AND 90 ,
                        DEPTNAME CHAR (10) NOT NULL,
                        LOCNAME  CHAR (15) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE EMP, FAM, DEPT IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO EMP SET NAME = 'Fred Gerard',
             DEPTNO = 50,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Norma Wilson',
             DEPTNO = 40,
             CURRSAL = 15500,
             MANAGER = 'Jill Crowley',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Brown',
             DEPTNO = 70,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 7000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Rogers',
             DEPTNO = 40,
             CURRSAL = 15000,
             MANAGER = 'Jill Crowley',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'John Johnes',
             DEPTNO = 60,
             CURRSAL = 16500,
             MANAGER = 'Dana Smith',
             STARTSAL = 8500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Pat Mingo',
             DEPTNO = 50,
             CURRSAL = 13000,
             MANAGER = 'Fred Gerard',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dana Smith',
             DEPTNO = 60,
             CURRSAL = 16000,
             MANAGER = 'George Taylor',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Mary Rowen',
             DEPTNO = 60,
             CURRSAL = 15500,
             MANAGER = 'Dana Smith',
             STARTSAL = 9000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jill Crowley',
             DEPTNO = 40,
             CURRSAL = 17000,
             MANAGER = 'George Taylor',
             STARTSAL = 8250,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jerry Denny',
             DEPTNO = 70,
             CURRSAL = 14000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Alice Teir',
             DEPTNO = 50,
             CURRSAL = 13500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dave Cowel',
             DEPTNO = 60,
             CURRSAL = 14000,
             MANAGER = 'Dana Smith',
             STARTSAL = 7500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'George Taylor',
             DEPTNO = 10,
             CURRSAL = 20000,
             MANAGER = ' ',
             STARTSAL = 10000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joan Bird',
             DEPTNO = 50,
             CURRSAL = 14500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Ed Nader',
             DEPTNO = 70,
             CURRSAL = 8000,
             MANAGER = 'Paul Brown',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joyce Adams',
             DEPTNO = 70,
             CURRSAL = 16000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Fred Gerard',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '37 Drake St. #2, Carmichael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Norma Wilson',
                    DEPTNO = 40,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '4175 Oak Ct., Daly City'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Brown',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '271 Oxnard St., Lodi'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Rogers',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 5,
               ADDRESS = '27811 Embarcodero, S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'John Johnes',
                    DEPTNO = 60,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2785 Drake St., Stockton'!
 
Enter command:
INSERT INTO  FAM SET NAME = 'Pat Mingo',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '2751 Peer St., #1, Reno'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dana Smith',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = 'PO Box 571, Rt 51, Waterloo'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Mary Rowen',
                    DEPTNO = 60,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '27451 Mills St., San Rafael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jill Crowley',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '5671 Powell St., S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jerry Denny',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '67511 Market St., Stockton'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Alice Teir',
                    DEPTNO = 50,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2751 Maple Ct., Davis'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dave Cowel',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '1561 Main St., French Camp'!
 
Enter command:
INSERT INTO FAM SET NAME = 'George Taylor',
                    DEPTNO = 10,
               STATUS = 'married',
               DEPEND = 5,
               ADDRESS = '56715 - 31st St., Sacramento'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joan Bird',
                    DEPTNO = 50,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '2731 Coronado Wy, Pacifica'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Ed Nader',
                    DEPTNO = 70,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '774 S. St., Victor'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joyce Adams',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '8741 Takay Bowl Blvd, Lodi'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 10,
              DEPTNAME = 'Management',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 40,
              DEPTNAME = 'Sales',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 50,
              DEPTNAME = 'Materials',
              LOCNAME   = 'Sacramento'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 60,
              DEPTNAME = 'Production',
              LOCNAME  = 'Stockton'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 70,
              DEPTNAME = 'Supply',
              LOCNAME  = 'Lodi'!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPT.DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE EMP.DEPTNO = F.DEPTNO) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT F.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPT.DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE EMP.DEPTNO = F.DEPTNO) !
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
George Taylor   | 56715 - 31st St., Sacramento   |   5
Jerry Denny     | 67511 Market St., Stockton     |   4
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Paul Brown      | 271 Oxnard St., Lodi           |   4
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT MIN(NAME) & ' ' FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT F.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPT.DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE EMP.DEPTNO = F.DEPTNO) ORDER BY DEPEND !
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Jerry Denny     | 67511 Market St., Stockton     |   4
Paul Brown      | 271 Oxnard St., Lodi           |   4
George Taylor   | 56715 - 31st St., Sacramento   |   5
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT FAM.NAME FROM EMP, FAM
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (A CHAR (8) ASCII, TDUMMY CHAR (2))!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE TABLE U (A CHAR (8), UDUMMY CHAR (2)) !
 
Enter command:
INSERT U SET A = 'aaa'!
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A = U.A !
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A BETWEEN U.A AND 'bbb'!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A IN (U.A, 'bbb')!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
CREATE INDEX TI ON T (A,TDUMMY)!
 
Enter command:
CREATE INDEX UI ON U (A,UDUMMY)!
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A = U.A !
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A BETWEEN U.A AND 'bbb'!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A IN (U.A, 'bbb')!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EMP  ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       CURR_SAL FIXED (5) NOT NULL,
                       MANAGER CHAR (15) NOT NULL,
                       STARTSAL FIXED (5) NOT NULL,
                       SEX CHAR (6) NOT NULL ) !
 
Enter command:
CREATE TABLE FAM   ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       STATUS CHAR (8) NOT NULL,
                       DEPEND FIXED (2) NOT NULL RANGE BETWEEN 0 AND 15,
                       ADDRESS CHAR (30) NOT NULL ) !
 
Enter command:
CREATE TABLE DEPT  ( DEPTNO FIXED (2) KEY RANGE BETWEEN 10 AND 90 ,
                        DEPTNAME CHAR (10) NOT NULL,
                        LOCNAME  CHAR (15) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE EMP, FAM, DEPT IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO EMP SET NAME = 'Fred Gerard',
             DEPTNO = 50,
             CURR_SAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Norma Wilson',
             DEPTNO = 40,
             CURR_SAL = 15500,
             MANAGER = 'Jill Crowley',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Brown',
             DEPTNO = 70,
             CURR_SAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 7000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Rogers',
             DEPTNO = 40,
             CURR_SAL = 15000,
             MANAGER = 'Jill Crowley',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'John Johnes',
             DEPTNO = 60,
             CURR_SAL = 16500,
             MANAGER = 'Dana Smith',
             STARTSAL = 8500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Pat Mingo',
             DEPTNO = 50,
             CURR_SAL = 13000,
             MANAGER = 'Fred Gerard',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dana Smith',
             DEPTNO = 60,
             CURR_SAL = 16000,
             MANAGER = 'George Taylor',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Mary Rowen',
             DEPTNO = 60,
             CURR_SAL = 15500,
             MANAGER = 'Dana Smith',
             STARTSAL = 9000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jill Crowley',
             DEPTNO = 40,
             CURR_SAL = 17000,
             MANAGER = 'George Taylor',
             STARTSAL = 8250,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jerry Denny',
             DEPTNO = 70,
             CURR_SAL = 14000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Alice Teir',
             DEPTNO = 50,
             CURR_SAL = 13500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dave Cowel',
             DEPTNO = 60,
             CURR_SAL = 14000,
             MANAGER = 'Dana Smith',
             STARTSAL = 7500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'George Taylor',
             DEPTNO = 10,
             CURR_SAL = 20000,
             MANAGER = ' ',
             STARTSAL = 10000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joan Bird',
             DEPTNO = 50,
             CURR_SAL = 14500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Ed Nader',
             DEPTNO = 70,
             CURR_SAL = 8000,
             MANAGER = 'Paul Brown',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joyce Adams',
             DEPTNO = 70,
             CURR_SAL = 16000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Fred Gerard',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '37 Drake St. #2, Carmichael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Norma Wilson',
                    DEPTNO = 40,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '4175 Oak Ct., Daly City'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Brown',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '271 Oxnard St., Lodi'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Rogers',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 5,
               ADDRESS = '27811 Embarcodero, S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'John Johnes',
                    DEPTNO = 60,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2785 Drake St., Stockton'!
 
Enter command:
INSERT INTO  FAM SET NAME = 'Pat Mingo',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '2751 Peer St., #1, Reno'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dana Smith',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = 'PO Box 571, Rt 51, Waterloo'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Mary Rowen',
                    DEPTNO = 60,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '27451 Mills St., San Rafael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jill Crowley',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '5671 Powell St., S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jerry Denny',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '67511 Market St., Stockton'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Alice Teir',
                    DEPTNO = 50,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2751 Maple Ct., Davis'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dave Cowel',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '1561 Main St., French Camp'!
 
Enter command:
INSERT INTO FAM SET NAME = 'George Taylor',
                    DEPTNO = 10,
               STATUS = 'married',
               DEPEND = 5,
               ADDRESS = '56715 - 31st St., Sacramento'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joan Bird',
                    DEPTNO = 50,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '2731 Coronado Wy, Pacifica'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Ed Nader',
                    DEPTNO = 70,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '774 S. St., Victor'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joyce Adams',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '8741 Takay Bowl Blvd, Lodi'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 10,
              DEPTNAME = 'Management',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 40,
              DEPTNAME = 'Sales',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 50,
              DEPTNAME = 'Materials',
              LOCNAME   = 'Sacramento'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 60,
              DEPTNAME = 'Production',
              LOCNAME  = 'Stockton'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 70,
              DEPTNAME = 'Supply',
              LOCNAME  = 'Lodi'!
 
Enter command:
SELECT * FROM EMP !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
NAME            | DEPTNO | CURR_SAL | MANAGER         | STARTSAL | SEX
----------------+--------+----------+-----------------+----------+-------
Alice Teir      |  50    |  13500   | Fred Gerard     |   8500   | female
Dana Smith      |  60    |  16000   | George Taylor   |   7500   | female
Dave Cowel      |  60    |  14000   | Dana Smith      |   7500   | male
Ed Nader        |  70    |   8000   | Paul Brown      |   8000   | male
Fred Gerard     |  50    |  15000   | George Taylor   |   8000   | male
George Taylor   |  10    |  20000   |                 |  10000   | male
Jerry Denny     |  70    |  14000   | Paul Brown      |   6000   | male
Jill Crowley    |  40    |  17000   | George Taylor   |   8250   | female
Joan Bird       |  50    |  14500   | Fred Gerard     |   8000   | female
John Johnes     |  60    |  16500   | Dana Smith      |   8500   | male
Joyce Adams     |  70    |  16000   | Paul Brown      |   6500   | female
Mary Rowen      |  60    |  15500   | Dana Smith      |   9000   | female
Norma Wilson    |  40    |  15500   | Jill Crowley    |   7500   | female
Pat Mingo       |  50    |  13000   | Fred Gerard     |   6500   | female
Paul Brown      |  70    |  15000   | George Taylor   |   7000   | male
Paul Rogers     |  40    |  15000   | Jill Crowley    |   8000   | male
 
resultcount :                    16
 
Enter command:
SELECT * FROM FAM !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
NAME            | DEPTNO | STATUS   | DEPEND | ADDRESS
----------------+--------+----------+--------+-------------------------------
Alice Teir      |  50    | single   |   1    | 2751 Maple Ct., Davis
Dana Smith      |  60    | divorced |   1    | PO Box 571, Rt 51, Waterloo
Dave Cowel      |  60    | divorced |   1    | 1561 Main St., French Camp
Ed Nader        |  70    | divorced |   1    | 774 S. St., Victor
Fred Gerard     |  50    | married  |   3    | 37 Drake St. #2, Carmichael
George Taylor   |  10    | married  |   5    | 56715 - 31st St., Sacramento
Jerry Denny     |  70    | married  |   4    | 67511 Market St., Stockton
Jill Crowley    |  40    | divorced |   1    | 5671 Powell St., S.F.
Joan Bird       |  50    | divorced |   1    | 2731 Coronado Wy, Pacifica
John Johnes     |  60    | single   |   1    | 2785 Drake St., Stockton
Joyce Adams     |  70    | married  |   2    | 8741 Takay Bowl Blvd, Lodi
Mary Rowen      |  60    | married  |   3    | 27451 Mills St., San Rafael
Norma Wilson    |  40    | single   |   1    | 4175 Oak Ct., Daly City
Pat Mingo       |  50    | married  |   2    | 2751 Peer St., #1, Reno
Paul Brown      |  70    | married  |   4    | 271 Oxnard St., Lodi
Paul Rogers     |  40    | divorced |   5    | 27811 Embarcodero, S.F.
 
resultcount :                    16
 
Enter command:
SELECT * FROM DEPT !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
DEPTNO | DEPTNAME   | LOCNAME
-------+------------+----------------
 10    | Management | San Francisco
 40    | Sales      | San Francisco
 50    | Materials  | Sacramento
 60    | Production | Stockton
 70    | Supply     | Lodi
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW V1 (A) AS SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        EMP.NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        EMP.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V1 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V2 (B) AS SELECT SUM(DEPEND) FROM FAM F
  WHERE NAME > 'B' AND
        NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V2 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH !
 
B
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A IN (SELECT B FROM V2 WHERE B > 2) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 V WHERE A IN (SELECT B FROM V2 WHERE V2.B = V.A) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 V WHERE A IN
         (SELECT B FROM V2 WHERE V2.B IN
               (SELECT B FROM V2 WHERE V2.B = V.A)) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V3 AS SELECT EMP.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        EMP.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        EMP.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V3 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
George Taylor   | 56715 - 31st St., Sacramento   |   5
Jerry Denny     | 67511 Market St., Stockton     |   4
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Paul Brown      | 271 Oxnard St., Lodi           |   4
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
CREATE VIEW V4 AS SELECT NAME, ADDRESS, DEPEND FROM FAM F
  WHERE NAME > 'B' AND
        NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       NAME = F.NAME)!
 
Enter command:
SELECT * FROM V4 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
George Taylor   | 56715 - 31st St., Sacramento   |   5
Jerry Denny     | 67511 Market St., Stockton     |   4
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Paul Brown      | 271 Oxnard St., Lodi           |   4
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
SELECT NAME, ADDRESS FROM V3 V WHERE
       (NAME = 'Ed Nader' AND NAME IN
             (SELECT NAME FROM V4 WHERE NAME = V.NAME))
       OR
       (NAME = 'Norma Wilson' AND NAME IN
             (SELECT NAME FROM V4 WHERE NAME = V.NAME)) !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
NAME            | ADDRESS
----------------+-------------------------------
Ed Nader        | 774 S. St., Victor
Norma Wilson    | 4175 Oak Ct., Daly City
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE VIEW V1 AS SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        EMP.NAME = ANY (SELECT MIN(NAME) & ' ' FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
Enter command:
SELECT * FROM V1 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V2 AS SELECT EMP.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V2 ORDER BY DEPEND !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Jerry Denny     | 67511 Market St., Stockton     |   4
Paul Brown      | 271 Oxnard St., Lodi           |   4
George Taylor   | 56715 - 31st St., Sacramento   |   5
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
CREATE VIEW V3 AS SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT FAM.NAME FROM EMP, FAM
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
Enter command:
SELECT * FROM V3 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V4 AS SELECT NAME FROM EMP
   WHERE NAME > 'Paul' AND
         EXISTS (SELECT DEPTNO FROM DEPT) !
 
Enter command:
SELECT * FROM V4 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
NAME
---------------
Paul Brown
Paul Rogers
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW V1 AS SELECT EMP.NAME, EMP.DEPTNO,
                         FAM.ADDRESS FROM EMP, FAM !
 
Enter command:
CREATE VIEW V2 AS SELECT * FROM V1
    WHERE DEPTNO > 65 AND
    EXISTS ( SELECT DEPTNO FROM DEPT WHERE V1.DEPTNO = DEPTNO) !
 
Enter command:
SELECT * FROM V2 !
 
resultcount :                    64
 
Enter command:
FETCH !
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Ed Nader        |  70    | 2751 Maple Ct., Davis
Jerry Denny     |  70    | 2751 Maple Ct., Davis
Joyce Adams     |  70    | 2751 Maple Ct., Davis
Paul Brown      |  70    | 2751 Maple Ct., Davis
Ed Nader        |  70    | PO Box 571, Rt 51, Waterloo
Jerry Denny     |  70    | PO Box 571, Rt 51, Waterloo
Joyce Adams     |  70    | PO Box 571, Rt 51, Waterloo
Paul Brown      |  70    | PO Box 571, Rt 51, Waterloo
Ed Nader        |  70    | 1561 Main St., French Camp
Jerry Denny     |  70    | 1561 Main St., French Camp
Joyce Adams     |  70    | 1561 Main St., French Camp
Paul Brown      |  70    | 1561 Main St., French Camp
Ed Nader        |  70    | 774 S. St., Victor
Jerry Denny     |  70    | 774 S. St., Victor
Joyce Adams     |  70    | 774 S. St., Victor
Paul Brown      |  70    | 774 S. St., Victor
Ed Nader        |  70    | 37 Drake St. #2, Carmichael
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Jerry Denny     |  70    | 37 Drake St. #2, Carmichael
Joyce Adams     |  70    | 37 Drake St. #2, Carmichael
Paul Brown      |  70    | 37 Drake St. #2, Carmichael
Ed Nader        |  70    | 56715 - 31st St., Sacramento
Jerry Denny     |  70    | 56715 - 31st St., Sacramento
Joyce Adams     |  70    | 56715 - 31st St., Sacramento
Paul Brown      |  70    | 56715 - 31st St., Sacramento
Ed Nader        |  70    | 67511 Market St., Stockton
Jerry Denny     |  70    | 67511 Market St., Stockton
Joyce Adams     |  70    | 67511 Market St., Stockton
Paul Brown      |  70    | 67511 Market St., Stockton
Ed Nader        |  70    | 5671 Powell St., S.F.
Jerry Denny     |  70    | 5671 Powell St., S.F.
Joyce Adams     |  70    | 5671 Powell St., S.F.
Paul Brown      |  70    | 5671 Powell St., S.F.
Ed Nader        |  70    | 2731 Coronado Wy, Pacifica
Jerry Denny     |  70    | 2731 Coronado Wy, Pacifica
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Joyce Adams     |  70    | 2731 Coronado Wy, Pacifica
Paul Brown      |  70    | 2731 Coronado Wy, Pacifica
Ed Nader        |  70    | 2785 Drake St., Stockton
Jerry Denny     |  70    | 2785 Drake St., Stockton
Joyce Adams     |  70    | 2785 Drake St., Stockton
Paul Brown      |  70    | 2785 Drake St., Stockton
Ed Nader        |  70    | 8741 Takay Bowl Blvd, Lodi
Jerry Denny     |  70    | 8741 Takay Bowl Blvd, Lodi
Joyce Adams     |  70    | 8741 Takay Bowl Blvd, Lodi
Paul Brown      |  70    | 8741 Takay Bowl Blvd, Lodi
Ed Nader        |  70    | 27451 Mills St., San Rafael
Jerry Denny     |  70    | 27451 Mills St., San Rafael
Joyce Adams     |  70    | 27451 Mills St., San Rafael
Paul Brown      |  70    | 27451 Mills St., San Rafael
Ed Nader        |  70    | 4175 Oak Ct., Daly City
Jerry Denny     |  70    | 4175 Oak Ct., Daly City
Joyce Adams     |  70    | 4175 Oak Ct., Daly City
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Paul Brown      |  70    | 4175 Oak Ct., Daly City
Ed Nader        |  70    | 2751 Peer St., #1, Reno
Jerry Denny     |  70    | 2751 Peer St., #1, Reno
Joyce Adams     |  70    | 2751 Peer St., #1, Reno
Paul Brown      |  70    | 2751 Peer St., #1, Reno
Ed Nader        |  70    | 271 Oxnard St., Lodi
Jerry Denny     |  70    | 271 Oxnard St., Lodi
Joyce Adams     |  70    | 271 Oxnard St., Lodi
Paul Brown      |  70    | 271 Oxnard St., Lodi
Ed Nader        |  70    | 27811 Embarcodero, S.F.
Jerry Denny     |  70    | 27811 Embarcodero, S.F.
Joyce Adams     |  70    | 27811 Embarcodero, S.F.
Paul Brown      |  70    | 27811 Embarcodero, S.F.
 
resultcount :                    64
 
Enter command:
CREATE VIEW V3 (MUL) AS SELECT EMP.DEPTNO * FAM.DEPTNO
      FROM EMP, FAM !
 
Enter command:
CREATE VIEW V4 AS SELECT * FROM V3 WHERE EXISTS
      (SELECT LOCNAME FROM DEPT WHERE V3.MUL > DEPTNO)!
 
***ERROR  -7022 Columns from more than one table not allowed:MUL           0084
 
Enter command:
SELECT * FROM V4 !
 
***ERROR  -4004 Unknown table name:V4                                      0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CREATE VIEW V5 (A,B,C,D,E,F,G,H,I,J,K,L,M,N)
               AS SELECT * FROM EMP, FAM, DEPT
   WHERE EMP.DEPTNO * FAM.DEPTNO > DEPT.DEPTNO AND
         EMP.NAME = FAM.NAME AND
         EMP.DEPTNO = ANY ( SELECT DEPTNO FROM DEPT
                               WHERE EMP.NAME > DEPT.LOCNAME )!
 
Enter command:
SELECT * FROM V5 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   10
M                 :  Management
N                 :  San Francisco
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   40
M                 :  Sales
N                 :  San Francisco
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   50
M                 :  Materials
N                 :  Sacramento
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   60
M                 :  Production
N                 :  Stockton
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   70
M                 :  Supply
N                 :  Lodi
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED (7), B FIXED (5))!
 
Enter command:
INSERT T SET A = 2, B = 3!
 
Enter command:
INSERT T SET A = 6, B = 3!
 
Enter command:
INSERT T SET A = 4, B = 3!
 
Enter command:
INSERT T SET A =12, B = 2!
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T1 ( C FIXED (10))!
 
Enter command:
INSERT T1 SET C = 12 !
 
Enter command:
INSERT T1 SET C = 24 !
 
Enter command:
SELECT A                  FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
A
--------
       2
       6
       4
      12
       2
       6
       4
      12
 
resultcount :                     8
 
Enter command:
SELECT A + C              FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          18
          16
          24
          26
          30
          28
          36
 
resultcount :                     8
 
Enter command:
SELECT SUM(A)             FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1 ORDER BY 1 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1 ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 GROUP BY C ORDER BY 1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1 ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT A                  FROM T, T1 WHERE A > 0 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
A
--------
       2
       6
       4
      12
       2
       6
       4
      12
 
resultcount :                     8
 
Enter command:
SELECT A + C              FROM T, T1 WHERE A > 0 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          18
          16
          24
          26
          30
          28
          36
 
resultcount :                     8
 
Enter command:
SELECT SUM(A)             FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 WHERE A > 0  GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1 WHERE A > 0 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 WHERE A > 0  GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1 WHERE A > 0  ORDER BY 1 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1 WHERE A > 0  ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 WHERE A > 0  GROUP BY C ORDER BY 1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1 WHERE A > 0  ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT ROWNO, A           FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
ROWNO       | A
------------+---------
          1 |        2
          2 |        6
          3 |        4
          4 |       12
          5 |        2
          6 |        6
          7 |        4
          8 |       12
 
resultcount :                     8
 
Enter command:
SELECT ROWNO, A + C       FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+-------------
          1 |           14
          2 |           18
          3 |           16
          4 |           24
          5 |           26
          6 |           30
          7 |           28
          8 |           36
 
resultcount :                     8
 
Enter command:
SELECT ROWNO, SUM(A)      FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+---------------------------------------------
          1 |  4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT ROWNO, SUM(A)+C    FROM T, T1 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+---------------------------------------------
          1 |  3.6000000000000000000000000000000000000E+01
          2 |  4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT ROWNO, SUM(A+C)    FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+---------------------------------------------
          1 |  1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT A                  FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A
--------
       2
       6
 
resultcount :                     2
 
Enter command:
SELECT A + C              FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          18
 
resultcount :                     2
 
Enter command:
SELECT SUM(A)             FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 8.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)+C           FROM<T1, T>WHERE ROWNO < 3 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.4000000000000000000000000000000000000E+01
 2.6000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.2000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A HAVING A > 2!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 8.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING A > 2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A HAVING A > 2!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.4000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 6.0000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT A + C              FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          26
          28
          30
          24
          36
 
resultcount :                     5
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+00
 4.0000000000000000000000000000000000000E+00
 6.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     5
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     5
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     5
 
Enter command:
SELECT A                  FROM T, T1 GROUP BY A,C HAVING SUM(A) > 2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
A
--------
       4
       4
       6
       6
      12
      12
 
resultcount :                     6
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A HAVING SUM(A) > 8!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.2000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING SUM(A) > 2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A HAVING SUM(A) > 8!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 6.0000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT A                  FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
A
--------
       2
       4
       6
       6
      12
      12
 
resultcount :                     6
 
Enter command:
SELECT A + C              FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          26
          28
          18
          30
          24
          36
 
resultcount :                     6
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+00
 4.0000000000000000000000000000000000000E+00
 6.0000000000000000000000000000000000000E+00
 6.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT A                  FROM T, T1 GROUP BY A HAVING SUM(A+C) > 40!
 
resultcount :                     3
 
Enter command:
FETCH !
 
A
--------
       4
       6
      12
 
resultcount :                     3
 
Enter command:
SELECT A + C              FROM T, T1 GROUP BY A,C HAVING SUM(A+C) > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          26
          28
          30
          24
          36
 
resultcount :                     5
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A HAVING SUM(A+C) > 40!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 8.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY C HAVING SUM(A+C) > 40!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY C HAVING SUM(A+C) > 40!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 7.2000000000000000000000000000000000000E+01
 1.2000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE JOIN_S ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE STATISTIK (KDNR   DECIMAL NOT NULL,
                        MONAT  DECIMAL NOT NULL,
                        UMSATZ DECIMAL NOT NULL)!
 
Enter command:
INSERT STATISTIK VALUES (1, 1, 100)!
 
Enter command:
INSERT STATISTIK VALUES (3, 1, 200)!
 
Enter command:
INSERT STATISTIK VALUES (1, 3, 500)!
 
Enter command:
INSERT STATISTIK VALUES (2, 4, 100)!
 
Enter command:
INSERT STATISTIK VALUES (3, 4, 300)!
 
Enter command:
INSERT STATISTIK VALUES (1, 7, 800)!
 
Enter command:
INSERT STATISTIK VALUES (2, 7, 900)!
 
Enter command:
INSERT STATISTIK VALUES (3,10, 200)!
 
Enter command:
INSERT STATISTIK VALUES (2,11,1000)!
 
Enter command:
INSERT STATISTIK VALUES (1,12, 200)!
 
Enter command:
INSERT STATISTIK VALUES (3,12, 500)!
 
Enter command:
SELECT A.KDNR, A.MONAT, A.UMSATZ, SUM (B.UMSATZ) KUMUMSATZ
FROM STATISTIK A, STATISTIK B
WHERE A.KDNR = B.KDNR
  AND A.MONAT >= B.MONAT
GROUP BY A.KDNR, A.MONAT, A.UMSATZ
ORDER BY A.KDNR, A.MONAT !
 
resultcount :                    11
 
Enter command:
FETCH!
 
KDNR   | MONAT  | UMSATZ | KUMUMSATZ
-------+--------+--------+---------------------------------------------
     1 |      1 |    100 |  1.0000000000000000000000000000000000000E+02
     1 |      3 |    500 |  6.0000000000000000000000000000000000000E+02
     1 |      7 |    800 |  1.4000000000000000000000000000000000000E+03
     1 |     12 |    200 |  1.6000000000000000000000000000000000000E+03
     2 |      4 |    100 |  1.0000000000000000000000000000000000000E+02
     2 |      7 |    900 |  1.0000000000000000000000000000000000000E+03
     2 |     11 |   1000 |  2.0000000000000000000000000000000000000E+03
     3 |      1 |    200 |  2.0000000000000000000000000000000000000E+02
     3 |      4 |    300 |  5.0000000000000000000000000000000000000E+02
     3 |     10 |    200 |  7.0000000000000000000000000000000000000E+02
     3 |     12 |    500 |  1.2000000000000000000000000000000000000E+03
 
resultcount :                    11
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PERSONEN (PERS_NR DECIMAL (6),
                       NAME    CHAR   (30))!
 
Enter command:
INSERT INTO PERSONEN VALUES (1, 'Schmitz,Peter')!
 
Enter command:
INSERT INTO PERSONEN VALUES (2, 'Hofer,Anette')!
 
Enter command:
INSERT INTO PERSONEN VALUES (3, 'Moericke,Michael')!
 
Enter command:
CREATE TABLE SPRACHE (PERS_NR DECIMAL (6),
                      SPRACHE CHAR (12))!
 
Enter command:
INSERT INTO SPRACHE VALUES (1, 'Englisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (1, 'Tuerkisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (1, 'Arabisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (2, 'Englisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (2, 'Franzoesisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (3, 'Englisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (3, 'Spanisch')!
 
Enter command:
INSERT INTO SPRACHE VALUES (3, 'Russisch')!
 
Enter command:
CREATE TABLE ANFORDERUNG (SPRACHE CHAR (12))!
 
Enter command:
INSERT INTO ANFORDERUNG VALUES ('Arabisch')!
 
Enter command:
INSERT INTO ANFORDERUNG VALUES ('Englisch')!
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P
 WHERE NOT EXISTS
       (SELECT *
         FROM ANFORDERUNG A
         WHERE NOT EXISTS
               (SELECT * FROM SPRACHE S
                 WHERE S.PERS_NR = P.PERS_NR
                   AND S.SPRACHE = A.SPRACHE))!
 
resultcount :                     1
 
Enter command:
FETCH !
 
PERS_NR | NAME
--------+-------------------------------
      1 | Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P, (SELECT COUNT(*) CNT FROM ANFORDERUNG) ACNT
 WHERE ACNT.CNT = (SELECT COUNT (*)
                     FROM ANFORDERUNG A, SPRACHE S
                    WHERE S.SPRACHE = A.SPRACHE
                      AND S.PERS_NR = P.PERS_NR) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
PERS_NR | NAME
--------+-------------------------------
      1 | Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT P.NAME
  FROM PERSONEN P
 WHERE P.PERS_NR IN
       (SELECT S.PERS_NR
          FROM SPRACHE S, ANFORDERUNG A
         WHERE S.SPRACHE = A.SPRACHE
         GROUP BY S.PERS_NR
         HAVING COUNT (*) =
                (SELECT COUNT (*) FROM ANFORDERUNG)) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
NAME
------------------------------
Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P
 WHERE NOT EXISTS
       (SELECT *
          FROM SPRACHE S, ANFORDERUNG A
         WHERE S.SPRACHE(+) = A.SPRACHE
           AND S.PERS_NR(+) = P.PERS_NR
           AND S.SPRACHE IS NULL) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
PERS_NR | NAME
--------+-------------------------------
      1 | Schmitz,Peter
 
resultcount :                     1
 
Enter command:
SELECT PERS_NR, NAME
  FROM PERSONEN P
 WHERE NOT EXISTS
       (SELECT *
          FROM SPRACHE S, ANFORDERUNG A
         WHERE S.SPRACHE(+) = A.SPRACHE
           AND S.PERS_NR(+) = P.PERS_NR)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8) ASCII KEY, B CHAR (5) ASCII KEY,
  C CHAR (8) ASCII)!
 
Enter command:
INSERT T VALUES ('aaa', 'bb', 'ccc')!
 
Enter command:
INSERT T VALUES ('neu', '22', 'c2c')!
 
Enter command:
INSERT T VALUES ('neu', 'bb', '333')!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE MARA (
MANDT              CHAR       ( 3 ),
MATNR              CHAR       ( 18 ),
ERSDA              CHAR       ( 8 ),
ERNAM              CHAR       ( 12 ),
LAEDA              CHAR       ( 8 ),
AENAM              CHAR       ( 12 ),
VPSTA              CHAR       ( 15 ),
PSTAT              CHAR       ( 15 ),
LVORM              CHAR       ( 1 ),
MTART              CHAR       ( 4 ),
MBRSH              CHAR       ( 1 ),
MATKL              CHAR       ( 9 ),
BISMT              CHAR (   18           ),
MEINS              CHAR (    3           ),
BSTME              CHAR (    3           ),
ZEINR              CHAR (   22           ),
ZEIAR              CHAR (    3           ),
ZEIVR              CHAR (    2           ),
ZEIFO              CHAR (    4           ),
AESZN              CHAR (    6           ),
BLATT              CHAR (    3           ),
BLANZ              CHAR (    3           ),
FERTH              CHAR (   18           ),
FORMT              CHAR (    4           ),
GROES              CHAR (   32           ),
WRKST              CHAR (   14           ),
NORMT              CHAR (   18           ),
LABOR              CHAR (    3           ),
EKWSL              CHAR (    4           ),
BRGEW              FIXED (          13 , 3 ),
NTGEW              FIXED (          13 , 3 ),
GEWEI              CHAR (    3           ),
VOLUM              FIXED (          13 , 3 ),
VOLEH              CHAR (    3           ),
BEHVO              CHAR (    2           ),
RAUBE              CHAR (    2           ),
TEMPB              CHAR (    2           ),
DISST              CHAR (    3           ),
TRAGR              CHAR (    4           ),
STOFF              CHAR (   18           ),
SPART              CHAR (    2           ),
KUNNR              CHAR (   10           ),
EANNR              CHAR (   14           ),
WESCH              FIXED (          13 , 3 ),
BWVOR              CHAR (    1           ),
BWSCL              CHAR (    1           ),
SAISO              CHAR (    4           ),
ETIAR              CHAR (    2           ),
ETIFO              CHAR (    2           ),
ENTAR              CHAR (    1           ),
EAN11              CHAR (   18           ),
NUMTP              CHAR (    2           ),
LAENG              FIXED (          13 , 3 ),
BREIT              FIXED (          13 , 3 ),
HOEHE              FIXED (          13 , 3 ),
MEABM              CHAR (    3           ),
PRDHA              CHAR (   18           ),
PRIMARY KEY  (MANDT, MATNR))!
 
Enter command:
INSERT INTO MARA (MANDT, MATNR) VALUES ('900', 'SD000001')!
 
Enter command:
 
CREATE TABLE MAKT (
MANDT                 CHAR (       3       ),
MATNR                 CHAR (      18       ),
SPRAS                 CHAR (       1       ),
MAKTX                 CHAR (      40       ),
PRIMARY KEY (MANDT, MATNR, SPRAS))!
 
Enter command:
INSERT INTO MAKT (MANDT, MATNR, SPRAS) VALUES ('900', 'SD000001', 'a')!
 
Enter command:
 
CREATE TABLE MVKE (
MANDT                 CHAR (       3       ),
MATNR                 CHAR (      18       ),
VKORG                 CHAR (       4       ),
VTWEG                 CHAR (       2       ),
LVORM                 CHAR (       1       ),
VERSG                 CHAR (       1       ),
BONUS                 CHAR (       2       ),
PROVG                 CHAR (       2       ),
SKTOF                 CHAR (       1       ),
VMSTA                 CHAR (       2       ),
VMSTD                 CHAR (       8       ),
AUMNG                 FIXED (        13 ,  3  ),
LFMNG                 FIXED (        13 ,  3  ),
EFMNG                 FIXED (        13 ,  3  ),
SCMNG                 FIXED (        13 ,  3  ),
SCHME                 CHAR (       3       ),
VRKME                 CHAR (       3       ),
MTPOS                 CHAR (       4       ),
DWERK                 CHAR (       4       ),
PRODH                 CHAR (      18       ),
PMATN                 CHAR (      18       ),
KONDM                 CHAR (       2       ),
KTGRM                 CHAR (       2       ),
MVGR1                 CHAR (       3       ),
MVGR2                 CHAR (       3       ),
MVGR3                 CHAR (       3       ),
MVGR4                 CHAR (       3       ),
MVGR5                 CHAR (       3       ),
PRIMARY KEY (MANDT, MATNR, VKORG, VTWEG))!
 
Enter command:
INSERT INTO MVKE (MANDT, MATNR, VKORG, VTWEG) VALUES (
'900', 'SD000001', 'vier', 'a')!
 
Enter command:
CREATE VIEW MAPOV ( MANDT , MATNR , SPRAS , VKORG , VTWEG , ZIEME , BRGEW ,
       NTGEW , GEWEI , VOLUM , VOLEH , RAUBE , TEMPB , DISST , EAN11 , NUMTP ,
       LAENG , BREIT , HOEHE , MEABM , PRDHA , KUNNR , VERSG , BONUS , PROVG ,
       SKTOF , VMSTA , VMSTD , AUMNG , LFMNG , EFMNG , SCHME , SCMNG , VRKME ,
       SPART , ARKTX , PRODH , PMATN , MTPOS , DWERK , MEINS , TRAGR , MATKL ,
       MTART , KTGRM , KONDM , LVORM , MVGR1 , MVGR2 , MVGR3 , MVGR4 , MVGR5 )
AS SELECT
       T0001.MANDT , T0001.MATNR , T0002.SPRAS , T0003.VKORG , T0003.VTWEG ,
       T0003.VRKME , T0001.BRGEW , T0001.NTGEW , T0001.GEWEI , T0001.VOLUM ,
       T0001.VOLEH , T0001.RAUBE , T0001.TEMPB , T0001.DISST , T0001.EAN11 ,
       T0001.NUMTP , T0001.LAENG , T0001.BREIT , T0001.HOEHE , T0001.MEABM ,
       T0001.PRDHA , T0001.KUNNR , T0003.VERSG , T0003.BONUS , T0003.PROVG ,
       T0003.SKTOF , T0003.VMSTA , T0003.VMSTD , T0003.AUMNG , T0003.LFMNG ,
       T0003.EFMNG , T0003.SCHME , T0003.SCMNG , T0003.VRKME , T0001.SPART ,
       T0002.MAKTX , T0003.PRODH , T0003.PMATN , T0003.MTPOS , T0003.DWERK ,
       T0001.MEINS , T0001.TRAGR , T0001.MATKL , T0001.MTART , T0003.KTGRM ,
       T0003.KONDM , T0003.LVORM , T0003.MVGR1 , T0003.MVGR2 , T0003.MVGR3 ,
       T0003.MVGR4 , T0003.MVGR5
FROM MARA T0001, MAKT T0002, MVKE T0003
WHERE T0001.MANDT = T0002.MANDT
  AND T0001.MATNR = T0002.MATNR
  AND T0001.MANDT = T0003.MANDT
  AND T0001.MATNR = T0003.MATNR   !
 
Enter command:
SELECT * FROM MAPOV WHERE MANDT = '900' AND
MATNR IN ('SD000004', 'SD000003', 'SD000002', 'SD000001', 'SD000000')!
 
resultcount :                     1
 
Enter command:
FETCH!
 
MANDT             :  900
MATNR             :  SD000001
SPRAS             :  a
VKORG             :  vier
VTWEG             :  a
ZIEME             :  ?????
BRGEW             :  ???????????????
NTGEW             :  ???????????????
GEWEI             :  ?????
VOLUM             :  ???????????????
VOLEH             :  ?????
RAUBE             :  ?????
TEMPB             :  ?????
DISST             :  ?????
EAN11             :  ?????
NUMTP             :  ?????
LAENG             :  ???????????????
BREIT             :  ???????????????
HOEHE             :  ???????????????
MEABM             :  ?????
PRDHA             :  ?????
KUNNR             :  ?????
VERSG             :  ?????
BONUS             :  ?????
PROVG             :  ?????
SKTOF             :  ?????
VMSTA             :  ?????
VMSTD             :  ?????
AUMNG             :  ???????????????
LFMNG             :  ???????????????
EFMNG             :  ???????????????
SCHME             :  ?????
SCMNG             :  ???????????????
VRKME             :  ?????
SPART             :  ?????
ARKTX             :  ?????
PRODH             :  ?????
PMATN             :  ?????
MTPOS             :  ?????
DWERK             :  ?????
MEINS             :  ?????
TRAGR             :  ?????
MATKL             :  ?????
MTART             :  ?????
KTGRM             :  ?????
KONDM             :  ?????
LVORM             :  ?????
MVGR1             :  ?????
MVGR2             :  ?????
MVGR3             :  ?????
MVGR4             :  ?????
MVGR5             :  ?????
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "KERN              "."TVEU12            " (
"K1N5              " CHAR      (5) ASCII    ,
"F1I4              " FIXED     (10,0) NOT NULL,
"F2F8              " FLOAT     (18) NOT NULL,
"F3CH              " CHAR      (30) ASCII    NOT NULL,
"F4TI              " CHAR      (6) ASCII    NOT NULL
, PRIMARY KEY ("K1N5              "
)) !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00001',     1, 1.00000000000000010E-01,
    'SATZNUMMER : 00001............', '093839') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00002',     9, 9.00000000000000020E-01,
    'SATZNUMMER : 00002............', '093838') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00011',    40, 4.00000000000000000E+00,
    'SATZNUMMER : 00011............', '093829') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00051',   100, 1.00000000000000000E+01,
    'SATZNUMMER : 00051............', '093749') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00151',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00151............', '093609') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00153',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00153............', '093607') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00155',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00155............', '093605') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00157',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00157............', '093603') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00159',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00159............', '093601') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00161',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00161............', '093559') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00163',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00163............', '093557') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00165',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00165............', '093555') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00167',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00167............', '093553') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00169',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00169............', '093551') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00171',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00171............', '093549') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00173',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00173............', '093547') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00175',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00175............', '093545') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00177',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00177............', '093543') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00179',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00179............', '093541') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00181',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00181............', '093539') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00183',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00183............', '093537') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00185',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00185............', '093535') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00187',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00187............', '093533') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00189',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00189............', '093531') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00191',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00191............', '093529') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00193',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00193............', '093527') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00195',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00195............', '093525') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00197',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00197............', '093523') !
 
Enter command:
INSERT KERN.TVEU12 VALUES ('00199',     2, 2.00000000000000010E-01,
    'SATZNUMMER : 00199............', '093521') !
 
Enter command:
CREATE TABLE "KERN              "."TVEU13            " (
"K1N5              " CHAR      (5) ASCII    ,
"K2N5              " CHAR      (5) ASCII    ,
"F1I4              " FIXED     (10,0) NOT NULL,
"F2TX              " CHAR      (30) ASCII    NOT NULL,
"F3TI              " CHAR      (6) ASCII    NOT NULL
, PRIMARY KEY ("K1N5              "
,"K2N5              "
)) !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00001', '00001',   1,
     '%Die Mitternacht  ............', '093839') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00002',   1,
     '_zog naeher schon,............', '093838') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00003',   2,
     '%in stiller Ruh   ............', '093837') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00004',   3,
     '_lag Babylon.     ............', '093836') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00005',   4,
     '%Die Mitternacht  ............', '093835') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00006',   5,
     '_zog naeher schon,............', '093834') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00007',   6,
     '%in stiller Ruh   ............', '093833') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00008',   7,
     '_lag Babylon.     ............', '093832') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00009',   8,
     '%Die Mitternacht  ............', '093831') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00002', '00010',   9,
     '_zog naeher schon,............', '093830') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00011',   1,
     '%in stiller Ruh   ............', '093829') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00012',   2,
     '_lag Babylon.     ............', '093828') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00013',   3,
     '%Die Mitternacht  ............', '093827') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00014',   4,
     '_zog naeher schon,............', '093826') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00015',   5,
     '%in stiller Ruh   ............', '093825') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00016',   6,
     '_lag Babylon.     ............', '093824') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00017',   7,
     '%Die Mitternacht  ............', '093823') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00018',   8,
     '_zog naeher schon,............', '093822') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00019',   9,
     '%in stiller Ruh   ............', '093821') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00020',  10,
     '_lag Babylon.     ............', '093820') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00021',  11,
     '%Die Mitternacht  ............', '093819') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00022',  12,
     '_zog naeher schon,............', '093818') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00023',  13,
     '%in stiller Ruh   ............', '093817') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00024',  14,
     '_lag Babylon.     ............', '093816') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00025',  15,
     '%Die Mitternacht  ............', '093815') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00026',  16,
     '_zog naeher schon,............', '093814') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00027',  17,
     '%in stiller Ruh   ............', '093813') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00028',  18,
     '_lag Babylon.     ............', '093812') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00029',  19,
     '%Die Mitternacht  ............', '093811') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00030',  20,
     '_zog naeher schon,............', '093810') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00031',  21,
     '%in stiller Ruh   ............', '093809') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00032',  22,
     '_lag Babylon.     ............', '093808') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00033',  23,
     '%Die Mitternacht  ............', '093807') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00034',  24,
     '_zog naeher schon,............', '093806') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00035',  25,
     '%in stiller Ruh   ............', '093805') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00036',  26,
     '_lag Babylon.     ............', '093804') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00037',  27,
     '%Die Mitternacht  ............', '093803') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00038',  28,
     '_zog naeher schon,............', '093802') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00039',  29,
     '%in stiller Ruh   ............', '093801') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00040',  30,
     '_lag Babylon.     ............', '093800') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00041',  31,
     '%Die Mitternacht  ............', '093759') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00042',  32,
     '_zog naeher schon,............', '093758') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00043',  33,
     '%in stiller Ruh   ............', '093757') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00044',  34,
     '_lag Babylon.     ............', '093756') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00045',  35,
     '%Die Mitternacht  ............', '093755') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00046',  36,
     '_zog naeher schon,............', '093754') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00047',  37,
     '%in stiller Ruh   ............', '093753') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00048',  38,
     '_lag Babylon.     ............', '093752') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00049',  39,
     '%Die Mitternacht  ............', '093751') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00011', '00050',  40,
     '_zog naeher schon,............', '093750') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00051',   1,
     '%in stiller Ruh   ............', '093749') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00052',   2,
     '_lag Babylon.     ............', '093748') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00053',   3,
     '%Die Mitternacht  ............', '093747') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00054',   4,
     '_zog naeher schon,............', '093746') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00055',   5,
     '%in stiller Ruh   ............', '093745') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00056',   6,
     '_lag Babylon.     ............', '093744') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00057',   7,
     '%Die Mitternacht  ............', '093743') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00058',   8,
     '_zog naeher schon,............', '093742') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00059',   9,
     '%in stiller Ruh   ............', '093741') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00060',  10,
     '_lag Babylon.     ............', '093740') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00061',  11,
     '%Die Mitternacht  ............', '093739') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00062',  12,
     '_zog naeher schon,............', '093738') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00063',  13,
     '%in stiller Ruh   ............', '093737') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00064',  14,
     '_lag Babylon.     ............', '093736') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00065',  15,
     '%Die Mitternacht  ............', '093735') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00066',  16,
     '_zog naeher schon,............', '093734') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00067',  17,
     '%in stiller Ruh   ............', '093733') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00068',  18,
     '_lag Babylon.     ............', '093732') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00069',  19,
     '%Die Mitternacht  ............', '093731') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00070',  20,
     '_zog naeher schon,............', '093730') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00071',  21,
     '%in stiller Ruh   ............', '093729') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00072',  22,
     '_lag Babylon.     ............', '093728') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00073',  23,
     '%Die Mitternacht  ............', '093727') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00074',  24,
     '_zog naeher schon,............', '093726') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00075',  25,
     '%in stiller Ruh   ............', '093725') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00076',  26,
     '_lag Babylon.     ............', '093724') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00077',  27,
     '%Die Mitternacht  ............', '093723') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00078',  28,
     '_zog naeher schon,............', '093722') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00079',  29,
     '%in stiller Ruh   ............', '093721') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00080',  30,
     '_lag Babylon.     ............', '093720') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00081',  31,
     '%Die Mitternacht  ............', '093719') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00082',  32,
     '_zog naeher schon,............', '093718') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00083',  33,
     '%in stiller Ruh   ............', '093717') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00084',  34,
     '_lag Babylon.     ............', '093716') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00085',  35,
     '%Die Mitternacht  ............', '093715') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00086',  36,
     '_zog naeher schon,............', '093714') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00087',  37,
     '%in stiller Ruh   ............', '093713') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00088',  38,
     '_lag Babylon.     ............', '093712') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00089',  39,
     '%Die Mitternacht  ............', '093711') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00090',  40,
     '_zog naeher schon,............', '093710') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00091',  41,
     '%in stiller Ruh   ............', '093709') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00092',  42,
     '_lag Babylon.     ............', '093708') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00093',  43,
     '%Die Mitternacht  ............', '093707') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00094',  44,
     '_zog naeher schon,............', '093706') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00095',  45,
     '%in stiller Ruh   ............', '093705') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00096',  46,
     '_lag Babylon.     ............', '093704') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00097',  47,
     '%Die Mitternacht  ............', '093703') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00098',  48,
     '_zog naeher schon,............', '093702') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00099',  49,
     '%in stiller Ruh   ............', '093701') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00100',  50,
     '_lag Babylon.     ............', '093700') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00101',  51,
     '%Die Mitternacht  ............', '093659') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00102',  52,
     '_zog naeher schon,............', '093658') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00103',  53,
     '%in stiller Ruh   ............', '093657') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00104',  54,
     '_lag Babylon.     ............', '093656') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00105',  55,
     '%Die Mitternacht  ............', '093655') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00106',  56,
     '_zog naeher schon,............', '093654') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00107',  57,
     '%in stiller Ruh   ............', '093653') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00108',  58,
     '_lag Babylon.     ............', '093652') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00109',  59,
     '%Die Mitternacht  ............', '093651') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00110',  60,
     '_zog naeher schon,............', '093650') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00111',  61,
     '%in stiller Ruh   ............', '093649') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00112',  62,
     '_lag Babylon.     ............', '093648') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00113',  63,
     '%Die Mitternacht  ............', '093647') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00114',  64,
     '_zog naeher schon,............', '093646') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00115',  65,
     '%in stiller Ruh   ............', '093645') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00116',  66,
     '_lag Babylon.     ............', '093644') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00117',  67,
     '%Die Mitternacht  ............', '093643') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00118',  68,
     '_zog naeher schon,............', '093642') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00119',  69,
     '%in stiller Ruh   ............', '093641') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00120',  70,
     '_lag Babylon.     ............', '093640') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00121',  71,
     '%Die Mitternacht  ............', '093639') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00122',  72,
     '_zog naeher schon,............', '093638') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00123',  73,
     '%in stiller Ruh   ............', '093637') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00124',  74,
     '_lag Babylon.     ............', '093636') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00125',  75,
     '%Die Mitternacht  ............', '093635') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00126',  76,
     '_zog naeher schon,............', '093634') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00127',  77,
     '%in stiller Ruh   ............', '093633') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00128',  78,
     '_lag Babylon.     ............', '093632') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00129',  79,
     '%Die Mitternacht  ............', '093631') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00130',  80,
     '_zog naeher schon,............', '093630') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00131',  81,
     '%in stiller Ruh   ............', '093629') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00132',  82,
     '_lag Babylon.     ............', '093628') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00133',  83,
     '%Die Mitternacht  ............', '093627') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00134',  84,
     '_zog naeher schon,............', '093626') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00135',  85,
     '%in stiller Ruh   ............', '093625') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00136',  86,
     '_lag Babylon.     ............', '093624') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00137',  87,
     '%Die Mitternacht  ............', '093623') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00138',  88,
     '_zog naeher schon,............', '093622') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00139',  89,
     '%in stiller Ruh   ............', '093621') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00140',  90,
     '_lag Babylon.     ............', '093620') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00141',  91,
     '%Die Mitternacht  ............', '093619') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00142',  92,
     '_zog naeher schon,............', '093618') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00143',  93,
     '%in stiller Ruh   ............', '093617') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00144',  94,
     '_lag Babylon.     ............', '093616') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00145',  95,
     '%Die Mitternacht  ............', '093615') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00146',  96,
     '_zog naeher schon,............', '093614') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00147',  97,
     '%in stiller Ruh   ............', '093613') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00148',  98,
     '_lag Babylon.     ............', '093612') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00149',  99,
     '%Die Mitternacht  ............', '093611') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00051', '00150', 100,
     '_zog naeher schon,............', '093610') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00151', '00151',   1,
     '%in stiller Ruh   ............', '093609') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00151', '00152',   2,
     '_lag Babylon.     ............', '093608') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00153', '00153',   1,
     '%Die Mitternacht  ............', '093607') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00153', '00154',   2,
     '_zog naeher schon,............', '093606') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00155', '00155',   1,
     '%in stiller Ruh   ............', '093605') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00155', '00156',   2,
     '_lag Babylon.     ............', '093604') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00157', '00157',   1,
     '%Die Mitternacht  ............', '093603') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00157', '00158',   2,
     '_zog naeher schon,............', '093602') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00159', '00159',   1,
     '%in stiller Ruh   ............', '093601') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00159', '00160',   2,
     '_lag Babylon.     ............', '093600') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00161', '00161',   1,
     '%Die Mitternacht  ............', '093559') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00161', '00162',   2,
     '_zog naeher schon,............', '093558') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00163', '00163',   1,
     '%in stiller Ruh   ............', '093557') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00163', '00164',   2,
     '_lag Babylon.     ............', '093556') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00165', '00165',   1,
     '%Die Mitternacht  ............', '093555') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00165', '00166',   2,
     '_zog naeher schon,............', '093554') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00167', '00167',   1,
     '%in stiller Ruh   ............', '093553') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00167', '00168',   2,
     '_lag Babylon.     ............', '093552') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00169', '00169',   1,
     '%Die Mitternacht  ............', '093551') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00169', '00170',   2,
     '_zog naeher schon,............', '093550') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00171', '00171',   1,
     '%in stiller Ruh   ............', '093549') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00171', '00172',   2,
     '_lag Babylon.     ............', '093548') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00173', '00173',   1,
     '%Die Mitternacht  ............', '093547') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00173', '00174',   2,
     '_zog naeher schon,............', '093546') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00175', '00175',   1,
     '%in stiller Ruh   ............', '093545') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00175', '00176',   2,
     '_lag Babylon.     ............', '093544') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00177', '00177',   1,
     '%Die Mitternacht  ............', '093543') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00177', '00178',   2,
     '_zog naeher schon,............', '093542') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00179', '00179',   1,
     '%in stiller Ruh   ............', '093541') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00179', '00180',   2,
     '_lag Babylon.     ............', '093540') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00181', '00181',   1,
     '%Die Mitternacht  ............', '093539') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00181', '00182',   2,
     '_zog naeher schon,............', '093538') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00183', '00183',   1,
     '%in stiller Ruh   ............', '093537') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00183', '00184',   2,
     '_lag Babylon.     ............', '093536') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00185', '00185',   1,
     '%Die Mitternacht  ............', '093535') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00185', '00186',   2,
     '_zog naeher schon,............', '093534') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00187', '00187',   1,
     '%in stiller Ruh   ............', '093533') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00187', '00188',   2,
     '_lag Babylon.     ............', '093532') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00189', '00189',   1,
     '%Die Mitternacht  ............', '093531') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00189', '00190',   2,
     '_zog naeher schon,............', '093530') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00191', '00191',   1,
     '%in stiller Ruh   ............', '093529') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00191', '00192',   2,
     '_lag Babylon.     ............', '093528') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00193', '00193',   1,
     '%Die Mitternacht  ............', '093527') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00193', '00194',   2,
     '_zog naeher schon,............', '093526') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00195', '00195',   1,
     '%in stiller Ruh   ............', '093525') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00195', '00196',   2,
     '_lag Babylon.     ............', '093524') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00197', '00197',   1,
     '%Die Mitternacht  ............', '093523') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00197', '00198',   2,
     '_zog naeher schon,............', '093522') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00199', '00199',   1,
     '%in stiller Ruh   ............', '093521') !
 
Enter command:
INSERT KERN.TVEU13 VALUES ('00199', '00200',   2,
     '_lag Babylon.     ............', '093520') !
 
Enter command:
CREATE VIEW VVER2 (N5_12, N5_13, I4_12, CH_12, I4_13, TX_13)
AS SELECT T0001.K1N5, T0002.K2N5, T0001.F1I4, T0001.F3CH,
          T0002.F1I4, T0002.F2TX
FROM TVEU12 T0001, TVEU13 T0002
WHERE T0001.K1N5 = T0002.K1N5 AND
     ( T0002.K1N5 <= '00050' OR T0002.K1N5 > '00150' ) !
 
Enter command:
EXPLAIN SELECT * FROM VVER2 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TVEU12             |                    | TABLE SCAN                               |          1
KERN               | TVEU13             | K1N5               | JOIN VIA KEY RANGE                       |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT T0001.K1N5, T0002.K2N5, T0001.F1I4, T0001.F3CH,
          T0002.F1I4, T0002.F2TX
FROM <TVEU12 T0001, TVEU13 T0002>
WHERE T0001.K1N5 = T0002.K1N5 AND
     ( T0002.K1N5 <= '00050' OR T0002.K1N5 > '00150' ) !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T0001              |                    | TABLE SCAN                               |          1
                   | T0002              | K1N5               | JOIN VIA KEY RANGE                       |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN SELECT T0001.K1N5, T0002.K2N5, T0001.F1I4, T0001.F3CH,
          T0002.F1I4, T0002.F2TX
FROM <TVEU13 T0002, TVEU12 T0001>
WHERE T0001.K1N5 = T0002.K1N5 AND
     ( T0002.K1N5 <= '00050' OR T0002.K1N5 > '00150' ) !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T0002              |                    | TABLE SCAN                               |          1
                   | T0001              | K1N5               | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
SELECT * FROM VVER2 !
 
resultcount :                   100
 
Enter command:
FETCH !
 
N5_12             :  00001
N5_13             :  00001
I4_12             :            1
CH_12             :  SATZNUMMER : 00001............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00002
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            1
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00003
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            2
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00004
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            3
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00005
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            4
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00006
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            5
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00007
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            6
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00008
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            7
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00009
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            8
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00002
N5_13             :  00010
I4_12             :            9
CH_12             :  SATZNUMMER : 00002............
I4_13             :            9
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00011
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00012
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00013
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            3
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00014
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            4
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00015
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            5
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00016
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            6
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00017
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            7
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00018
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            8
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00019
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :            9
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00020
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           10
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00021
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           11
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00022
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           12
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00023
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           13
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00024
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           14
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00025
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           15
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00026
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           16
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00027
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           17
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00028
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           18
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00029
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           19
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00030
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           20
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00031
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           21
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00032
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           22
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00033
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           23
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00034
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           24
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00035
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           25
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00036
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           26
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00037
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           27
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00038
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           28
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00039
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           29
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00040
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           30
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00041
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           31
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00042
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           32
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00043
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           33
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00044
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           34
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00045
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           35
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00046
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           36
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00047
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           37
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00048
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           38
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00049
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           39
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00011
N5_13             :  00050
I4_12             :           40
CH_12             :  SATZNUMMER : 00011............
I4_13             :           40
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00151
N5_13             :  00151
I4_12             :            2
CH_12             :  SATZNUMMER : 00151............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00151
N5_13             :  00152
I4_12             :            2
CH_12             :  SATZNUMMER : 00151............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00153
N5_13             :  00153
I4_12             :            2
CH_12             :  SATZNUMMER : 00153............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00153
N5_13             :  00154
I4_12             :            2
CH_12             :  SATZNUMMER : 00153............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00155
N5_13             :  00155
I4_12             :            2
CH_12             :  SATZNUMMER : 00155............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00155
N5_13             :  00156
I4_12             :            2
CH_12             :  SATZNUMMER : 00155............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00157
N5_13             :  00157
I4_12             :            2
CH_12             :  SATZNUMMER : 00157............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00157
N5_13             :  00158
I4_12             :            2
CH_12             :  SATZNUMMER : 00157............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00159
N5_13             :  00159
I4_12             :            2
CH_12             :  SATZNUMMER : 00159............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00159
N5_13             :  00160
I4_12             :            2
CH_12             :  SATZNUMMER : 00159............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00161
N5_13             :  00161
I4_12             :            2
CH_12             :  SATZNUMMER : 00161............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00161
N5_13             :  00162
I4_12             :            2
CH_12             :  SATZNUMMER : 00161............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00163
N5_13             :  00163
I4_12             :            2
CH_12             :  SATZNUMMER : 00163............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00163
N5_13             :  00164
I4_12             :            2
CH_12             :  SATZNUMMER : 00163............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00165
N5_13             :  00165
I4_12             :            2
CH_12             :  SATZNUMMER : 00165............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00165
N5_13             :  00166
I4_12             :            2
CH_12             :  SATZNUMMER : 00165............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00167
N5_13             :  00167
I4_12             :            2
CH_12             :  SATZNUMMER : 00167............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00167
N5_13             :  00168
I4_12             :            2
CH_12             :  SATZNUMMER : 00167............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00169
N5_13             :  00169
I4_12             :            2
CH_12             :  SATZNUMMER : 00169............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00169
N5_13             :  00170
I4_12             :            2
CH_12             :  SATZNUMMER : 00169............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00171
N5_13             :  00171
I4_12             :            2
CH_12             :  SATZNUMMER : 00171............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00171
N5_13             :  00172
I4_12             :            2
CH_12             :  SATZNUMMER : 00171............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00173
N5_13             :  00173
I4_12             :            2
CH_12             :  SATZNUMMER : 00173............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00173
N5_13             :  00174
I4_12             :            2
CH_12             :  SATZNUMMER : 00173............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00175
N5_13             :  00175
I4_12             :            2
CH_12             :  SATZNUMMER : 00175............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00175
N5_13             :  00176
I4_12             :            2
CH_12             :  SATZNUMMER : 00175............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00177
N5_13             :  00177
I4_12             :            2
CH_12             :  SATZNUMMER : 00177............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00177
N5_13             :  00178
I4_12             :            2
CH_12             :  SATZNUMMER : 00177............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00179
N5_13             :  00179
I4_12             :            2
CH_12             :  SATZNUMMER : 00179............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00179
N5_13             :  00180
I4_12             :            2
CH_12             :  SATZNUMMER : 00179............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00181
N5_13             :  00181
I4_12             :            2
CH_12             :  SATZNUMMER : 00181............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00181
N5_13             :  00182
I4_12             :            2
CH_12             :  SATZNUMMER : 00181............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00183
N5_13             :  00183
I4_12             :            2
CH_12             :  SATZNUMMER : 00183............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00183
N5_13             :  00184
I4_12             :            2
CH_12             :  SATZNUMMER : 00183............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00185
N5_13             :  00185
I4_12             :            2
CH_12             :  SATZNUMMER : 00185............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00185
N5_13             :  00186
I4_12             :            2
CH_12             :  SATZNUMMER : 00185............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00187
N5_13             :  00187
I4_12             :            2
CH_12             :  SATZNUMMER : 00187............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00187
N5_13             :  00188
I4_12             :            2
CH_12             :  SATZNUMMER : 00187............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00189
N5_13             :  00189
I4_12             :            2
CH_12             :  SATZNUMMER : 00189............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00189
N5_13             :  00190
I4_12             :            2
CH_12             :  SATZNUMMER : 00189............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00191
N5_13             :  00191
I4_12             :            2
CH_12             :  SATZNUMMER : 00191............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00191
N5_13             :  00192
I4_12             :            2
CH_12             :  SATZNUMMER : 00191............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00193
N5_13             :  00193
I4_12             :            2
CH_12             :  SATZNUMMER : 00193............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00193
N5_13             :  00194
I4_12             :            2
CH_12             :  SATZNUMMER : 00193............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00195
N5_13             :  00195
I4_12             :            2
CH_12             :  SATZNUMMER : 00195............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00195
N5_13             :  00196
I4_12             :            2
CH_12             :  SATZNUMMER : 00195............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
---------------------------------------------------
N5_12             :  00197
N5_13             :  00197
I4_12             :            2
CH_12             :  SATZNUMMER : 00197............
I4_13             :            1
TX_13             :  %Die Mitternacht  ............
---------------------------------------------------
N5_12             :  00197
N5_13             :  00198
I4_12             :            2
CH_12             :  SATZNUMMER : 00197............
I4_13             :            2
TX_13             :  _zog naeher schon,............
---------------------------------------------------
N5_12             :  00199
N5_13             :  00199
I4_12             :            2
CH_12             :  SATZNUMMER : 00199............
I4_13             :            1
TX_13             :  %in stiller Ruh   ............
---------------------------------------------------
N5_12             :  00199
N5_13             :  00200
I4_12             :            2
CH_12             :  SATZNUMMER : 00199............
I4_13             :            2
TX_13             :  _lag Babylon.     ............
 
resultcount :                   100
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE ANLA (
"MANDT" VARCHAR   (3)  ,"BUKRS" VARCHAR   (4)  ,"ANLN1" VARCHAR   (12)  ,
"ANLN2" VARCHAR   (4)  ,
"ANLKL" VARCHAR   (8)  ,"GEGST" VARCHAR   (8)  ,
"ANLAR" VARCHAR   (5)  ,"ERNAM" VARCHAR   (12)  ,"ERDAT" VARCHAR   (8)  ,
"AENAM" VARCHAR   (12)  ,"AEDAT" VARCHAR   (8)  ,"XLOEV" VARCHAR   (1)  ,
"XSPEB" VARCHAR   (1)  ,"FELEI" VARCHAR   (4)  ,"KTOGR" VARCHAR   (8)  ,
"XOPVW" VARCHAR   (1)  ,"ANLTP" VARCHAR   (1)  ,"ZUJHR" VARCHAR   (4)  ,
"ZUPER" VARCHAR   (3)  ,"ZUGDT" VARCHAR   (8)  ,"AKTIV" VARCHAR   (8)  ,
"ABGDT" VARCHAR   (8)  ,"DEAKT" VARCHAR   (8)  ,"GPLAB" VARCHAR   (8)  ,
"BSTDT" VARCHAR   (8)  ,"ORD41" VARCHAR   (4)  ,"ORD42" VARCHAR   (4)  ,
"ORD43" VARCHAR   (4)  ,"ORD44" VARCHAR   (4)  ,"ANLUE" VARCHAR   (12)  ,
"ZUAWA" VARCHAR   (3)  ,"ANEQK" VARCHAR   (1)  ,"ANEQS" VARCHAR   (1)  ,
"LIFNR" VARCHAR   (10)  ,"LAND1" VARCHAR   (3)  ,"LIEFE" VARCHAR   (30)  ,
"HERST" VARCHAR   (30)  ,"EIGKZ" VARCHAR   (1)  ,"AIBN1" VARCHAR   (12)  ,
"AIBN2" VARCHAR   (4)  ,"AIBDT" VARCHAR   (8)  ,"URJHR" VARCHAR   (4)  ,
"URWRT" FIXED     (13,2) ,"ANTEI" FIXED     (5,2) ,"PROJN" VARCHAR   (16)  ,
"EAUFN" VARCHAR   (12)  ,"MEINS" VARCHAR   (3)  ,"MENGE" FIXED     (13,3) ,
"TYPBZ" VARCHAR   (15)  ,"IZWEK" VARCHAR   (2)  ,"INKEN" VARCHAR   (1)  ,
"IVDAT" VARCHAR   (8)  ,"INVZU" VARCHAR   (15)  ,"VMGLI" VARCHAR   (4)  ,
"XVRMW" VARCHAR   (1)  ,"WRTMA" FIXED     (13,2) ,"EHWRT" FIXED     (13,
2) ,"AUFLA" VARCHAR   (8)  ,"EHWZU" VARCHAR   (8)  ,"EHWNR" VARCHAR   (16)  ,
"GRUVO" VARCHAR   (8)  ,"GREIN" VARCHAR   (8)  ,"GRBND" VARCHAR   (5)  ,
"GRBLT" VARCHAR   (5)  ,"GRLFD" VARCHAR   (4)  ,"FLURK" VARCHAR   (4)  ,
"FLURN" VARCHAR   (5)  ,"FIAMT" VARCHAR   (25)  ,"STADT" VARCHAR   (25)  ,
"GRUND" VARCHAR   (3)  ,"FEINS" VARCHAR   (3)  ,"GRUFL" FIXED     (13,3) ,
"INVNR" VARCHAR   (25)  ,"VBUND" VARCHAR   (6)  ,"SPRAS" VARCHAR   (1)  ,
"TXT50" VARCHAR   (50)  ,"TXA50" VARCHAR   (50)  ,"XLTXID" VARCHAR   (1)  ,
"XVERID" VARCHAR   (1)  ,"XTCHID" VARCHAR   (1)  ,"XKALID" VARCHAR   (1)  ,
"XHERID" VARCHAR   (1)  ,"XLEAID" VARCHAR   (1)  ,"LEAFI" VARCHAR   (10)  ,
"LVDAT" VARCHAR   (8)  ,"LKDAT" VARCHAR   (8)  ,"LEABG" VARCHAR   (8)  ,
"LEJAR" VARCHAR   (3)  ,"LEPER" VARCHAR   (3)  ,"LRYTH" VARCHAR   (3)  ,
"LEGEB" FIXED     (13,2) ,"LBASW" FIXED     (13,2) ,"LKAUF" FIXED     (13,
2) ,"LMZIN" FIXED     (7,4) ,"LZINS" FIXED     (7,4) ,"LTZBW" VARCHAR   (8)  ,
"LKUZA" FIXED     (13,2) ,"LKUZI" FIXED     (13,2) ,"LLAVB" FIXED     (13,
2) ,"LEANZ" FIXED   (5,0) ,"LVTNR" VARCHAR   (15)  ,"LETXT" VARCHAR   (50)  ,
"XAKTIV" VARCHAR   (1)  ,"ANUPD" VARCHAR   (1)  ,"LBLNR" VARCHAR   (10)  ,
"XV0DT" VARCHAR   (8)  ,"XV0NM" VARCHAR   (12)  ,"XV1DT" VARCHAR   (8)  ,
"XV1NM" VARCHAR   (12)  ,"XV2DT" VARCHAR   (8)  ,"XV2NM" VARCHAR   (12)  ,
"XV3DT" VARCHAR   (8)  ,"XV3NM" VARCHAR   (12)  ,"XV4DT" VARCHAR   (8)  ,
"XV4NM" VARCHAR   (12)  ,"XV5DT" VARCHAR   (8)  ,"XV5NM" VARCHAR   (12)  ,
"XV6DT" VARCHAR   (8)  ,"XV6NM" VARCHAR   (12)  ,"AIMMO" VARCHAR   (1)  ,
"OBJNR" VARCHAR   (22)  ,"LEART" VARCHAR   (2)  ,"LVORS" VARCHAR   (1)  ,
"GDLGRP" VARCHAR   (8)  ,"POSNR" VARCHAR   (8)  ,"XERWRT" VARCHAR   (1)  ,
"XAFABCH" VARCHAR   (1)
, PRIMARY KEY ("MANDT","BUKRS","ANLN1","ANLN2")) !
 
Enter command:
CREATE TABLE ANEP (
"MANDT" VARCHAR   (3)  ,"BUKRS" VARCHAR   (4)  ,"ANLN1" VARCHAR   (12)  ,
"ANLN2" VARCHAR   (4)  ,"GJAHR" VARCHAR   (4)  ,"LNRAN" VARCHAR   (5)  ,
"AFABE" VARCHAR   (2)  ,"ZUJHR" VARCHAR   (4)  ,"ZUCOD" VARCHAR   (4)  ,
"PERAF" VARCHAR   (3)  ,"BELNR" VARCHAR   (10)  ,"BUZEI" VARCHAR   (3)  ,
"BZDAT" VARCHAR   (8)  ,"BWASL" VARCHAR   (3)  ,"XAFAR" VARCHAR   (1)  ,
"ANBTR" FIXED     (13,2) ,"NAFAB" FIXED     (13,2) ,"SAFAB" FIXED     (13,2) ,
"ZINSB" FIXED     (13,2) ,"XANTW" VARCHAR   (1)  ,"XAWBT" VARCHAR   (1)  ,
"LNSAN" VARCHAR   (5)  ,"ANUPD" VARCHAR   (1)  ,"AUGLN" VARCHAR   (5)
, PRIMARY KEY ("MANDT","BUKRS","ANLN1","ANLN2","GJAHR",
"LNRAN","AFABE","ZUJHR","ZUCOD"
)) !
 
Enter command:
CREATE TABLE ANLZ (
"MANDT" VARCHAR   (3)  ,"BUKRS" VARCHAR   (4)  ,"ANLN1" VARCHAR   (12)  ,
"ANLN2" VARCHAR   (4)  ,"BDATU" VARCHAR   (8)  ,"ADATU" VARCHAR   (8)  ,
"KOSTL" VARCHAR   (10)  ,"WERKS" VARCHAR   (4)  ,"GSBER" VARCHAR   (4)  ,
"LSTAR" VARCHAR   (6)  ,"MSFAK" FIXED     (3,2) ,"XSTIL" VARCHAR   (1)  ,
"STORT" VARCHAR   (10)  ,"CAUFN" VARCHAR   (12)  ,"PLAN1" VARCHAR   (12)  ,
"PLAN2" VARCHAR   (4)  ,"RAUMN" VARCHAR   (8)  ,"IAUFN" VARCHAR   (12)  ,
"IPROJ" VARCHAR   (16)  ,"TPLKZ" VARCHAR   (3)  ,"TPLNR" VARCHAR   (30)  ,
"ANUPD" VARCHAR   (1)  ,"TXJCD" VARCHAR   (15)  ,"IPSNR" VARCHAR   (8)  ,
"KFZKZ" VARCHAR   (15)
, PRIMARY KEY ("MANDT","BUKRS","ANLN1","ANLN2","BDATU")) !
 
Enter command:
 
SET FORMAT INTERNAL !
 
Enter command:
CREATE VIEW "V_ANLAB" ("MANDT","BUKRS","ANLN1","ANLN2","GJAHR","LNRAN",
"AFABE","ANEPZUJHR","ZUCOD","BDATU","ANLKL","GEGST","ANLAR","ERNAM",
"ERDAT","AENAM","AEDAT","XLOEV","XSPEB","FELEI","KTOGR","XOPVW","ANLTP",
"ZUJHR","ZUPER","ZUGDT","AKTIV","ABGDT",
"DEAKT","GPLAB","BSTDT", "ORD41","ORD42","ORD43","ORD44","ANLUE","ZUAWA",
"ANEQK","ANEQS","LIFNR","LAND1","LIEFE","HERST","EIGKZ","AIBN1",
"AIBN2","AIBDT","URJHR", "URWRT","ANTEI","PROJN","EAUFN","MEINS","MENGE",
"TYPBZ","IZWEK","INKEN","IVDAT","INVZU",
"VMGLI","XVRMW","WRTMA","EHWRT","AUFLA","EHWZU", "EHWNR","GRUVO","GREIN",
"GRBND","GRBLT","GRLFD","FLURK","FLURN","FIAMT","STADT","GRUND",
"FEINS","GRUFL","INVNR","VBUND","SPRAS","TXT50", "TXA50","XLTXID","XVERID",
"XTCHID","XKALID","XHERID","XLEAID",
"LEAFI","LVDAT","LKDAT","LEABG","LEJAR","LEPER","LRYTH","LEGEB","LBASW",
"LKAUF","LMZIN","LZINS","LTZBW","LKUZA","LKUZI","LLAVB","LEANZ",
"LVTNR","LETXT","XAKTIV","ANUPD","LBLNR","XV0DT","XV0NM","XV1DT","XV1NM",
"XV2DT","XV2NM","XV3DT","XV3NM","XV4DT",
"XV4NM","XV5DT","XV5NM","XV6DT","XV6NM","AIMMO","OBJNR","LEART","LVORS",
"GDLGRP","POSNR","XERWRT", "XAFABCH","ADATU","KOSTL","WERKS","GSBER",
"LSTAR","MSFAK","XSTIL","STORT","CAUFN","PLAN1","PLAN2","RAUMN","IAUFN",
"IPROJ","TPLKZ","TPLNR", "TXJCD",
"IPSNR") AS SELECT T0001.MANDT, T0001.BUKRS, T0001.ANLN1, T0001.ANLN2,
T0001.GJAHR, T0001.LNRAN, T0001.AFABE, T0001.ZUJHR, T0001.ZUCOD,
T0003.BDATU, T0002.ANLKL, T0002.GEGST, T0002.ANLAR, T0002.ERNAM,
T0002.ERDAT, T0002.AENAM, T0002.AEDAT, T0002.XLOEV,
T0002.XSPEB, T0002.FELEI, T0002.KTOGR, T0002.XOPVW, T0002.ANLTP,
T0002.ZUJHR, T0002.ZUPER, T0002.ZUGDT, T0002.AKTIV, T0002.ABGDT,
T0002.DEAKT, T0002.GPLAB, T0002.BSTDT, T0002.ORD41, T0002.ORD42,
T0002.ORD43, T0002.ORD44, T0002.ANLUE, T0002.ZUAWA, T0002.ANEQK,
T0002.ANEQS, T0002.LIFNR, T0002.LAND1, T0002.LIEFE, T0002.HERST,
T0002.EIGKZ, T0002.AIBN1, T0002.AIBN2, T0002.AIBDT, T0002.URJHR,
T0002.URWRT, T0002.ANTEI, T0002.PROJN, T0002.EAUFN, T0002.MEINS,
T0002.MENGE, T0002.TYPBZ, T0002.IZWEK, T0002.INKEN,
T0002.IVDAT, T0002.INVZU, T0002.VMGLI, T0002.XVRMW, T0002.WRTMA,
T0002.EHWRT, T0002.AUFLA, T0002.EHWZU, T0002.EHWNR, T0002.GRUVO,
T0002.GREIN, T0002.GRBND, T0002.GRBLT, T0002.GRLFD, T0002.FLURK,
T0002.FLURN, T0002.FIAMT, T0002.STADT, T0002.GRUND, T0002.FEINS,
T0002.GRUFL, T0002.INVNR, T0002.VBUND, T0002.SPRAS, T0002.TXT50,
T0002.TXA50, T0002.XLTXID, T0002.XVERID, T0002.XTCHID, T0002.XKALID,
T0002.XHERID, T0002.XLEAID, T0002.LEAFI, T0002.LVDAT, T0002.LKDAT,
T0002.LEABG, T0002.LEJAR, T0002.LEPER, T0002.
LRYTH, T0002.LEGEB, T0002.LBASW, T0002.LKAUF, T0002.LMZIN, T0002.LZINS,
T0002.LTZBW, T0002.LKUZA, T0002.LKUZI, T0002.LLAVB, T0002.LEANZ,
T0002.LVTNR, T0002.LETXT, T0002.XAKTIV, T0002.ANUPD, T0002.LBLNR,
T0002.XV0DT, T0002.XV0NM, T0002.XV1DT, T0002.XV1NM,
 T0002.XV2DT, T0002.XV2NM, T0002.XV3DT, T0002.XV3NM, T0002.XV4DT,
T0002.XV4NM, T0002.XV5DT, T0002.XV5NM, T0002.XV6DT, T0002.XV6NM,
T0002.AIMMO, T0002.OBJNR, T0002.LEART, T0002.LVORS, T0002.GDLGRP,
T0002.POSNR, T0002.XERWRT, T0002.XAFABCH, T0003.ADATU,
T0003.KOSTL, T0003.WERKS, T0003.GSBER, T0003.LSTAR, T0003.MSFAK,
T0003.XSTIL, T0003.STORT, T0003.CAUFN, T0003.PLAN1, T0003.PLAN2,
T0003.RAUMN, T0003.IAUFN, T0003.IPROJ, T0003.TPLKZ, T0003.TPLNR,
T0003.TXJCD, T0003.IPSNR FROM ANEP T0001, ANLA T0002, ANLZ T0003
WHERE T0002.MANDT = T0001.MANDT AND T0002.BUKRS = T0001.BUKRS
AND T0002.ANLN1 = T0001.ANLN1 AND T0002.ANLN2 = T0001.ANLN2 AND
T0002.MANDT = T0003.MANDT AND T0002.BUKRS = T0003.BUKRS AND
T0002.ANLN1 = T0003.ANLN1 AND T0002.ANLN2 = T0003.ANLN2 !
 
Enter command:
 
INSERT ANLA SET
     MANDT  = '001'          ,
     BUKRS  = 'D001'         ,
     ANLN1  = '000000940268' ,
     ANLN2  = 'xxxx' ,
     ZUJHR = '0000'          ,
     "XLOEV" = ' '  !
 
Enter command:
 
INSERT ANEP SET
     MANDT  = '001'          ,
     BUKRS  = 'D001'         ,
     ANLN1  = '000000940268' ,
     ANLN2  = 'xxxx' ,
     GJAHR = '1995' ,
     LNRAN = '54321' ,
     AFABE = '01'   ,
     ZUJHR = '0000' ,
     "ZUCOD"     = '0000' !
 
Enter command:
 
 
INSERT ANLZ SET
     MANDT  = '001'          ,
     BUKRS  = 'D001'         ,
     ANLN1  = '000000940268' ,
     ANLN2  = 'xxxx' ,
     BDATU = '19951231' ,
     ADATU = '19951231' !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE SAPR3 ISOLATION LEVEL  0 !
 
Enter command:
PARSING!
 
Enter command:
SELECT  "MANDT" ,  "BUKRS" ,  "ANLN1" ,  "ANLN2" ,  "GJAHR" ,  "LNRAN" ,
 "AFABE" ,  "ANEPZUJHR" ,  "ZUCOD" ,  "BDATU" ,  "ANLKL" ,  "GEGST" ,
 "ANLAR" , "ERNAM" ,  "ERDAT" ,  "AENAM" ,  "AEDAT" ,  "XLOEV" ,  "XSPEB" ,
 "FELEI" ,  "KTOGR" ,  "XOPVW" ,  "ANLTP" ,  "ZUJHR" ,  "ZUPER" ,  "ZUGDT" ,
 "AKTIV" ,  "ABGDT" ,  "DEAKT" ,  "GPLAB" ,  "BSTDT" ,  "ORD41" ,  "ORD42" ,
 "ORD43" ,  "ORD44" ,  "ANLUE" ,  "ZUAWA" ,  "ANEQK" ,  "ANEQS" ,  "LIFNR" ,
 "LAND1" ,  "LIEFE" ,  "HERST" ,  "EIGKZ" ,  "AIBN1" ,  "AIBN2" ,  "AIBDT" ,
 "URJHR" ,  "URWRT" ,  "ANTEI" ,  "PROJN" ,  "EAUFN" ,  "MEINS" ,  "MENGE" ,
 "TYPBZ" ,  "IZWEK" ,  "INKEN" ,  "IVDAT" ,  "INVZU" ,  "VMGLI" ,  "XVRMW" ,
 "WRTMA" ,  "EHWRT" ,  "AUFLA" ,  "EHWZU" ,  "EHWNR" ,  "GRUVO" ,  "GREIN" ,
 "GRBND" ,  "GRBLT" ,  "GRLFD" ,  "FLURK" ,  "FLURN" ,  "FIAMT" ,  "STADT" ,
 "GRUND" ,  "FEINS" ,  "GRUFL" ,  "INVNR" ,  "VBUND" ,  "SPRAS" ,  "TXT50" ,
 "TXA50" ,  "XLTXID" ,  "XVERID" ,  "XTCHID" ,  "XKALID" ,  "XHERID" ,
 "XLEAID" ,  "LEAFI" ,  "LVDAT" ,  "LKDAT" ,  "LEABG" ,  "LEJAR" ,  "LEPER" ,
 "LRYTH" ,  "LEGEB" ,  "LBASW" ,  "LKAUF" ,  "LMZIN" ,  "LZINS" ,  "LTZBW" ,
 "LKUZA" ,  "LKUZI" ,  "LLAVB" ,  "LEANZ" ,  "LVTNR" ,  "LETXT" ,  "XAKTIV" ,
 "ANUPD" ,  "LBLNR" ,  "XV0DT" ,  "XV0NM" ,  "XV1DT" ,  "XV1NM" ,  "XV2DT" ,
 "XV2NM" ,  "XV3DT" ,  "XV3NM" ,  "XV4DT" ,  "XV4NM" ,  "XV5DT" ,  "XV5NM" ,
 "XV6DT" ,  "XV6NM" ,  "AIMMO" ,  "OBJNR" ,  "LEART" ,  "LVORS" ,  "GDLGRP" ,
 "POSNR" ,  "XERWRT" ,  "XAFABCH" ,  "ADATU" ,  "KOSTL" ,  "WERKS" ,
 "GSBER" ,  "LSTAR" ,  "MSFAK" ,  "XSTIL" ,  "STORT" ,  "CAUFN" ,  "PLAN1" ,
 "PLAN2" ,  "RAUMN" ,  "IAUFN" ,  "IPROJ" ,  "TPLKZ" ,  "TPLNR" ,  "TXJCD" ,
 "IPSNR"  FROM  "V_ANLAB"
 WHERE
MANDT  = :A001 AND BUKRS = :BD001 AND
ANLN1 = :C000000940268 AND GJAHR = :D1995 AND AFABE = :E01 AND
"ANEPZUJHR"  = :F0000 AND "ZUCOD"  = :G0000 AND ( "XLOEV"  BETWEEN
:H AND :I) AND BDATU >= :J19951231 AND ADATU <= :K19951231 AND
ZUJHR >= :L0000
ORDER BY  "MANDT" ,  "BUKRS" ,  "ANLN1" ,  "ANLN2" !
parsing idnr :       1
 
Enter command:
 
DATA!
 
Enter command:
EXECUTING!
 
Enter command:
SELECT !
Parsing idnr :      1
 
c 3 '001'
c 4 'D001'
c 12 '000000940268'
c 4 '1995'
c 2 '01'
c 4 '0000'
c 4 '0000'
c 1 ' '
c 1 ' '
c 8 '19951231'
c 8 '19951231'
c 4 '0000'
 
resultcount :                     0
 
Enter command:
NODATA!
 
Enter command:
PARS_THEN_EX!
 
Enter command:
FETCH INTO :I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,
:I,:I,:I,:I,:I,:I,:I,:I,:I,:I,:I!
 
MANDT             :  001
BUKRS             :  D001
ANLN1             :  000000940268
ANLN2             :  xxxx
GJAHR             :  1995
LNRAN             :  54321
AFABE             :  01
ANEPZUJHR         :  0000
ZUCOD             :  0000
BDATU             :  19951231
ANLKL             :  ?????
GEGST             :  ?????
ANLAR             :  ?????
ERNAM             :  ?????
ERDAT             :  ?????
AENAM             :  ?????
AEDAT             :  ?????
XLOEV             :
XSPEB             :  ?????
FELEI             :  ?????
KTOGR             :  ?????
XOPVW             :  ?????
ANLTP             :  ?????
ZUJHR             :  0000
ZUPER             :  ?????
ZUGDT             :  ?????
AKTIV             :  ?????
ABGDT             :  ?????
DEAKT             :  ?????
GPLAB             :  ?????
BSTDT             :  ?????
ORD41             :  ?????
ORD42             :  ?????
ORD43             :  ?????
ORD44             :  ?????
ANLUE             :  ?????
ZUAWA             :  ?????
ANEQK             :  ?????
ANEQS             :  ?????
LIFNR             :  ?????
LAND1             :  ?????
LIEFE             :  ?????
HERST             :  ?????
EIGKZ             :  ?????
AIBN1             :  ?????
AIBN2             :  ?????
AIBDT             :  ?????
URJHR             :  ?????
URWRT             :  ???????????????
ANTEI             :  ???????
PROJN             :  ?????
EAUFN             :  ?????
MEINS             :  ?????
MENGE             :  ???????????????
TYPBZ             :  ?????
IZWEK             :  ?????
INKEN             :  ?????
IVDAT             :  ?????
INVZU             :  ?????
VMGLI             :  ?????
XVRMW             :  ?????
WRTMA             :  ???????????????
EHWRT             :  ???????????????
AUFLA             :  ?????
EHWZU             :  ?????
EHWNR             :  ?????
GRUVO             :  ?????
GREIN             :  ?????
GRBND             :  ?????
GRBLT             :  ?????
GRLFD             :  ?????
FLURK             :  ?????
FLURN             :  ?????
FIAMT             :  ?????
STADT             :  ?????
GRUND             :  ?????
FEINS             :  ?????
GRUFL             :  ???????????????
INVNR             :  ?????
VBUND             :  ?????
SPRAS             :  ?????
TXT50             :  ?????
TXA50             :  ?????
XLTXID            :  ?????
XVERID            :  ?????
XTCHID            :  ?????
XKALID            :  ?????
XHERID            :  ?????
XLEAID            :  ?????
LEAFI             :  ?????
LVDAT             :  ?????
LKDAT             :  ?????
LEABG             :  ?????
LEJAR             :  ?????
LEPER             :  ?????
LRYTH             :  ?????
LEGEB             :  ???????????????
LBASW             :  ???????????????
LKAUF             :  ???????????????
LMZIN             :  ?????????
LZINS             :  ?????????
LTZBW             :  ?????
LKUZA             :  ???????????????
LKUZI             :  ???????????????
LLAVB             :  ???????????????
LEANZ             :  ??????
LVTNR             :  ?????
LETXT             :  ?????
XAKTIV            :  ?????
ANUPD             :  ?????
LBLNR             :  ?????
XV0DT             :  ?????
XV0NM             :  ?????
XV1DT             :  ?????
XV1NM             :  ?????
XV2DT             :  ?????
XV2NM             :  ?????
XV3DT             :  ?????
XV3NM             :  ?????
XV4DT             :  ?????
XV4NM             :  ?????
XV5DT             :  ?????
XV5NM             :  ?????
XV6DT             :  ?????
XV6NM             :  ?????
AIMMO             :  ?????
OBJNR             :  ?????
LEART             :  ?????
LVORS             :  ?????
GDLGRP            :  ?????
POSNR             :  ?????
XERWRT            :  ?????
XAFABCH           :  ?????
ADATU             :  19951231
KOSTL             :  ?????
WERKS             :  ?????
GSBER             :  ?????
LSTAR             :  ?????
MSFAK             :  ?????
XSTIL             :  ?????
STORT             :  ?????
CAUFN             :  ?????
PLAN1             :  ?????
PLAN2             :  ?????
RAUMN             :  ?????
IAUFN             :  ?????
IPROJ             :  ?????
TPLKZ             :  ?????
TPLNR             :  ?????
TXJCD             :  ?????
IPSNR             :  ?????
 
resultcount :                     1
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
 
DROP TABLE ANLA !
 
Enter command:
DROP TABLE ANEP !
 
Enter command:
DROP TABLE ANLZ !
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE SAPR3 !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE SAPR3 ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (4), B CHAR (4))!
 
Enter command:
INSERT INTO T VALUES ('aa', 'bb')!
 
Enter command:
CREATE TABLE T1 ( A1 CHAR (3))!
 
Enter command:
INSERT INTO T1 VALUES ('ccc')!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,B,
B,B,B,B,B,B,B,B,B,B
FROM T, T1
WHERE A IN (
:A,:A,:A,:A,:A,:A,:A,:A,:A,:A,
:A,:A,:A,:A,:A,:A,:A,:A,:A,:A
) !
 
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa' c 4 'aa'
 
resultcount :                     0
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J,:K,:L,:M,:N,:O,:P,:Q,:R,:S,:T,
:A,:B,:C,:D,:E,:F,:G,:H,:I,:J !
 
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
B                 :  bb
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (S1 CHAR(20) DEFAULT 'Default s1',
                 S2 CHAR(20) DEFAULT 'Default s2',
                 S3 CHAR(20) DEFAULT 'Default s3',
                 S4 CHAR(20)) !
 
Enter command:
INSERT T1 SET S1 = 'aaaaa' !
 
Enter command:
INSERT T1 SET S2 = 'bbbbb' !
 
Enter command:
INSERT T1 SET S3 = 'ccccc' !
 
Enter command:
INSERT T1 SET S1 = 'aaaaa',
              S2 = 'bbbbb',
              S3 = 'ccccc' !
 
Enter command:
CREATE TABLE T2 (S21 CHAR(20) DEFAULT 'Default s21',
                 S22 CHAR(20) DEFAULT 'Default s22',
                 S23 CHAR(20) DEFAULT 'Default s23',
                 S24 CHAR(20)) !
 
Enter command:
INSERT T2 SET S21 = 'aaaaa' !
 
Enter command:
INSERT T2 SET S22 = 'bbbbb' !
 
Enter command:
INSERT T2 SET S23 = 'ccccc' !
 
Enter command:
INSERT T2 SET S21 = 'aaaaa',
              S22 = 'bbbbb',
              S23 = 'ccccc' !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND DEFAULT = S2 AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T2,T1 WHERE S1 = 'aaaaa' AND DEFAULT = S2 AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S23 = DEFAULT !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
 
resultcount :                     2
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T2,T1 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S3 = DEFAULT !
 
resultcount :                     4
 
Enter command:
FETCH !
 
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  Default s21
S22               :  Default s22
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
-----------------------------------------
S21               :  aaaaa
S22               :  bbbbb
S23               :  ccccc
S24               :  ?????
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
 
resultcount :                     4
 
Enter command:
SELECT * FROM T1,T2 WHERE S1 = 'aaaaa' AND S2 = DEFAULT AND S23 = DEFAULT !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  aaaaa
S22               :  Default s22
S23               :  Default s23
S24               :  ?????
-----------------------------------------
S1                :  aaaaa
S2                :  Default s2
S3                :  Default s3
S4                :  ?????
S21               :  Default s21
S22               :  bbbbb
S23               :  Default s23
S24               :  ?????
 
resultcount :                     2
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4) KEY, B CHAR (11) KEY,
   C CHAR (1978), D CHAR (5) NOT NULL, E CHAR (7),
                  F FIXED (6))!
 
Enter command:
CREATE TABLE T_ORA (A CHAR (80) PRIMARY KEY, D TIMESTAMP, B CHAR (40))!
 
Enter command:
INSERT T_ORA VALUES ('char_ora  1', '19941218101345000000', 'bbb')!
 
Enter command:
INSERT T_ORA VALUES ('char_ora  2', '19980219231134123456', 'bbb')!
 
Enter command:
INSERT T_ORA VALUES ('char_ora  3', '19651023090807654321', 'bbb')!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
PARSING !
 
Enter command:
PARSE
    SELECT C,A,B FROM T1, DUAL WHERE E = :E AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
    SELECT C,A,B FROM T1, DUAL WHERE E = :E AND  B = :B !
Parsing idnr :      1
 
c 7 'MANNN' c 11 'ABCDEFG'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :A, :B, :C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('eins', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('drei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('zwei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil1', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil2', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil3', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil4', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil5', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil6', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil7', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil8', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('fil9', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filA', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filB', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filC', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filD', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filE', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
INSERT INTO T1 VALUES ('filF', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B !
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil1
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil2
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil3
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil4
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil5
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil6
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil7
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil8
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil9
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filA
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filB
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filC
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filD
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filE
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filF
B                 :  das ist b
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
 
resultcount :                    18
 
Enter command:
CLOSE ERG !
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4) KEY, B CHAR (11) KEY,
   C CHAR (3850), D CHAR (5) NOT NULL, E CHAR (7),
                  F FIXED (6), G LONG ASCII)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
PARSING !
 
Enter command:
PARSE
    SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
    SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
Parsing idnr :      1
 
c 7 'MANNN' c 11 'ABCDEFG'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :A, :B, :G, :C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('eins', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('drei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('zwei', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. eins !'
c 4 'eins' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. drei'
c 4 'drei' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. zwei'
c 4 'zwei' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                     3
 
Enter command:
CLOSE ERG !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT INTO T1 VALUES ('fil1', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil2', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil3', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil4', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil5', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil6', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil7', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil8', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('fil9', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filA', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filB', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filC', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filD', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filE', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
INSERT INTO T1 VALUES ('filF', 'das ist b', 'c ist in ascii ',
'd c_5', 'e char7', 4, NULL)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil1'
c 4 'fil7' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil4'
c 4 'filA' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. fil7'
c 4 'filD' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
UPDATE T1 SET G = :G WHERE A = :A AND B = :B !
 
l 500 'Das ist der Inhalt der LONG-Spalte. filB'
c 4 'fil2' c 11 'das ist b'
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
PARSE DECLARE ERG CURSOR FOR
      SELECT C,A,B,G FROM T1, DUAL WHERE E = :E AND  B = :B !
 
c 7 'e char7' c 11 'das ist b'
 
resultcount :                     0
 
Enter command:
NODATA !
 
Enter command:
FETCH ERG INTO :C, :A, :B, :G !
 
C                 :  c ist in ascii
A                 :  drei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. drei
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  eins
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. eins !
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil1
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil2
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. filB
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil3
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil4
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil5
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil6
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil7
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil1
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil8
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  fil9
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filA
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil4
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filB
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filC
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filD
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. fil7
maxlen:        500
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filE
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  filF
B                 :  das ist b
G                 :  ?????
--------------------------------------------------------------------------------
C                 :  c ist in ascii
A                 :  zwei
B                 :  das ist b
G                 :
from      1 to    500:Das ist der Inhalt der LONG-Spalte. zwei
maxlen:        500
 
resultcount :                    18
 
Enter command:
CLOSE ERG !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A CHAR (4),  B FIXED (3))!
 
Enter command:
INSERT T1 VALUES ('aaa', 1)!
 
Enter command:
INSERT T1 VALUES ('bbb', 1)!
 
Enter command:
SELECT A, AVG(B) FROM T1 GROUP BY A !
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | EXPRESSION1
-----+---------------------------------------------
aaa  |  1.0000000000000000000000000000000000000E+00
bbb  |  1.0000000000000000000000000000000000000E+00
 
Enter command:
CREATE TABLE T2 (A2 FIXED (5))!
 
Enter command:
INSERT T2 SET A2 = 45!
 
Enter command:
SELECT AVG(B) FROM T1, T2 !
 
resultcount :                     1
 
Enter command:
MFETCH !
3
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 ORDER BY A2 !
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | A2     | EXPRESSION1
-----+--------+---------------------------------------------
aaa  |     45 |  1.0000000000000000000000000000000000000E+00
bbb  |     45 |  1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 HAVING A < 'z'!
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | A2     | EXPRESSION1
-----+--------+---------------------------------------------
aaa  |     45 |  1.0000000000000000000000000000000000000E+00
bbb  |     45 |  1.0000000000000000000000000000000000000E+00
 
Enter command:
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 HAVING AVG(B) < 1000!
 
resultcount :                     2
 
Enter command:
MFETCH !
3
 
A    | A2     | EXPRESSION1
-----+--------+---------------------------------------------
aaa  |     45 |  1.0000000000000000000000000000000000000E+00
bbb  |     45 |  1.0000000000000000000000000000000000000E+00
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE TABLE T ( A CHAR (4), B FIXED (3) )!
 
Enter command:
CREATE TABLE T1 (A1 CHAR (4) )!
 
Enter command:
INSERT T SET A = 'aaa', B = 4 !
 
Enter command:
INSERT T SET A = 'ccc', B = 4 !
 
Enter command:
INSERT T SET A = 'a11', B = 4 !
 
Enter command:
INSERT T1 SET A1 = 'a11'!
 
Enter command:
INSERT T1 SET A1 = 'yy'!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
GROUP BY A, B, A1!
 
n 38 3
 
resultcount :                     6
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
A    | A1   | EXPRESSION1                                  | EXPRESSION2
-----+------+----------------------------------------------+------------
a11  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
a11  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
 
resultcount :                     6
 
Enter command:
DATA !
 
Enter command:
SELECT B*:A, COUNT (A) FROM T, T1
GROUP BY B!
 
n 38 3
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B !
 
EXPRESSION1                                  | EXPRESSION2
---------------------------------------------+------------
 1.2000000000000000000000000000000000000E+01 |           6
 
resultcount :                     1
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
WHERE A <> A1
GROUP BY A, B, A1 !
 
n 38 3
 
resultcount :                     5
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
A    | A1   | EXPRESSION1                                  | EXPRESSION2
-----+------+----------------------------------------------+------------
a11  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
 
resultcount :                     5
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A !
 
***ERROR  -8017 Column must be group column:A1                             0011
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT A, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A , B!
 
n 38 3
 
resultcount :                     3
 
Enter command:
NODATA !
 
Enter command:
MFETCH INTO :A, :B, :C !
5
 
A    | EXPRESSION1                                  | EXPRESSION2
-----+----------------------------------------------+------------
a11  |  1.2000000000000000000000000000000000000E+01 |           1
aaa  |  1.2000000000000000000000000000000000000E+01 |           2
ccc  |  1.2000000000000000000000000000000000000E+01 |           2
 
Enter command:
DATA !
 
Enter command:
SELECT A, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A, B
HAVING COUNT (*) > 1!
 
n 38 3
 
resultcount :                     2
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C!
 
A    | EXPRESSION1                                  | EXPRESSION2
-----+----------------------------------------------+------------
aaa  |  1.2000000000000000000000000000000000000E+01 |           2
ccc  |  1.2000000000000000000000000000000000000E+01 |           2
 
resultcount :                     2
 
Enter command:
DATA !
 
Enter command:
SELECT A, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A, B
HAVING COUNT (*) > 1 ORDER BY 3!
 
n 38 3
 
resultcount :                     2
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C !
 
A    | EXPRESSION1                                  | EXPRESSION2
-----+----------------------------------------------+------------
aaa  |  1.2000000000000000000000000000000000000E+01 |           2
ccc  |  1.2000000000000000000000000000000000000E+01 |           2
 
resultcount :                     2
 
Enter command:
DATA !
 
Enter command:
SELECT A, A1, B*:A, COUNT (A) FROM T, T1
                  WHERE A <> A1 AND A < 'fff' AND B DIV 5 < 10
GROUP BY A, B, A1
HAVING COUNT (*) > 0 ORDER BY A1!
 
n 38 3
 
resultcount :                     5
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
A    | A1   | EXPRESSION1                                  | EXPRESSION2
-----+------+----------------------------------------------+------------
aaa  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | a11  |  1.2000000000000000000000000000000000000E+01 |           1
a11  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
aaa  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
ccc  | yy   |  1.2000000000000000000000000000000000000E+01 |           1
 
resultcount :                     5
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE TABLE T ( A CHAR (4), B FIXED (3) )!
 
Enter command:
CREATE TABLE T1 (A1 CHAR (4), B1 FLOAT (4))!
 
Enter command:
INSERT T SET A = 'aaa', B = 4 !
 
Enter command:
INSERT T SET A = 'ccc', B = 4 !
 
Enter command:
INSERT T SET A = 'a11', B = 4 !
 
Enter command:
INSERT T1 SET A1 = 'a11', B1 = 7!
 
Enter command:
INSERT T1 SET A1 = 'yy', B1 = 12!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT A & A1, B*B1+:A FROM T, T1 !
 
n 38 3
 
resultcount :                     6
 
Enter command:
NODATA !
 
Enter command:
MFETCH INTO :A,:B !
8
 
EXPRESSION1 | EXPRESSION2
------------+---------------------------------------------
aaaa11      |  3.1000000000000000000000000000000000000E+01
aaayy       |  5.1000000000000000000000000000000000000E+01
ccca11      |  3.1000000000000000000000000000000000000E+01
cccyy       |  5.1000000000000000000000000000000000000E+01
a11a11      |  3.1000000000000000000000000000000000000E+01
a11yy       |  5.1000000000000000000000000000000000000E+01
 
Enter command:
SELECT LENGTH(A & A1), INDEX (A & A1, 'cy'), COUNT(*) FROM T, T1!
 
***ERROR  -8017 Column must be group column:A                              0015
 
Enter command:
FETCH INTO :A, :B, :C !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT LENGTH(A & A1), INDEX (A & A1, 'cy'), COUNT(*) FROM T, T1
GROUP BY A, A1!
 
resultcount :                     6
 
Enter command:
FETCH INTO :A, :B , :C !
 
EXPRESSION1 | EXPRESSION2 | EXPRESSION3
------------+-------------+------------
    6       |    0        |           1
    5       |    0        |           1
    6       |    0        |           1
    5       |    0        |           1
    6       |    0        |           1
    5       |    3        |           1
 
resultcount :                     6
 
Enter command:
SELECT INDEX ('aaa' & A,A1), 'aaa' & A, A1,
       INDEX (A & A1, 'cy'), COUNT(*) FROM T, T1
GROUP BY A, A1!
 
resultcount :                     6
 
Enter command:
FETCH INTO :A,:B,:C,:D,:E,:F !
 
EXPRESSION1 | EXPRESSION2 | A1   | EXPRESSION3 | EXPRESSION4
------------+-------------+------+-------------+------------
   4        | aaaa11      | a11  |    0        |           1
   0        | aaaa11      | yy   |    0        |           1
   0        | aaaaaa      | a11  |    0        |           1
   0        | aaaaaa      | yy   |    0        |           1
   0        | aaaccc      | a11  |    0        |           1
   0        | aaaccc      | yy   |    3        |           1
 
resultcount :                     6
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT B*B1+B1, COUNT (A & A1) FROM T, T1 GROUP BY B,A,A1,B1
HAVING B < 10 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1                                  | EXPRESSION2
---------------------------------------------+------------
 3.5000000000000000000000000000000000000E+01 |           1
 6.0000000000000000000000000000000000000E+01 |           1
 3.5000000000000000000000000000000000000E+01 |           1
 6.0000000000000000000000000000000000000E+01 |           1
 3.5000000000000000000000000000000000000E+01 |           1
 6.0000000000000000000000000000000000000E+01 |           1
 
resultcount :                     6
 
Enter command:
SELECT A, A1, MIN(B1) FROM T, T1 WHERE A & A1 > 'ggg' GROUP BY A, A1!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT A, A1, MIN(B1) FROM T, T1 GROUP BY A, A1 HAVING A & A1 > 'ggg'!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE CR_T ( CR CHAR (1) ASCII)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT CR_T VALUES (:A)!
 
b 1 0a
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
CREATE TABLE T ( CFK CHAR (8), CVK CHAR (8),
                 CFC CHAR (8), CVC CHAR (40),
                 ID FIXED(3), PRIMARY KEY (CFK, CVK, ID))!
 
Enter command:
INSERT T VALUES ('', '', '', '', 0)!
 
Enter command:
INSERT T VALUES (' ', ' ', ' ', ' ', 1)!
 
Enter command:
INSERT T VALUES ('  ', '  ', '  ', '  ', 2)!
 
Enter command:
INSERT T VALUES ('a', 'a', 'a', 'a', 10)!
 
Enter command:
INSERT T VALUES ('b ', 'b ', 'b ', 'b ', 21)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | 'a'
  21 | 'b'
 
resultcount :                     5
 
Enter command:
SELECT ID, '''' || LEAST     ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | ''
   1 | ''
   2 | ''
  10 | '
'
  21 | '
'
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST SPACE OPTION !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SPACE OPTION ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | ' '
   1 | ' '
   2 | ' '
  10 | 'a'
  21 | 'b'
 
resultcount :                     5
 
Enter command:
SELECT ID, '''' || LEAST     ( CFK, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     5
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-----------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | '
'
  21 | '
'
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
INSERT T VALUES ('null','null', NULL, NULL, 100)!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | 'a'
  21 | 'b'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT ID, '''' || LEAST     ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | ''
   1 | ''
   2 | ''
  10 | '
'
  21 | '
'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SPACE OPTION !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SPACE OPTION ISOLATION LEVEL 1 !
 
Enter command:
SELECT ID, '''' || GREATEST  ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | ' '
   1 | ' '
   2 | ' '
  10 | 'a'
  21 | 'b'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT ID, '''' || LEAST     ( CVC, CR ) || '''' E FROM T, CR_T !
 
resultcount :                     6
 
Enter command:
  FETCH INTO :ID, :A !
 
ID   | E
-----+-------------------------------------------
   0 | '
'
   1 | '
'
   2 | '
'
  10 | '
'
  21 | '
'
 100 | ??????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE CR_T !
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE J ( J1 CHAR (1))!
 
Enter command:
INSERT J VALUES (' ')!
 
Enter command:
CREATE TABLE T ( K1 INT,
                 I1 CHAR (5) UNICODE)!
 
Enter command:
 
CREATE INDEX "t.i1" ON T( I1 ) !
 
Enter command:
COMMIT!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | t.i1               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | I1                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | J                  |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | J1                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DELETE T WHERE K1 IN (0,3)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DROP INDEX "t.i1" !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (I1)!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | I1                 | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DROP TABLE T !
 
Enter command:
DROP TABLE J !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST SPACE OPTION !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SPACE OPTION ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE J ( J1 CHAR (1))!
 
Enter command:
INSERT J VALUES (' ')!
 
Enter command:
CREATE TABLE T ( K1 INT,
                 I1 CHAR (5) UNICODE)!
 
Enter command:
 
CREATE INDEX "t.i1" ON T( I1 ) !
 
Enter command:
COMMIT!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | t.i1               | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | I1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT /*+ORDERED,JOIN(;INDEXACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | I1                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(;NOACCESSPATH)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
EXPLAIN
  SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | J                  |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | J1                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED*/ HEX(I1) FROM T, J WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DELETE T WHERE K1 IN (0,3)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DROP INDEX "t.i1" !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
ALTER TABLE T ADD PRIMARY KEY (I1)!
 
Enter command:
 
EXPLAIN
  SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | J                  |                    | TABLE SCAN                               |          1
KERN               | T                  | I1                 | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(;KEYACCESS)*/ HEX(I1) FROM J, T WHERE J1=I1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
DROP TABLE T !
 
Enter command:
DROP TABLE J !
 
Enter command:
DIAGNOSE SHARE PARSE DROP !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE S ( SNO CHAR(5) KEY,
                 SNAME CHAR(20),
                 STATUS DECIMAL(3),
                 CITY CHAR(15) ) !
 
Enter command:
CREATE TABLE P ( PNO CHAR(6) KEY,
                 PNAME CHAR(20),
                 COLOR CHAR(6),
                 WEIGHT DECIMAL(3),
                 CITY CHAR(15) ) !
 
Enter command:
CREATE TABLE J ( JNO CHAR(4) KEY,
                 JNAME CHAR(10),
                 CITY CHAR(15) ) !
 
Enter command:
CREATE TABLE SPJ ( SNO CHAR(5) KEY,
                   PNO CHAR(6) KEY,
                   JNO CHAR(4) KEY,
                   QTY DECIMAL(5)) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT S VALUES ( 'S1' , 'Smith' , 20 , 'London' ) !
 
Enter command:
INSERT S VALUES ( 'S2' , 'Jones' , 10 , 'Paris'  ) !
 
Enter command:
INSERT S VALUES ( 'S3' , 'Blake' , 30 , 'Paris'  ) !
 
Enter command:
INSERT S VALUES ( 'S4' , 'Clark' , 20 , 'London' ) !
 
Enter command:
INSERT S VALUES ( 'S5' , 'Adams' , 30 , 'Athens' ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT P VALUES ( 'P1' , 'Nut'   , 'Red'   , 12 , 'London' ) !
 
Enter command:
INSERT P VALUES ( 'P2' , 'Bolt'  , 'Green' , 17 , 'Paris'  ) !
 
Enter command:
INSERT P VALUES ( 'P3' , 'Screw' , 'Blue'  , 17 , 'Rome'   ) !
 
Enter command:
INSERT P VALUES ( 'P4' , 'Screw' , 'Red'   , 14 , 'London' ) !
 
Enter command:
INSERT P VALUES ( 'P5' , 'Cam'   , 'Blue'  , 12 , 'Paris'  ) !
 
Enter command:
INSERT P VALUES ( 'P6' , 'Cog'   , 'Red'   , 19 , 'London' ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT J VALUES ( 'J1' , 'Sorter'   , 'Paris'  ) !
 
Enter command:
INSERT J VALUES ( 'J2' , 'Punch'    , 'Rome'   ) !
 
Enter command:
INSERT J VALUES ( 'J3' , 'Reader'   , 'Athens' ) !
 
Enter command:
INSERT J VALUES ( 'J4' , 'Console'  , 'Athens' ) !
 
Enter command:
INSERT J VALUES ( 'J5' , 'Collator' , 'London' ) !
 
Enter command:
INSERT J VALUES ( 'J6' , 'Terminal' , 'Oslo'   ) !
 
Enter command:
INSERT J VALUES ( 'J7' , 'Tape'     , 'London' ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT SPJ VALUES ( 'S1' , 'P1' , 'J1' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S1' , 'P1' , 'J4' , 700 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J1' , 400 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J2' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J3' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J4' , 500 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J5' , 600 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J6' , 400 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P3' , 'J7' , 800 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S2' , 'P5' , 'J2' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S3' , 'P3' , 'J1' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S3' , 'P4' , 'J2' , 500 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S4' , 'P6' , 'J3' , 300 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S4' , 'P6' , 'J7' , 300 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P2' , 'J2' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P2' , 'J4' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P5' , 'J5' , 500 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P5' , 'J7' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P6' , 'J2' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P1' , 'J4' , 100 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P3' , 'J4' , 200 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P4' , 'J4' , 800 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P5' , 'J4' , 400 ) !
 
Enter command:
INSERT SPJ VALUES ( 'S5' , 'P6' , 'J4' , 500 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW LONDON_PROJECTS ( JNO, JNAME, CITY )
   AS SELECT J.JNO, J.JNAME, J.CITY
      FROM J
      WHERE J.CITY = 'London' !
 
Enter command:
CREATE VIEW SP ( SNO, PNO, QTY )
   AS SELECT SPJ.SNO, SPJ.PNO, SUM ( SPJ.QTY )
      FROM SPJ
      GROUP BY SPJ.SNO, SPJ.PNO !
 
Enter command:
CREATE VIEW JC ( JNO, CITY )
   AS SELECT DISTINCT J.JNO, J.CITY
      FROM J, SPJ
      WHERE J.JNO = SPJ.JNO
      AND ( SPJ.SNO = 'S1' OR
            SPJ.PNO = 'P1' ) !
 
Enter command:
SELECT * FROM JC !
 
resultcount :                     2
 
Enter command:
FETCH !
 
JNO  | CITY
-----+----------------
J1   | Paris
J4   | Athens
 
resultcount :                     2
 
Enter command:
CREATE VIEW NON_COLOCATED ( SNO, PNO )
   AS SELECT S.SNO, P.PNO
      FROM S, P
      WHERE S.CITY <> P.CITY !
 
Enter command:
SELECT * FROM NON_COLOCATED !
 
resultcount :                    20
 
Enter command:
FETCH !
 
SNO   | PNO
------+-------
S1    | P2
S1    | P3
S1    | P5
S2    | P1
S2    | P3
S2    | P4
S2    | P6
S3    | P1
S3    | P3
S3    | P4
S3    | P6
S4    | P2
S4    | P3
S4    | P5
S5    | P1
S5    | P2
S5    | P3
 
SNO   | PNO
------+-------
S5    | P4
S5    | P5
S5    | P6
 
resultcount :                    20
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT S.SNO, P.PNO, J.JNO
   FROM S, P, J
   WHERE S.CITY = P.CITY
   AND   P.CITY = J.CITY
   ORDER BY S.SNO, J.JNO, P.PNO !
 
resultcount :                    16
 
Enter command:
FETCH !
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P1     | J5
S1    | P4     | J5
S1    | P6     | J5
S1    | P1     | J7
S1    | P4     | J7
S1    | P6     | J7
S2    | P2     | J1
S2    | P5     | J1
S3    | P2     | J1
S3    | P5     | J1
S4    | P1     | J5
S4    | P4     | J5
S4    | P6     | J5
S4    | P1     | J7
S4    | P4     | J7
S4    | P6     | J7
 
resultcount :                    16
 
Enter command:
SELECT S.SNO, P.PNO, J.JNO
   FROM S, P, J
   WHERE NOT ( S.CITY = P.CITY AND P.CITY = J.CITY ) !
 
resultcount :                   194
 
Enter command:
FETCH !
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P1     | J1
S1    | P2     | J1
S1    | P3     | J1
S1    | P4     | J1
S1    | P5     | J1
S1    | P6     | J1
S1    | P1     | J2
S1    | P2     | J2
S1    | P3     | J2
S1    | P4     | J2
S1    | P5     | J2
S1    | P6     | J2
S1    | P1     | J3
S1    | P2     | J3
S1    | P3     | J3
S1    | P4     | J3
S1    | P5     | J3
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P6     | J3
S1    | P1     | J4
S1    | P2     | J4
S1    | P3     | J4
S1    | P4     | J4
S1    | P5     | J4
S1    | P6     | J4
S1    | P2     | J5
S1    | P3     | J5
S1    | P5     | J5
S1    | P1     | J6
S1    | P2     | J6
S1    | P3     | J6
S1    | P4     | J6
S1    | P5     | J6
S1    | P6     | J6
S1    | P2     | J7
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P3     | J7
S1    | P5     | J7
S2    | P1     | J1
S2    | P3     | J1
S2    | P4     | J1
S2    | P6     | J1
S2    | P1     | J2
S2    | P2     | J2
S2    | P3     | J2
S2    | P4     | J2
S2    | P5     | J2
S2    | P6     | J2
S2    | P1     | J3
S2    | P2     | J3
S2    | P3     | J3
S2    | P4     | J3
S2    | P5     | J3
 
SNO   | PNO    | JNO
------+--------+-----
S2    | P6     | J3
S2    | P1     | J4
S2    | P2     | J4
S2    | P3     | J4
S2    | P4     | J4
S2    | P5     | J4
S2    | P6     | J4
S2    | P1     | J5
S2    | P2     | J5
S2    | P3     | J5
S2    | P4     | J5
S2    | P5     | J5
S2    | P6     | J5
S2    | P1     | J6
S2    | P2     | J6
S2    | P3     | J6
S2    | P4     | J6
 
SNO   | PNO    | JNO
------+--------+-----
S2    | P5     | J6
S2    | P6     | J6
S2    | P1     | J7
S2    | P2     | J7
S2    | P3     | J7
S2    | P4     | J7
S2    | P5     | J7
S2    | P6     | J7
S3    | P1     | J1
S3    | P3     | J1
S3    | P4     | J1
S3    | P6     | J1
S3    | P1     | J2
S3    | P2     | J2
S3    | P3     | J2
S3    | P4     | J2
S3    | P5     | J2
 
SNO   | PNO    | JNO
------+--------+-----
S3    | P6     | J2
S3    | P1     | J3
S3    | P2     | J3
S3    | P3     | J3
S3    | P4     | J3
S3    | P5     | J3
S3    | P6     | J3
S3    | P1     | J4
S3    | P2     | J4
S3    | P3     | J4
S3    | P4     | J4
S3    | P5     | J4
S3    | P6     | J4
S3    | P1     | J5
S3    | P2     | J5
S3    | P3     | J5
S3    | P4     | J5
 
SNO   | PNO    | JNO
------+--------+-----
S3    | P5     | J5
S3    | P6     | J5
S3    | P1     | J6
S3    | P2     | J6
S3    | P3     | J6
S3    | P4     | J6
S3    | P5     | J6
S3    | P6     | J6
S3    | P1     | J7
S3    | P2     | J7
S3    | P3     | J7
S3    | P4     | J7
S3    | P5     | J7
S3    | P6     | J7
S4    | P1     | J1
S4    | P2     | J1
S4    | P3     | J1
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P4     | J1
S4    | P5     | J1
S4    | P6     | J1
S4    | P1     | J2
S4    | P2     | J2
S4    | P3     | J2
S4    | P4     | J2
S4    | P5     | J2
S4    | P6     | J2
S4    | P1     | J3
S4    | P2     | J3
S4    | P3     | J3
S4    | P4     | J3
S4    | P5     | J3
S4    | P6     | J3
S4    | P1     | J4
S4    | P2     | J4
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P3     | J4
S4    | P4     | J4
S4    | P5     | J4
S4    | P6     | J4
S4    | P2     | J5
S4    | P3     | J5
S4    | P5     | J5
S4    | P1     | J6
S4    | P2     | J6
S4    | P3     | J6
S4    | P4     | J6
S4    | P5     | J6
S4    | P6     | J6
S4    | P2     | J7
S4    | P3     | J7
S4    | P5     | J7
S5    | P1     | J1
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P2     | J1
S5    | P3     | J1
S5    | P4     | J1
S5    | P5     | J1
S5    | P6     | J1
S5    | P1     | J2
S5    | P2     | J2
S5    | P3     | J2
S5    | P4     | J2
S5    | P5     | J2
S5    | P6     | J2
S5    | P1     | J3
S5    | P2     | J3
S5    | P3     | J3
S5    | P4     | J3
S5    | P5     | J3
S5    | P6     | J3
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P1     | J4
S5    | P2     | J4
S5    | P3     | J4
S5    | P4     | J4
S5    | P5     | J4
S5    | P6     | J4
S5    | P1     | J5
S5    | P2     | J5
S5    | P3     | J5
S5    | P4     | J5
S5    | P5     | J5
S5    | P6     | J5
S5    | P1     | J6
S5    | P2     | J6
S5    | P3     | J6
S5    | P4     | J6
S5    | P5     | J6
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P6     | J6
S5    | P1     | J7
S5    | P2     | J7
S5    | P3     | J7
S5    | P4     | J7
S5    | P5     | J7
S5    | P6     | J7
 
resultcount :                   194
 
Enter command:
SELECT S.SNO, P.PNO, J.JNO
   FROM S, P, J
   WHERE S.CITY <> P.CITY
    AND  P.CITY <> J.CITY
    AND  J.CITY <> S.CITY !
 
resultcount :                    79
 
Enter command:
FETCH !
 
SNO   | PNO    | JNO
------+--------+-----
S1    | P3     | J1
S4    | P3     | J1
S5    | P1     | J1
S5    | P3     | J1
S5    | P4     | J1
S5    | P6     | J1
S1    | P2     | J2
S1    | P5     | J2
S2    | P1     | J2
S2    | P4     | J2
S2    | P6     | J2
S3    | P1     | J2
S3    | P4     | J2
S3    | P6     | J2
S4    | P2     | J2
S4    | P5     | J2
S5    | P1     | J2
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P2     | J2
S5    | P4     | J2
S5    | P5     | J2
S5    | P6     | J2
S1    | P2     | J3
S1    | P3     | J3
S1    | P5     | J3
S2    | P1     | J3
S2    | P3     | J3
S2    | P4     | J3
S2    | P6     | J3
S3    | P1     | J3
S3    | P3     | J3
S3    | P4     | J3
S3    | P6     | J3
S4    | P2     | J3
S4    | P3     | J3
 
SNO   | PNO    | JNO
------+--------+-----
S4    | P5     | J3
S1    | P2     | J4
S1    | P3     | J4
S1    | P5     | J4
S2    | P1     | J4
S2    | P3     | J4
S2    | P4     | J4
S2    | P6     | J4
S3    | P1     | J4
S3    | P3     | J4
S3    | P4     | J4
S3    | P6     | J4
S4    | P2     | J4
S4    | P3     | J4
S4    | P5     | J4
S2    | P3     | J5
S3    | P3     | J5
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P2     | J5
S5    | P3     | J5
S5    | P5     | J5
S1    | P2     | J6
S1    | P3     | J6
S1    | P5     | J6
S2    | P1     | J6
S2    | P3     | J6
S2    | P4     | J6
S2    | P6     | J6
S3    | P1     | J6
S3    | P3     | J6
S3    | P4     | J6
S3    | P6     | J6
S4    | P2     | J6
S4    | P3     | J6
S4    | P5     | J6
 
SNO   | PNO    | JNO
------+--------+-----
S5    | P1     | J6
S5    | P2     | J6
S5    | P3     | J6
S5    | P4     | J6
S5    | P5     | J6
S5    | P6     | J6
S2    | P3     | J7
S3    | P3     | J7
S5    | P2     | J7
S5    | P3     | J7
S5    | P5     | J7
 
resultcount :                    79
 
Enter command:
SELECT DISTINCT SPJ.PNO
   FROM SPJ, S
   WHERE SPJ.SNO = S.SNO
   AND  S.CITY = 'London' !
 
resultcount :                     2
 
Enter command:
FETCH !
 
PNO
------
P1
P6
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SPJ.PNO
   FROM SPJ, S, J
   WHERE SPJ.SNO = S.SNO
   AND   SPJ.JNO = J.JNO
   AND   S.CITY = 'London'
   AND   J.CITY = 'London' !
 
resultcount :                     1
 
Enter command:
FETCH !
 
PNO
------
P6
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT S.CITY, J.CITY
   FROM S, SPJ, J
   WHERE S.SNO = SPJ.SNO
   AND   SPJ.JNO = J.JNO
   ORDER BY S.CITY, J.CITY !
 
resultcount :                    11
 
Enter command:
FETCH !
 
CITY            | CITY
----------------+----------------
Athens          | Athens
Athens          | London
Athens          | Rome
London          | Athens
London          | London
London          | Paris
Paris           | Athens
Paris           | London
Paris           | Oslo
Paris           | Paris
Paris           | Rome
 
resultcount :                    11
 
Enter command:
SELECT DISTINCT SPJ.PNO
   FROM SPJ, S, J
   WHERE SPJ.SNO = S.SNO
   AND   SPJ.JNO = J.JNO
   AND   S.CITY = J.CITY !
 
resultcount :                     6
 
Enter command:
FETCH !
 
PNO
------
P1
P2
P3
P4
P5
P6
 
resultcount :                     6
 
Enter command:
SELECT DISTINCT J.JNO
   FROM SPJ, S, J
   WHERE SPJ.SNO = S.SNO
   AND   SPJ.JNO = J.JNO
   AND   S.CITY <> J.CITY
   ORDER BY J.JNO !
 
resultcount :                     7
 
Enter command:
FETCH !
 
JNO
----
J1
J2
J3
J4
J5
J6
J7
 
resultcount :                     7
 
Enter command:
SELECT SPJX.PNO, SPJY.PNO
   FROM SPJ SPJX, SPJ SPJY
   WHERE SPJX.SNO = SPJY.SNO
   AND   SPJX.PNO > SPJY.PNO !
 
resultcount :                    48
 
Enter command:
FETCH !
 
PNO    | PNO
-------+-------
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P5     | P3
P4     | P3
P2     | P1
P2     | P1
P3     | P1
P3     | P2
P3     | P2
P4     | P1
P4     | P2
P4     | P2
P4     | P3
 
PNO    | PNO
-------+-------
P5     | P1
P5     | P2
P5     | P2
P5     | P3
P5     | P4
P5     | P1
P5     | P2
P5     | P2
P5     | P3
P5     | P4
P5     | P1
P5     | P2
P5     | P2
P5     | P3
P5     | P4
P6     | P1
P6     | P2
 
PNO    | PNO
-------+-------
P6     | P2
P6     | P3
P6     | P4
P6     | P5
P6     | P5
P6     | P5
P6     | P1
P6     | P2
P6     | P2
P6     | P3
P6     | P4
P6     | P5
P6     | P5
P6     | P5
 
resultcount :                    48
 
Enter command:
ROLLBACK WORK !
 
Enter command:
CREATE TABLE REDS ( SNO CHAR(5) ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO REDS ( SNO )
       SELECT DISTINCT SPJ.SNO
       FROM SPJ, P
       WHERE SPJ.PNO = P.PNO
       AND   P.COLOR = 'Red' !
 
Enter command:
SELECT * FROM REDS !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SNO
-----
S1
S3
S4
S5
 
resultcount :                     4
 
Enter command:
ROLLBACK WORK !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT MAX(QTY) - MIN(QTY)
   FROM P PX, SPJ SPJX
   WHERE PX.PNO = SPJX.PNO
     AND SPJX.SNO =
   ANY ( SELECT S.SNO
         FROM P, SPJ, S, J
         WHERE P.PNO = SPJX.PNO
           AND S.CITY = J.CITY
           AND PX.CITY = S.CITY
         GROUP BY S.SNO )
   GROUP BY QTY !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      0
      0
      0
      0
 
resultcount :                     4
 
Enter command:
SELECT SPJX.SNO, SPJX.PNO, SPJX.JNO, S.SNAME
  FROM SPJ SPJX, S, J JX
  WHERE S.STATUS <
    ALL ( SELECT MAX(QTY) - MIN(QTY)
          FROM SPJ SPJY, J
          WHERE JX.JNO = SPJY.JNO
            AND SPJY.QTY <
                  ALL ( SELECT MAX ( SPJ.QTY)
                        FROM SPJ
                        WHERE SPJ.JNO < SPJX.JNO
                        GROUP BY SNO )
          GROUP BY QTY ) !
 
resultcount :                   360
 
Enter command:
SELECT SPJX.SNO, SPJX.PNO, SPJX.JNO, S.SNAME
  FROM SPJ SPJX, S, J JX
  WHERE S.STATUS <>
    ALL ( SELECT MAX(QTY) - MIN(QTY)
          FROM SPJ SPJY, J
          WHERE JX.JNO = SPJY.JNO
            AND SPJY.QTY <
                  ALL ( SELECT MAX ( SPJ.QTY)
                        FROM SPJ
                        WHERE SPJ.JNO < SPJX.JNO
                        GROUP BY SNO )
          GROUP BY QTY ) !
 
resultcount :                   840
 
Enter command:
SELECT DISTINCT MAX(QTY) - MIN(QTY)
   FROM P PX, SPJ SPJX
   WHERE PX.PNO = SPJX.PNO
     AND SPJX.SNO =
   ANY ( SELECT DISTINCT S.SNO
         FROM P, SPJ, S, J
         WHERE P.PNO = SPJX.PNO
           AND S.CITY = J.CITY
           AND PX.CITY = S.CITY
         GROUP BY S.SNO )
   GROUP BY QTY !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      0
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SPJX.SNO, SPJX.PNO, SPJX.JNO, S.SNAME
  FROM SPJ SPJX, S, J JX
  WHERE S.STATUS <
    ALL ( SELECT DISTINCT MAX(QTY) - MIN(QTY)
          FROM SPJ SPJY, J
          WHERE JX.JNO = SPJY.JNO
            AND SPJY.QTY <
                  ALL ( SELECT DISTINCT MAX ( SPJ.QTY)
                        FROM SPJ
                        WHERE SPJ.JNO < SPJX.JNO
                        GROUP BY SNO )
          GROUP BY QTY ) !
 
resultcount :                   105
 
Enter command:
SELECT SPJX.SNO, PX.CITY
  FROM SPJ SPJX, P PX
  WHERE SPJX.SNO IN
        ( SELECT S.SNO FROM S
          WHERE PX.PNO = SPJX.PNO )
          AND SPJX.SNO = 'S3'
           OR SPJX.SNO = 'S4' !
 
resultcount :                    14
 
Enter command:
FETCH !
 
SNO   | CITY
------+----------------
S3    | Rome
S3    | London
S4    | London
S4    | London
S4    | Paris
S4    | Paris
S4    | Rome
S4    | Rome
S4    | London
S4    | London
S4    | Paris
S4    | Paris
S4    | London
S4    | London
 
resultcount :                    14
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( A FIXED(5)) !
 
Enter command:
INSERT T1 VALUES ( 1) !
 
Enter command:
INSERT T1 VALUES ( 2) !
 
Enter command:
INSERT T1 VALUES ( 3) !
 
Enter command:
INSERT T1 VALUES ( 4) !
 
Enter command:
INSERT T1 VALUES ( 4) !
 
Enter command:
INSERT T1 VALUES ( 5) !
 
Enter command:
INSERT T1 VALUES ( 5) !
 
Enter command:
CREATE TABLE T2 ( B FIXED(7)) !
 
Enter command:
INSERT T2 VALUES ( 3) !
 
Enter command:
INSERT T2 VALUES ( 3) !
 
Enter command:
INSERT T2 VALUES ( 4) !
 
Enter command:
INSERT T2 VALUES ( 4) !
 
Enter command:
INSERT T2 VALUES ( 5) !
 
Enter command:
INSERT T2 VALUES ( 6) !
 
Enter command:
INSERT T2 VALUES ( 7) !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST SQLMODE INTERNAL !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE INTERNAL ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B     !
 
resultcount :                    10
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A     = B (+) !
 
resultcount :                    10
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     1 | ????????
     2 | ????????
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B (+) !
 
resultcount :                    12
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     1 | ????????
     2 | ????????
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
 
resultcount :                    12
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM (SELECT * FROM T1), T2 WHERE A = B !
 
resultcount :                     8
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
 
resultcount :                     8
 
Enter command:
CLOSE C !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B     !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A     = B (+) !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     1 | ????????
     2 | ????????
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
 
resultcount :                    10
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM T1, T2 WHERE A (+) = B (+) !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     1 | ????????
     2 | ????????
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
?????? |        6
?????? |        7
 
resultcount :                    12
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM (SELECT * FROM T1), T2 WHERE A = B !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
A      | B
-------+---------
     3 |        3
     3 |        3
     4 |        4
     4 |        4
     4 |        4
     4 |        4
     5 |        5
     5 |        5
 
resultcount :                     8
 
Enter command:
CLOSE C !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER USER0 PASSWORD USER0 DBA NOT EXCLUSIVE!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( USER0 USER0!
 
Enter command:
CONNECT USER0 IDENTIFIED BY USER0   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TABX
(K FIXED (18),
 I FIXED (18),
 N FIXED (18),
 F4 FIXED (5),
 F5 FIXED (5),
 FILL1 CHAR (250),
 FILL2 CHAR (250),
 FILL3 CHAR (250),
 FILL4 CHAR (250),
 PRIMARY KEY (K))!
 
Enter command:
INSERT INTO TABX VALUES(1 ,1 ,1 ,5001,1 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(2 ,4 ,5 ,5002,1 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(3 ,2 ,4 ,5003,2 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(4 ,5 ,2 ,5004,2 ,'','','','')!
 
Enter command:
INSERT INTO TABX VALUES(5 ,3 ,3 ,5004,3 ,'','','','')!
 
Enter command:
UPDATE TABX SET FILL1 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TABX SET FILL2 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TABX SET FILL3 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TABX SET FILL4 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
CREATE UNIQUE INDEX "TABX.I"
 ON TABX( I ) !
 
Enter command:
COMMIT!
 
Enter command:
CREATE VIEW VE1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY1 AS SELECT N,K FROM VE1
                    UNION ALL
                    SELECT N,K FROM VW1
                    UNION ALL
                    SELECT N,K FROM VS1!
 
Enter command:
CREATE VIEW VZ1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE1
                    WHERE K IN
                          (SELECT N FROM VW1
                           WHERE K IN
                                (SELECT N FROM VS1
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE1
                    WHERE (K IN
                             (SELECT N FROM VW1
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS1
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS1 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS1 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK1 AS SELECT T0.N FROM VE1 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW1 T1, VS1 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 1!
 
Enter command:
SELECT * FROM VE1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY1!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 2 1!
 
Enter command:
CREATE VIEW VE2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE1
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW1
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS1
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX2 AS SELECT T1.K,T1.N FROM VE2 T1,VW2 T2,VS2 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY2 AS SELECT N,K FROM VE2
                    UNION ALL
                    SELECT N,K FROM VW2
                    UNION ALL
                    SELECT N,K FROM VS2!
 
Enter command:
CREATE VIEW VZ2 AS SELECT T1.K,T1.N
                    FROM VE2 T1,VW2 T2,VS2 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE2
                    WHERE K IN
                          (SELECT N FROM VW2
                           WHERE K IN
                                (SELECT N FROM VS2
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB2 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE2
                    WHERE (K IN
                             (SELECT N FROM VW2
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS2
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS2 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS2 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK2 AS SELECT T0.N FROM VE2 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW2 T1, VS2 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 2!
 
Enter command:
SELECT * FROM VE2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX2!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY2!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ2!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 3 2!
 
Enter command:
CREATE VIEW VE3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE2
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW2
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS2
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX3 AS SELECT T1.K,T1.N FROM VE3 T1,VW3 T2,VS3 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY3 AS SELECT N,K FROM VE3
                    UNION ALL
                    SELECT N,K FROM VW3
                    UNION ALL
                    SELECT N,K FROM VS3!
 
Enter command:
CREATE VIEW VZ3 AS SELECT T1.K,T1.N
                    FROM VE3 T1,VW3 T2,VS3 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE3
                    WHERE K IN
                          (SELECT N FROM VW3
                           WHERE K IN
                                (SELECT N FROM VS3
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB3 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE3
                    WHERE (K IN
                             (SELECT N FROM VW3
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS3
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS3 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS3 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK3 AS SELECT T0.N FROM VE3 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW3 T1, VS3 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 3!
 
Enter command:
SELECT * FROM VE3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX3!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY3!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ3!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 4 3!
 
Enter command:
CREATE VIEW VE4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE3
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW3
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS3
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX4 AS SELECT T1.K,T1.N FROM VE4 T1,VW4 T2,VS4 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY4 AS SELECT N,K FROM VE4
                    UNION ALL
                    SELECT N,K FROM VW4
                    UNION ALL
                    SELECT N,K FROM VS4!
 
Enter command:
CREATE VIEW VZ4 AS SELECT T1.K,T1.N
                    FROM VE4 T1,VW4 T2,VS4 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE4
                    WHERE K IN
                          (SELECT N FROM VW4
                           WHERE K IN
                                (SELECT N FROM VS4
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB4 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE4
                    WHERE (K IN
                             (SELECT N FROM VW4
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS4
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS4 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS4 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK4 AS SELECT T0.N FROM VE4 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW4 T1, VS4 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 4!
 
Enter command:
SELECT * FROM VE4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX4!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY4!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ4!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 5 4!
 
Enter command:
CREATE VIEW VE5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE4
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW4
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS4
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX5 AS SELECT T1.K,T1.N FROM VE5 T1,VW5 T2,VS5 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY5 AS SELECT N,K FROM VE5
                    UNION ALL
                    SELECT N,K FROM VW5
                    UNION ALL
                    SELECT N,K FROM VS5!
 
Enter command:
CREATE VIEW VZ5 AS SELECT T1.K,T1.N
                    FROM VE5 T1,VW5 T2,VS5 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE5
                    WHERE K IN
                          (SELECT N FROM VW5
                           WHERE K IN
                                (SELECT N FROM VS5
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB5 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE5
                    WHERE (K IN
                             (SELECT N FROM VW5
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS5
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS5 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS5 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK5 AS SELECT T0.N FROM VE5 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW5 T1, VS5 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 5!
 
Enter command:
SELECT * FROM VE5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX5!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY5!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ5!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 6 5!
 
Enter command:
CREATE VIEW VE6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE5
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW5
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS5
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX6 AS SELECT T1.K,T1.N FROM VE6 T1,VW6 T2,VS6 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY6 AS SELECT N,K FROM VE6
                    UNION ALL
                    SELECT N,K FROM VW6
                    UNION ALL
                    SELECT N,K FROM VS6!
 
Enter command:
CREATE VIEW VZ6 AS SELECT T1.K,T1.N
                    FROM VE6 T1,VW6 T2,VS6 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE6
                    WHERE K IN
                          (SELECT N FROM VW6
                           WHERE K IN
                                (SELECT N FROM VS6
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB6 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE6
                    WHERE (K IN
                             (SELECT N FROM VW6
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS6
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS6 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS6 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK6 AS SELECT T0.N FROM VE6 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW6 T1, VS6 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 6!
 
Enter command:
SELECT * FROM VE6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX6!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY6!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ6!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 7 6!
 
Enter command:
CREATE VIEW VE7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE6
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW6
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS6
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX7 AS SELECT T1.K,T1.N FROM VE7 T1,VW7 T2,VS7 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY7 AS SELECT N,K FROM VE7
                    UNION ALL
                    SELECT N,K FROM VW7
                    UNION ALL
                    SELECT N,K FROM VS7!
 
Enter command:
CREATE VIEW VZ7 AS SELECT T1.K,T1.N
                    FROM VE7 T1,VW7 T2,VS7 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE7
                    WHERE K IN
                          (SELECT N FROM VW7
                           WHERE K IN
                                (SELECT N FROM VS7
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB7 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE7
                    WHERE (K IN
                             (SELECT N FROM VW7
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS7
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS7 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS7 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK7 AS SELECT T0.N FROM VE7 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW7 T1, VS7 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 7!
 
Enter command:
SELECT * FROM VE7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX7!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY7!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ7!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 8 7!
 
Enter command:
CREATE VIEW VE8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE7
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW7
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS7
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX8 AS SELECT T1.K,T1.N FROM VE8 T1,VW8 T2,VS8 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY8 AS SELECT N,K FROM VE8
                    UNION ALL
                    SELECT N,K FROM VW8
                    UNION ALL
                    SELECT N,K FROM VS8!
 
Enter command:
CREATE VIEW VZ8 AS SELECT T1.K,T1.N
                    FROM VE8 T1,VW8 T2,VS8 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE8
                    WHERE K IN
                          (SELECT N FROM VW8
                           WHERE K IN
                                (SELECT N FROM VS8
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB8 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE8
                    WHERE (K IN
                             (SELECT N FROM VW8
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS8
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS8 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS8 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK8 AS SELECT T0.N FROM VE8 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW8 T1, VS8 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 8!
 
Enter command:
SELECT * FROM VE8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX8!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY8!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ8!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 9 8!
 
Enter command:
CREATE VIEW VE9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE8
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW8
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS8
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX9 AS SELECT T1.K,T1.N FROM VE9 T1,VW9 T2,VS9 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY9 AS SELECT N,K FROM VE9
                    UNION ALL
                    SELECT N,K FROM VW9
                    UNION ALL
                    SELECT N,K FROM VS9!
 
Enter command:
CREATE VIEW VZ9 AS SELECT T1.K,T1.N
                    FROM VE9 T1,VW9 T2,VS9 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE9
                    WHERE K IN
                          (SELECT N FROM VW9
                           WHERE K IN
                                (SELECT N FROM VS9
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB9 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE9
                    WHERE (K IN
                             (SELECT N FROM VW9
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS9
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS9 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS9 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK9 AS SELECT T0.N FROM VE9 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW9 T1, VS9 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 9!
 
Enter command:
SELECT * FROM VE9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX9!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY9!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ9!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 10 9!
 
Enter command:
CREATE VIEW VE10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE9
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW9
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS9
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX10 AS SELECT T1.K,T1.N FROM VE10 T1,VW10 T2,VS10 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY10 AS SELECT N,K FROM VE10
                    UNION ALL
                    SELECT N,K FROM VW10
                    UNION ALL
                    SELECT N,K FROM VS10!
 
Enter command:
CREATE VIEW VZ10 AS SELECT T1.K,T1.N
                    FROM VE10 T1,VW10 T2,VS10 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE10
                    WHERE K IN
                          (SELECT N FROM VW10
                           WHERE K IN
                                (SELECT N FROM VS10
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB10 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE10
                    WHERE (K IN
                             (SELECT N FROM VW10
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS10
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS10 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS10 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK10 AS SELECT T0.N FROM VE10 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW10 T1, VS10 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 10!
 
Enter command:
SELECT * FROM VE10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX10!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY10!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ10!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 11 10!
 
Enter command:
CREATE VIEW VE11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE10
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW10
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS10
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX11 AS SELECT T1.K,T1.N FROM VE11 T1,VW11 T2,VS11 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY11 AS SELECT N,K FROM VE11
                    UNION ALL
                    SELECT N,K FROM VW11
                    UNION ALL
                    SELECT N,K FROM VS11!
 
Enter command:
CREATE VIEW VZ11 AS SELECT T1.K,T1.N
                    FROM VE11 T1,VW11 T2,VS11 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE11
                    WHERE K IN
                          (SELECT N FROM VW11
                           WHERE K IN
                                (SELECT N FROM VS11
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB11 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE11
                    WHERE (K IN
                             (SELECT N FROM VW11
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS11
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS11 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS11 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK11 AS SELECT T0.N FROM VE11 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW11 T1, VS11 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 11!
 
Enter command:
SELECT * FROM VE11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX11!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY11!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ11!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 12 11!
 
Enter command:
CREATE VIEW VE12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE11
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW11
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS11
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX12 AS SELECT T1.K,T1.N FROM VE12 T1,VW12 T2,VS12 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY12 AS SELECT N,K FROM VE12
                    UNION ALL
                    SELECT N,K FROM VW12
                    UNION ALL
                    SELECT N,K FROM VS12!
 
Enter command:
CREATE VIEW VZ12 AS SELECT T1.K,T1.N
                    FROM VE12 T1,VW12 T2,VS12 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE12
                    WHERE K IN
                          (SELECT N FROM VW12
                           WHERE K IN
                                (SELECT N FROM VS12
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB12 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE12
                    WHERE (K IN
                             (SELECT N FROM VW12
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS12
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS12 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS12 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK12 AS SELECT T0.N FROM VE12 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW12 T1, VS12 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 12!
 
Enter command:
SELECT * FROM VE12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX12!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY12!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ12!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
 
FILE STAUAB( 13 12!
 
Enter command:
CREATE VIEW VE13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE12
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW12
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS12
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX13 AS SELECT T1.K,T1.N FROM VE13 T1,VW13 T2,VS13 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY13 AS SELECT N,K FROM VE13
                    UNION ALL
                    SELECT N,K FROM VW13
                    UNION ALL
                    SELECT N,K FROM VS13!
 
Enter command:
CREATE VIEW VZ13 AS SELECT T1.K,T1.N
                    FROM VE13 T1,VW13 T2,VS13 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE13
                    WHERE K IN
                          (SELECT N FROM VW13
                           WHERE K IN
                                (SELECT N FROM VS13
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB13 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE13
                    WHERE (K IN
                             (SELECT N FROM VW13
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS13
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS13 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS13 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK13 AS SELECT T0.N FROM VE13 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW13 T1, VS13 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 13!
 
Enter command:
SELECT * FROM VE13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX13!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY13!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ13!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 14 13!
 
Enter command:
CREATE VIEW VE14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE13
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW13
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS13
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX14 AS SELECT T1.K,T1.N FROM VE14 T1,VW14 T2,VS14 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY14 AS SELECT N,K FROM VE14
                    UNION ALL
                    SELECT N,K FROM VW14
                    UNION ALL
                    SELECT N,K FROM VS14!
 
Enter command:
CREATE VIEW VZ14 AS SELECT T1.K,T1.N
                    FROM VE14 T1,VW14 T2,VS14 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE14
                    WHERE K IN
                          (SELECT N FROM VW14
                           WHERE K IN
                                (SELECT N FROM VS14
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB14 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE14
                    WHERE (K IN
                             (SELECT N FROM VW14
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS14
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS14 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS14 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK14 AS SELECT T0.N FROM VE14 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW14 T1, VS14 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 14!
 
Enter command:
SELECT * FROM VE14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX14!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY14!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ14!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
FILE STAUAB( 15 14!
 
Enter command:
CREATE VIEW VE15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VE14
            WHERE (K = 1) OR (N = 1) OR (I = 1)
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2))
               OR (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VW15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VW14
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2))
              AND (SQRT(I) = POWER(K,2))!
 
Enter command:
CREATE VIEW VS15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM VS14
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1))
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1))
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))!
 
Enter command:
CREATE VIEW VX15 AS SELECT T1.K,T1.N FROM VE15 T1,VW15 T2,VS15 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY15 AS SELECT N,K FROM VE15
                    UNION ALL
                    SELECT N,K FROM VW15
                    UNION ALL
                    SELECT N,K FROM VS15!
 
Enter command:
CREATE VIEW VZ15 AS SELECT T1.K,T1.N
                    FROM VE15 T1,VW15 T2,VS15 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE15
                    WHERE K IN
                          (SELECT N FROM VW15
                           WHERE K IN
                                (SELECT N FROM VS15
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB15 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4
                    FROM VE15
                    WHERE (K IN
                             (SELECT N FROM VW15
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS15
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS15 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS15 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK15 AS SELECT T0.N FROM VE15 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW15 T1, VS15 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAUAS( 15!
 
Enter command:
SELECT * FROM VE15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX15!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY15!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ15!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                 :                    1
I                 :                    1
N                 :                    1
F4                :    5001
FILL1             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL2             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL3             :
a##############################################################################
###############################################################################
###############################################################################
#############
FILL4             :
a##############################################################################
###############################################################################
###############################################################################
#############
 
resultcount :                     1
 
Enter command:
SELECT * FROM VC15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
COMMIT!
 
Enter command:
DROP VIEW VE1!
 
Enter command:
COMMIT !
 
Enter command:
DROP VIEW VW1!
 
Enter command:
COMMIT !
 
Enter command:
DROP VIEW VS1!
 
Enter command:
COMMIT!
 
Enter command:
DROP TABLE TABX!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER USER0 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CROBJ!
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER USERX PASSWORD USERX DBA NOT EXCLUSIVE!
 
***ERROR  -6006 Duplicate name                                             0013
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
 
FILE CONNECT ( USERX USERX!
 
Enter command:
CONNECT USERX IDENTIFIED BY USERX   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB0
(K FIXED (18),
 I FIXED (18),
 N FIXED (18),
 F4 FIXED (5),
 F5 FIXED (5),
 FILL1 CHAR (250),
 FILL2 CHAR (250),
 FILL3 CHAR (250),
 FILL4 CHAR (250),
 PRIMARY KEY (K)) !
 
***ERROR  -6000 Duplicate table name:TAB0                                  0014
 
Enter command:
INSERT INTO TAB0 VALUES(1 ,1 ,1 ,5001,1 ,'','','','')!
 
***ERROR    200 Duplicate key                                              0053
 
Enter command:
INSERT INTO TAB0 VALUES(2 ,4 ,5 ,5002,1 ,'','','','')!
 
***ERROR    200 Duplicate key                                              0053
 
Enter command:
INSERT INTO TAB0 VALUES(3 ,2 ,4 ,5003,2 ,'','','','')!
 
***ERROR    200 Duplicate key                                              0053
 
Enter command:
INSERT INTO TAB0 VALUES(4 ,5 ,2 ,5004,2 ,'','','','')!
 
***ERROR    200 Duplicate key                                              0053
 
Enter command:
INSERT INTO TAB0 VALUES(5 ,3 ,3 ,5004,3 ,'','','','')!
 
***ERROR    200 Duplicate key                                              0053
 
Enter command:
UPDATE TAB0 SET FILL1 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TAB0 SET FILL2 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TAB0 SET FILL3 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
UPDATE TAB0 SET FILL4 = RFILL('a','#',250)!
 
resultcount :                     5
 
Enter command:
CREATE UNIQUE INDEX "TAB0.I"
 ON TAB0( I ) !
 
***ERROR  -6008 Duplicate index name                                       0001
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( USERX USERX!
 
Enter command:
CONNECT USERX IDENTIFIED BY USERX   ISOLATION LEVEL 1 !
 
Enter command:
FILE STAVA( TAB0!
 
Enter command:
FILE STAVAA( TAB0!
 
Enter command:
CREATE VIEW VE1 AS SELECT K,N FROM TAB0
                   WHERE I = 1!
 
Enter command:
CREATE VIEW VW1 AS SELECT K,N FROM TAB0
                   WHERE I = 1!
 
Enter command:
CREATE VIEW VS1 AS SELECT K,N FROM TAB0
                   WHERE I = 1!
 
Enter command:
CREATE VIEW VX1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY1 AS SELECT N,K FROM VE1
                    UNION ALL
                    SELECT N,K FROM VW1
                    UNION ALL
                    SELECT N,K FROM VS1!
 
Enter command:
CREATE VIEW VZ1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA1 AS SELECT K,N
                    FROM VE1
                    WHERE K IN
                          (SELECT N FROM VW1
                           WHERE K IN
                                (SELECT N FROM VS1
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB1 AS SELECT K,N
                    FROM VE1
                    WHERE (K IN
                             (SELECT N FROM VW1
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS1
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS1 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS1 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK1 AS SELECT T0.N FROM VE1 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW1 T1, VS1 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 1!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS1!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY1!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ1!
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           19
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK1!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 2 1!
 
Enter command:
CREATE VIEW VE2 AS SELECT K,N FROM VE1!
 
Enter command:
CREATE VIEW VW2 AS SELECT K,N FROM VW1
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS2 AS SELECT K,N FROM VS1
WHERE K = (SELECT MIN(N) FROM VS1)!
 
Enter command:
CREATE VIEW VX2 AS SELECT T1.K,T1.N FROM VE2 T1,VW2 T2,VS2 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY2 AS SELECT N,K FROM VE2
                    UNION ALL
                    SELECT N,K FROM VW2
                    UNION ALL
                    SELECT N,K FROM VS2!
 
Enter command:
CREATE VIEW VZ2 AS SELECT T1.K,T1.N
                    FROM VE2 T1,VW2 T2,VS2 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA2 AS SELECT K,N
                    FROM VE2
                    WHERE K IN
                          (SELECT N FROM VW2
                           WHERE K IN
                                (SELECT N FROM VS2
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB2 AS SELECT K,N
                    FROM VE2
                    WHERE (K IN
                             (SELECT N FROM VW2
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS2
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS2 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS2 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH2 AS SELECT N FROM VE2 T0
WHERE T0.K IN
              (SELECT N FROM VW2 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ2 AS SELECT N FROM VE2 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW2 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS2 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK2 AS SELECT T0.N FROM VE2 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW2 T1, VS2 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 2!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW2!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY2!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           36
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK2!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 3 2!
 
Enter command:
CREATE VIEW VE3 AS SELECT K,N FROM VE2!
 
Enter command:
CREATE VIEW VW3 AS SELECT K,N FROM VW2
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS3 AS SELECT K,N FROM VS2
WHERE K = (SELECT MIN(N) FROM VS2)!
 
Enter command:
CREATE VIEW VX3 AS SELECT T1.K,T1.N FROM VE3 T1,VW3 T2,VS3 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY3 AS SELECT N,K FROM VE3
                    UNION ALL
                    SELECT N,K FROM VW3
                    UNION ALL
                    SELECT N,K FROM VS3!
 
Enter command:
CREATE VIEW VZ3 AS SELECT T1.K,T1.N
                    FROM VE3 T1,VW3 T2,VS3 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA3 AS SELECT K,N
                    FROM VE3
                    WHERE K IN
                          (SELECT N FROM VW3
                           WHERE K IN
                                (SELECT N FROM VS3
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB3 AS SELECT K,N
                    FROM VE3
                    WHERE (K IN
                             (SELECT N FROM VW3
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS3
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS3 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS3 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH3 AS SELECT N FROM VE3 T0
WHERE T0.K IN
              (SELECT N FROM VW3 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ3 AS SELECT N FROM VE3 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW3 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS3 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK3 AS SELECT T0.N FROM VE3 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW3 T1, VS3 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 3!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW3!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY3!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           67
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK3!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 4 3!
 
Enter command:
CREATE VIEW VE4 AS SELECT K,N FROM VE3!
 
Enter command:
CREATE VIEW VW4 AS SELECT K,N FROM VW3
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS4 AS SELECT K,N FROM VS3
WHERE K = (SELECT MIN(N) FROM VS3)!
 
Enter command:
CREATE VIEW VX4 AS SELECT T1.K,T1.N FROM VE4 T1,VW4 T2,VS4 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY4 AS SELECT N,K FROM VE4
                    UNION ALL
                    SELECT N,K FROM VW4
                    UNION ALL
                    SELECT N,K FROM VS4!
 
Enter command:
CREATE VIEW VZ4 AS SELECT T1.K,T1.N
                    FROM VE4 T1,VW4 T2,VS4 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA4 AS SELECT K,N
                    FROM VE4
                    WHERE K IN
                          (SELECT N FROM VW4
                           WHERE K IN
                                (SELECT N FROM VS4
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB4 AS SELECT K,N
                    FROM VE4
                    WHERE (K IN
                             (SELECT N FROM VW4
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS4
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS4 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS4 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH4 AS SELECT N FROM VE4 T0
WHERE T0.K IN
              (SELECT N FROM VW4 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ4 AS SELECT N FROM VE4 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW4 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS4 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK4 AS SELECT T0.N FROM VE4 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW4 T1, VS4 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 4!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW4!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY4!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           80
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK4!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 5 4!
 
Enter command:
CREATE VIEW VE5 AS SELECT K,N FROM VE4!
 
Enter command:
CREATE VIEW VW5 AS SELECT K,N FROM VW4
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS5 AS SELECT K,N FROM VS4
WHERE K = (SELECT MIN(N) FROM VS4)!
 
Enter command:
CREATE VIEW VX5 AS SELECT T1.K,T1.N FROM VE5 T1,VW5 T2,VS5 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY5 AS SELECT N,K FROM VE5
                    UNION ALL
                    SELECT N,K FROM VW5
                    UNION ALL
                    SELECT N,K FROM VS5!
 
Enter command:
CREATE VIEW VZ5 AS SELECT T1.K,T1.N
                    FROM VE5 T1,VW5 T2,VS5 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA5 AS SELECT K,N
                    FROM VE5
                    WHERE K IN
                          (SELECT N FROM VW5
                           WHERE K IN
                                (SELECT N FROM VS5
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB5 AS SELECT K,N
                    FROM VE5
                    WHERE (K IN
                             (SELECT N FROM VW5
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS5
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS5 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS5 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH5 AS SELECT N FROM VE5 T0
WHERE T0.K IN
              (SELECT N FROM VW5 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ5 AS SELECT N FROM VE5 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW5 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS5 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK5 AS SELECT T0.N FROM VE5 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW5 T1, VS5 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 5!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW5!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY5!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |           87
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK5!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 6 5!
 
Enter command:
CREATE VIEW VE6 AS SELECT K,N FROM VE5!
 
Enter command:
CREATE VIEW VW6 AS SELECT K,N FROM VW5
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS6 AS SELECT K,N FROM VS5
WHERE K = (SELECT MIN(N) FROM VS5)!
 
Enter command:
CREATE VIEW VX6 AS SELECT T1.K,T1.N FROM VE6 T1,VW6 T2,VS6 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY6 AS SELECT N,K FROM VE6
                    UNION ALL
                    SELECT N,K FROM VW6
                    UNION ALL
                    SELECT N,K FROM VS6!
 
Enter command:
CREATE VIEW VZ6 AS SELECT T1.K,T1.N
                    FROM VE6 T1,VW6 T2,VS6 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA6 AS SELECT K,N
                    FROM VE6
                    WHERE K IN
                          (SELECT N FROM VW6
                           WHERE K IN
                                (SELECT N FROM VS6
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB6 AS SELECT K,N
                    FROM VE6
                    WHERE (K IN
                             (SELECT N FROM VW6
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS6
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS6 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS6 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH6 AS SELECT N FROM VE6 T0
WHERE T0.K IN
              (SELECT N FROM VW6 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ6 AS SELECT N FROM VE6 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW6 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS6 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK6 AS SELECT T0.N FROM VE6 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW6 T1, VS6 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 6!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW6!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY6!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          104
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK6!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 7 6!
 
Enter command:
CREATE VIEW VE7 AS SELECT K,N FROM VE6!
 
Enter command:
CREATE VIEW VW7 AS SELECT K,N FROM VW6
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS7 AS SELECT K,N FROM VS6
WHERE K = (SELECT MIN(N) FROM VS6)!
 
Enter command:
CREATE VIEW VX7 AS SELECT T1.K,T1.N FROM VE7 T1,VW7 T2,VS7 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY7 AS SELECT N,K FROM VE7
                    UNION ALL
                    SELECT N,K FROM VW7
                    UNION ALL
                    SELECT N,K FROM VS7!
 
Enter command:
CREATE VIEW VZ7 AS SELECT T1.K,T1.N
                    FROM VE7 T1,VW7 T2,VS7 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA7 AS SELECT K,N
                    FROM VE7
                    WHERE K IN
                          (SELECT N FROM VW7
                           WHERE K IN
                                (SELECT N FROM VS7
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB7 AS SELECT K,N
                    FROM VE7
                    WHERE (K IN
                             (SELECT N FROM VW7
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS7
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS7 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS7 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH7 AS SELECT N FROM VE7 T0
WHERE T0.K IN
              (SELECT N FROM VW7 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ7 AS SELECT N FROM VE7 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW7 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS7 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK7 AS SELECT T0.N FROM VE7 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW7 T1, VS7 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 7!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW7!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY7!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          105
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK7!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 8 7!
 
Enter command:
CREATE VIEW VE8 AS SELECT K,N FROM VE7!
 
Enter command:
CREATE VIEW VW8 AS SELECT K,N FROM VW7
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS8 AS SELECT K,N FROM VS7
WHERE K = (SELECT MIN(N) FROM VS7)!
 
Enter command:
CREATE VIEW VX8 AS SELECT T1.K,T1.N FROM VE8 T1,VW8 T2,VS8 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY8 AS SELECT N,K FROM VE8
                    UNION ALL
                    SELECT N,K FROM VW8
                    UNION ALL
                    SELECT N,K FROM VS8!
 
Enter command:
CREATE VIEW VZ8 AS SELECT T1.K,T1.N
                    FROM VE8 T1,VW8 T2,VS8 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA8 AS SELECT K,N
                    FROM VE8
                    WHERE K IN
                          (SELECT N FROM VW8
                           WHERE K IN
                                (SELECT N FROM VS8
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB8 AS SELECT K,N
                    FROM VE8
                    WHERE (K IN
                             (SELECT N FROM VW8
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS8
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS8 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS8 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH8 AS SELECT N FROM VE8 T0
WHERE T0.K IN
              (SELECT N FROM VW8 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ8 AS SELECT N FROM VE8 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW8 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS8 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK8 AS SELECT T0.N FROM VE8 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW8 T1, VS8 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 8!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW8!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY8!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          115
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK8!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 9 8!
 
Enter command:
CREATE VIEW VE9 AS SELECT K,N FROM VE8!
 
Enter command:
CREATE VIEW VW9 AS SELECT K,N FROM VW8
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS9 AS SELECT K,N FROM VS8
WHERE K = (SELECT MIN(N) FROM VS8)!
 
Enter command:
CREATE VIEW VX9 AS SELECT T1.K,T1.N FROM VE9 T1,VW9 T2,VS9 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY9 AS SELECT N,K FROM VE9
                    UNION ALL
                    SELECT N,K FROM VW9
                    UNION ALL
                    SELECT N,K FROM VS9!
 
Enter command:
CREATE VIEW VZ9 AS SELECT T1.K,T1.N
                    FROM VE9 T1,VW9 T2,VS9 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA9 AS SELECT K,N
                    FROM VE9
                    WHERE K IN
                          (SELECT N FROM VW9
                           WHERE K IN
                                (SELECT N FROM VS9
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB9 AS SELECT K,N
                    FROM VE9
                    WHERE (K IN
                             (SELECT N FROM VW9
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS9
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS9 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS9 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH9 AS SELECT N FROM VE9 T0
WHERE T0.K IN
              (SELECT N FROM VW9 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ9 AS SELECT N FROM VE9 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW9 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS9 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK9 AS SELECT T0.N FROM VE9 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW9 T1, VS9 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 9!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW9!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY9!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          122
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK9!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 10 9!
 
Enter command:
CREATE VIEW VE10 AS SELECT K,N FROM VE9!
 
Enter command:
CREATE VIEW VW10 AS SELECT K,N FROM VW9
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS10 AS SELECT K,N FROM VS9
WHERE K = (SELECT MIN(N) FROM VS9)!
 
Enter command:
CREATE VIEW VX10 AS SELECT T1.K,T1.N FROM VE10 T1,VW10 T2,VS10 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY10 AS SELECT N,K FROM VE10
                    UNION ALL
                    SELECT N,K FROM VW10
                    UNION ALL
                    SELECT N,K FROM VS10!
 
Enter command:
CREATE VIEW VZ10 AS SELECT T1.K,T1.N
                    FROM VE10 T1,VW10 T2,VS10 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA10 AS SELECT K,N
                    FROM VE10
                    WHERE K IN
                          (SELECT N FROM VW10
                           WHERE K IN
                                (SELECT N FROM VS10
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB10 AS SELECT K,N
                    FROM VE10
                    WHERE (K IN
                             (SELECT N FROM VW10
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS10
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS10 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS10 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH10 AS SELECT N FROM VE10 T0
WHERE T0.K IN
              (SELECT N FROM VW10 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ10 AS SELECT N FROM VE10 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW10 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS10 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK10 AS SELECT T0.N FROM VE10 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW10 T1, VS10 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 10!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW10!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY10!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          129
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK10!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 11 10!
 
Enter command:
CREATE VIEW VE11 AS SELECT K,N FROM VE10!
 
Enter command:
CREATE VIEW VW11 AS SELECT K,N FROM VW10
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS11 AS SELECT K,N FROM VS10
WHERE K = (SELECT MIN(N) FROM VS10)!
 
Enter command:
CREATE VIEW VX11 AS SELECT T1.K,T1.N FROM VE11 T1,VW11 T2,VS11 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY11 AS SELECT N,K FROM VE11
                    UNION ALL
                    SELECT N,K FROM VW11
                    UNION ALL
                    SELECT N,K FROM VS11!
 
Enter command:
CREATE VIEW VZ11 AS SELECT T1.K,T1.N
                    FROM VE11 T1,VW11 T2,VS11 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA11 AS SELECT K,N
                    FROM VE11
                    WHERE K IN
                          (SELECT N FROM VW11
                           WHERE K IN
                                (SELECT N FROM VS11
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB11 AS SELECT K,N
                    FROM VE11
                    WHERE (K IN
                             (SELECT N FROM VW11
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS11
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS11 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS11 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH11 AS SELECT N FROM VE11 T0
WHERE T0.K IN
              (SELECT N FROM VW11 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ11 AS SELECT N FROM VE11 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW11 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS11 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK11 AS SELECT T0.N FROM VE11 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW11 T1, VS11 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 11!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW11!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY11!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          133
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK11!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 12 11!
 
Enter command:
CREATE VIEW VE12 AS SELECT K,N FROM VE11!
 
Enter command:
CREATE VIEW VW12 AS SELECT K,N FROM VW11
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS12 AS SELECT K,N FROM VS11
WHERE K = (SELECT MIN(N) FROM VS11)!
 
Enter command:
CREATE VIEW VX12 AS SELECT T1.K,T1.N FROM VE12 T1,VW12 T2,VS12 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY12 AS SELECT N,K FROM VE12
                    UNION ALL
                    SELECT N,K FROM VW12
                    UNION ALL
                    SELECT N,K FROM VS12!
 
Enter command:
CREATE VIEW VZ12 AS SELECT T1.K,T1.N
                    FROM VE12 T1,VW12 T2,VS12 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA12 AS SELECT K,N
                    FROM VE12
                    WHERE K IN
                          (SELECT N FROM VW12
                           WHERE K IN
                                (SELECT N FROM VS12
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB12 AS SELECT K,N
                    FROM VE12
                    WHERE (K IN
                             (SELECT N FROM VW12
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS12
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS12 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS12 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH12 AS SELECT N FROM VE12 T0
WHERE T0.K IN
              (SELECT N FROM VW12 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ12 AS SELECT N FROM VE12 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW12 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS12 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK12 AS SELECT T0.N FROM VE12 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW12 T1, VS12 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 12!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW12!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY12!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          143
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK12!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 13 12!
 
Enter command:
CREATE VIEW VE13 AS SELECT K,N FROM VE12!
 
Enter command:
CREATE VIEW VW13 AS SELECT K,N FROM VW12
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS13 AS SELECT K,N FROM VS12
WHERE K = (SELECT MIN(N) FROM VS12)!
 
Enter command:
CREATE VIEW VX13 AS SELECT T1.K,T1.N FROM VE13 T1,VW13 T2,VS13 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY13 AS SELECT N,K FROM VE13
                    UNION ALL
                    SELECT N,K FROM VW13
                    UNION ALL
                    SELECT N,K FROM VS13!
 
Enter command:
CREATE VIEW VZ13 AS SELECT T1.K,T1.N
                    FROM VE13 T1,VW13 T2,VS13 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA13 AS SELECT K,N
                    FROM VE13
                    WHERE K IN
                          (SELECT N FROM VW13
                           WHERE K IN
                                (SELECT N FROM VS13
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB13 AS SELECT K,N
                    FROM VE13
                    WHERE (K IN
                             (SELECT N FROM VW13
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS13
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS13 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS13 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH13 AS SELECT N FROM VE13 T0
WHERE T0.K IN
              (SELECT N FROM VW13 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ13 AS SELECT N FROM VE13 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW13 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS13 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK13 AS SELECT T0.N FROM VE13 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW13 T1, VS13 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 13!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW13!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY13!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          147
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK13!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 14 13!
 
Enter command:
CREATE VIEW VE14 AS SELECT K,N FROM VE13!
 
Enter command:
CREATE VIEW VW14 AS SELECT K,N FROM VW13
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS14 AS SELECT K,N FROM VS13
WHERE K = (SELECT MIN(N) FROM VS13)!
 
Enter command:
CREATE VIEW VX14 AS SELECT T1.K,T1.N FROM VE14 T1,VW14 T2,VS14 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY14 AS SELECT N,K FROM VE14
                    UNION ALL
                    SELECT N,K FROM VW14
                    UNION ALL
                    SELECT N,K FROM VS14!
 
Enter command:
CREATE VIEW VZ14 AS SELECT T1.K,T1.N
                    FROM VE14 T1,VW14 T2,VS14 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA14 AS SELECT K,N
                    FROM VE14
                    WHERE K IN
                          (SELECT N FROM VW14
                           WHERE K IN
                                (SELECT N FROM VS14
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB14 AS SELECT K,N
                    FROM VE14
                    WHERE (K IN
                             (SELECT N FROM VW14
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS14
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS14 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS14 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH14 AS SELECT N FROM VE14 T0
WHERE T0.K IN
              (SELECT N FROM VW14 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ14 AS SELECT N FROM VE14 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW14 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS14 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK14 AS SELECT T0.N FROM VE14 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW14 T1, VS14 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 14!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW14!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY14!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          157
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK14!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 15 14!
 
Enter command:
CREATE VIEW VE15 AS SELECT K,N FROM VE14!
 
Enter command:
CREATE VIEW VW15 AS SELECT K,N FROM VW14
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS15 AS SELECT K,N FROM VS14
WHERE K = (SELECT MIN(N) FROM VS14)!
 
Enter command:
CREATE VIEW VX15 AS SELECT T1.K,T1.N FROM VE15 T1,VW15 T2,VS15 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY15 AS SELECT N,K FROM VE15
                    UNION ALL
                    SELECT N,K FROM VW15
                    UNION ALL
                    SELECT N,K FROM VS15!
 
Enter command:
CREATE VIEW VZ15 AS SELECT T1.K,T1.N
                    FROM VE15 T1,VW15 T2,VS15 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA15 AS SELECT K,N
                    FROM VE15
                    WHERE K IN
                          (SELECT N FROM VW15
                           WHERE K IN
                                (SELECT N FROM VS15
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB15 AS SELECT K,N
                    FROM VE15
                    WHERE (K IN
                             (SELECT N FROM VW15
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS15
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS15 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS15 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH15 AS SELECT N FROM VE15 T0
WHERE T0.K IN
              (SELECT N FROM VW15 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ15 AS SELECT N FROM VE15 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW15 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS15 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK15 AS SELECT T0.N FROM VE15 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW15 T1, VS15 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 15!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW15!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY15!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          164
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK15!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 16 15!
 
Enter command:
CREATE VIEW VE16 AS SELECT K,N FROM VE15!
 
Enter command:
CREATE VIEW VW16 AS SELECT K,N FROM VW15
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS16 AS SELECT K,N FROM VS15
WHERE K = (SELECT MIN(N) FROM VS15)!
 
Enter command:
CREATE VIEW VX16 AS SELECT T1.K,T1.N FROM VE16 T1,VW16 T2,VS16 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY16 AS SELECT N,K FROM VE16
                    UNION ALL
                    SELECT N,K FROM VW16
                    UNION ALL
                    SELECT N,K FROM VS16!
 
Enter command:
CREATE VIEW VZ16 AS SELECT T1.K,T1.N
                    FROM VE16 T1,VW16 T2,VS16 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA16 AS SELECT K,N
                    FROM VE16
                    WHERE K IN
                          (SELECT N FROM VW16
                           WHERE K IN
                                (SELECT N FROM VS16
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB16 AS SELECT K,N
                    FROM VE16
                    WHERE (K IN
                             (SELECT N FROM VW16
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS16
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS16 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS16 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH16 AS SELECT N FROM VE16 T0
WHERE T0.K IN
              (SELECT N FROM VW16 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI16 AS SELECT N FROM VE16 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW16 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ16 AS SELECT N FROM VE16 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW16 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS16 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK16 AS SELECT T0.N FROM VE16 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW16 T1, VS16 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 16!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE16!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW16!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY16!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          171
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK16!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 17 16!
 
Enter command:
CREATE VIEW VE17 AS SELECT K,N FROM VE16!
 
Enter command:
CREATE VIEW VW17 AS SELECT K,N FROM VW16
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS17 AS SELECT K,N FROM VS16
WHERE K = (SELECT MIN(N) FROM VS16)!
 
Enter command:
CREATE VIEW VX17 AS SELECT T1.K,T1.N FROM VE17 T1,VW17 T2,VS17 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY17 AS SELECT N,K FROM VE17
                    UNION ALL
                    SELECT N,K FROM VW17
                    UNION ALL
                    SELECT N,K FROM VS17!
 
Enter command:
CREATE VIEW VZ17 AS SELECT T1.K,T1.N
                    FROM VE17 T1,VW17 T2,VS17 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA17 AS SELECT K,N
                    FROM VE17
                    WHERE K IN
                          (SELECT N FROM VW17
                           WHERE K IN
                                (SELECT N FROM VS17
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB17 AS SELECT K,N
                    FROM VE17
                    WHERE (K IN
                             (SELECT N FROM VW17
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS17
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS17 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS17 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH17 AS SELECT N FROM VE17 T0
WHERE T0.K IN
              (SELECT N FROM VW17 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI17 AS SELECT N FROM VE17 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW17 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ17 AS SELECT N FROM VE17 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW17 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS17 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK17 AS SELECT T0.N FROM VE17 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW17 T1, VS17 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 17!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE17!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW17!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY17!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          178
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK17!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 18 17!
 
Enter command:
CREATE VIEW VE18 AS SELECT K,N FROM VE17!
 
Enter command:
CREATE VIEW VW18 AS SELECT K,N FROM VW17
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS18 AS SELECT K,N FROM VS17
WHERE K = (SELECT MIN(N) FROM VS17)!
 
Enter command:
CREATE VIEW VX18 AS SELECT T1.K,T1.N FROM VE18 T1,VW18 T2,VS18 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY18 AS SELECT N,K FROM VE18
                    UNION ALL
                    SELECT N,K FROM VW18
                    UNION ALL
                    SELECT N,K FROM VS18!
 
Enter command:
CREATE VIEW VZ18 AS SELECT T1.K,T1.N
                    FROM VE18 T1,VW18 T2,VS18 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA18 AS SELECT K,N
                    FROM VE18
                    WHERE K IN
                          (SELECT N FROM VW18
                           WHERE K IN
                                (SELECT N FROM VS18
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB18 AS SELECT K,N
                    FROM VE18
                    WHERE (K IN
                             (SELECT N FROM VW18
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS18
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS18 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS18 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH18 AS SELECT N FROM VE18 T0
WHERE T0.K IN
              (SELECT N FROM VW18 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI18 AS SELECT N FROM VE18 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW18 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ18 AS SELECT N FROM VE18 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW18 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS18 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK18 AS SELECT T0.N FROM VE18 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW18 T1, VS18 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 18!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE18!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW18!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY18!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          185
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK18!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 19 18!
 
Enter command:
CREATE VIEW VE19 AS SELECT K,N FROM VE18!
 
Enter command:
CREATE VIEW VW19 AS SELECT K,N FROM VW18
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS19 AS SELECT K,N FROM VS18
WHERE K = (SELECT MIN(N) FROM VS18)!
 
Enter command:
CREATE VIEW VX19 AS SELECT T1.K,T1.N FROM VE19 T1,VW19 T2,VS19 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY19 AS SELECT N,K FROM VE19
                    UNION ALL
                    SELECT N,K FROM VW19
                    UNION ALL
                    SELECT N,K FROM VS19!
 
Enter command:
CREATE VIEW VZ19 AS SELECT T1.K,T1.N
                    FROM VE19 T1,VW19 T2,VS19 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA19 AS SELECT K,N
                    FROM VE19
                    WHERE K IN
                          (SELECT N FROM VW19
                           WHERE K IN
                                (SELECT N FROM VS19
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB19 AS SELECT K,N
                    FROM VE19
                    WHERE (K IN
                             (SELECT N FROM VW19
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS19
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS19 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS19 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH19 AS SELECT N FROM VE19 T0
WHERE T0.K IN
              (SELECT N FROM VW19 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI19 AS SELECT N FROM VE19 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW19 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ19 AS SELECT N FROM VE19 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW19 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS19 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK19 AS SELECT T0.N FROM VE19 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW19 T1, VS19 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 19!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE19!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW19!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY19!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          192
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK19!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
FILE STAVAB( 20 19!
 
Enter command:
CREATE VIEW VE20 AS SELECT K,N FROM VE19!
 
Enter command:
CREATE VIEW VW20 AS SELECT K,N FROM VW19
WHERE K = 1 AND K = N AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1!
 
Enter command:
CREATE VIEW VS20 AS SELECT K,N FROM VS19
WHERE K = (SELECT MIN(N) FROM VS19)!
 
Enter command:
CREATE VIEW VX20 AS SELECT T1.K,T1.N FROM VE20 T1,VW20 T2,VS20 T3
WHERE T1.K = T2.K AND T1.N = T2.N
  AND T3.N = T2.N AND T3.K = T2.K!
 
Enter command:
CREATE VIEW VY20 AS SELECT N,K FROM VE20
                    UNION ALL
                    SELECT N,K FROM VW20
                    UNION ALL
                    SELECT N,K FROM VS20!
 
Enter command:
CREATE VIEW VZ20 AS SELECT T1.K,T1.N
                    FROM VE20 T1,VW20 T2,VS20 T3
                    WHERE T1.K = T2.K OR T1.N = T2.N
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
 
Enter command:
CREATE VIEW VA20 AS SELECT K,N
                    FROM VE20
                    WHERE K IN
                          (SELECT N FROM VW20
                           WHERE K IN
                                (SELECT N FROM VS20
                                 WHERE (K = 2 * N) OR (K = 1)))!
 
Enter command:
CREATE VIEW VB20 AS SELECT K,N
                    FROM VE20
                    WHERE (K IN
                             (SELECT N FROM VW20
                              WHERE K = 1))
                      AND (N IN
                             (SELECT K FROM VS20
                              WHERE K = 1))!
 
Enter command:
CREATE VIEW VC20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS20 T2
               WHERE N = T0.K)!
 
Enter command:
CREATE VIEW VD20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS20 T2
                                     WHERE K = T0.K))!
 
Enter command:
CREATE VIEW VF20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VG20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T0.K))!
 
Enter command:
CREATE VIEW VH20 AS SELECT N FROM VE20 T0
WHERE T0.K IN
              (SELECT N FROM VW20 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K))!
 
Enter command:
CREATE VIEW VI20 AS SELECT N FROM VE20 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW20 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K AND K IS NULL))!
 
Enter command:
CREATE VIEW VJ20 AS SELECT N FROM VE20 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW20 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS20 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
 
Enter command:
CREATE VIEW VK20 AS SELECT T0.N FROM VE20 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW20 T1, VS20 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
 
Enter command:
FILE STAVAS( 20!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VE20!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VW20!
 
resultcount :               unknown
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VS20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VX20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VY20!
 
resultcount :                     3
 
Enter command:
                FETCH!
 
N                   | K
--------------------+--------------------
                  1 |                   1
                  1 |                   1
                  1 |                   1
 
resultcount :                     3
 
Enter command:
SELECT * FROM VZ20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VA20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VB20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
K                   | N
--------------------+--------------------
                  1 |                   1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
MONITOR INIT!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM VC20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
FILE SEL_MONITOR ( TRANS !
 
Enter command:
DECLARE SEL_MON CURSOR FOR
 SELECT DESCRIPTION,
        FIXED(VALUE,11,0) "VALUE"
   FROM SYSDBA.MONITOR_TRANS !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH SEL_MON INTO :A, :B !
 
DESCRIPTION                              | VALUE
-----------------------------------------+-------------
SQL commands                             |            4
Write transactions                       |            0
KB calls                                 |          199
 
resultcount :                     3
 
Enter command:
CLOSE SEL_MON !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VD20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VF20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VG20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VH20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VI20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VJ20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT * FROM VK20!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
                FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
COMMIT!
 
Enter command:
 * PTS 1137017-19 !
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW2 T1 WHERE K = T0.N)
  AND T0.N IN (SELECT K FROM VS2 T2 WHERE N = T0.K)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW2 T1 WHERE K = T0.N)
  AND T0.N IN (SELECT K FROM VS1
                   WHERE K = (SELECT MIN(N) FROM VS1) AND N = T0.K) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW2 T1 WHERE K = T0.N)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW1 WHERE K = 1 AND K = N
         AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1 AND  K = T0.N)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW1 WHERE K = 1 AND K = N
         AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1 AND  K = T0.N)
      AND T0.N IN (SELECT K FROM VS2 T2 WHERE N = T0.K) !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
SELECT N FROM VE2 T0
WHERE T0.K IN (SELECT N FROM VW1 WHERE K = 1 AND K = N
      AND SQRT(N) = 1 AND K - N = 0 AND K * N = 1 AND  K = T0.N)
      AND T0.N IN (SELECT K FROM VS1
                   WHERE K = (SELECT MIN(N) FROM VS1) AND N = T0.K) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
N
-------------------
                  1
 
resultcount :                     1
 
Enter command:
DROP VIEW VE1!
 
Enter command:
DROP VIEW VW1!
 
Enter command:
DROP VIEW VS1!
 
Enter command:
COMMIT!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EMP  ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       CURRSAL FIXED (5) NOT NULL,
                       MANAGER CHAR (15) NOT NULL,
                       STARTSAL FIXED (5) NOT NULL,
                       SEX CHAR (6) NOT NULL ) !
 
Enter command:
CREATE TABLE FAM   ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       STATUS CHAR (8) NOT NULL,
                       DEPEND FIXED (2) NOT NULL RANGE BETWEEN 0 AND 15,
                       ADDRESS CHAR (30) NOT NULL ) !
 
Enter command:
CREATE TABLE DEPT  ( DEPTNO FIXED (2) KEY RANGE BETWEEN 10 AND 90 ,
                        DEPTNAME CHAR (10) NOT NULL,
                        LOCNAME  CHAR (15) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE EMP, FAM, DEPT IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO EMP SET NAME = 'Fred Gerard',
             DEPTNO = 50,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Norma Wilson',
             DEPTNO = 40,
             CURRSAL = 15500,
             MANAGER = 'Jill Crowley',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Brown',
             DEPTNO = 70,
             CURRSAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 7000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Rogers',
             DEPTNO = 40,
             CURRSAL = 15000,
             MANAGER = 'Jill Crowley',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'John Johnes',
             DEPTNO = 60,
             CURRSAL = 16500,
             MANAGER = 'Dana Smith',
             STARTSAL = 8500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Pat Mingo',
             DEPTNO = 50,
             CURRSAL = 13000,
             MANAGER = 'Fred Gerard',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dana Smith',
             DEPTNO = 60,
             CURRSAL = 16000,
             MANAGER = 'George Taylor',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Mary Rowen',
             DEPTNO = 60,
             CURRSAL = 15500,
             MANAGER = 'Dana Smith',
             STARTSAL = 9000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jill Crowley',
             DEPTNO = 40,
             CURRSAL = 17000,
             MANAGER = 'George Taylor',
             STARTSAL = 8250,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jerry Denny',
             DEPTNO = 70,
             CURRSAL = 14000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Alice Teir',
             DEPTNO = 50,
             CURRSAL = 13500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dave Cowel',
             DEPTNO = 60,
             CURRSAL = 14000,
             MANAGER = 'Dana Smith',
             STARTSAL = 7500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'George Taylor',
             DEPTNO = 10,
             CURRSAL = 20000,
             MANAGER = ' ',
             STARTSAL = 10000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joan Bird',
             DEPTNO = 50,
             CURRSAL = 14500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Ed Nader',
             DEPTNO = 70,
             CURRSAL = 8000,
             MANAGER = 'Paul Brown',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joyce Adams',
             DEPTNO = 70,
             CURRSAL = 16000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Fred Gerard',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '37 Drake St. #2, Carmichael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Norma Wilson',
                    DEPTNO = 40,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '4175 Oak Ct., Daly City'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Brown',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '271 Oxnard St., Lodi'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Rogers',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 5,
               ADDRESS = '27811 Embarcodero, S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'John Johnes',
                    DEPTNO = 60,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2785 Drake St., Stockton'!
 
Enter command:
INSERT INTO  FAM SET NAME = 'Pat Mingo',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '2751 Peer St., #1, Reno'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dana Smith',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = 'PO Box 571, Rt 51, Waterloo'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Mary Rowen',
                    DEPTNO = 60,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '27451 Mills St., San Rafael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jill Crowley',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '5671 Powell St., S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jerry Denny',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '67511 Market St., Stockton'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Alice Teir',
                    DEPTNO = 50,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2751 Maple Ct., Davis'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dave Cowel',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '1561 Main St., French Camp'!
 
Enter command:
INSERT INTO FAM SET NAME = 'George Taylor',
                    DEPTNO = 10,
               STATUS = 'married',
               DEPEND = 5,
               ADDRESS = '56715 - 31st St., Sacramento'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joan Bird',
                    DEPTNO = 50,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '2731 Coronado Wy, Pacifica'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Ed Nader',
                    DEPTNO = 70,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '774 S. St., Victor'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joyce Adams',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '8741 Takay Bowl Blvd, Lodi'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 10,
              DEPTNAME = 'Management',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 40,
              DEPTNAME = 'Sales',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 50,
              DEPTNAME = 'Materials',
              LOCNAME   = 'Sacramento'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 60,
              DEPTNAME = 'Production',
              LOCNAME  = 'Stockton'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 70,
              DEPTNAME = 'Supply',
              LOCNAME  = 'Lodi'!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPT.DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE EMP.DEPTNO = F.DEPTNO) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT F.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPT.DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE EMP.DEPTNO = F.DEPTNO) !
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
George Taylor   | 56715 - 31st St., Sacramento   |   5
Jerry Denny     | 67511 Market St., Stockton     |   4
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Paul Brown      | 271 Oxnard St., Lodi           |   4
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT MIN(NAME) & ' ' FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT F.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPT.DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE EMP.DEPTNO = F.DEPTNO) ORDER BY DEPEND !
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Jerry Denny     | 67511 Market St., Stockton     |   4
Paul Brown      | 271 Oxnard St., Lodi           |   4
George Taylor   | 56715 - 31st St., Sacramento   |   5
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT FAM.NAME FROM EMP, FAM
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (A CHAR (8) ASCII, TDUMMY CHAR (2))!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE TABLE U (A CHAR (8), UDUMMY CHAR (2)) !
 
Enter command:
INSERT U SET A = 'aaa'!
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A = U.A !
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A BETWEEN U.A AND 'bbb'!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A IN (U.A, 'bbb')!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
CREATE INDEX TI ON T (A,TDUMMY)!
 
Enter command:
CREATE INDEX UI ON U (A,UDUMMY)!
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A = U.A !
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A BETWEEN U.A AND 'bbb'!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
SELECT T.A,U.A INTO :A, :B FROM T,U WHERE T.A IN (U.A, 'bbb')!
 
A                 :  aaa
A                 :  aaa
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE EMP  ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       CURR_SAL FIXED (5) NOT NULL,
                       MANAGER CHAR (15) NOT NULL,
                       STARTSAL FIXED (5) NOT NULL,
                       SEX CHAR (6) NOT NULL ) !
 
Enter command:
CREATE TABLE FAM   ( NAME CHAR (15) KEY,
                       DEPTNO FIXED (2) NOT NULL RANGE BETWEEN 10 AND 90,
                       STATUS CHAR (8) NOT NULL,
                       DEPEND FIXED (2) NOT NULL RANGE BETWEEN 0 AND 15,
                       ADDRESS CHAR (30) NOT NULL ) !
 
Enter command:
CREATE TABLE DEPT  ( DEPTNO FIXED (2) KEY RANGE BETWEEN 10 AND 90 ,
                        DEPTNAME CHAR (10) NOT NULL,
                        LOCNAME  CHAR (15) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE EMP, FAM, DEPT IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO EMP SET NAME = 'Fred Gerard',
             DEPTNO = 50,
             CURR_SAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Norma Wilson',
             DEPTNO = 40,
             CURR_SAL = 15500,
             MANAGER = 'Jill Crowley',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Brown',
             DEPTNO = 70,
             CURR_SAL = 15000,
             MANAGER = 'George Taylor',
             STARTSAL = 7000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Paul Rogers',
             DEPTNO = 40,
             CURR_SAL = 15000,
             MANAGER = 'Jill Crowley',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'John Johnes',
             DEPTNO = 60,
             CURR_SAL = 16500,
             MANAGER = 'Dana Smith',
             STARTSAL = 8500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Pat Mingo',
             DEPTNO = 50,
             CURR_SAL = 13000,
             MANAGER = 'Fred Gerard',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dana Smith',
             DEPTNO = 60,
             CURR_SAL = 16000,
             MANAGER = 'George Taylor',
             STARTSAL = 7500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Mary Rowen',
             DEPTNO = 60,
             CURR_SAL = 15500,
             MANAGER = 'Dana Smith',
             STARTSAL = 9000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jill Crowley',
             DEPTNO = 40,
             CURR_SAL = 17000,
             MANAGER = 'George Taylor',
             STARTSAL = 8250,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Jerry Denny',
             DEPTNO = 70,
             CURR_SAL = 14000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Alice Teir',
             DEPTNO = 50,
             CURR_SAL = 13500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8500,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Dave Cowel',
             DEPTNO = 60,
             CURR_SAL = 14000,
             MANAGER = 'Dana Smith',
             STARTSAL = 7500,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'George Taylor',
             DEPTNO = 10,
             CURR_SAL = 20000,
             MANAGER = ' ',
             STARTSAL = 10000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joan Bird',
             DEPTNO = 50,
             CURR_SAL = 14500,
             MANAGER = 'Fred Gerard',
             STARTSAL = 8000,
             SEX = 'female'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Ed Nader',
             DEPTNO = 70,
             CURR_SAL = 8000,
             MANAGER = 'Paul Brown',
             STARTSAL = 8000,
             SEX = 'male'!
 
Enter command:
INSERT INTO EMP SET NAME = 'Joyce Adams',
             DEPTNO = 70,
             CURR_SAL = 16000,
             MANAGER = 'Paul Brown',
             STARTSAL = 6500,
             SEX = 'female'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Fred Gerard',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '37 Drake St. #2, Carmichael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Norma Wilson',
                    DEPTNO = 40,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '4175 Oak Ct., Daly City'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Brown',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '271 Oxnard St., Lodi'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Paul Rogers',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 5,
               ADDRESS = '27811 Embarcodero, S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'John Johnes',
                    DEPTNO = 60,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2785 Drake St., Stockton'!
 
Enter command:
INSERT INTO  FAM SET NAME = 'Pat Mingo',
                    DEPTNO = 50,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '2751 Peer St., #1, Reno'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dana Smith',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = 'PO Box 571, Rt 51, Waterloo'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Mary Rowen',
                    DEPTNO = 60,
               STATUS = 'married',
               DEPEND = 3,
               ADDRESS = '27451 Mills St., San Rafael'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jill Crowley',
                    DEPTNO = 40,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '5671 Powell St., S.F.'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Jerry Denny',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 4,
               ADDRESS = '67511 Market St., Stockton'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Alice Teir',
                    DEPTNO = 50,
               STATUS = 'single',
               DEPEND = 1,
               ADDRESS = '2751 Maple Ct., Davis'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Dave Cowel',
                    DEPTNO = 60,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '1561 Main St., French Camp'!
 
Enter command:
INSERT INTO FAM SET NAME = 'George Taylor',
                    DEPTNO = 10,
               STATUS = 'married',
               DEPEND = 5,
               ADDRESS = '56715 - 31st St., Sacramento'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joan Bird',
                    DEPTNO = 50,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '2731 Coronado Wy, Pacifica'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Ed Nader',
                    DEPTNO = 70,
               STATUS = 'divorced',
               DEPEND = 1,
               ADDRESS = '774 S. St., Victor'!
 
Enter command:
INSERT INTO FAM SET NAME = 'Joyce Adams',
                    DEPTNO = 70,
               STATUS = 'married',
               DEPEND = 2,
               ADDRESS = '8741 Takay Bowl Blvd, Lodi'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 10,
              DEPTNAME = 'Management',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 40,
              DEPTNAME = 'Sales',
              LOCNAME  = 'San Francisco'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 50,
              DEPTNAME = 'Materials',
              LOCNAME   = 'Sacramento'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 60,
              DEPTNAME = 'Production',
              LOCNAME  = 'Stockton'!
 
Enter command:
INSERT INTO DEPT SET DEPTNO = 70,
              DEPTNAME = 'Supply',
              LOCNAME  = 'Lodi'!
 
Enter command:
SELECT * FROM EMP !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
NAME            | DEPTNO | CURR_SAL | MANAGER         | STARTSAL | SEX
----------------+--------+----------+-----------------+----------+-------
Alice Teir      |  50    |  13500   | Fred Gerard     |   8500   | female
Dana Smith      |  60    |  16000   | George Taylor   |   7500   | female
Dave Cowel      |  60    |  14000   | Dana Smith      |   7500   | male
Ed Nader        |  70    |   8000   | Paul Brown      |   8000   | male
Fred Gerard     |  50    |  15000   | George Taylor   |   8000   | male
George Taylor   |  10    |  20000   |                 |  10000   | male
Jerry Denny     |  70    |  14000   | Paul Brown      |   6000   | male
Jill Crowley    |  40    |  17000   | George Taylor   |   8250   | female
Joan Bird       |  50    |  14500   | Fred Gerard     |   8000   | female
John Johnes     |  60    |  16500   | Dana Smith      |   8500   | male
Joyce Adams     |  70    |  16000   | Paul Brown      |   6500   | female
Mary Rowen      |  60    |  15500   | Dana Smith      |   9000   | female
Norma Wilson    |  40    |  15500   | Jill Crowley    |   7500   | female
Pat Mingo       |  50    |  13000   | Fred Gerard     |   6500   | female
Paul Brown      |  70    |  15000   | George Taylor   |   7000   | male
Paul Rogers     |  40    |  15000   | Jill Crowley    |   8000   | male
 
resultcount :                    16
 
Enter command:
SELECT * FROM FAM !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
NAME            | DEPTNO | STATUS   | DEPEND | ADDRESS
----------------+--------+----------+--------+-------------------------------
Alice Teir      |  50    | single   |   1    | 2751 Maple Ct., Davis
Dana Smith      |  60    | divorced |   1    | PO Box 571, Rt 51, Waterloo
Dave Cowel      |  60    | divorced |   1    | 1561 Main St., French Camp
Ed Nader        |  70    | divorced |   1    | 774 S. St., Victor
Fred Gerard     |  50    | married  |   3    | 37 Drake St. #2, Carmichael
George Taylor   |  10    | married  |   5    | 56715 - 31st St., Sacramento
Jerry Denny     |  70    | married  |   4    | 67511 Market St., Stockton
Jill Crowley    |  40    | divorced |   1    | 5671 Powell St., S.F.
Joan Bird       |  50    | divorced |   1    | 2731 Coronado Wy, Pacifica
John Johnes     |  60    | single   |   1    | 2785 Drake St., Stockton
Joyce Adams     |  70    | married  |   2    | 8741 Takay Bowl Blvd, Lodi
Mary Rowen      |  60    | married  |   3    | 27451 Mills St., San Rafael
Norma Wilson    |  40    | single   |   1    | 4175 Oak Ct., Daly City
Pat Mingo       |  50    | married  |   2    | 2751 Peer St., #1, Reno
Paul Brown      |  70    | married  |   4    | 271 Oxnard St., Lodi
Paul Rogers     |  40    | divorced |   5    | 27811 Embarcodero, S.F.
 
resultcount :                    16
 
Enter command:
SELECT * FROM DEPT !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
DEPTNO | DEPTNAME   | LOCNAME
-------+------------+----------------
 10    | Management | San Francisco
 40    | Sales      | San Francisco
 50    | Materials  | Sacramento
 60    | Production | Stockton
 70    | Supply     | Lodi
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW V1 (A) AS SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        EMP.NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        EMP.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V1 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V2 (B) AS SELECT SUM(DEPEND) FROM FAM F
  WHERE NAME > 'B' AND
        NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V2 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH !
 
B
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A IN (SELECT B FROM V2 WHERE B > 2) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 V WHERE A IN (SELECT B FROM V2 WHERE V2.B = V.A) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 V WHERE A IN
         (SELECT B FROM V2 WHERE V2.B IN
               (SELECT B FROM V2 WHERE V2.B = V.A)) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V3 AS SELECT EMP.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        EMP.NAME = ANY (SELECT NAME FROM EMP
                 WHERE EMP.DEPTNO > 0 AND
                       NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        EMP.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V3 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
George Taylor   | 56715 - 31st St., Sacramento   |   5
Jerry Denny     | 67511 Market St., Stockton     |   4
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Paul Brown      | 271 Oxnard St., Lodi           |   4
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
CREATE VIEW V4 AS SELECT NAME, ADDRESS, DEPEND FROM FAM F
  WHERE NAME > 'B' AND
        NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       NAME = F.NAME)!
 
Enter command:
SELECT * FROM V4 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
George Taylor   | 56715 - 31st St., Sacramento   |   5
Jerry Denny     | 67511 Market St., Stockton     |   4
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Paul Brown      | 271 Oxnard St., Lodi           |   4
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
SELECT NAME, ADDRESS FROM V3 V WHERE
       (NAME = 'Ed Nader' AND NAME IN
             (SELECT NAME FROM V4 WHERE NAME = V.NAME))
       OR
       (NAME = 'Norma Wilson' AND NAME IN
             (SELECT NAME FROM V4 WHERE NAME = V.NAME)) !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
NAME            | ADDRESS
----------------+-------------------------------
Ed Nader        | 774 S. St., Victor
Norma Wilson    | 4175 Oak Ct., Daly City
 
resultcount :                     2
 
Enter command:
ROLLBACK !
 
Enter command:
CREATE VIEW V1 AS SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        EMP.NAME = ANY (SELECT MIN(NAME) & ' ' FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
Enter command:
SELECT * FROM V1 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V2 AS SELECT EMP.NAME, ADDRESS, DEPEND FROM FAM F, EMP
  WHERE EMP.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT NAME FROM EMP
                 WHERE DEPTNO > 0 AND
                       EMP.NAME = F.NAME AND
                       DEPTNO = ANY (SELECT DEPTNO FROM DEPT
                                       WHERE DEPTNO = F.DEPTNO))
   AND
        F.DEPTNO = ALL ( SELECT DISTINCT DEPTNO FROM EMP
                 WHERE DEPTNO = F.DEPTNO) !
 
Enter command:
SELECT * FROM V2 ORDER BY DEPEND !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                    15
 
Enter command:
FETCH !
 
NAME            | ADDRESS                        | DEPEND
----------------+--------------------------------+-------
Dana Smith      | PO Box 571, Rt 51, Waterloo    |   1
Dave Cowel      | 1561 Main St., French Camp     |   1
Ed Nader        | 774 S. St., Victor             |   1
Jill Crowley    | 5671 Powell St., S.F.          |   1
Joan Bird       | 2731 Coronado Wy, Pacifica     |   1
John Johnes     | 2785 Drake St., Stockton       |   1
Norma Wilson    | 4175 Oak Ct., Daly City        |   1
Joyce Adams     | 8741 Takay Bowl Blvd, Lodi     |   2
Pat Mingo       | 2751 Peer St., #1, Reno        |   2
Fred Gerard     | 37 Drake St. #2, Carmichael    |   3
Mary Rowen      | 27451 Mills St., San Rafael    |   3
Jerry Denny     | 67511 Market St., Stockton     |   4
Paul Brown      | 271 Oxnard St., Lodi           |   4
George Taylor   | 56715 - 31st St., Sacramento   |   5
Paul Rogers     | 27811 Embarcodero, S.F.        |   5
 
resultcount :                    15
 
Enter command:
CREATE VIEW V3 AS SELECT SUM(DEPEND) FROM FAM F, EMP
  WHERE F.NAME > 'B' AND
        F.NAME = EMP.NAME AND
        F.NAME = ANY (SELECT FAM.NAME FROM EMP, FAM
                 WHERE EMP.DEPTNO > 0 AND
                       EMP.NAME >= F.NAME)!
 
Enter command:
SELECT * FROM V3 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 3.5000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V4 AS SELECT NAME FROM EMP
   WHERE NAME > 'Paul' AND
         EXISTS (SELECT DEPTNO FROM DEPT) !
 
Enter command:
SELECT * FROM V4 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
NAME
---------------
Paul Brown
Paul Rogers
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE!
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW V1 AS SELECT EMP.NAME, EMP.DEPTNO,
                         FAM.ADDRESS FROM EMP, FAM !
 
Enter command:
CREATE VIEW V2 AS SELECT * FROM V1
    WHERE DEPTNO > 65 AND
    EXISTS ( SELECT DEPTNO FROM DEPT WHERE V1.DEPTNO = DEPTNO) !
 
Enter command:
SELECT * FROM V2 !
 
resultcount :                    64
 
Enter command:
FETCH !
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Ed Nader        |  70    | 2751 Maple Ct., Davis
Ed Nader        |  70    | PO Box 571, Rt 51, Waterloo
Ed Nader        |  70    | 1561 Main St., French Camp
Ed Nader        |  70    | 774 S. St., Victor
Ed Nader        |  70    | 37 Drake St. #2, Carmichael
Ed Nader        |  70    | 56715 - 31st St., Sacramento
Ed Nader        |  70    | 67511 Market St., Stockton
Ed Nader        |  70    | 5671 Powell St., S.F.
Ed Nader        |  70    | 2731 Coronado Wy, Pacifica
Ed Nader        |  70    | 2785 Drake St., Stockton
Ed Nader        |  70    | 8741 Takay Bowl Blvd, Lodi
Ed Nader        |  70    | 27451 Mills St., San Rafael
Ed Nader        |  70    | 4175 Oak Ct., Daly City
Ed Nader        |  70    | 2751 Peer St., #1, Reno
Ed Nader        |  70    | 271 Oxnard St., Lodi
Ed Nader        |  70    | 27811 Embarcodero, S.F.
Jerry Denny     |  70    | 2751 Maple Ct., Davis
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Jerry Denny     |  70    | PO Box 571, Rt 51, Waterloo
Jerry Denny     |  70    | 1561 Main St., French Camp
Jerry Denny     |  70    | 774 S. St., Victor
Jerry Denny     |  70    | 37 Drake St. #2, Carmichael
Jerry Denny     |  70    | 56715 - 31st St., Sacramento
Jerry Denny     |  70    | 67511 Market St., Stockton
Jerry Denny     |  70    | 5671 Powell St., S.F.
Jerry Denny     |  70    | 2731 Coronado Wy, Pacifica
Jerry Denny     |  70    | 2785 Drake St., Stockton
Jerry Denny     |  70    | 8741 Takay Bowl Blvd, Lodi
Jerry Denny     |  70    | 27451 Mills St., San Rafael
Jerry Denny     |  70    | 4175 Oak Ct., Daly City
Jerry Denny     |  70    | 2751 Peer St., #1, Reno
Jerry Denny     |  70    | 271 Oxnard St., Lodi
Jerry Denny     |  70    | 27811 Embarcodero, S.F.
Joyce Adams     |  70    | 2751 Maple Ct., Davis
Joyce Adams     |  70    | PO Box 571, Rt 51, Waterloo
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Joyce Adams     |  70    | 1561 Main St., French Camp
Joyce Adams     |  70    | 774 S. St., Victor
Joyce Adams     |  70    | 37 Drake St. #2, Carmichael
Joyce Adams     |  70    | 56715 - 31st St., Sacramento
Joyce Adams     |  70    | 67511 Market St., Stockton
Joyce Adams     |  70    | 5671 Powell St., S.F.
Joyce Adams     |  70    | 2731 Coronado Wy, Pacifica
Joyce Adams     |  70    | 2785 Drake St., Stockton
Joyce Adams     |  70    | 8741 Takay Bowl Blvd, Lodi
Joyce Adams     |  70    | 27451 Mills St., San Rafael
Joyce Adams     |  70    | 4175 Oak Ct., Daly City
Joyce Adams     |  70    | 2751 Peer St., #1, Reno
Joyce Adams     |  70    | 271 Oxnard St., Lodi
Joyce Adams     |  70    | 27811 Embarcodero, S.F.
Paul Brown      |  70    | 2751 Maple Ct., Davis
Paul Brown      |  70    | PO Box 571, Rt 51, Waterloo
Paul Brown      |  70    | 1561 Main St., French Camp
 
NAME            | DEPTNO | ADDRESS
----------------+--------+-------------------------------
Paul Brown      |  70    | 774 S. St., Victor
Paul Brown      |  70    | 37 Drake St. #2, Carmichael
Paul Brown      |  70    | 56715 - 31st St., Sacramento
Paul Brown      |  70    | 67511 Market St., Stockton
Paul Brown      |  70    | 5671 Powell St., S.F.
Paul Brown      |  70    | 2731 Coronado Wy, Pacifica
Paul Brown      |  70    | 2785 Drake St., Stockton
Paul Brown      |  70    | 8741 Takay Bowl Blvd, Lodi
Paul Brown      |  70    | 27451 Mills St., San Rafael
Paul Brown      |  70    | 4175 Oak Ct., Daly City
Paul Brown      |  70    | 2751 Peer St., #1, Reno
Paul Brown      |  70    | 271 Oxnard St., Lodi
Paul Brown      |  70    | 27811 Embarcodero, S.F.
 
resultcount :                    64
 
Enter command:
CREATE VIEW V3 (MUL) AS SELECT EMP.DEPTNO * FAM.DEPTNO
      FROM EMP, FAM !
 
Enter command:
CREATE VIEW V4 AS SELECT * FROM V3 WHERE EXISTS
      (SELECT LOCNAME FROM DEPT WHERE V3.MUL > DEPTNO)!
 
***ERROR  -7022 Columns from more than one table not allowed:MUL           0084
 
Enter command:
SELECT * FROM V4 !
 
***ERROR  -4004 Unknown table name:V4                                      0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CREATE VIEW V5 (A,B,C,D,E,F,G,H,I,J,K,L,M,N)
               AS SELECT * FROM EMP, FAM, DEPT
   WHERE EMP.DEPTNO * FAM.DEPTNO > DEPT.DEPTNO AND
         EMP.NAME = FAM.NAME AND
         EMP.DEPTNO = ANY ( SELECT DEPTNO FROM DEPT
                               WHERE EMP.NAME > DEPT.LOCNAME )!
 
Enter command:
SELECT * FROM V5 !
 
resultcount :                     5
 
Enter command:
FETCH !
 
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   10
M                 :  Management
N                 :  San Francisco
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   40
M                 :  Sales
N                 :  San Francisco
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   50
M                 :  Materials
N                 :  Sacramento
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   60
M                 :  Production
N                 :  Stockton
---------------------------------------------------
A                 :  Paul Brown
B                 :   70
C                 :   15000
D                 :  George Taylor
E                 :    7000
F                 :  male
G                 :  Paul Brown
H                 :   70
I                 :  married
J                 :    4
K                 :  271 Oxnard St., Lodi
L                 :   70
M                 :  Supply
N                 :  Lodi
 
resultcount :                     5
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED (7), B FIXED (5))!
 
Enter command:
INSERT T SET A = 2, B = 3!
 
Enter command:
INSERT T SET A = 6, B = 3!
 
Enter command:
INSERT T SET A = 4, B = 3!
 
Enter command:
INSERT T SET A =12, B = 2!
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T1 ( C FIXED (10))!
 
Enter command:
INSERT T1 SET C = 12 !
 
Enter command:
INSERT T1 SET C = 24 !
 
Enter command:
SELECT A                  FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
A
--------
       2
       2
       6
       6
       4
       4
      12
      12
 
resultcount :                     8
 
Enter command:
SELECT A + C              FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          26
          18
          30
          16
          28
          24
          36
 
resultcount :                     8
 
Enter command:
SELECT SUM(A)             FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1 ORDER BY 1 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1 ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 GROUP BY C ORDER BY 1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1 ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT A                  FROM T, T1 WHERE A > 0 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
A
--------
       2
       2
       6
       6
       4
       4
      12
      12
 
resultcount :                     8
 
Enter command:
SELECT A + C              FROM T, T1 WHERE A > 0 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          26
          18
          30
          16
          28
          24
          36
 
resultcount :                     8
 
Enter command:
SELECT SUM(A)             FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 WHERE A > 0  GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1 WHERE A > 0 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 WHERE A > 0  GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1 WHERE A > 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT A + C     FROM T, T1 WHERE A > 0  ORDER BY 1 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          16
          18
          24
          26
          28
          30
          36
 
resultcount :                     8
 
Enter command:
SELECT DISTINCT SUM(A)    FROM T, T1 WHERE A > 0  ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT SUM(A)+C  FROM T, T1 WHERE A > 0  GROUP BY C ORDER BY 1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT SUM(A+C)  FROM T, T1 WHERE A > 0  ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT ROWNO, A           FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
ROWNO       | A
------------+---------
          1 |        2
          2 |        2
          3 |        6
          4 |        6
          5 |        4
          6 |        4
          7 |       12
          8 |       12
 
resultcount :                     8
 
Enter command:
SELECT ROWNO, A + C       FROM T, T1!
 
resultcount :                     8
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+-------------
          1 |           14
          2 |           26
          3 |           18
          4 |           30
          5 |           16
          6 |           28
          7 |           24
          8 |           36
 
resultcount :                     8
 
Enter command:
SELECT ROWNO, SUM(A)      FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+---------------------------------------------
          1 |  4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT ROWNO, SUM(A)+C    FROM T, T1 GROUP BY C!
 
resultcount :                     2
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+---------------------------------------------
          1 |  3.6000000000000000000000000000000000000E+01
          2 |  4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT ROWNO, SUM(A+C)    FROM T, T1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
ROWNO       | EXPRESSION1
------------+---------------------------------------------
          1 |  1.9200000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT A                  FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A
--------
       2
       2
 
resultcount :                     2
 
Enter command:
SELECT A + C              FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          14
          26
 
resultcount :                     2
 
Enter command:
SELECT SUM(A)             FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)+C           FROM<T1, T>WHERE ROWNO < 3 GROUP BY C!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 WHERE ROWNO < 3!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.0000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A HAVING A > 2!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 8.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING A > 2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A HAVING A > 2!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.4000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 6.0000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT A + C              FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          26
          28
          30
          24
          36
 
resultcount :                     5
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+00
 4.0000000000000000000000000000000000000E+00
 6.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     5
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     5
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A,C HAVING A+C > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     5
 
Enter command:
SELECT A                  FROM T, T1 GROUP BY A,C HAVING SUM(A) > 2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
A
--------
       4
       4
       6
       6
      12
      12
 
resultcount :                     6
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A HAVING SUM(A) > 8!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.2000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING SUM(A) > 2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A HAVING SUM(A) > 8!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 4.8000000000000000000000000000000000000E+01
 6.0000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT A                  FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
A
--------
       2
       4
       6
       6
      12
      12
 
resultcount :                     6
 
Enter command:
SELECT A + C              FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          26
          28
          18
          30
          24
          36
 
resultcount :                     6
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+00
 4.0000000000000000000000000000000000000E+00
 6.0000000000000000000000000000000000000E+00
 6.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY A,C HAVING SUM(A)+C > 16!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.6000000000000000000000000000000000000E+01
 2.8000000000000000000000000000000000000E+01
 1.8000000000000000000000000000000000000E+01
 3.0000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 3.6000000000000000000000000000000000000E+01
 
resultcount :                     6
 
Enter command:
SELECT A                  FROM T, T1 GROUP BY A HAVING SUM(A+C) > 40!
 
resultcount :                     3
 
Enter command:
FETCH !
 
A
--------
       4
       6
      12
 
resultcount :                     3
 
Enter command:
SELECT A + C              FROM T, T1 GROUP BY A,C HAVING SUM(A+C) > 18!
 
resultcount :                     5
 
Enter command:
FETCH !
 
EXPRESSION1
------------
          26
          28
          30
          24
          36
 
resultcount :                     5
 
Enter command:
SELECT SUM(A)             FROM T, T1 GROUP BY A HAVING SUM(A+C) > 40!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 8.0000000000000000000000000000000000000E+00
 1.2000000000000000000000000000000000000E+01
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT SUM(A)+C           FROM T, T1 GROUP BY C HAVING SUM(A+C) > 40!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.6000000000000000000000000000000000000E+01
 4.8000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
SELECT SUM(A+C)           FROM T, T1 GROUP BY C HAVING SUM(A+C) > 40!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 7.2000000000000000000000000000000000000E+01
 1.2000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
