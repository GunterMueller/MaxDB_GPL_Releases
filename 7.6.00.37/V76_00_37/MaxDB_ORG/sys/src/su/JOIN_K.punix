JOIN_K.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_K ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (255))!
 
Enter command:
INSERT INTO T VALUES ('abcdefghijklm')!
 
Enter command:
INSERT INTO T VALUES ('nopqrstuvwxyz')!
 
Enter command:
CREATE TABLE T1 ( B CHAR (300))!
 
Enter command:
INSERT INTO T1 VALUES ('abcdefghijklm')!
 
Enter command:
INSERT INTO T1 VALUES ('t1-t1-t1-t1')!
 
Enter command:
SELECT * FROM T A, T B WHERE A.A = B.A !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A                 :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
A                 :  nopqrstuvwxyz
 
resultcount :                     2
 
Enter command:
SELECT * FROM T, T1 WHERE T.A || T1.B = 'abcdefghijklmabcdefghijklm' !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A                 :  abcdefghijklm
B                 :  abcdefghijklm
 
resultcount :                     1
 
Enter command:
CREATE TABLE J1 ( A CHAR (80), B CHAR (173)) !
 
Enter command:
INSERT INTO J1 VALUES ('aaa', 'bbb')!
 
Enter command:
SELECT * FROM J1, J1 J2, T WHERE J1.A > J2.A OR T.A = 'abcdefghijklm' !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A                 :  aaa
B                 :  bbb
A                 :  aaa
B                 :  bbb
A                 :  abcdefghijklm
 
resultcount :                     1
 
Enter command:
CLOSE!
 
Enter command:
SELECT * FROM J1 X, J1 Y WHERE X.A=Y.A AND X.B=Y.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                 :  aaa
B                 :  bbb
A                 :  aaa
B                 :  bbb
 
resultcount :                     1
 
Enter command:
SELECT * FROM T, T1 WHERE T.A = T1.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                 :  abcdefghijklm
B                 :  abcdefghijklm
 
resultcount :                     1
 
Enter command:
CREATE TABLE E ( E1 CHAR (8)) !
 
Enter command:
INSERT E SET E1 = 'e1'!
 
Enter command:
CREATE VIEW K3 AS SELECT CHR(T.A,18), CHR(T.A,257), T.A FROM E, T !
 
Enter command:
SELECT * FROM T, K3 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
A                 :  abcdefghijklm
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  abcdefghijklm
EXPRESSION1       :  nopqrstuvwxyz
EXPRESSION2       :  nopqrstuvwxyz
A                 :  nopqrstuvwxyz
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
EXPRESSION1       :  nopqrstuvwxyz
EXPRESSION2       :  nopqrstuvwxyz
A                 :  nopqrstuvwxyz
 
resultcount :                     4
 
Enter command:
SELECT * FROM T, K3 WHERE EXPRESSION1 = 'abcdefghijklm'!
 
resultcount :                     2
 
Enter command:
FETCH!
 
A                 :  abcdefghijklm
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
 
resultcount :                     2
 
Enter command:
DROP TABLE E !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB1
(
 "K0"    CHAR   (240) ASCII NOT NULL,
 "K1"    FIXED  (10,0) NOT NULL,
 "I1"    FIXED  (10,0),
 "I2"    FIXED  (10,0),
 "C1"    CHAR   (20) ASCII,
 "C2"    VARCHAR(20) ASCII NOT NULL,
 "I3"    FIXED  (10,0) NOT NULL,
 "CLLEN" FIXED  (10,0),
 "CF0"   CHAR   (1500) ASCII,
 "CLB"   LONG ASCII,
 PRIMARY KEY ("K0", "K1")
)!
 
Enter command:
CREATE INDEX TAB1_K1 ON TAB1("K1" ASC)!
 
Enter command:
 
INSERT INTO TAB1(K0, K1, C2, I3) VALUES ('0', 0,'cf', 40)!
 
Enter command:
INSERT INTO TAB1(K0, K1, C2, I3) VALUES ('0', 1,'cf', 50)!
 
Enter command:
INSERT INTO TAB1(K0, K1, C2, I3) VALUES ('0', 2,'cf', 59)!
 
Enter command:
 
CREATE VIEW "SBVIEW_I_P_16" (
 "K0", "K1", "I1", "I2", "C1", "C2", "I3", "CLLEN", "CF0", "CLB" )
AS SELECT T1.K0, T1.K1, T1.I1, T1.I2, T1.C1, T1.C2, T1.I3,
T1.CLLEN, T1.CF0, T1.CLB
FROM TAB1 T1, TAB1 T2, TAB1 T3, TAB1 T4,
TAB1 T5, TAB1 T6, TAB1 T7, TAB1 T8, TAB1 T9, TAB1 T10, TAB1 T11,
TAB1 T12, TAB1 T13, TAB1 T14, TAB1 T15, TAB1 T16
WHERE
T2.K1 = T1.K1   AND T3.K1 = T2.K1   AND
T4.K1 = T3.K1   AND T5.K1 = T4.K1   AND T6.K1 = T5.K1   AND
T7.K1 = T6.K1   AND T8.K1 = T7.K1   AND T9.K1 = T8.K1   AND
T10.K1 = T9.K1  AND T11.K1 = T10.K1 AND T12.K1 = T11.K1 AND
T13.K1 = T12.K1 AND T14.K1 = T13.K1 AND T15.K1 = T14.K1 AND
T16.K1 = T15.K1 !
 
Enter command:
 
EXPLAIN SELECT COUNT(I3) INTO :P_1
FROM SBVIEW_I_P_16 WHERE I3 BETWEEN 48 AND 58 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               |                    | TABLE SCAN                               |          1
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
 
SELECT COUNT(I3) INTO :P_1
FROM SBVIEW_I_P_16 WHERE I3 BETWEEN 48 AND 58 !
 
EXPRESSION1       :            1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE INOB
(
 "MANDT"  VARCHAR (3) ASCII    NOT NULL    DEFAULT '000',
 "CUOBJ"  VARCHAR (18) ASCII    NOT NULL    DEFAULT '000000000000000000',
 "KLART"  VARCHAR (3) ASCII    NOT NULL    DEFAULT ' ',
 "OBTAB"  VARCHAR (30) ASCII    NOT NULL    DEFAULT ' ',
 "OBJEK"  VARCHAR (50) ASCII    NOT NULL    DEFAULT ' ',
 "ROBTAB" VARCHAR (30) ASCII    NOT NULL    DEFAULT ' ',
 "ROBJEK" VARCHAR (50) ASCII    NOT NULL    DEFAULT ' ',
 "CLINT"  VARCHAR (10) ASCII    NOT NULL    DEFAULT '0000000000',
 "STATU"  VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "CUCOZHL" VARCHAR (4) ASCII    NOT NULL    DEFAULT '0000',
 "PARENT" VARCHAR (18) ASCII    NOT NULL    DEFAULT '000000000000000000',
 "ROOT"   VARCHAR (18) ASCII    NOT NULL    DEFAULT '000000000000000000',
 "EXPERTE" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "MATNR"  VARCHAR (18) ASCII    NOT NULL    DEFAULT ' ',
 "DATUV"  VARCHAR (8) ASCII    NOT NULL    DEFAULT '00000000',
 "TECHS"  VARCHAR (12) ASCII    NOT NULL    DEFAULT ' ',
 PRIMARY KEY ("MANDT", "CUOBJ")
)!
 
Enter command:
CREATE INDEX "INOB~1" ON INOB(
"MANDT" ASC, "OBTAB" ASC, "OBJEK" ASC, "KLART" ASC)!
 
Enter command:
 
CREATE TABLE KSSK
(
 "MANDT" VARCHAR (3) ASCII    NOT NULL    DEFAULT '000',
 "OBJEK" VARCHAR (50) ASCII    NOT NULL    DEFAULT ' ',
 "MAFID" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "KLART" VARCHAR (3) ASCII    NOT NULL    DEFAULT ' ',
 "CLINT" VARCHAR (10) ASCII    NOT NULL    DEFAULT '0000000000',
 "ADZHL" VARCHAR (4) ASCII    NOT NULL    DEFAULT '0000',
 "ZAEHL" FIXED (5,0)    NOT NULL    DEFAULT      0,
 "STATU" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "STDCL" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "REKRI" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "AENNR" VARCHAR (12) ASCII    NOT NULL    DEFAULT ' ',
 "DATUV" VARCHAR (8) ASCII    NOT NULL    DEFAULT '00000000',
 "LKENZ" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 PRIMARY KEY ("MANDT", "OBJEK", "MAFID", "KLART", "CLINT", "ADZHL")
)!
 
Enter command:
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS;KEYACCESS)*/
  DISTINCT  T_01."CLINT"
FROM
  "INOB" T_00, "KSSK" T_01
WHERE
  T_01."MANDT" = '200' AND T_01."OBJEK" = T_00 . "CUOBJ" AND
  T_00."MANDT" = '200' AND T_00."OBTAB" = '/SAPAPO/RES_HEAD' AND
  T_00."KLART" = '400'
  !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T_00               | INOB~1             | RANGE CONDITION FOR INDEX                |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | MANDT              |      (USED INDEX COLUMN)                 |
                   |                    | OBTAB              |      (USED INDEX COLUMN)                 |
                   |                    | MANDT              |      (USED KEY COLUMN)                   |
                   | T_01               |                    | JOIN VIA RANGE OF MULTIPLE KEY COLUMNS   |          1
                   |                    | MANDT              |      (USED KEY COLUMN)                   |
                   |                    | OBJEK              |      (USED KEY COLUMN)                   |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS;KEYACCESS)*/
  DISTINCT  T_01."CLINT"
FROM
  "INOB" T_00, "KSSK" T_01
WHERE
  T_01."MANDT" = '200' AND T_01."OBJEK" = T_00 . "CUOBJ" AND
  T_00."MANDT" = '200' AND T_00."OBTAB" = '/SAPAPO/RES_HEAD' AND
  T_00."KLART" = '400'
  !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB ( K1 INT, K2 INT, K3 INT, PRIMARY KEY(K1, K2))!
 
Enter command:
CREATE INDEX I1 ON TAB(K1)!
 
Enter command:
 
INSERT INTO TAB VALUES(0, 0, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 8, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 9, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 10, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 0, 0)!
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( 10, 10, 9, 9, 8, 8, 10, 10 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | IN CONDITION FOR KEY                     |          1
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   |                    | K2                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          7
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( 10, 10, 9, 9, 8, 8, 10, 10 )!
 
resultcount :                    10
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | IN CONDITION FOR KEY                     |          1
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         13
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN SEQUENCE
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
TEXT              :  TABLE No.  1
--------------------------------------------------------------------------------
TEXT              :  T1
--------------------------------------------------------------------------------
TEXT              :    KEY IN
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost            11
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  2
--------------------------------------------------------------------------------
TEXT              :  T2
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             3
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :   | FROM  1   2
--------------------------------------------------------------------------------
TEXT              :  TO
--------------------------------------------------------------------------------
TEXT              :   1      --  ??
--------------------------------------------------------------------------------
TEXT              :   2      ??  --
--------------------------------------------------------------------------------
TEXT              :  mt_cnt :        0
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier    costs         ji  mi
--------------------------------------------------------------------------------
TEXT              :   1  <>, none       0.214E+10     0.244917E+12  0   0
--------------------------------------------------------------------------------
TEXT              :   2  <>, none       0.214E+10     0.244917E+12  0   0
--------------------------------------------------------------------------------
TEXT              :  JOIN SEQUENCE SEARCH = PREDEFINED
 
Enter command:
EXPLAIN
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | IN CONDITION FOR KEY                     |          1
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         13
 
Enter command:
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 | I1                 | IN CONDITION FOR INDEX                   |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN SEQUENCE
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
TEXT              :  TABLE No.  1
--------------------------------------------------------------------------------
TEXT              :  T1
--------------------------------------------------------------------------------
TEXT              :    INV IN (Index Only)
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             3
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  2
--------------------------------------------------------------------------------
TEXT              :  T2
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             3
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :   | FROM  1   2
--------------------------------------------------------------------------------
TEXT              :  TO
--------------------------------------------------------------------------------
TEXT              :   1      --  ??
--------------------------------------------------------------------------------
TEXT              :   2      ??  --
--------------------------------------------------------------------------------
TEXT              :  mt_cnt :        0
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier    costs         ji  mi
--------------------------------------------------------------------------------
TEXT              :   1  <>, none       0.214E+10     0.243532E+12  0   0
--------------------------------------------------------------------------------
TEXT              :   2  <>, none       0.214E+10     0.243532E+12  0   0
--------------------------------------------------------------------------------
TEXT              :  JOIN SEQUENCE SEARCH = PREDEFINED
 
Enter command:
EXPLAIN
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 | I1                 | IN CONDITION FOR INDEX                   |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE T1 (C11 INT, C12 INT)!
 
Enter command:
CREATE TABLE T2 (C21 INT, C22 INT, C23 CHAR(5))!
 
Enter command:
 
INSERT INTO T1 VALUES( 1, 2)!
 
Enter command:
INSERT INTO T1 VALUES( 2, 2)!
 
Enter command:
INSERT INTO T1 VALUES( 3, 5)!
 
Enter command:
 
INSERT INTO T2 VALUES( 2, 2, 'asdfg')!
 
Enter command:
INSERT INTO T2 VALUES( 2, 4, 'aswtq')!
 
Enter command:
 
SELECT * FROM T1, T2
WHERE
  T2.C21 (+) = T1.C11 AND
  T2.C22 IN (1, 2)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
C11         | C12         | C21         | C22         | C23
------------+-------------+-------------+-------------+------
          2 |           2 |           2 |           2 | asdfg
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1, T2
WHERE
  T2.C21 (+) = T1.C11 AND
  T2.C22 BETWEEN 2 AND 5 !
 
resultcount :                     2
 
Enter command:
FETCH!
 
C11         | C12         | C21         | C22         | C23
------------+-------------+-------------+-------------+------
          2 |           2 |           2 |           2 | asdfg
          2 |           2 |           2 |           4 | aswtq
 
resultcount :                     2
 
Enter command:
SELECT * FROM T1, T2
WHERE
  T2.C21 (+) = T1.C11 AND
  T2.C23 LIKE 'as%' !
 
resultcount :                     2
 
Enter command:
FETCH!
 
C11         | C12         | C21         | C22         | C23
------------+-------------+-------------+-------------+------
          2 |           2 |           2 |           2 | asdfg
          2 |           2 |           2 |           4 | aswtq
 
resultcount :                     2
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
SENDERID DBM!
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_OPERATOR_SORT = 'NO' !
 
Enter command:
 
CREATE TABLE TAB( C1 INT, C2 INT )!
 
Enter command:
 
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1 = T2.C1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1=T2.C1 AND T1.C2=T2.C2!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          7
 
Enter command:
 
SET PARAMETER OPTIMIZE_JOIN_OPERATOR_SORT = 'YES' !
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1 = T2.C1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1=T2.C1 AND T1.C2=T2.C2!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          7
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1=T2.C1 AND T1.C2=T2.C2
AND ROWNO <= 1!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          7
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB ( K1 INT, K2 INT, K3 INT, PRIMARY KEY(K1, K2))!
 
Enter command:
CREATE INDEX I1 ON TAB(K1)!
 
Enter command:
 
INSERT INTO TAB VALUES(0, 0, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 8, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 9, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 10, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 0, 0)!
 
Enter command:
 
CREATE TABLE SUBQTAB1 ( C1 INT )!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(9)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(9)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(8)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(8)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
 
CREATE TABLE SUBQTAB2 ( C1 INT )!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(0)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(1)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(2)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(0)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(1)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(2)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(2)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(1)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(0)!
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( SELECT C1 FROM SUBQTAB1 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | SUBQTAB1           |                    | TABLE SCAN                               |          1
                   |                    |                    | NO STRATEGY NOW (ONLY AT EXECUTION TIME) |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( SELECT C1 FROM SUBQTAB1 )!
 
resultcount :                    10
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | SUBQTAB2           |                    | TABLE SCAN                               |          1
                   |                    |                    | NO STRATEGY NOW (ONLY AT EXECUTION TIME) |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,SUBQ_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | SUBQTAB2           |                    | TABLE SCAN                               |          1
                   |                    |                    | NO STRATEGY NOW (ONLY AT EXECUTION TIME) |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,SUBQ_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,SUBQ_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
SENDERID XCI!
 
FILE JOIN_K ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (255))!
 
Enter command:
INSERT INTO T VALUES ('abcdefghijklm')!
 
Enter command:
INSERT INTO T VALUES ('nopqrstuvwxyz')!
 
Enter command:
CREATE TABLE T1 ( B CHAR (300))!
 
Enter command:
INSERT INTO T1 VALUES ('abcdefghijklm')!
 
Enter command:
INSERT INTO T1 VALUES ('t1-t1-t1-t1')!
 
Enter command:
SELECT * FROM T A, T B WHERE A.A = B.A !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A                 :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
A                 :  nopqrstuvwxyz
 
resultcount :                     2
 
Enter command:
SELECT * FROM T, T1 WHERE T.A || T1.B = 'abcdefghijklmabcdefghijklm' !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A                 :  abcdefghijklm
B                 :  abcdefghijklm
 
resultcount :                     1
 
Enter command:
CREATE TABLE J1 ( A CHAR (80), B CHAR (173)) !
 
Enter command:
INSERT INTO J1 VALUES ('aaa', 'bbb')!
 
Enter command:
SELECT * FROM J1, J1 J2, T WHERE J1.A > J2.A OR T.A = 'abcdefghijklm' !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A                 :  aaa
B                 :  bbb
A                 :  aaa
B                 :  bbb
A                 :  abcdefghijklm
 
resultcount :                     1
 
Enter command:
CLOSE!
 
Enter command:
SELECT * FROM J1 X, J1 Y WHERE X.A=Y.A AND X.B=Y.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                 :  aaa
B                 :  bbb
A                 :  aaa
B                 :  bbb
 
resultcount :                     1
 
Enter command:
SELECT * FROM T, T1 WHERE T.A = T1.B !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A                 :  abcdefghijklm
B                 :  abcdefghijklm
 
resultcount :                     1
 
Enter command:
CREATE TABLE E ( E1 CHAR (8)) !
 
Enter command:
INSERT E SET E1 = 'e1'!
 
Enter command:
CREATE VIEW K3 AS SELECT CHR(T.A,18), CHR(T.A,257), T.A FROM E, T !
 
Enter command:
SELECT * FROM T, K3 !
 
resultcount :                     4
 
Enter command:
FETCH!
 
A                 :  abcdefghijklm
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  abcdefghijklm
EXPRESSION1       :  nopqrstuvwxyz
EXPRESSION2       :  nopqrstuvwxyz
A                 :  nopqrstuvwxyz
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
EXPRESSION1       :  nopqrstuvwxyz
EXPRESSION2       :  nopqrstuvwxyz
A                 :  nopqrstuvwxyz
 
resultcount :                     4
 
Enter command:
SELECT * FROM T, K3 WHERE EXPRESSION1 = 'abcdefghijklm'!
 
resultcount :                     2
 
Enter command:
FETCH!
 
A                 :  abcdefghijklm
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
--------------------------------------------------------------------------------
A                 :  nopqrstuvwxyz
EXPRESSION1       :  abcdefghijklm
EXPRESSION2       :  abcdefghijklm
A                 :  abcdefghijklm
 
resultcount :                     2
 
Enter command:
DROP TABLE E !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB1
(
 "K0"    CHAR   (240) ASCII NOT NULL,
 "K1"    FIXED  (10,0) NOT NULL,
 "I1"    FIXED  (10,0),
 "I2"    FIXED  (10,0),
 "C1"    CHAR   (20) ASCII,
 "C2"    VARCHAR(20) ASCII NOT NULL,
 "I3"    FIXED  (10,0) NOT NULL,
 "CLLEN" FIXED  (10,0),
 "CF0"   CHAR   (1500) ASCII,
 "CLB"   LONG ASCII,
 PRIMARY KEY ("K0", "K1")
)!
 
Enter command:
CREATE INDEX TAB1_K1 ON TAB1("K1" ASC)!
 
Enter command:
 
INSERT INTO TAB1(K0, K1, C2, I3) VALUES ('0', 0,'cf', 40)!
 
Enter command:
INSERT INTO TAB1(K0, K1, C2, I3) VALUES ('0', 1,'cf', 50)!
 
Enter command:
INSERT INTO TAB1(K0, K1, C2, I3) VALUES ('0', 2,'cf', 59)!
 
Enter command:
 
CREATE VIEW "SBVIEW_I_P_16" (
 "K0", "K1", "I1", "I2", "C1", "C2", "I3", "CLLEN", "CF0", "CLB" )
AS SELECT T1.K0, T1.K1, T1.I1, T1.I2, T1.C1, T1.C2, T1.I3,
T1.CLLEN, T1.CF0, T1.CLB
FROM TAB1 T1, TAB1 T2, TAB1 T3, TAB1 T4,
TAB1 T5, TAB1 T6, TAB1 T7, TAB1 T8, TAB1 T9, TAB1 T10, TAB1 T11,
TAB1 T12, TAB1 T13, TAB1 T14, TAB1 T15, TAB1 T16
WHERE
T2.K1 = T1.K1   AND T3.K1 = T2.K1   AND
T4.K1 = T3.K1   AND T5.K1 = T4.K1   AND T6.K1 = T5.K1   AND
T7.K1 = T6.K1   AND T8.K1 = T7.K1   AND T9.K1 = T8.K1   AND
T10.K1 = T9.K1  AND T11.K1 = T10.K1 AND T12.K1 = T11.K1 AND
T13.K1 = T12.K1 AND T14.K1 = T13.K1 AND T15.K1 = T14.K1 AND
T16.K1 = T15.K1 !
 
Enter command:
 
EXPLAIN SELECT COUNT(I3) INTO :P_1
FROM SBVIEW_I_P_16 WHERE I3 BETWEEN 48 AND 58 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               |                    | TABLE SCAN                               |          1
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
KERN               | TAB1               | TAB1_K1            | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
 
SELECT COUNT(I3) INTO :P_1
FROM SBVIEW_I_P_16 WHERE I3 BETWEEN 48 AND 58 !
 
EXPRESSION1       :            1
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE INOB
(
 "MANDT"  VARCHAR (3) ASCII    NOT NULL    DEFAULT '000',
 "CUOBJ"  VARCHAR (18) ASCII    NOT NULL    DEFAULT '000000000000000000',
 "KLART"  VARCHAR (3) ASCII    NOT NULL    DEFAULT ' ',
 "OBTAB"  VARCHAR (30) ASCII    NOT NULL    DEFAULT ' ',
 "OBJEK"  VARCHAR (50) ASCII    NOT NULL    DEFAULT ' ',
 "ROBTAB" VARCHAR (30) ASCII    NOT NULL    DEFAULT ' ',
 "ROBJEK" VARCHAR (50) ASCII    NOT NULL    DEFAULT ' ',
 "CLINT"  VARCHAR (10) ASCII    NOT NULL    DEFAULT '0000000000',
 "STATU"  VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "CUCOZHL" VARCHAR (4) ASCII    NOT NULL    DEFAULT '0000',
 "PARENT" VARCHAR (18) ASCII    NOT NULL    DEFAULT '000000000000000000',
 "ROOT"   VARCHAR (18) ASCII    NOT NULL    DEFAULT '000000000000000000',
 "EXPERTE" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "MATNR"  VARCHAR (18) ASCII    NOT NULL    DEFAULT ' ',
 "DATUV"  VARCHAR (8) ASCII    NOT NULL    DEFAULT '00000000',
 "TECHS"  VARCHAR (12) ASCII    NOT NULL    DEFAULT ' ',
 PRIMARY KEY ("MANDT", "CUOBJ")
)!
 
Enter command:
CREATE INDEX "INOB~1" ON INOB(
"MANDT" ASC, "OBTAB" ASC, "OBJEK" ASC, "KLART" ASC)!
 
Enter command:
 
CREATE TABLE KSSK
(
 "MANDT" VARCHAR (3) ASCII    NOT NULL    DEFAULT '000',
 "OBJEK" VARCHAR (50) ASCII    NOT NULL    DEFAULT ' ',
 "MAFID" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "KLART" VARCHAR (3) ASCII    NOT NULL    DEFAULT ' ',
 "CLINT" VARCHAR (10) ASCII    NOT NULL    DEFAULT '0000000000',
 "ADZHL" VARCHAR (4) ASCII    NOT NULL    DEFAULT '0000',
 "ZAEHL" FIXED (5,0)    NOT NULL    DEFAULT      0,
 "STATU" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "STDCL" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "REKRI" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 "AENNR" VARCHAR (12) ASCII    NOT NULL    DEFAULT ' ',
 "DATUV" VARCHAR (8) ASCII    NOT NULL    DEFAULT '00000000',
 "LKENZ" VARCHAR (1) ASCII    NOT NULL    DEFAULT ' ',
 PRIMARY KEY ("MANDT", "OBJEK", "MAFID", "KLART", "CLINT", "ADZHL")
)!
 
Enter command:
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS;KEYACCESS)*/
  DISTINCT  T_01."CLINT"
FROM
  "INOB" T_00, "KSSK" T_01
WHERE
  T_01."MANDT" = '200' AND T_01."OBJEK" = T_00 . "CUOBJ" AND
  T_00."MANDT" = '200' AND T_00."OBTAB" = '/SAPAPO/RES_HEAD' AND
  T_00."KLART" = '400'
  !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T_00               | INOB~1             | RANGE CONDITION FOR INDEX                |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | MANDT              |      (USED INDEX COLUMN)                 |
                   |                    | OBTAB              |      (USED INDEX COLUMN)                 |
                   |                    | MANDT              |      (USED KEY COLUMN)                   |
                   | T_01               |                    | JOIN VIA RANGE OF MULTIPLE KEY COLUMNS   |          1
                   |                    | MANDT              |      (USED KEY COLUMN)                   |
                   |                    | OBJEK              |      (USED KEY COLUMN)                   |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS;KEYACCESS)*/
  DISTINCT  T_01."CLINT"
FROM
  "INOB" T_00, "KSSK" T_01
WHERE
  T_01."MANDT" = '200' AND T_01."OBJEK" = T_00 . "CUOBJ" AND
  T_00."MANDT" = '200' AND T_00."OBTAB" = '/SAPAPO/RES_HEAD' AND
  T_00."KLART" = '400'
  !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB ( K1 INT, K2 INT, K3 INT, PRIMARY KEY(K1, K2))!
 
Enter command:
CREATE INDEX I1 ON TAB(K1)!
 
Enter command:
 
INSERT INTO TAB VALUES(0, 0, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 8, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 9, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 10, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 0, 0)!
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( 10, 10, 9, 9, 8, 8, 10, 10 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | IN CONDITION FOR KEY                     |          1
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   |                    | K2                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( 10, 10, 9, 9, 8, 8, 10, 10 )!
 
resultcount :                    10
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | IN CONDITION FOR KEY                     |          1
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN SEQUENCE
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
TEXT              :  TABLE No.  1
--------------------------------------------------------------------------------
TEXT              :  T1
--------------------------------------------------------------------------------
TEXT              :    KEY IN
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             3
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  2
--------------------------------------------------------------------------------
TEXT              :  T2
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE FETCH
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :   | FROM  1   2
--------------------------------------------------------------------------------
TEXT              :  TO
--------------------------------------------------------------------------------
TEXT              :   1      --  ??
--------------------------------------------------------------------------------
TEXT              :   2      ??  --
--------------------------------------------------------------------------------
TEXT              :  mt_cnt :        0
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier    costs         ji  mi
--------------------------------------------------------------------------------
TEXT              :   1  <>, none       0.214E+10     0.131651E+13  0   0
--------------------------------------------------------------------------------
TEXT              :   2  <>, none       0.214E+10     0.131651E+13  0   0
--------------------------------------------------------------------------------
TEXT              :  JOIN SEQUENCE SEARCH = PREDEFINED
--------------------------------------------------------------------------------
TEXT              :  BUFFER SIZE PER TASK :     131072  BYTES
--------------------------------------------------------------------------------
TEXT              :  TABLE  1 :          2  bytes (recs est.          1)
--------------------------------------------------------------------------------
TEXT              :  TABLE  2 :     131070  BYTES (recs est.          1)
 
Enter command:
EXPLAIN
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | IN CONDITION FOR KEY                     |          1
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,IN_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 | I1                 | IN CONDITION FOR INDEX                   |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN SEQUENCE
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
TEXT              :  TABLE No.  1
--------------------------------------------------------------------------------
TEXT              :  T1
--------------------------------------------------------------------------------
TEXT              :    INV IN (Index Only)
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :  TABLE No.  2
--------------------------------------------------------------------------------
TEXT              :  T2
--------------------------------------------------------------------------------
TEXT              :    KEY RANGE FETCH
--------------------------------------------------------------------------------
TEXT              :   strat       0.100E+01
--------------------------------------------------------------------------------
TEXT              :   pages searc 0.100E+01
--------------------------------------------------------------------------------
TEXT              :   all_pages        1
--------------------------------------------------------------------------------
TEXT              :   cost             1
--------------------------------------------------------------------------------
TEXT              :   recs_per_p       1
--------------------------------------------------------------------------------
TEXT              :   | FROM  1   2
--------------------------------------------------------------------------------
TEXT              :  TO
--------------------------------------------------------------------------------
TEXT              :   1      --  ??
--------------------------------------------------------------------------------
TEXT              :   2      ??  --
--------------------------------------------------------------------------------
TEXT              :  mt_cnt :        0
--------------------------------------------------------------------------------
TEXT              :  TO  via           multiplier    costs         ji  mi
--------------------------------------------------------------------------------
TEXT              :   1  <>, none       0.214E+10     0.131512E+13  0   0
--------------------------------------------------------------------------------
TEXT              :   2  <>, none       0.214E+10     0.131512E+13  0   0
--------------------------------------------------------------------------------
TEXT              :  JOIN SEQUENCE SEARCH = PREDEFINED
--------------------------------------------------------------------------------
TEXT              :  BUFFER SIZE PER TASK :     131072  BYTES
--------------------------------------------------------------------------------
TEXT              :  TABLE  1 :          2  bytes (recs est.          1)
--------------------------------------------------------------------------------
TEXT              :  TABLE  2 :     131070  BYTES (recs est.          1)
 
Enter command:
EXPLAIN
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 | I1                 | IN CONDITION FOR INDEX                   |          1
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | K1                 |      (USED INDEX COLUMN)                 |
                   |                    | K1                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,IN_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( 0, 1, 2, 0, 1, 2, 2, 1, 0 )!
 
resultcount :                    25
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE T1 (C11 INT, C12 INT)!
 
Enter command:
CREATE TABLE T2 (C21 INT, C22 INT, C23 CHAR(5))!
 
Enter command:
 
INSERT INTO T1 VALUES( 1, 2)!
 
Enter command:
INSERT INTO T1 VALUES( 2, 2)!
 
Enter command:
INSERT INTO T1 VALUES( 3, 5)!
 
Enter command:
 
INSERT INTO T2 VALUES( 2, 2, 'asdfg')!
 
Enter command:
INSERT INTO T2 VALUES( 2, 4, 'aswtq')!
 
Enter command:
 
SELECT * FROM T1, T2
WHERE
  T2.C21 (+) = T1.C11 AND
  T2.C22 IN (1, 2)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
C11         | C12         | C21         | C22         | C23
------------+-------------+-------------+-------------+------
          2 |           2 |           2 |           2 | asdfg
 
resultcount :                     1
 
Enter command:
SELECT * FROM T1, T2
WHERE
  T2.C21 (+) = T1.C11 AND
  T2.C22 BETWEEN 2 AND 5 !
 
resultcount :                     2
 
Enter command:
FETCH!
 
C11         | C12         | C21         | C22         | C23
------------+-------------+-------------+-------------+------
          2 |           2 |           2 |           2 | asdfg
          2 |           2 |           2 |           4 | aswtq
 
resultcount :                     2
 
Enter command:
SELECT * FROM T1, T2
WHERE
  T2.C21 (+) = T1.C11 AND
  T2.C23 LIKE 'as%' !
 
resultcount :                     2
 
Enter command:
FETCH!
 
C11         | C12         | C21         | C22         | C23
------------+-------------+-------------+-------------+------
          2 |           2 |           2 |           2 | asdfg
          2 |           2 |           2 |           4 | aswtq
 
resultcount :                     2
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
SENDERID DBM!
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_JOIN_OPERATOR_SORT = 'NO' !
 
Enter command:
 
CREATE TABLE TAB( C1 INT, C2 INT )!
 
Enter command:
 
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1 = T2.C1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1=T2.C1 AND T1.C2=T2.C2!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
SET PARAMETER OPTIMIZE_JOIN_OPERATOR_SORT = 'YES' !
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1 = T2.C1 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | C1                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1=T2.C1 AND T1.C2=T2.C2!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | JOIN VIA RANGE OF MULTIPLE KEY COLUMNS   |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | C1                 |      (USED SORT COLUMN)                  |
                   |                    | C2                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
EXPLAIN
SELECT * FROM TAB T1, TAB T2 WHERE T1.C1=T2.C1 AND T1.C2=T2.C2
AND ROWNO <= 1!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | TABLE SCAN                               |          1
                   | T2                 |                    | JOIN VIA RANGE OF MULTIPLE KEY COLUMNS   |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | C1                 |      (USED SORT COLUMN)                  |
                   |                    | C2                 |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB ( K1 INT, K2 INT, K3 INT, PRIMARY KEY(K1, K2))!
 
Enter command:
CREATE INDEX I1 ON TAB(K1)!
 
Enter command:
 
INSERT INTO TAB VALUES(0, 0, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 8, 0)!
 
Enter command:
INSERT INTO TAB VALUES(1, 9, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 10, 0)!
 
Enter command:
INSERT INTO TAB VALUES(2, 0, 0)!
 
Enter command:
 
CREATE TABLE SUBQTAB1 ( C1 INT )!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(9)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(9)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(8)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(8)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
INSERT INTO SUBQTAB1 VALUES(10)!
 
Enter command:
 
CREATE TABLE SUBQTAB2 ( C1 INT )!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(0)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(1)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(2)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(0)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(1)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(2)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(2)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(1)!
 
Enter command:
INSERT INTO SUBQTAB2 VALUES(0)!
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( SELECT C1 FROM SUBQTAB1 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | SUBQTAB1           |                    | TABLE SCAN                               |          1
                   |                    |                    | NO STRATEGY NOW (ONLY AT EXECUTION TIME) |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 = 1 AND T1.K2 IN ( SELECT C1 FROM SUBQTAB1 )!
 
resultcount :                    10
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | SUBQTAB2           |                    | TABLE SCAN                               |          1
                   |                    |                    | NO STRATEGY NOW (ONLY AT EXECUTION TIME) |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=KEYACCESS,SUBQ_STRATEGY)*/ *
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,SUBQ_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | SUBQTAB2           |                    | TABLE SCAN                               |          1
                   |                    |                    | NO STRATEGY NOW (ONLY AT EXECUTION TIME) |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT /*+ORDERED,JOIN(ACCESS=INDEXACCESS,SUBQ_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
SELECT /*+ORDERED,JOIN(BUFFERSIZE(2),ACCESS=INDEXACCESS,SUBQ_STRATEGY)*/
T1.K1 AS "t1.k1", T1.K2 AS "t1.k2", T2.K1 AS "t2.k1", T2.K2 AS "t2.k2"
FROM TAB T1, TAB T2 WHERE
T1.K1 IN ( SELECT C1 FROM SUBQTAB2 )!
 
resultcount :                    25
 
Enter command:
 
COMMIT WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
SENDERID XCI!
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
