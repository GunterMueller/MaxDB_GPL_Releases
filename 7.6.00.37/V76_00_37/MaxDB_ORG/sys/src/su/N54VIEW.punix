N54VIEW.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 FIXED(2) KEY, T1XC2 FIXED(2) KEY,
                  T1XC3 FIXED(2) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(2) KEY, T2XC2 FIXED(2), T2XC3 FIXED(2) ) !
 
Enter command:
CREATE TABLE T3 ( T3XC1 FIXED(2), T3XC2 FIXED(2), T3XC3 FIXED(2) ) !
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM T1, T2, T3
   WHERE T1XC1 = T2XC1 AND T2XC2 = T3XC1 !
 
Enter command:
INSERT T1 VALUES ( 2, 3, 5 ) !
 
Enter command:
INSERT T1 VALUES ( 4, 1, 3 ) !
 
Enter command:
INSERT T1 VALUES ( 8, 3, 1 ) !
 
Enter command:
INSERT T2 VALUES ( 4, 2, 6 ) !
 
Enter command:
INSERT T2 VALUES ( 8, 1, 5 ) !
 
Enter command:
INSERT T2 VALUES ( 2, 5, 5 ) !
 
Enter command:
INSERT T3 VALUES ( 2, 3, 3 ) !
 
Enter command:
INSERT T3 VALUES ( 1, 6, 6 ) !
 
Enter command:
INSERT T3 VALUES ( 1, 2, 4 ) !
 
Enter command:
INSERT T3 VALUES ( 5, 2, 3 ) !
 
Enter command:
INSERT T3 VALUES ( 3, 1, 7 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  4   |   1   |   3   |   4   |   2   |   6   |   2   |   3   |   3
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   6   |   6
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     4
 
Enter command:
SELECT * FROM V1 WHERE T1XC1 < T3XC1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE T1XC1 + T2XC3 < 7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM V1 WHERE T1XC2 > T2XC2 AND T1XC3 + T3XC1 = T3XC2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE T1XC2 > T2XC2 AND T2XC3 > T3XC3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
 
resultcount :                     1
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT * FROM V1 WHERE T1XC2 = T3XC3 OR T1XC2 < T2XC2 !
 
resultcount :                     2
 
Enter command:
SELECT * FROM ERG1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  4   |   1   |   3   |   4   |   2   |   6   |   2   |   3   |   3
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     2
 
Enter command:
DECLARE ERG2 CURSOR FOR
SELECT * FROM V1 WHERE T1XC2 = T3XC3 AND T1XC3 = T2XC2 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM ERG2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT T1XC1, T2XC3 FROM V1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
T1XC1 | T2XC3
------+------
  2   |   5
  4   |   6
  8   |   5
 
resultcount :                     3
 
Enter command:
SELECT * FROM V1 K WHERE K.T2XC2 = K.T1XC3 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   6   |   6
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     3
 
Enter command:
SELECT K.T1XC1, T1XC2 FROM V1 K WHERE T1XC1 < K.T1XC2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | T1XC2
------+------
  2   |   3
 
resultcount :                     1
 
Enter command:
SELECT T1XC1, T2XC2 NEU1 FROM V1 WHERE T1XC1 < 3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | NEU1
------+-----
  2   |   5
 
resultcount :                     1
 
Enter command:
SELECT V1.* FROM V1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  4   |   1   |   3   |   4   |   2   |   6   |   2   |   3   |   3
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   6   |   6
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     4
 
Enter command:
SELECT K.* FROM V1 K !
 
resultcount :                     4
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  4   |   1   |   3   |   4   |   2   |   6   |   2   |   3   |   3
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   6   |   6
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
  2   |   3   |   5   |   2   |   5   |   5   |   5   |   2   |   3
 
resultcount :                     4
 
Enter command:
SELECT T1.* FROM V1 !
 
***ERROR  -8010 Table name must be in from list                            0011
 
Enter command:
SELECT T1XC1 + T2XC2 + T3XC1 NEU1 FROM V1 WHERE T1XC1 / 2 = T3XC3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
NEU1
-----
   10
 
resultcount :                     1
 
Enter command:
SELECT ALL V1.T1XC1, T1XC2, KERN.V1.T2XC2 FROM KERN.V1
   WHERE V1.T1XC1 + T1XC2 > KERN.V1.T2XC2  ORDER BY T1XC2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC2
------+-------+------
  4   |   1   |   2
  8   |   3   |   1
  8   |   3   |   1
 
resultcount :                     3
 
Enter command:
SELECT T1XC2, T2XC1, T3XC3 FROM V1
   WHERE T1XC2 < T3XC3 AND T1XC2 < T2XC1
   ORDER BY 3 ASC !
 
resultcount :                     3
 
Enter command:
FETCH !
 
T1XC2 | T2XC1 | T3XC3
------+-------+------
  1   |   4   |   3
  3   |   8   |   4
  3   |   8   |   6
 
resultcount :                     3
 
Enter command:
SELECT T1XC1, T1XC2, T2XC3 FROM V1
   WHERE T1XC1 + T1XC2 <= T2XC3
   ORDER BY 2 ASC, V1.T2XC3 DESC !
 
resultcount :                     2
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC3
------+-------+------
  4   |   1   |   6
  2   |   3   |   5
 
resultcount :                     2
 
Enter command:
SELECT T1XC1, SUM ( T1XC1), MIN (T3XC3) FROM V1 GROUP BY T1XC1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
T1XC1 | EXPRESSION1                                  | EXPRESSION2
------+----------------------------------------------+------------
  2   |  2.0000000000000000000000000000000000000E+00 |   3
  4   |  4.0000000000000000000000000000000000000E+00 |   3
  8   |  1.6000000000000000000000000000000000000E+01 |   4
 
resultcount :                     3
 
Enter command:
SELECT COUNT (*), T1XC2 FROM V1 WHERE T3XC2 <> 6
   GROUP BY T1XC2 HAVING SUM ( T1XC2 ) > 5 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1 | T1XC2
------------+------
          2 |   3
 
resultcount :                     1
 
Enter command:
 *****************************************************!
 
Enter command:
 *****************************************************!
 
Enter command:
CREATE VIEW V2 AS SELECT * FROM V1 WHERE T1XC2 < T3XC3 !
 
Enter command:
SELECT * FROM V2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  4   |   1   |   3   |   4   |   2   |   6   |   2   |   3   |   3
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   6   |   6
  8   |   3   |   1   |   8   |   1   |   5   |   1   |   2   |   4
 
resultcount :                     3
 
Enter command:
SELECT * FROM V2 WHERE 2 * T1XC3 = T2XC3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T1XC3 | T2XC1 | T2XC2 | T2XC3 | T3XC1 | T3XC2 | T3XC3
------+-------+-------+-------+-------+-------+-------+-------+------
  4   |   1   |   3   |   4   |   2   |   6   |   2   |   3   |   3
 
resultcount :                     1
 
Enter command:
DECLARE ERG3 CURSOR FOR
SELECT DISTINCT T1XC1, T1XC2, T2XC1, T2XC2 FROM V2 !
 
resultcount :                     2
 
Enter command:
SELECT * FROM ERG3 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC2
------+-------+-------+------
  4   |   1   |   4   |   2
  8   |   3   |   8   |   1
 
resultcount :                     2
 
Enter command:
 *****************************************************!
 
Enter command:
CREATE VIEW V3 AS SELECT T1XC2, T1XC3, T2XC1, T2XC2, T3XC2 FROM V2
   WHERE  ( T1XC3 = T2XC2 AND ( T1XC2 > T3XC2 )) !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT * FROM V3 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM ERG4 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC2 | T1XC3 | T2XC1 | T2XC2 | T3XC2
------+-------+-------+-------+------
  3   |   1   |   8   |   1   |   2
 
resultcount :                     1
 
Enter command:
SELECT T1XC3 NEU1, 5 FROM V3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
NEU1 | EXPRESSION1
-----+------------
  1  |  5
 
resultcount :                     1
 
Enter command:
SELECT * FROM V3 WHERE T1XC3 < T2XC1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T1XC2 | T1XC3 | T2XC1 | T2XC2 | T3XC2
------+-------+-------+-------+------
  3   |   1   |   8   |   1   |   2
 
resultcount :                     1
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "COMPANY"
(
 "ID"   FLOAT (20)  ,
 "NAME"     VARCHAR (100) ASCII  ,
 "TOKEN"     VARCHAR (10) ASCII  ,
 "STREET"     VARCHAR (50) ASCII,
 "STREET_NR"     VARCHAR (5) ASCII,
 "POSTCODE"     VARCHAR (10) ASCII,
 "CITY"     VARCHAR (50) ASCII,
 "ZONE"     VARCHAR (5) ASCII,
 "TYPE"     CHAR (1) ASCII    DEFAULT '0',
 "STATUS"     CHAR (1) ASCII  ,
 "ORDER_SEQUENCE"     FIXED (3,0)    DEFAULT  0,
 "INSERTED"     TIMESTAMP    DEFAULT TIMESTAMP,
 "INSERTED_BY"     VARCHAR (50) ASCII    DEFAULT 'SYSTEM',
 "UPDATED"     TIMESTAMP    DEFAULT TIMESTAMP,
 "UPDATED_BY"     VARCHAR (50) ASCII    DEFAULT 'SYSTEM',
 PRIMARY KEY ("ID"),
 CONSTRAINT "ZONE" CHECK "ZONE" IN ('','A','B','C','D','E','F','G')   OR
     "ZONE" IS NULL,
 CONSTRAINT "STATUS" CHECK "STATUS" IN ('0','1'),
 CONSTRAINT "TYPE" CHECK "TYPE" IN ('0','1')
)
!
 
Enter command:
INSERT COMPANY (ID, NAME, STATUS) VALUES (1, 'SAP', '1')!
 
Enter command:
 
CREATE TABLE "POWER_PRICE"
(
 "ID_COMPANY"     FLOAT (20)  ,
 "ZONE"     VARCHAR (5) ASCII  ,
 "VALUE_DATE"     TIMESTAMP  ,
 "POWER1"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER2"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER3"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER4"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER5"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER6"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER7"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER8"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER9"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER10"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER11"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER12"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER13"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER14"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER15"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER16"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER17"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER18"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER19"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER20"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER21"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER22"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER23"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER24"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER25"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER26"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER27"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER28"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER29"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER30"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER31"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER32"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER33"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER34"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER35"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER36"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER37"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER38"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER39"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER40"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER41"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER42"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER43"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER44"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER45"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER46"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER47"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER48"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER49"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER50"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER51"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER52"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER53"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER54"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER55"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER56"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER57"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER58"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER59"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER60"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER61"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER62"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER63"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER64"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER65"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER66"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER67"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER68"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER69"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER70"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER71"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER72"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER73"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER74"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER75"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER76"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER77"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER78"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER79"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER80"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER81"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER82"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER83"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER84"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER85"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER86"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER87"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER88"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER89"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER90"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER91"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER92"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER93"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER94"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER95"     VARCHAR (7) ASCII    DEFAULT '0',
 "POWER96"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE1"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE2"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE3"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE4"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE5"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE6"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE7"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE8"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE9"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE10"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE11"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE12"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE13"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE14"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE15"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE16"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE17"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE18"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE19"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE20"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE21"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE22"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE23"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE24"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE25"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE26"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE27"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE28"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE29"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE30"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE31"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE32"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE33"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE34"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE35"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE36"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE37"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE38"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE39"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE40"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE41"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE42"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE43"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE44"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE45"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE46"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE47"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE48"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE49"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE50"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE51"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE52"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE53"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE54"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE55"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE56"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE57"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE58"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE59"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE60"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE61"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE62"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE63"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE64"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE65"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE66"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE67"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE68"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE69"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE70"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE71"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE72"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE73"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE74"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE75"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE76"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE77"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE78"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE79"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE80"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE81"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE82"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE83"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE84"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE85"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE86"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE87"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE88"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE89"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE90"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE91"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE92"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE93"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE94"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE95"     VARCHAR (7) ASCII    DEFAULT '0',
 "PRICE96"     VARCHAR (7) ASCII    DEFAULT '0',
 "INSERTED"     TIMESTAMP    DEFAULT TIMESTAMP,
 "INSERTED_BY"     VARCHAR (50) ASCII    DEFAULT 'SYSTEM',
 "UPDATED"     TIMESTAMP    DEFAULT TIMESTAMP,
 "UPDATED_BY"     VARCHAR (50) ASCII    DEFAULT 'SYSTEM',
 PRIMARY KEY ("ID_COMPANY", "ZONE", "VALUE_DATE"),
 CONSTRAINT "ZONE" CHECK "ZONE" IN ('','A','B','C','D','E','F','G'),
 FOREIGN KEY "FK_REF_4511" ("ID_COMPANY")
    REFERENCES "COMPANY" ("ID") ON DELETE CASCADE
)
!
 
Enter command:
INSERT POWER_PRICE (ID_COMPANY, POWER41,"ZONE", "VALUE_DATE")
 VALUES (1, '41', 'E', TIMESTAMP)!
 
Enter command:
 
CREATE INDEX "IX01_POWER_PRICE" ON "POWER_PRICE"("ID_COMPANY" ASC)!
 
Enter command:
CREATE INDEX "IX02_POWER_PRICE" ON "POWER_PRICE"("VALUE_DATE" ASC)!
 
Enter command:
 
CREATE TABLE "CONTACT"
(
 "ID"     FLOAT (20)  ,
 "ID_COMPANY"     FLOAT (20)  ,
 "TYPE"     FLOAT (20)  ,
 "TITLE"     VARCHAR (20) ASCII,
 "FIRSTNAME"     VARCHAR (50) ASCII,
 "SURNAME"     VARCHAR (50) ASCII,
 "PHONE_PREFIX"     VARCHAR (6) ASCII,
 "PHONE"     VARCHAR (25) ASCII,
 "PHONE_SUFFIX"     VARCHAR (4) ASCII,
 "FAX_PREFIX"     VARCHAR (6) ASCII,
 "FAX"     VARCHAR (25) ASCII,
 "FAX_SUFFIX"     VARCHAR (4) ASCII,
 "EMAIL"     VARCHAR (50) ASCII,
 "ORDER_SEQUENCE"     FIXED (3,0)    DEFAULT  0,
 "INSERTED"     TIMESTAMP    DEFAULT TIMESTAMP,
 "INSERTED_BY"     VARCHAR (50) ASCII    DEFAULT 'SYSTEM',
 "UPDATED"     TIMESTAMP    DEFAULT TIMESTAMP,
 "UPDATED_BY"     VARCHAR (50) ASCII    DEFAULT 'SYSTEM',
 PRIMARY KEY ("ID", "ID_COMPANY"),
 CONSTRAINT "TYPE" CHECK "TYPE" IN (10,20,30,40,50,60),
 FOREIGN KEY "FK_REF_2866" ("ID_COMPANY")
    REFERENCES "COMPANY" ("ID") ON DELETE CASCADE
)!
 
Enter command:
INSERT CONTACT (ID, TYPE, ID_COMPANY) VALUES (4711,40,1)!
 
Enter command:
 
CREATE VIEW "VW_COMPANY_CONTACT"
 (
 "ID_COMPANY",
 "TOKEN",
 "ZONE",
 "COMPANY_STATUS",
 "COMPANY_ORDER_SEQUENCE",
 "PHONE_PREFIX",
 "PHONE",
 "PHONE_SUFFIX"
)
AS
SELECT A.ID ID_COMPANY, A.TOKEN, A.ZONE, A.STATUS COMPANY_STATUS,
A.ORDER_SEQUENCE COMPANY_ORDER_SEQUENCE,
  B.PHONE_PREFIX, B.PHONE, B.PHONE_SUFFIX
FROM COMPANY A, CONTACT B
WHERE A.ID = B.ID_COMPANY(+) AND B.TYPE(+) = 40 !
 
Enter command:
 
PARS_THEN_EX !
 
Enter command:
SELECT A.ID_COMPANY, A.VALUE_DATE, B.TOKEN COMPANY_TOKEN, A.ZONE,
   DECODE(DECODE(B.PHONE_PREFIX,
     NULL,
      B.PHONE,
      DECODE(B.PHONE,
       NULL,
       B.PHONE_PREFIX,
 
B.PHONE_PREFIX || '/' || B.PHONE)),
    NULL,
    B.PHONE_SUFFIX,
    DECODE(B.PHONE_PREFIX,
     NULL,
      B.PHONE,
      DECODE(B.PHONE,
       NULL,
       B.PHONE_PREFIX,
 
B.PHONE_PREFIX || '/' || B.PHONE)) || DECODE(B.PHONE_SUFFIX,
 
     NULL,
 
     B.PHONE_SUFFIX,
'-' || B.PHONE_SUFFIX)) PHONE,
  NUM(A.POWER1)  POWER1 , NUM(A.POWER2)  POWER2 ,
NUM(A.POWER3)  POWER3 , NUM(A.POWER4)  POWER4 , NUM(A.POWER5)
 POWER5 , NUM(A.POWER6)  POWER6 ,
  NUM(A.POWER7)  POWER7 , NUM(A.POWER8)  POWER8 ,
NUM(A.POWER9)  POWER9 , NUM(A.POWER10) POWER10,
NUM(A.POWER11) POWER11, NUM(A.POWER12) POWER12,
  NUM(A.POWER13) POWER13, NUM(A.POWER14) POWER14,
NUM(A.POWER15) POWER15, NUM(A.POWER16) POWER16,
NUM(A.POWER17) POWER17, NUM(A.POWER18) POWER18,
  NUM(A.POWER19) POWER19, NUM(A.POWER20) POWER20,
NUM(A.POWER21) POWER21, NUM(A.POWER22) POWER22,
NUM(A.POWER23) POWER23, NUM(A.POWER24) POWER24,
  NUM(A.POWER25) POWER25, NUM(A.POWER26) POWER26,
NUM(A.POWER27) POWER27, NUM(A.POWER28) POWER28,
NUM(A.POWER29) POWER29, NUM(A.POWER30) POWER30,
  NUM(A.POWER31) POWER31, NUM(A.POWER32) POWER32,
NUM(A.POWER33) POWER33, NUM(A.POWER34) POWER34,
NUM(A.POWER35) POWER35, NUM(A.POWER36) POWER36,
  NUM(A.POWER37) POWER37, NUM(A.POWER38) POWER38,
NUM(A.POWER39) POWER39, NUM(A.POWER40) POWER40,
NUM(A.POWER41) POWER41, NUM(A.POWER42) POWER42,
  NUM(A.POWER43) POWER43, NUM(A.POWER44) POWER44,
NUM(A.POWER45) POWER45, NUM(A.POWER46) POWER46,
NUM(A.POWER47) POWER47, NUM(A.POWER48) POWER48,
  NUM(A.POWER49) POWER49, NUM(A.POWER50) POWER50,
NUM(A.POWER51) POWER51, NUM(A.POWER52) POWER52,
NUM(A.POWER53) POWER53, NUM(A.POWER54) POWER54,
  NUM(A.POWER55) POWER55, NUM(A.POWER56) POWER56,
NUM(A.POWER57) POWER57, NUM(A.POWER58) POWER58,
NUM(A.POWER59) POWER59, NUM(A.POWER60) POWER60,
  NUM(A.POWER61) POWER61, NUM(A.POWER62) POWER62,
NUM(A.POWER63) POWER63, NUM(A.POWER64) POWER64,
NUM(A.POWER65) POWER65, NUM(A.POWER66) POWER66,
  NUM(A.POWER67) POWER67, NUM(A.POWER68) POWER68,
NUM(A.POWER69) POWER69, NUM(A.POWER70) POWER70,
NUM(A.POWER71) POWER71, NUM(A.POWER72) POWER72,
  NUM(A.POWER73) POWER73, NUM(A.POWER74) POWER74,
NUM(A.POWER75) POWER75, NUM(A.POWER76) POWER76,
NUM(A.POWER77) POWER77, NUM(A.POWER78) POWER78,
  NUM(A.POWER79) POWER79, NUM(A.POWER80) POWER80,
NUM(A.POWER81) POWER81, NUM(A.POWER82) POWER82,
NUM(A.POWER83) POWER83, NUM(A.POWER84) POWER84,
  NUM(A.POWER85) POWER85, NUM(A.POWER86) POWER86,
NUM(A.POWER87) POWER87, NUM(A.POWER88) POWER88,
NUM(A.POWER89) POWER89, NUM(A.POWER90) POWER90,
  NUM(A.POWER91) POWER91, NUM(A.POWER92) POWER92,
NUM(A.POWER93) POWER93, NUM(A.POWER94) POWER94,
NUM(A.POWER95) POWER95, NUM(A.POWER96) POWER96,
  NUM(A.PRICE1)  PRICE1 , NUM(A.PRICE2)  PRICE2 ,
NUM(A.PRICE3)  PRICE3 , NUM(A.PRICE4)  PRICE4 , NUM(A.PRICE5)
 PRICE5 , NUM(A.PRICE6)  PRICE6 ,
  NUM(A.PRICE7)  PRICE7 , NUM(A.PRICE8)  PRICE8 ,
NUM(A.PRICE9)  PRICE9 , NUM(A.PRICE10) PRICE10,
NUM(A.PRICE11) PRICE11, NUM(A.PRICE12) PRICE12,
  NUM(A.PRICE13) PRICE13, NUM(A.PRICE14) PRICE14,
NUM(A.PRICE15) PRICE15, NUM(A.PRICE16) PRICE16,
NUM(A.PRICE17) PRICE17, NUM(A.PRICE18) PRICE18,
  NUM(A.PRICE19) PRICE19, NUM(A.PRICE20) PRICE20,
NUM(A.PRICE21) PRICE21, NUM(A.PRICE22) PRICE22,
NUM(A.PRICE23) PRICE23, NUM(A.PRICE24) PRICE24,
  NUM(A.PRICE25) PRICE25, NUM(A.PRICE26) PRICE26,
NUM(A.PRICE27) PRICE27, NUM(A.PRICE28) PRICE28,
NUM(A.PRICE29) PRICE29, NUM(A.PRICE30) PRICE30,
  NUM(A.PRICE31) PRICE31, NUM(A.PRICE32) PRICE32,
NUM(A.PRICE33) PRICE33, NUM(A.PRICE34) PRICE34,
NUM(A.PRICE35) PRICE35, NUM(A.PRICE36) PRICE36,
  NUM(A.PRICE37) PRICE37, NUM(A.PRICE38) PRICE38,
NUM(A.PRICE39) PRICE39, NUM(A.PRICE40) PRICE40,
NUM(A.PRICE41) PRICE41, NUM(A.PRICE42) PRICE42,
  NUM(A.PRICE43) PRICE43, NUM(A.PRICE44) PRICE44,
NUM(A.PRICE45) PRICE45, NUM(A.PRICE46) PRICE46,
NUM(A.PRICE47) PRICE47, NUM(A.PRICE48) PRICE48,
  NUM(A.PRICE49) PRICE49, NUM(A.PRICE50) PRICE50,
NUM(A.PRICE51) PRICE51, NUM(A.PRICE52) PRICE52,
NUM(A.PRICE53) PRICE53, NUM(A.PRICE54) PRICE54,
  NUM(A.PRICE55) PRICE55, NUM(A.PRICE56) PRICE56,
NUM(A.PRICE57) PRICE57, NUM(A.PRICE58) PRICE58,
NUM(A.PRICE59) PRICE59, NUM(A.PRICE60) PRICE60,
  NUM(A.PRICE61) PRICE61, NUM(A.PRICE62) PRICE62,
NUM(A.PRICE63) PRICE63, NUM(A.PRICE64) PRICE64,
NUM(A.PRICE65) PRICE65, NUM(A.PRICE66) PRICE66,
  NUM(A.PRICE67) PRICE67, NUM(A.PRICE68) PRICE68,
NUM(A.PRICE69) PRICE69, NUM(A.PRICE70) PRICE70,
NUM(A.PRICE71) PRICE71, NUM(A.PRICE72) PRICE72,
  NUM(A.PRICE73) PRICE73, NUM(A.PRICE74) PRICE74,
NUM(A.PRICE75) PRICE75, NUM(A.PRICE76) PRICE76,
NUM(A.PRICE77) PRICE77, NUM(A.PRICE78) PRICE78,
  NUM(A.PRICE79) PRICE79, NUM(A.PRICE80) PRICE80,
NUM(A.PRICE81) PRICE81, NUM(A.PRICE82) PRICE82,
NUM(A.PRICE83) PRICE83, NUM(A.PRICE84) PRICE84,
  NUM(A.PRICE85) PRICE85, NUM(A.PRICE86) PRICE86,
NUM(A.PRICE87) PRICE87, NUM(A.PRICE88) PRICE88,
NUM(A.PRICE89) PRICE89, NUM(A.PRICE90) PRICE90,
  NUM(A.PRICE91) PRICE91, NUM(A.PRICE92) PRICE92,
NUM(A.PRICE93) PRICE93, NUM(A.PRICE94) PRICE94,
NUM(A.PRICE95) PRICE95, NUM(A.PRICE96) PRICE96
FROM POWER_PRICE A, VW_COMPANY_CONTACT B
WHERE A.ID_COMPANY    = B.ID_COMPANY
AND   B.COMPANY_STATUS  = '1'
AND  (NUM(A.POWER1)  <> 0 OR NUM(A.POWER2)  <> 0 OR
NUM(A.POWER3)  <> 0 OR NUM(A.POWER4)  <> 0 OR NUM(A.POWER5)
<> 0 OR NUM(A.POWER6)  <> 0 OR NUM(A.POWER7)  <> 0
OR  NUM(A.POWER8)  <> 0 OR NUM(A.POWER9)  <> 0 OR
NUM(A.POWER10) <> 0 OR NUM(A.POWER11) <> 0 OR NUM(A.POWER12)
<> 0 OR NUM(A.POWER13) <> 0 OR NUM(A.POWER14) <> 0
OR  NUM(A.POWER15) <> 0 OR NUM(A.POWER16) <> 0 OR
NUM(A.POWER17) <> 0 OR NUM(A.POWER18) <> 0 OR NUM(A.POWER19)
<> 0 OR NUM(A.POWER20) <> 0 OR NUM(A.POWER21) <> 0
OR  NUM(A.POWER22) <> 0 OR NUM(A.POWER23) <> 0 OR
NUM(A.POWER24) <> 0 OR NUM(A.POWER25) <> 0 OR NUM(A.POWER26)
<> 0 OR NUM(A.POWER27) <> 0 OR NUM(A.POWER28) <> 0
OR  NUM(A.POWER29) <> 0 OR NUM(A.POWER30) <> 0 OR
NUM(A.POWER31) <> 0 OR NUM(A.POWER32) <> 0 OR NUM(A.POWER33)
<> 0 OR NUM(A.POWER34) <> 0 OR NUM(A.POWER35) <> 0
OR  NUM(A.POWER36) <> 0 OR NUM(A.POWER37) <> 0 OR
NUM(A.POWER38) <> 0 OR NUM(A.POWER39) <> 0 OR NUM(A.POWER40)
<> 0 OR NUM(A.POWER41) <> 0 OR NUM(A.POWER42) <> 0
OR  NUM(A.POWER43) <> 0 OR NUM(A.POWER44) <> 0 OR
NUM(A.POWER45) <> 0 OR NUM(A.POWER46) <> 0 OR NUM(A.POWER47)
<> 0 OR NUM(A.POWER48) <> 0 OR NUM(A.POWER49) <> 0
OR  NUM(A.POWER50) <> 0 OR NUM(A.POWER51) <> 0 OR
NUM(A.POWER52) <> 0 OR NUM(A.POWER53) <> 0 OR NUM(A.POWER54)
<> 0 OR NUM(A.POWER55) <> 0 OR NUM(A.POWER56) <> 0
OR  NUM(A.POWER57) <> 0 OR NUM(A.POWER58) <> 0 OR
NUM(A.POWER59) <> 0 OR NUM(A.POWER60) <> 0 OR NUM(A.POWER61)
<> 0 OR NUM(A.POWER62) <> 0 OR NUM(A.POWER63) <> 0
OR  NUM(A.POWER64) <> 0 OR NUM(A.POWER65) <> 0 OR
NUM(A.POWER66) <> 0 OR NUM(A.POWER67) <> 0 OR NUM(A.POWER68)
<> 0 OR NUM(A.POWER69) <> 0 OR NUM(A.POWER70) <> 0
OR  NUM(A.POWER71) <> 0 OR NUM(A.POWER72) <> 0 OR
NUM(A.POWER73) <> 0 OR NUM(A.POWER74) <> 0 OR NUM(A.POWER75)
<> 0 OR NUM(A.POWER76) <> 0 OR NUM(A.POWER77) <> 0
OR  NUM(A.POWER78) <> 0 OR NUM(A.POWER79) <> 0 OR
NUM(A.POWER80) <> 0 OR NUM(A.POWER81) <> 0 OR NUM(A.POWER82)
<> 0 OR NUM(A.POWER83) <> 0 OR NUM(A.POWER84) <> 0
OR  NUM(A.POWER85) <> 0 OR NUM(A.POWER86) <> 0 OR
NUM(A.POWER87) <> 0 OR NUM(A.POWER88) <> 0 OR NUM(A.POWER89)
<> 0 OR NUM(A.POWER90) <> 0 OR NUM(A.POWER91) <> 0
OR  NUM(A.POWER92) <> 0 OR NUM(A.POWER93) <> 0 OR
NUM(A.POWER94) <> 0 OR NUM(A.POWER95) <> 0 OR NUM(A.POWER96) <> 0)
!
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE!
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
