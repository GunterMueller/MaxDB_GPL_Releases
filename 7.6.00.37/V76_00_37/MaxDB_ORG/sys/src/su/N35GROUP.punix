N35GROUP.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
FILE N35INIT !
 
Enter command:
CREATE TABLE TAB ( SPALTE1 CHAR(10) ,
                   SPALTE2 FIXED(5,2),
                   SPALTE3 FLOAT(3),
                   SPALTE4 FIXED(18) ) !
 
Enter command:
INSERT TAB VALUES ( 'a', 100 , -12E12, 400000 ) !
 
Enter command:
INSERT TAB VALUES ( 'b', 100 , 1E-36, -700000000000000000 ) !
 
Enter command:
INSERT TAB VALUES ( 'a', NULL , 50, 900000000000000000 ) !
 
Enter command:
INSERT TAB VALUES ( NULL, 200, NULL, -800000 ) !
 
Enter command:
INSERT TAB VALUES ( 'a', 100, +1E-36 , 800000000000000000 ) !
 
Enter command:
INSERT TAB VALUES ( NULL, NULL, NULL, NULL ) !
 
Enter command:
INSERT TAB VALUES ( 'c', -600, -12E12, NULL ) !
 
Enter command:
INSERT TAB VALUES ( 'a', 100, +1E-36 , 800000000000000000 ) !
 
Enter command:
INSERT TAB VALUES ( 'b', NULL, NULL, + 900000000000000000 ) !
 
Enter command:
SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1    | SPALTE2 | SPALTE3   | SPALTE4
-----------+---------+-----------+--------------------
a          |  100.00 | -1.20E+13 |              400000
b          |  100.00 |  1.00E-36 | -700000000000000000
a          | ??????? |  5.00E+01 |  900000000000000000
?????????? |  200.00 | ????????? |             -800000
a          |  100.00 |  1.00E-36 |  800000000000000000
?????????? | ??????? | ????????? | ???????????????????
c          | -600.00 | -1.20E+13 | ???????????????????
a          |  100.00 |  1.00E-36 |  800000000000000000
b          | ??????? | ????????? |  900000000000000000
 
resultcount :                     9
 
Enter command:
CREATE INDEX "tab.spalte2"
 ON TAB( SPALTE2 ) !
 
Enter command:
CREATE INDEX "tab.spalte4"
 ON TAB( SPALTE4 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE N35GROU1 !
 
Enter command:
SELECT SPALTE1 FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1
----------
a
b
c
??????????
 
resultcount :                     4
 
Enter command:
SELECT SPALTE2 FROM KERN.TAB GROUP BY SPALTE2, SPALTE3 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
SPALTE2
-------
-600.00
 100.00
 100.00
 200.00
???????
???????
 
resultcount :                     6
 
Enter command:
SELECT SPALTE1, SPALTE2 , ( SPALTE3 ), SPALTE4 FROM TAB
    GROUP BY TAB.SPALTE1, SPALTE2, KERN.TAB.SPALTE3, SPALTE4 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
SPALTE1    | SPALTE2 | SPALTE3   | SPALTE4
-----------+---------+-----------+--------------------
a          |  100.00 | -1.20E+13 |              400000
a          |  100.00 |  1.00E-36 |  800000000000000000
a          | ??????? |  5.00E+01 |  900000000000000000
b          |  100.00 |  1.00E-36 | -700000000000000000
b          | ??????? | ????????? |  900000000000000000
c          | -600.00 | -1.20E+13 | ???????????????????
?????????? |  200.00 | ????????? |             -800000
?????????? | ??????? | ????????? | ???????????????????
 
resultcount :                     8
 
Enter command:
SELECT SPALTE2 FROM TAB GROUP BY SPALTE1 !
 
***ERROR  -8017 Column must be group column:SPALTE2                        0008
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 5 FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 5
 5
 5
 5
 
resultcount :                     4
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT 2 * SPALTE2 FROM TAB GROUP BY SPALTE2 !
 
resultcount :                     4
 
Enter command:
FETCH ERG1 !
 
EXPRESSION1
-----------
-1200.00
  200.00
  400.00
????????
 
resultcount :                     4
 
Enter command:
SELECT SUM ( SPALTE2 ) SUMME  FROM TAB GROUP BY SPALTE2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SUMME
--------------------------------------------
-6.0000000000000000000000000000000000000E+02
 4.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
????????????????????????????????????????????
 
resultcount :                     4
 
Enter command:
SELECT ( SPALTE2 + SPALTE3 ) FROM TAB GROUP BY SPALTE2, SPALTE3 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
-1.2000000000600000000000000000000000000E+13
-1.1999999999900000000000000000000000000E+13
 1.0000000000000000000000000000000000000E+02
????????????????????????????????????????????
????????????????????????????????????????????
????????????????????????????????????????????
 
resultcount :                     6
 
Enter command:
SELECT DISTINCT SPALTE1 FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1
----------
??????????
a
b
c
 
resultcount :                     4
 
Enter command:
SELECT SPALTE2+SPALTE3  FROM TAB GROUP BY SPALTE2 !
 
***ERROR  -8017 Column must be group column:SPALTE3                        0016
 
Enter command:
SELECT SPALTE1, SUM ( SPALTE2 ) FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1    | EXPRESSION1
-----------+---------------------------------------------
a          |  3.0000000000000000000000000000000000000E+02
b          |  1.0000000000000000000000000000000000000E+02
c          | -6.0000000000000000000000000000000000000E+02
?????????? |  2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
ROLLBACK WORK !
 
Enter command:
FILE N35GROU2 !
 
Enter command:
SELECT SUM ( SPALTE2), SUM (TAB.SPALTE3 ), SUM ( KERN.TAB.SPALTE4 )
       FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :   3.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -1.1999999999950000000000000000000000000E+13
EXPRESSION3       :   2.5000000000004000000000000000000000000E+18
-----------------------------------------------------------------
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.0000000000000000000000000000000000000E-36
EXPRESSION3       :   2.0000000000000000000000000000000000000E+17
-----------------------------------------------------------------
EXPRESSION1       :  -6.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -1.2000000000000000000000000000000000000E+13
EXPRESSION3       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
EXPRESSION2       :  ????????????????????????????????????????????
EXPRESSION3       :  -8.0000000000000000000000000000000000000E+05
 
resultcount :                     4
 
Enter command:
SELECT  AVG ( KERN.TAB.SPALTE2 ),AVG(  TAB.SPALTE3), AVG(SPALTE4)
   FROM TAB GROUP BY  KERN.TAB.SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -2.9999999999875000000000000000000000000E+12
EXPRESSION3       :   6.2500000000010000000000000000000000000E+17
-----------------------------------------------------------------
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.0000000000000000000000000000000000000E-36
EXPRESSION3       :   1.0000000000000000000000000000000000000E+17
-----------------------------------------------------------------
EXPRESSION1       :  -6.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -1.2000000000000000000000000000000000000E+13
EXPRESSION3       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
EXPRESSION2       :  ????????????????????????????????????????????
EXPRESSION3       :  -8.0000000000000000000000000000000000000E+05
 
resultcount :                     4
 
Enter command:
SELECT  COUNT(*), COUNT (DISTINCT SPALTE2), COUNT (ALL TAB.SPALTE3 ),
        COUNT( KERN.TAB.SPALTE4 )
      FROM TAB   GROUP  BY   TAB.SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2 | EXPRESSION3 | EXPRESSION4
------------+-------------+-------------+------------
          4 |           1 |           4 |           4
          2 |           1 |           1 |           2
          1 |           1 |           1 |           0
          2 |           1 |           0 |           1
 
resultcount :                     4
 
Enter command:
SELECT SUM ( DISTINCT SPALTE2 ), AVG(SPALTE2), COUNT(SPALTE1)
     FROM KERN.TAB GROUP BY SPALTE2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  -6.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -6.0000000000000000000000000000000000000E+02
EXPRESSION3       :            1
-----------------------------------------------------------------
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.0000000000000000000000000000000000000E+02
EXPRESSION3       :            4
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
EXPRESSION2       :   2.0000000000000000000000000000000000000E+02
EXPRESSION3       :            0
-----------------------------------------------------------------
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :  ????????????????????????????????????????????
EXPRESSION3       :            2
 
resultcount :                     4
 
Enter command:
SELECT COUNT(6), SUM ( 5 ), AVG (4)
     FROM TAB GROUP BY SPALTE1, TAB.SPALTE2 !
 
resultcount :                     7
 
Enter command:
FETCH !
 
EXPRESSION1       :            3
EXPRESSION2       :   1.5000000000000000000000000000000000000E+01
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :            1
EXPRESSION2       :   5.0000000000000000000000000000000000000E+00
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :            1
EXPRESSION2       :   5.0000000000000000000000000000000000000E+00
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :            1
EXPRESSION2       :   5.0000000000000000000000000000000000000E+00
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :            1
EXPRESSION2       :   5.0000000000000000000000000000000000000E+00
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :            1
EXPRESSION2       :   5.0000000000000000000000000000000000000E+00
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :            1
EXPRESSION2       :   5.0000000000000000000000000000000000000E+00
EXPRESSION3       :   4.0000000000000000000000000000000000000E+00
 
resultcount :                     7
 
Enter command:
SELECT ( SUM (2*SPALTE2) )
  FROM TAB GROUP BY TAB.SPALTE2, SPALTE1, KERN.TAB.SPALTE3, SPALTE4 !
 
resultcount :                     8
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
-1.2000000000000000000000000000000000000E+03
 2.0000000000000000000000000000000000000E+02
 4.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
 4.0000000000000000000000000000000000000E+02
????????????????????????????????????????????
????????????????????????????????????????????
????????????????????????????????????????????
 
resultcount :                     8
 
Enter command:
DECLARE ERG2 CURSOR FOR
SELECT AVG ( SPALTE2 + SPALTE3 ), COUNT ( *) ,
              COUNT ( DISTINCT   SPALTE4 * TAB.SPALTE4 )
   FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG2 !
 
EXPRESSION1                                  | EXPRESSION2 | EXPRESSION3
---------------------------------------------+-------------+------------
-3.9999999999000000000000000000000000000E+12 |           4 |           3
 1.0000000000000000000000000000000000000E+02 |           2 |           2
-1.2000000000600000000000000000000000000E+13 |           1 |           0
???????????????????????????????????????????? |           2 |           1
 
resultcount :                     4
 
Enter command:
SELECT AVG ( TAB.SPALTE4 ) AVERAGE , COUNT(*),
       COUNT( DISTINCT SPALTE4 ) , COUNT (SPALTE4) ANZAHL
       FROM TAB GROUP BY SPALTE4 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
AVERAGE           :  -7.0000000000000000000000000000000000000E+17
EXPRESSION1       :            1
EXPRESSION2       :            1
ANZAHL            :            1
-----------------------------------------------------------------
AVERAGE           :  -8.0000000000000000000000000000000000000E+05
EXPRESSION1       :            1
EXPRESSION2       :            1
ANZAHL            :            1
-----------------------------------------------------------------
AVERAGE           :   4.0000000000000000000000000000000000000E+05
EXPRESSION1       :            1
EXPRESSION2       :            1
ANZAHL            :            1
-----------------------------------------------------------------
AVERAGE           :   8.0000000000000000000000000000000000000E+17
EXPRESSION1       :            2
EXPRESSION2       :            1
ANZAHL            :            2
-----------------------------------------------------------------
AVERAGE           :   9.0000000000000000000000000000000000000E+17
EXPRESSION1       :            2
EXPRESSION2       :            1
ANZAHL            :            2
-----------------------------------------------------------------
AVERAGE           :  ????????????????????????????????????????????
EXPRESSION1       :            2
EXPRESSION2       :            0
ANZAHL            :            0
 
resultcount :                     6
 
Enter command:
SELECT DISTINCT SUM ( SPALTE2), ( SUM( 3*SPALTE2 ) )
    FROM TAB GROUP  BY SPALTE2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  -6.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -1.8000000000000000000000000000000000000E+03
-----------------------------------------------------------------
EXPRESSION1       :   4.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.2000000000000000000000000000000000000E+03
-----------------------------------------------------------------
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
EXPRESSION2       :   6.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT ALL ( SUM (SPALTE2) ) , SUM ( 3*  SPALTE2 )
    FROM TAB GROUP BY SPALTE2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  -6.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -1.8000000000000000000000000000000000000E+03
-----------------------------------------------------------------
EXPRESSION1       :   4.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.2000000000000000000000000000000000000E+03
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
EXPRESSION2       :   6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :  ????????????????????????????????????????????
 
resultcount :                     4
 
Enter command:
ROLLBACK WORK !
 
Enter command:
FILE N35GROU3 !
 
Enter command:
SELECT SUM( SPALTE2) , AVG(SPALTE2) , COUNT( SPALTE2 )
    FROM TAB WHERE SPALTE1 <'c' GROUP BY SPALTE1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1       :   3.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.0000000000000000000000000000000000000E+02
EXPRESSION3       :            3
-----------------------------------------------------------------
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
EXPRESSION2       :   1.0000000000000000000000000000000000000E+02
EXPRESSION3       :            1
 
resultcount :                     2
 
Enter command:
SELECT COUNT  ( *   ), COUNT ( ALL SPALTE4 ) , COUNT(DISTINCT SPALTE4)
    FROM TAB WHERE SPALTE2 <= 100 GROUP BY SPALTE1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2 | EXPRESSION3
------------+-------------+------------
          3 |           3 |           2
          1 |           1 |           1
          1 |           0 |           0
 
resultcount :                     3
 
Enter command:
SELECT ( AVG( TAB.SPALTE3))
   FROM TAB
   WHERE SPALTE1 IS NULL
      OR TAB.SPALTE3 IS NULL
   GROUP BY SPALTE1, SPALTE2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
????????????????????????????????????????????
????????????????????????????????????????????
????????????????????????????????????????????
 
resultcount :                     3
 
Enter command:
ROLLBACK WORK !
 
Enter command:
FILE N35GROU4 !
 
Enter command:
SELECT SUM ( SPALTE2 ) FROM TAB HAVING COUNT(*) > 8 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 0.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT SUM (SPALTE2) FROM TAB HAVING COUNT ( * ) > 9 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SUM (SPALTE2) FROM TAB HAVING SUM ( SPALTE2 ) > -700 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 0.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT SPALTE2 FROM TAB HAVING COUNT (*) > 1 !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0025
 
Enter command:
SELECT AVG( DISTINCT SPALTE2) , SUM ( SPALTE3 )
   FROM TAB HAVING COUNT ( *) > 0 AND COUNT ( DISTINCT SPALTE2) <6.2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.0000000000000000000000000000000000000E+02
EXPRESSION2       :  -2.3999999999950000000000000000000000000E+13
 
resultcount :                     1
 
Enter command:
SELECT ALL COUNT(*) , COUNT ( ALL SPALTE4 )
   FROM TAB HAVING COUNT ( ALL SPALTE3 ) = 6 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2
------------+------------
          9 |           7
 
resultcount :                     1
 
Enter command:
SELECT DISTINCT ( SUM ( TAB.SPALTE2 )) FROM TAB HAVING 5 < 6 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 0.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK !
 
Enter command:
FILE N35GROU5 !
 
Enter command:
SELECT AVG( SPALTE2 ) , TAB.SPALTE1
    FROM TAB GROUP BY SPALTE1 HAVING COUNT(*) > 1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1                                  | SPALTE1
---------------------------------------------+-----------
 1.0000000000000000000000000000000000000E+02 | a
 1.0000000000000000000000000000000000000E+02 | b
 2.0000000000000000000000000000000000000E+02 | ??????????
 
resultcount :                     3
 
Enter command:
SELECT SUM(SPALTE4)
    FROM TAB GROUP BY SPALTE1, SPALTE4 HAVING TAB.SPALTE1 > 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SPALTE4
    FROM TAB GROUP BY SPALTE4 HAVING COUNT ( DISTINCT SPALTE4) >2 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SPALTE1
    FROM TAB GROUP BY SPALTE1 HAVING COUNT ( SPALTE2 ) > 0 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1
----------
a
b
c
??????????
 
resultcount :                     4
 
Enter command:
SELECT SUM ( SPALTE2 ), KERN.TAB.SPALTE2, AVG ( TAB.SPALTE2 )
    FROM TAB GROUP BY SPALTE2 HAVING SUM ( SPALTE2 ) > 0 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1       :   4.0000000000000000000000000000000000000E+02
SPALTE2           :   100.00
EXPRESSION2       :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
SPALTE2           :   200.00
EXPRESSION2       :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
SELECT AVG ( SPALTE2 )
    FROM TAB GROUP BY SPALTE2 HAVING AVG ( SPALTE2) = SPALTE2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
-6.0000000000000000000000000000000000000E+02
 1.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
 
resultcount :                     3
 
Enter command:
SELECT SUM ( SPALTE2 + 100 )
    FROM TAB GROUP BY TAB.SPALTE4 HAVING SUM ( DISTINCT SPALTE2 ) > 0 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+02
 3.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
 4.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT SUM ( DISTINCT SPALTE2 )
    FROM TAB GROUP BY TAB.SPALTE4 HAVING SUM ( DISTINCT SPALTE2 ) > 0 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
 1.0000000000000000000000000000000000000E+02
 1.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT SUM ( SPALTE3 ) , AVG ( SPALTE3 )
    FROM TAB GROUP BY SPALTE2
    HAVING SUM ( SPALTE3) <0 OR AVG(SPALTE3 ) = SUM ( SPALTE3 ) !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.2000000000000000000000000000000000000E+13
EXPRESSION2       :  -1.2000000000000000000000000000000000000E+13
-----------------------------------------------------------------
EXPRESSION1       :  -1.2000000000000000000000000000000000000E+13
EXPRESSION2       :  -3.0000000000000000000000000000000000000E+12
-----------------------------------------------------------------
EXPRESSION1       :   5.0000000000000000000000000000000000000E+01
EXPRESSION2       :   5.0000000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
SELECT SUM (SPALTE2)
    FROM TAB GROUP BY SPALTE1 HAVING SPALTE1 IS NULL !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 2.0000000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT SPALTE2, SPALTE3, SUM ( SPALTE2 )
    FROM TAB GROUP BY SPALTE2, SPALTE3
    HAVING  SUM ( SPALTE2 + SPALTE3 ) = 3 *(100 + 1E-36 ) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
SPALTE2 | SPALTE3   | EXPRESSION1
--------+-----------+---------------------------------------------
 100.00 |  1.00E-36 |  3.0000000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK !
 
Enter command:
FILE N35GROU6 !
 
Enter command:
SELECT DISTINCT  SUM (SPALTE2 )
   FROM TAB WHERE SPALTE4 <> 400000 GROUP BY TAB.SPALTE1
   HAVING KERN.TAB.SPALTE1 IS  NULL OR NOT AVG(SPALTE4) IS NULL !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT ( SUM( DISTINCT SPALTE3 ) )
   FROM TAB WHERE SPALTE3 NOT BETWEEN 40 AND 60 OR SPALTE3 IS NULL
   GROUP BY TAB.SPALTE1 HAVING ( NOT (AVG(TAB.SPALTE3) IS NULL )) !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E-36
-1.2000000000000000000000000000000000000E+13
 
resultcount :                     2
 
Enter command:
FILE N35GROU7 !
 
Enter command:
SELECT SPALTE2, SUM ( SPALTE2 )
   FROM TAB
   WHERE SPALTE4 > 0
      OR SPALTE4 IS NULL
   GROUP BY SPALTE2
   ORDER BY 2 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
SPALTE2 | EXPRESSION1
--------+---------------------------------------------
-600.00 | -6.0000000000000000000000000000000000000E+02
 100.00 |  3.0000000000000000000000000000000000000E+02
??????? | ????????????????????????????????????????????
 
resultcount :                     3
 
Enter command:
SELECT AVG(SPALTE4),SUM(SPALTE4)
   FROM TAB
   GROUP BY SPALTE1
   ORDER BY 1 DESC, 2 ASC !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :   6.2500000000010000000000000000000000000E+17
EXPRESSION2       :   2.5000000000004000000000000000000000000E+18
-----------------------------------------------------------------
EXPRESSION1       :   1.0000000000000000000000000000000000000E+17
EXPRESSION2       :   2.0000000000000000000000000000000000000E+17
-----------------------------------------------------------------
EXPRESSION1       :  -8.0000000000000000000000000000000000000E+05
EXPRESSION2       :  -8.0000000000000000000000000000000000000E+05
 
resultcount :                     4
 
Enter command:
SELECT COUNT ( *), SUM ( SPALTE2 ) SUMME
   FROM TAB
   GROUP BY SPALTE3
   HAVING COUNT ( DISTINCT SPALTE1 ) > 1
   ORDER BY SUMME !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1 | SUMME
------------+---------------------------------------------
          2 | -5.0000000000000000000000000000000000000E+02
          3 |  3.0000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
SELECT SPALTE1, SUM ( SPALTE2 )
   FROM TAB
   WHERE SPALTE2 = 100
   GROUP BY SPALTE1
   ORDER BY 2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
SPALTE1    | EXPRESSION1
-----------+---------------------------------------------
b          |  1.0000000000000000000000000000000000000E+02
a          |  3.0000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
SELECT SPALTE4, SUM ( SPALTE2 )
   FROM TAB
   WHERE SPALTE3 = 1E-36
   GROUP BY SPALTE4
   HAVING COUNT ( SPALTE4 ) > 1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
SPALTE4             | EXPRESSION1
--------------------+---------------------------------------------
 800000000000000000 |  2.0000000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
SELECT SPALTE1, SPALTE2, SPALTE3, COUNT ( ALL TAB.SPALTE2 )
   FROM TAB
   WHERE SPALTE1 IS NOT NULL
   GROUP BY SPALTE1, KERN.TAB.SPALTE2, SPALTE3, TAB.SPALTE4
   ORDER BY SPALTE3 ASC, 4 DESC !
 
resultcount :                     6
 
Enter command:
FETCH !
 
SPALTE1    | SPALTE2 | SPALTE3   | EXPRESSION1
-----------+---------+-----------+------------
a          |  100.00 | -1.20E+13 |           1
c          | -600.00 | -1.20E+13 |           1
a          |  100.00 |  1.00E-36 |           2
b          |  100.00 |  1.00E-36 |           1
a          | ??????? |  5.00E+01 |           0
b          | ??????? | ????????? |           0
 
resultcount :                     6
 
Enter command:
DECLARE ERG0 CURSOR FOR
SELECT DISTINCT SUM (SPALTE2)
   FROM TAB
   WHERE SPALTE4 <> 400000
   GROUP BY TAB.SPALTE1
   ORDER BY 1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG0 !
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+02
 2.0000000000000000000000000000000000000E+02
 
resultcount :                     2
 
Enter command:
DECLARE ERG3 CURSOR FOR
SELECT ALL SUM(TAB.SPALTE2), AVG( SPALTE2 ) SUMME
   FROM TAB
   GROUP BY SPALTE4, SPALTE3
   HAVING TAB.SPALTE3 <> 50
   ORDER BY 2 DESC, SUMME DESC !
 
resultcount :                     4
 
Enter command:
FETCH ERG3 !
 
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
SUMME             :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :   1.0000000000000000000000000000000000000E+02
SUMME             :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+02
SUMME             :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :  -6.0000000000000000000000000000000000000E+02
SUMME             :  -6.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
ROLLBACK WORK !
 
Enter command:
FILE N35GROU8 !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT COUNT(*) SPALTE1, SUM ( SPALTE2) SPALTE2,
       AVG ( SPALTE2 ) SPALTE3
    FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG4 !
 
SPALTE1           :            4
SPALTE2           :   3.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   1.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            1
SPALTE2           :  -6.0000000000000000000000000000000000000E+02
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   2.0000000000000000000000000000000000000E+02
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT * FROM ERG4 !
 
***ERROR  -8014 Result table must be FOR REUSE:ERG4                        0015
 
Enter command:
CLOSE ERG4 !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT COUNT(*) SPALTE1, SUM ( SPALTE2) SPALTE2,
       AVG ( SPALTE2 ) SPALTE3
    FROM TAB GROUP BY SPALTE1 FOR REUSE !
 
resultcount :                     4
 
Enter command:
FETCH ERG4 !
 
SPALTE1           :            4
SPALTE2           :   3.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   1.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            1
SPALTE2           :  -6.0000000000000000000000000000000000000E+02
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   2.0000000000000000000000000000000000000E+02
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT * FROM ERG4 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1           :            4
SPALTE2           :   3.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   1.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            1
SPALTE2           :  -6.0000000000000000000000000000000000000E+02
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   2.0000000000000000000000000000000000000E+02
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT COUNT(*) SPALTE1, SUM ( SPALTE2) SPALTE2,
       AVG ( SPALTE2 ) SPALTE3
    FROM TAB GROUP BY SPALTE1 !
 
resultcount :                     4
 
Enter command:
FETCH ERG4 !
 
SPALTE1           :            4
SPALTE2           :   3.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   1.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            1
SPALTE2           :  -6.0000000000000000000000000000000000000E+02
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   2.0000000000000000000000000000000000000E+02
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT * FROM ERG4 !
 
***ERROR  -8014 Result table must be FOR REUSE:ERG4                        0015
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG4 !
 
Enter command:
DECLARE ERG4 CURSOR FOR
SELECT COUNT(*) SPALTE1, SUM ( SPALTE2) SPALTE2,
       AVG ( SPALTE2 ) SPALTE3
    FROM TAB GROUP BY SPALTE1 FOR REUSE !
 
resultcount :                     4
 
Enter command:
FETCH ERG4 !
 
SPALTE1           :            4
SPALTE2           :   3.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   1.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            1
SPALTE2           :  -6.0000000000000000000000000000000000000E+02
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   2.0000000000000000000000000000000000000E+02
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
SELECT * FROM ERG4 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE1           :            4
SPALTE2           :   3.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   1.0000000000000000000000000000000000000E+02
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            1
SPALTE2           :  -6.0000000000000000000000000000000000000E+02
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
SPALTE1           :            2
SPALTE2           :   2.0000000000000000000000000000000000000E+02
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     4
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT 3 * SPALTE1 + ERG4.SPALTE2 FROM ERG4 WHERE ERG4.SPALTE1 > 1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 3.1200000000000000000000000000000000000E+02
 1.0600000000000000000000000000000000000E+02
 2.0600000000000000000000000000000000000E+02
 
resultcount :                     3
 
Enter command:
SELECT SUM ( SPALTE1 ) , COUNT ( DISTINCT SPALTE2 ) , SPALTE3
    FROM ERG4 GROUP BY SPALTE3 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1       :   1.0000000000000000000000000000000000000E+00
EXPRESSION2       :            1
SPALTE3           :  -6.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :   6.0000000000000000000000000000000000000E+00
EXPRESSION2       :            2
SPALTE3           :   1.0000000000000000000000000000000000000E+02
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E+00
EXPRESSION2       :            1
SPALTE3           :   2.0000000000000000000000000000000000000E+02
 
resultcount :                     3
 
Enter command:
DECLARE ERG5 CURSOR FOR
SELECT SUM(SPALTE1) COL1, AVG( SPALTE1 + 3 ) COL2
    FROM ERG4 GROUP BY ERG4.SPALTE3 FOR REUSE !
 
resultcount :                     3
 
Enter command:
FETCH ERG5 !
 
COL1              :   1.0000000000000000000000000000000000000E+00
COL2              :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
COL1              :   6.0000000000000000000000000000000000000E+00
COL2              :   6.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
COL1              :   2.0000000000000000000000000000000000000E+00
COL2              :   5.0000000000000000000000000000000000000E+00
 
resultcount :                     3
 
Enter command:
DECLARE ERG6 CURSOR FOR
SELECT DISTINCT * FROM ERG5 !
 
resultcount :                     3
 
Enter command:
FETCH ERG6 !
 
COL1              :   1.0000000000000000000000000000000000000E+00
COL2              :   4.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
COL1              :   2.0000000000000000000000000000000000000E+00
COL2              :   5.0000000000000000000000000000000000000E+00
-----------------------------------------------------------------
COL1              :   6.0000000000000000000000000000000000000E+00
COL2              :   6.0000000000000000000000000000000000000E+00
 
resultcount :                     3
 
Enter command:
CREATE VIEW V1 AS SELECT SPALTE2 FROM TAB !
 
Enter command:
SELECT SPALTE2, COUNT(SPALTE2) FROM V1 GROUP BY SPALTE2 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
SPALTE2 | EXPRESSION1
--------+------------
-600.00 |           1
 100.00 |           4
 200.00 |           1
??????? |           0
 
resultcount :                     4
 
Enter command:
ROLLBACK WORK !
 
Enter command:
DROP TABLE TAB !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N35GROU9 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE STATION ( BHF CHAR (25))!
 
Enter command:
INSERT STATION SET BHF = 'Adenauerplatz'!
 
Enter command:
SELECT * FROM STATION WHERE BHF IN
(SELECT BHF FROM STATION GROUP BY BHF HAVING COUNT(BHF) > 1)
ORDER BY BHF !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM STATION WHERE BHF IN
(SELECT BHF FROM STATION GROUP BY BHF HAVING COUNT(BHF) >= 2)
ORDER BY BHF !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT BHF, COUNT(BHF) CBHF FROM STATION GROUP BY BHF !
 
resultcount :                     1
 
Enter command:
SELECT * FROM STATION WHERE BHF IN
(SELECT BHF FROM ERG1 WHERE CBHF > 1)
ORDER BY BHF !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE N35GRO10 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (WOCHE FIXED (4) KEY, MONAT FIXED (2))!
 
Enter command:
INSERT T VALUES (5000, 12)!
 
Enter command:
INSERT T VALUES ( 100,  4)!
 
Enter command:
CREATE TABLE T1 (A1 FIXED(8)KEY)!
 
Enter command:
INSERT T1 SET A1 = 100!
 
Enter command:
CREATE TABLE T2 (A2 FIXED(8)KEY)!
 
Enter command:
INSERT T2 SET A2 = 100!
 
Enter command:
CREATE VIEW V1 AS SELECT T1.*, T2.* FROM T1, T2
    WHERE T1.A1 = T2.A2 !
 
Enter command:
FILE SEL_TABLE1 ( V1 !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'V1' !
 
resultcount :                     1
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  KERN
TABLENAME         :  V1
PRIVILEGES        :  SEL+
TYPE              :  VIEW
 
resultcount :                     1
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
DECLARE MON CURSOR FOR
SELECT 100* TRUNC(WOCHE/100) + MONAT JJMM, WOCHE
FROM T WHERE WOCHE > 2 FOR REUSE!
 
resultcount :                     2
 
Enter command:
FETCH MON!
 
JJMM                                         | WOCHE
---------------------------------------------+------
 1.0400000000000000000000000000000000000E+02 |   100
 5.0120000000000000000000000000000000000E+03 |  5000
 
resultcount :                     2
 
Enter command:
DECLARE AUF CURSOR FOR
SELECT JJMM, SUM(TRUNC(A2)) AW, SUM(TRUNC(A1)) RS
FROM V1 A, MON B
WHERE A.A2 > 1 AND A.A1 = B.WOCHE
GROUP BY JJMM FOR REUSE !
 
resultcount :                     1
 
Enter command:
FETCH AUF!
 
JJMM              :   1.0400000000000000000000000000000000000E+02
AW                :   1.0000000000000000000000000000000000000E+02
RS                :   1.0000000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
DECLARE AUF1 CURSOR FOR
SELECT JJMM, SUM(TRUNC(A2)) AW, SUM(TRUNC(A1)) RS
FROM V1 A, MON B
WHERE A.A1 = B.WOCHE AND A.A2 > 1
GROUP BY JJMM FOR REUSE !
 
resultcount :                     1
 
Enter command:
FETCH AUF1!
 
JJMM              :   1.0400000000000000000000000000000000000E+02
AW                :   1.0000000000000000000000000000000000000E+02
RS                :   1.0000000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
DROP TABLE T2!
 
Enter command:
CREATE TABLE A (SALARY FIXED (6,2))!
 
Enter command:
CREATE VIEW V (SAL) AS SELECT SUM(SALARY) FROM A !
 
Enter command:
INSERT A VALUES (100)!
 
Enter command:
INSERT A VALUES (500)!
 
Enter command:
SELECT SALARY / SAL FROM A, V !
 
***ERROR  -7021 View column derived from function not allowed:SAL          0017
 
Enter command:
SELECT A.SALARY / SUM(A1.SALARY) FROM A, A A1 !
 
***ERROR  -8017 Column must be group column:SALARY                         0010
 
Enter command:
SELECT A.SALARY / SUM(A1.SALARY) FROM A, A A1 GROUP BY A.SALARY!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 1.6666666666666666666666666666666666666E-01
 8.3333333333333333333333333333333333333E-01
 
resultcount :                     2
 
Enter command:
DROP TABLE A!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8), B CHAR (6))!
 
Enter command:
INSERT T SET A = 'aaa', B = 'bbb'!
 
Enter command:
SELECT A X FROM T
   ORDER BY X !
 
resultcount :                     1
 
Enter command:
SELECT A X FROM T
   GROUP BY A  !
 
resultcount :                     1
 
Enter command:
SELECT A X FROM T
   GROUP BY X  !
 
***ERROR  -8017 Column must be group column:A                              0008
 
Enter command:
SELECT A X FROM T
   GROUP BY X
   ORDER BY X !
 
***ERROR  -8017 Column must be group column:A                              0008
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 * PTS 1122892-4 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB (ID INT)!
 
Enter command:
INSERT TAB VALUES (1)!
 
Enter command:
SELECT MAX(ID) + 1 NEWID FROM TAB HAVING NOT MAX(ID) + 1 IS NULL!
 
resultcount :                     1
 
Enter command:
FETCH!
 
NEWID
------------
           2
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
