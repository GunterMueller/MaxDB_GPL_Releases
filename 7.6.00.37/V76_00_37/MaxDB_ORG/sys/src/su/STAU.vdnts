*** STAU.vdnts ***
*
* Test gestapelter VIEWs, mit langen WHERE-Qual. 
*
file xinitdbk!
*
file CONNECT ( SUT SUT !
*
CREATE USER USER0 PASSWORD USER0 DBA NOT EXCLUSIVE!
*
COMMIT WORK RELEASE!
*
file CONNECT ( USER0 USER0!
*
* Anlegen der Arbeitstabellen
*
CREATE TABLE TABX
(K FIXED (18),
 I FIXED (18),
 N FIXED (18),
 F4 FIXED (5),
 F5 FIXED (5),
 FILL1 CHAR (250),
 FILL2 CHAR (250),
 FILL3 CHAR (250),
 FILL4 CHAR (250),
 PRIMARY KEY (K))!
*
INSERT INTO TABX VALUES(1 ,1 ,1 ,5001,1 ,'','','','')!
INSERT INTO TABX VALUES(2 ,4 ,5 ,5002,1 ,'','','','')!
INSERT INTO TABX VALUES(3 ,2 ,4 ,5003,2 ,'','','','')!
INSERT INTO TABX VALUES(4 ,5 ,2 ,5004,2 ,'','','','')!
INSERT INTO TABX VALUES(5 ,3 ,3 ,5004,3 ,'','','','')!
UPDATE TABX SET FILL1 = RFILL('a','#',250)!
UPDATE TABX SET FILL2 = RFILL('a','#',250)!
UPDATE TABX SET FILL3 = RFILL('a','#',250)!
UPDATE TABX SET FILL4 = RFILL('a','#',250)!
*
CREATE UNIQUE INDEX "TABX.I"
	on TABX( I ) !
*
COMMIT!
* 
*** STAUA.cmd ***
* Aufruf in STAU.vdnts
*
* Anlegen der untersten VIEWs
*** STAUAA.cmd ***
* Aufruf in STAUA.cmd
*
* Anlegen der untersten VIEWs
CREATE VIEW VE1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE (K = 1) OR (N = 1) OR (I = 1) 
               OR (N + K = 2) OR (N + I = 2) OR (I + K = 2)
               OR (N * K = 1) OR (N * I = 1) OR (I * K = 1)
               OR (SQRT(N) = POWER(K,2)) OR (SQRT(N) = POWER(I,2)) 
               OR (SQRT(I) = POWER(K,2))!
CREATE VIEW VW1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE (K < 6) AND (I < 6) AND (N < 6)
              AND (N + K < 10) AND (N + I < 10) AND (K + I < 10)
              AND (N * K < 10) AND (N * I < 10) AND (K * I < 10)
              AND (SQRT(N) = POWER(K,2)) AND (SQRT(N) = POWER(I,2)) 
              AND (SQRT(I) = POWER(K,2))!
CREATE VIEW VS1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 FROM TABX
            WHERE I IN ( -1.25, 13E+14, K * 120, 1, N * N, I / (I + 1)) 
              AND K IN ( -2.25, 12E-14, N * 20, 1, I * I, N / (N + 1)) 
              AND N IN ( -3.25, 11E+55, I * 21, 1, K * K, K / (K + 1))! 
*
* Anlegen der MONSTER-VIEWs
CREATE VIEW VX1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3 
WHERE T1.K = T2.K AND T1.N = T2.N 
  AND T3.N = T2.N AND T3.K = T2.K!
*
CREATE VIEW VY1 AS SELECT N,K FROM VE1
                    UNION ALL
                    SELECT N,K FROM VW1
                    UNION ALL
                    SELECT N,K FROM VS1!
*
CREATE VIEW VZ1 AS SELECT T1.K,T1.N FROM VE1 T1,VW1 T2,VS1 T3 
                    WHERE T1.K = T2.K OR T1.N = T2.N 
                    OR T3.N = T2.N OR T3.K = T2.K
                    OR T2.K = T3.N OR T1.N = T2.K!
*
CREATE VIEW VA1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 
                    FROM VE1 
                    WHERE K IN 
                          (SELECT N FROM VW1
                           WHERE K IN 
                                (SELECT N FROM VS1
                                 WHERE (K = 2 * N) OR (K = 1)))!
*
CREATE VIEW VB1 AS SELECT K,I,N,F4,FILL1,FILL2,FILL3,FILL4 
                    FROM VE1 
                    WHERE (K IN 
                             (SELECT N FROM VW1
                              WHERE K = 1))
                      AND (N IN    
                             (SELECT K FROM VS1
                              WHERE K = 1))!
*
CREATE VIEW VC1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N)
  AND T0.N IN
              (SELECT K FROM VS1 T2
               WHERE N = T0.K)!
*
CREATE VIEW VD1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.N IN
                                    (SELECT N FROM VS1 T2
                                     WHERE K = T0.K))!
*
CREATE VIEW VF1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T0.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
*
CREATE VIEW VG1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T0.K))!
*
CREATE VIEW VH1 AS SELECT N FROM VE1 T0
WHERE T0.K IN
              (SELECT N FROM VW1 T1
               WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K))!
*
CREATE VIEW VI1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND K IS NULL))!
*
CREATE VIEW VJ1 AS SELECT N FROM VE1 T0
WHERE K = N AND NOT EXISTS
               (SELECT N FROM VW1 T1
                WHERE K = T0.N
                         AND T1.K IN
                                    (SELECT N FROM VS1 T2
                                     WHERE N = T1.K AND T0.K IS NULL))!
*
CREATE VIEW VK1 AS SELECT T0.N FROM VE1 T0
WHERE T0.N IN
              (SELECT T1.N FROM VW1 T1, VS1 T2
               WHERE T1.N = T0.N
                 AND T2.N = T0.K)!
*
FILE STAUAS( 1!
* 
COMMIT!
*
* Anlegen der Stapel-Views + SELECT
FILE STAUAB( 2 1!
FILE STAUAB( 3 2!
FILE STAUAB( 4 3!
FILE STAUAB( 5 4!
FILE STAUAB( 6 5!
FILE STAUAB( 7 6!
FILE STAUAB( 8 7!
FILE STAUAB( 9 8!
FILE STAUAB( 10 9!
FILE STAUAB( 11 10!
FILE STAUAB( 12 11!

FILE STAUAB( 13 12!
FILE STAUAB( 14 13!
FILE STAUAB( 15 14!
*
* Loeschen der untersten VIEWs
DROP VIEW VE1!
commit !
DROP VIEW VW1!
commit !
DROP VIEW VS1!
* 
COMMIT!
*
DROP TABLE TABX!
*
COMMIT WORK RELEASE!
*
file CONNECT ( SUT SUT !
*
DROP USER USER0 !
*
COMMIT WORK RELEASE!
*
file shutdwnk!
vdnexit!
