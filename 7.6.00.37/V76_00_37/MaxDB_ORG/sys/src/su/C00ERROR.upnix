C00ERROR.vdnts
 
Enter command:
 *** SAMMLUNG VON TESTS ZU KERN-FEHLERPROTOKOLLEN
 *** DER NAME DES 'c00e... dbcmd' GIBT DIE NUMMER
 *** DES ENTSPRECHENDEN KERN-FEHLERPROTOKOLLS WIEDER !
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE C00E099 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T01 (S11 CHAR(8) KEY, S12 CHAR(18) KEY)!
 
Enter command:
CREATE TABLE T02 (S21 CHAR(8) KEY, S22 CHAR(5)  KEY, S23 FIXED(3) KEY,
                  S24 CHAR(12),    S25 CHAR(18))!
 
Enter command:
COMMIT!
 
Enter command:
INSERT T01 VALUES ('AAAAAAA','BBBBBB')!
 
Enter command:
INSERT T02 VALUES ('AAAAAAA','CCCC',4,'AAAAAAA','BBBBBB')!
 
Enter command:
COMMIT!
 
Enter command:
EXPLAIN SELECT * FROM T01, T02
  WHERE S11 = S24
    AND S12 = S25
    AND S22 = 'CCCC'
    AND S25 = 'BBBBBB'
    AND S24 = 'AAAAAAA'
    AND S11 = 'AAAAAAA'
    AND S12 = 'BBBBBB'!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T02                |                    | TABLE SCAN                               |          1
KERN               | T01                |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | S11                |      (USED KEY COLUMN)                   |
                   |                    | S12                |      (USED KEY COLUMN)                   |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT * FROM T01, T02
  WHERE S11 = S24
    AND S12 = S25
    AND S22 = 'CCCC'
    AND S25 = 'BBBBBB'
    AND S24 = 'AAAAAAA'
    AND S11 = 'AAAAAAA'
    AND S12 = 'BBBBBB'!
 
resultcount :                     1
 
Enter command:
FETCH !
 
S11               :  AAAAAAA
S12               :  BBBBBB
S21               :  AAAAAAA
S22               :  CCCC
S23               :     4
S24               :  AAAAAAA
S25               :  BBBBBB
 
resultcount :                     1
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE C00E106 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PERSON   (PNR FIXED(3) KEY, PNAME CHAR(20) )!
 
Enter command:
CREATE TABLE MITGLIED (GNR FIXED(4) KEY, PNR FIXED(4) KEY )!
 
Enter command:
CREATE TABLE GRUPPE   (GNR FIXED(5) KEY, GNAME CHAR(20) )!
 
Enter command:
INSERT PERSON VALUES (1, 'pino') !
 
Enter command:
INSERT MITGLIED VALUES (101, 1) !
 
Enter command:
INSERT GRUPPE VALUES (101, 'O.v.W.') !
 
Enter command:
COMMIT WORK!
 
Enter command:
ALTER TABLE MITGLIED FOREIGN KEY P_MITGLIED (PNR) REFERENCES PERSON !
 
***ERROR  -8006 Data types must be compatible:PNR                          0046
 
Enter command:
ALTER TABLE MITGLIED FOREIGN KEY G_MITGLIED (GNR) REFERENCES GRUPPE !
 
***ERROR  -8006 Data types must be compatible:GNR                          0046
 
Enter command:
COMMIT   RELEASE!
 
Enter command:
FILE C00E110 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE FEHLER (
   EINS FIXED (4) DEFAULT 10 RANGE IN (10, 20, 30, 40),
   ZWEI FIXED (4)
)!
 
Enter command:
INSERT FEHLER SET EINS = 20, ZWEI = 10!
 
Enter command:
INSERT FEHLER SET ZWEI = 15!
 
Enter command:
SELECT * FROM FEHLER!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
EINS  | ZWEI
------+------
   20 |    10
   10 |    15
 
resultcount :                     2
 
Enter command:
ALTER TABLE FEHLER COLUMN EINS FIXED(6)!
 
Enter command:
INSERT FEHLER SET EINS = 30, ZWEI = 10!
 
Enter command:
INSERT FEHLER SET ZWEI = 35!
 
Enter command:
SELECT * FROM FEHLER!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
EINS    | ZWEI
--------+------
     20 |    10
     10 |    15
     30 |    10
     10 |    35
 
resultcount :                     4
 
Enter command:
ROLLBACK RELEASE!
 
Enter command:
FILE C00E111 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PE (
   PN       CHAR(16) ASCII KEY,
   GEBNAME  CHAR(100) ASCII,
   GEBDAT   CHAR(10) ASCII,
   GESCHL   CHAR(1) ASCII,
   GEBORT   CHAR(100) ASCII,
   FAMNAME  CHAR(100) ASCII,
   VORNAME  CHAR(100) ASCII,
   TITEL    CHAR(100) ASCII,
   WOHN     CHAR(100) ASCII,
   STRAS    CHAR(100) ASCII,
   LAND     CHAR(100) ASCII,
   STAAT    CHAR(9) ASCII,
   MUTNAME  CHAR(100) ASCII,
   BEM      CHAR(200) ASCII,
   BZR      CHAR(1) ASCII,
   VORL     CHAR(1) ASCII) !
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE VF (
   AZ       CHAR(17) ASCII KEY,
   VFART1   CHAR(1) ASCII,
   VFART2   CHAR(1) ASCII,
   FRDAZ    CHAR(100) ASCII,
   EINLBEH  CHAR(1) ASCII,
   EINLDAT  CHAR(8) ASCII,
   EINGDAT  CHAR(8) ASCII,
   DELGR1   CHAR(1) ASCII,
   DELGR2   CHAR(1) ASCII,
   DELGR3   CHAR(3) ASCII,
   DEZANW   CHAR(1) ASCII,
   DEZKZ1   CHAR(3) ASCII,
   DEZKZ2   CHAR(1) ASCII,
   TATVORWF CHAR(100) ASCII,
   TATORT   CHAR(100) ASCII,
   TATZEIT  CHAR(17) ASCII,
   ASSERV   CHAR(1) ASCII,
   ASSNUM   CHAR(8) ASCII,
   ANZB     CHAR(4) ASCII,
   BEZ      CHAR(100) ASCII,
   ZKNUM    CHAR(5) ASCII,
   EINTDAT  CHAR(8) ASCII,
   EINLBEH2 CHAR(1) ASCII,
   EINLDAT2 CHAR(8) ASCII,
   WGLANF   CHAR(5) ASCII,
   WGLDAUER CHAR(2) ASCII,
   POMAP    CHAR(1) ASCII,
   BEM      CHAR(140) ASCII,
   ALTTERMIN CHAR(8) ASCII,
   SCHADEN  CHAR(10) ASCII,
   ANZE     CHAR(1) ASCII,
   VSTATUS  CHAR(1) ASCII,
   RSTATUS  CHAR(1) ASCII
   ) !
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE TF (
   AZ         CHAR(17) ASCII KEY,
   PN         CHAR(16) ASCII KEY,
   LFDNR      CHAR(  2) ASCII,
   TATVORW    CHAR(100) ASCII,
   ERLART     CHAR(  2) ASCII,
   FREITXT    CHAR( 70) ASCII,
   SPRUCHK    CHAR(  1) ASCII,
   EMPF       CHAR(  3) ASCII,
   BETRAG     CHAR(  9) ASCII,
   AUFLERF    CHAR(  1) ASCII,
   VFGDAT     CHAR(  8) ASCII,
   BESCHEID   CHAR(  1) ASCII,
   UEBERN     CHAR(  1) ASCII,
   BESCHW     CHAR(  1) ASCII,
   BESCHERL   CHAR(  1) ASCII,
   BEM        CHAR(140) ASCII,
   ENTSCHANTR CHAR(  1) ASCII,
   STORDAT    CHAR(  8) ASCII,
   AMGER      CHAR( 22) ASCII,
   AMAZ       CHAR( 17) ASCII,
   AMENT1     CHAR(  1) ASCII,
   AMENT2     CHAR( 17) ASCII,
   AMENT3     CHAR(  2) ASCII,
   AMDAT      CHAR(  8) ASCII,
   AMRM       CHAR(  1) ASCII,
   LNGER      CHAR( 22) ASCII,
   LNAZ       CHAR( 17) ASCII,
   LNENT1     CHAR(  1) ASCII,
   LNENT2     CHAR( 17) ASCII,
   LNENT3     CHAR(  2) ASCII,
   LNDAT      CHAR(  8) ASCII,
   LNRM       CHAR(  1) ASCII,
   REVAZ      CHAR( 17) ASCII,
   REVENT1    CHAR(  1) ASCII,
   REVENT2    CHAR( 23) ASCII,
   RKDAT      CHAR(  8) ASCII,
   VRSAZ      CHAR( 17) ASCII,
   PSTATUS    CHAR(  1) ASCII
) !
 
Enter command:
COMMIT !
 
Enter command:
INSERT PE SET PN = '1', FAMNAME = 'Eins' !
 
Enter command:
INSERT PE SET PN = '2', FAMNAME = 'Zwei' !
 
Enter command:
INSERT VF SET AZ = '5 Js 7/90', TATVORWF = 'ladendiebstahl' !
 
Enter command:
INSERT TF SET AZ = '5 Js 7/90', PN = '1', LFDNR = '1' !
 
Enter command:
INSERT TF SET AZ = '5 Js 7/90', PN = '2', LFDNR = '2' !
 
Enter command:
PARSING!
 
Enter command:
SELECT * FROM TF, VF, PE
 WHERE TF.AZ = VF.AZ
   AND TF.PN = PE.PN
   AND TF.LFDNR = :A
   AND VF.AZ = :B
   FOR REUSE !
parsing idnr :       1
 
Enter command:
EXECUTING!
 
Enter command:
DATA!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 2  '2'
c 17 '5 Js 7/90'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP PARSEID !
Parsing idnr :      1
 
Enter command:
PARSING!
 
Enter command:
DECLARE E1 CURSOR FOR
SELECT
TF.AZ, PE.PN, LFDNR, TATVORW, ERLART,
FREITXT, SPRUCHK, EMPF, BETRAG, AUFLERF,
VFGDAT, BESCHEID, UEBERN, BESCHW, BESCHERL,
PE.BEM, ENTSCHANTR, STORDAT, AMGER, AMAZ,
AMENT1, AMENT2, AMENT3, AMDAT, AMRM,
LNGER, LNAZ, LNENT1, LNENT2, LNENT3,
LNDAT, LNRM, REVAZ, REVENT1, REVENT2,
RKDAT, VRSAZ, PSTATUS, VF.AZ, VFART1,
VFART2, FRDAZ, EINLBEH, EINLDAT, EINGDAT,
DELGR1, DELGR2, DELGR3, DEZANW, DEZKZ1,
DEZKZ2, TATVORWF, TATORT, TATZEIT, ASSERV,
ASSNUM, ANZB, BEZ, ZKNUM, EINTDAT,
EINLBEH2, EINLDAT2, WGLANF, WGLDAUER, POMAP,
TF.BEM, ALTTERMIN, SCHADEN, ANZE, VSTATUS,
RSTATUS, TF.PN, GEBNAME, GEBDAT, GESCHL,
GEBORT, FAMNAME, VORNAME, TITEL, WOHN,
STRAS, LAND, STAAT, MUTNAME, VF.BEM,
BZR, VORL
FROM TF, VF, PE
 WHERE TF.AZ = VF.AZ
   AND TF.PN = PE.PN
   AND TF.LFDNR = :A
   AND VF.AZ = :B
   FOR REUSE !
parsing idnr :       1
 
Enter command:
EXECUTING!
 
Enter command:
DATA!
 
Enter command:
SELECT!
Parsing idnr :      1
 
c 2  '2'
c 17 '5 Js 7/90'
 
resultcount :                     1
 
Enter command:
NODATA!
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DROP PARSEID !
Parsing idnr :      1
 
Enter command:
DECLARE E1 CURSOR FOR
SELECT
TF.AZ, PE.PN, LFDNR, TATVORW, ERLART,
FREITXT, SPRUCHK, EMPF, BETRAG, AUFLERF,
VFGDAT, BESCHEID, UEBERN, BESCHW, BESCHERL,
PE.BEM, ENTSCHANTR, STORDAT, AMGER, AMAZ,
AMENT1, AMENT2, AMENT3, AMDAT, AMRM,
LNGER, LNAZ, LNENT1, LNENT2, LNENT3,
LNDAT, LNRM, REVAZ, REVENT1, REVENT2,
RKDAT, VRSAZ, PSTATUS, VF.AZ, VFART1,
VFART2, FRDAZ, EINLBEH, EINLDAT, EINGDAT,
DELGR1, DELGR2, DELGR3, DEZANW, DEZKZ1,
DEZKZ2, TATVORWF, TATORT, TATZEIT, ASSERV,
ASSNUM, ANZB, BEZ, ZKNUM, EINTDAT,
EINLBEH2, EINLDAT2, WGLANF, WGLDAUER, POMAP,
TF.BEM, ALTTERMIN, SCHADEN, ANZE, VSTATUS,
RSTATUS, TF.PN, GEBNAME, GEBDAT, GESCHL,
GEBORT, FAMNAME, VORNAME, TITEL, WOHN,
STRAS, LAND, STAAT, MUTNAME, VF.BEM,
BZR, VORL
FROM TF, VF, PE
 WHERE TF.AZ = VF.AZ
   AND TF.PN = PE.PN
   AND TF.LFDNR = '2'
   AND VF.AZ = '5 Js 7/90'
   FOR REUSE !
 
resultcount :                     1
 
Enter command:
COMMIT   RELEASE!
 
Enter command:
FILE C00E112 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T01 (S01 CHAR(8)  KEY, S02 CHAR(10), S03 CHAR(2))!
 
Enter command:
CREATE TABLE T02 (S01 CHAR(10) KEY, S02 CHAR(32))!
 
Enter command:
COMMIT!
 
Enter command:
INSERT T01 VALUES ('BENGALS','Cincinnati','si')!
 
Enter command:
INSERT T01 VALUES ('BROWNS','Cleveland','no')!
 
Enter command:
INSERT T02 VALUES ('Cincinnati','BENGALS')!
 
Enter command:
INSERT T02 VALUES ('Cleveland','BROWNS')!
 
Enter command:
COMMIT!
 
Enter command:
ALTER TABLE T01 FOREIGN KEY L01 (S02) REFERENCES T02!
 
Enter command:
CREATE VIEW V01 AS SELECT S03, S02, S01 FROM T01!
 
Enter command:
COMMIT!
 
Enter command:
DECLARE R01 CURSOR FOR
SELECT * FROM V01 FOR UPDATE!
tablename    : "KERN"."V01"
 
resultcount :               unknown
 
Enter command:
FETCH FIRST R01 INTO :V01, :V02, :V03!
 
S03               :  si
S02               :  Cincinnati
S01               :  BENGALS
 
Enter command:
UPDATE V01 SET S03 = 'no' WHERE CURRENT OF R01 !
 
resultcount :                     1
 
Enter command:
SELECT * FROM V01 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S03 | S02        | S01
----+------------+---------
no  | Cincinnati | BENGALS
no  | Cleveland  | BROWNS
 
resultcount :                     2
 
Enter command:
COMMIT!
 
Enter command:
ALTER TABLE T01 DROP FOREIGN KEY L01 !
 
Enter command:
COMMIT!
 
Enter command:
DECLARE R01 CURSOR FOR
SELECT * FROM V01 FOR UPDATE!
tablename    : "KERN"."V01"
 
resultcount :               unknown
 
Enter command:
FETCH FIRST R01 INTO :V01, :V02, :V03!
 
S03               :  no
S02               :  Cincinnati
S01               :  BENGALS
 
Enter command:
UPDATE V01 SET S03 = 'no' WHERE CURRENT OF R01!
 
resultcount :                     1
 
Enter command:
COMMIT RELEASE!
 
Enter command:
FILE C00E120 !
 
Enter command:
 * INTERNE FEHLERNUMMER 120
 * FUEHRTE ZU EINEN KB_STACKTYPE_ILLEGAL !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "RN0014            "
("CO_ID             " CHAR (4) KEY,
 "AST_GRP       " CHAR (3) KEY,
 "BUSI_YR           " FIXED(4,0)        KEY,
 "AST_ID        " CHAR (6) KEY,
 "D_TYP_ID       " CHAR (2) KEY,
 "AST_CLA       " CHAR (1)
 DEFAULT            ' ',
 "UNIT         " FIXED(4,0)
 DEFAULT                0,
 "UNIT_DSPL    " FIXED(4,0)
 DEFAULT                0,
 "UNIT_TRAN    " FIXED(4,0)
 DEFAULT                0,
 "UNIT_ADD     " FIXED(4,0)
 DEFAULT                0,
 "VAL          " FIXED(13,2)
 DEFAULT                       0.00,
 "VAL_HDM      " FIXED(13,2)
 DEFAULT                       0.00,
 "DEPR         " FIXED(13,2)
 DEFAULT                       0.00,
 "D_HDM     " FIXED(13,2)
 DEFAULT                       0.00,
 "ADJ          " FIXED(13,2)
 DEFAULT                       0.00,
 "ADJ_HDM      " FIXED(13,2)
 DEFAULT                       0.00,
 "DSPL         " FIXED(13,2)
 DEFAULT                       0.00,
 "DSPL_HDM     " FIXED(13,2)
 DEFAULT                       0.00,
 "TRAN         " FIXED(13,2)
 DEFAULT                       0.00,
 "TRAN_HDM     " FIXED(13,2)
 DEFAULT                       0.00,
 "ADD          " FIXED(13,2)
 DEFAULT                       0.00,
 "ADD_HDM      " FIXED(13,2)
 DEFAULT                       0.00,
 "D_BAS_VAL      " FIXED(13,2)
 DEFAULT                       0.00,
 "D_VAL          " FIXED(13,2)
 DEFAULT                       0.00,
 "D_BAS_HDM      " FIXED(13,2)
 DEFAULT                       0.00,
 "D_VAL_HDM      " FIXED(13,2)
 DEFAULT                       0.00,
 "D_IND          " CHAR (1)
 DEFAULT            ' ',
 "D_ADJ          " FIXED(13,2)
 DEFAULT                       0.00,
 "D_ADJ_HDM      " FIXED(13,2)
 DEFAULT                       0.00,
 "D_DL         " FIXED(13,2)
 DEFAULT                       0.00,
 "D_DL_HDM     " FIXED(13,2)
 DEFAULT                       0.00,
 "D_TR         " FIXED(13,2)
 DEFAULT                       0.00,
 "D_TR_HDM     " FIXED(13,2)
 DEFAULT                       0.00,
 "D_END_DT       " DATE
 DEFAULT            '19000101',
 "LAST_D_DT      " DATE
 DEFAULT            '19000101',
 "DT_STA_DEPR       " DATE
 DEFAULT            '19000101') !
 
Enter command:
CREATE INDEX RN0014_X1 ON RN0014
    (CO_ID ASC,
     BUSI_YR ASC,
     AST_GRP ASC,
     D_TYP_ID ASC,
     AST_ID ASC) !
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT RN0014.AST_ID, RN0014.AST_GRP, RN0014.VAL,
B.AST_ID, B.AST_GRP, B.VAL, RN0014.VAL+B.VAL
FROM <RN0014   , RN0014 B>
WHERE RN0014.CO_ID = '507V' AND RN0014.BUSI_YR = 1990
AND B.CO_ID =RN0014.CO_ID AND B.BUSI_YR = RN0014.BUSI_YR
AND RN0014.AST_GRP IN
('410','420','430','490','511','520','530','610','620','630')
AND B.AST_GRP IN
('410','420','430','490','511','520','530','610','620','630')
AND RN0014.D_TYP_ID = '01' AND   B.D_TYP_ID = '01'
AND RN0014.VAL < 142499 AND RN0014.AST_ID <> B.AST_ID
AND RN0014.DSPL = 0  AND B.DSPL = 0
AND (RN0014.VAL + B.VAL) > 142499
AND (RN0014.VAL + B.VAL) < 142501 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT RN0014.AST_ID, RN0014.AST_GRP, RN0014.VAL,
B.AST_ID, B.AST_GRP, B.VAL, RN0014.VAL+B.VAL
FROM <RN0014  B, RN0014>
WHERE RN0014.CO_ID = '507V' AND RN0014.BUSI_YR = 1990
AND B.CO_ID =RN0014.CO_ID AND B.BUSI_YR = RN0014.BUSI_YR
AND RN0014.AST_GRP IN
('410','420','430','490','511','520','530','610','620','630')
AND B.AST_GRP IN
('410','420','430','490','511','520','530','610','620','630')
AND RN0014.D_TYP_ID = '01' AND   B.D_TYP_ID = '01'
AND RN0014.VAL < 142499 AND RN0014.AST_ID <> B.AST_ID
AND RN0014.DSPL = 0  AND B.DSPL = 0
AND (RN0014.VAL + B.VAL) > 142499
AND (RN0014.VAL + B.VAL) < 142501 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
COMMIT   RELEASE!
 
Enter command:
FILE C00E211 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB1 (
CD_STATION FIXED (3,0) KEY,
BDG_GEG_STATION DATE RANGE BETWEEN '19900101' AND '21001231',
SRT_STATION CHAR (1) ASCII NOT NULL,
EDG_GEG_STATION DATE RANGE BETWEEN '19900101' AND '21001231',
NAAM_STATION CHAR (16) ASCII NOT NULL,
NR_INFOPAGINA FIXED (4) RANGE BETWEEN 1 AND 9999,
KMA_AFTREK_GRENSP FIXED (2) RANGE BETWEEN 0 AND 20,
OMS_ZONES CHAR (19) ASCII)!
 
Enter command:
INSERT TAB1 VALUES (2, '19910331', 'N', '19910818', 'abc', 567,4,'qw')!
 
Enter command:
CREATE TABLE TAB2 (CD_STATION FIXED (3) KEY RANGE NOT IN (1),
BDG_ST_AP_AFSTAND DATE KEY RANGE BETWEEN '19900101' AND '21001231',
EDG_ST_AP_AFSTAND DATE KEY RANGE BETWEEN '19900101' AND '21001231',
NR_AA_P_1 FIXED (3) NOT NULL,
KMA_1E_A1 FIXED(3) NOT NULL,
KMA_2E_A1 FIXED(3) NOT NULL,
NR_AA_P_2 FIXED (3),
KMA_1E_A2 FIXED(3),
KMA_2E_A2 FIXED(3) )!
 
Enter command:
INSERT TAB2 VALUES (2, '19910522', '19910525', 3, 1, 2, NULL, NULL,NULL)!
 
Enter command:
CREATE VIEW CVI AS SELECT A.CD_STATION, A.BDG_GEG_STATION,
A.EDG_GEG_STATION, B.NR_AA_P_1,
B.KMA_1E_A1, B.KMA_2E_A1, B.NR_AA_P_2, B.KMA_1E_A2,
B.KMA_2E_A2, B.BDG_ST_AP_AFSTAND, B.EDG_ST_AP_AFSTAND
FROM TAB1 A, TAB2 B
WHERE A.CD_STATION = B.CD_STATION AND
A.SRT_STATION = 'N' !
 
Enter command:
SELECT CD_STATION, BDG_GEG_STATION FROM CVI
ORDER BY NR_AA_P_1 !
 
resultcount :                     1
 
Enter command:
SELECT CD_STATION, NR_AA_P_1, BDG_GEG_STATION FROM CVI
ORDER BY NR_AA_P_1 !
 
resultcount :                     1
 
Enter command:
SELECT A.CD_STATION, BDG_GEG_STATION
FROM <TAB1 A, TAB2 B>
WHERE A.CD_STATION = B.CD_STATION AND
A.SRT_STATION = 'N'
ORDER BY NR_AA_P_1 !
 
resultcount :                     1
 
Enter command:
SELECT B.CD_STATION, BDG_GEG_STATION
FROM <TAB2 B, TAB1 A>
WHERE A.CD_STATION = B.CD_STATION AND
A.SRT_STATION = 'N'
ORDER BY NR_AA_P_1 !
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE C00E212 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8) KEY, B CHAR (8))!
 
Enter command:
INSERT T SET A = 'aaa', B = 'bbb'!
 
Enter command:
CREATE TABLE T1 (A1 CHAR (8) KEY, B1 CHAR (8))!
 
Enter command:
INSERT T1 VALUES ('aaa', 'bbb')!
 
Enter command:
CREATE VIEW V AS SELECT MAX(A),B FROM T GROUP BY B !
 
Enter command:
CREATE VIEW X AS SELECT MAX(A)   FROM T !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM V FOR UPDATE OF B !
 
***ERROR  -7008 Updates of this table not allowed                          0001
 
Enter command:
FETCH1 ERG !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
UPDATE V SET B='vvv' WHERE CURRENT OF ERG !
 
***ERROR  -5001 Missing privilege:UPDATE                                   0008
 
Enter command:
CLOSE ERG !
 
***ERROR  -4000 Unknown result table                                       0007
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM X FOR UPDATE !
 
***ERROR  -7008 Updates of this table not allowed                          0001
 
Enter command:
FETCH1 ERG !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
UPDATE X SET B='vvv' WHERE CURRENT OF ERG !
 
***ERROR  -5001 Missing privilege:UPDATE                                   0008
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
FILE C00E213 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T_VERKOCHT (
    CD_AF  FIXED (3)   KEY,
    NR_LOK FIXED (2)   KEY,
    BDG_L  DATE        KEY,
    NR_BO  FIXED (6)   KEY          RANGE BETWEEN 1 AND 999999,
    NR_LOD FIXED (3)       NOT NULL,
    SRT_V  CHAR  (3) ASCII NOT NULL RANGE IN (
             'ASL', 'BAP', 'BNL', 'BTL', 'NEV', 'RSB', 'RES', 'VGD', 'LKT'),
    BEDRA  FIXED (9,2)     NOT NULL,
    IND_V  CHAR  (1) ASCII NOT NULL RANGE IN ('J', 'N'),
    STATU  CHAR  (1) ASCII NOT NULL RANGE IN ('R', 'S', 'V', 'A'),
    DT_RE  DATE            NOT NULL,
    TIJD_  TIME            NOT NULL,
    NR_TE  FIXED (6)                RANGE BETWEEN 1 AND 999999,
    CD_HO  FIXED (1)                RANGE BETWEEN 1 AND 8) !
 
Enter command:
ALTER TABLE T_VERKOCHT ADD (
    DT_SE  DATE          )!
 
Enter command:
ALTER TABLE T_VERKOCHT COLUMN DT_SE NOT NULL !
 
Enter command:
CREATE VIEW V AS SELECT CD_AF, NR_LOK, BDG_L, NR_BO, NR_LOD,
    SRT_V, BEDRA, IND_V, STATU,
    DT_RE, TIJD_, NR_TE, CD_HO,
    DT_SE
    FROM T_VERKOCHT
    WHERE SRT_V NOT IN ('BAP', 'LKT') OR SRT_V IN ('BAP', 'LKT') AND
    IND_V = 'N'
    WITH CHECK OPTION !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT V (CD_AF, NR_LOK, BDG_L, NR_BO, NR_LOD, SRT_V,
    BEDRA, IND_V, STATU, DT_RE, DT_SE, TIJD_, NR_TE, CD_HO)
    VALUES (:A, :B, :C, :D, :E, :F, :G, :H, :I, :J, :K, :L, :M, :N) !
 
n 3 762 n 2 22 c 10 '19900101' n 6 10001 n 3 39 c 3 'BNL'
n 9,2 17.5 c 1 'N' c 1 'V' c 10 '19910530'
c 10 '19910530'
c 8 '092407'
n 6 25  n 1 1
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T_VERKOCHT !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE C00E248 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE SNI_NL
 (K1 CHAR (10) KEY,
  F1 CHAR (10) , F2 CHAR (10), F3 CHAR (10), F4 CHAR (10))!
 
Enter command:
INSERT SNI_NL VALUES ('1', '1' , NULL, NULL, '0' )!
 
Enter command:
INSERT SNI_NL VALUES ('2', '2' , '2' , NULL, '0' )!
 
Enter command:
INSERT SNI_NL VALUES ('3', NULL, '3' , NULL, '3' )!
 
Enter command:
INSERT SNI_NL VALUES ('4', NULL, '0' , '4' , NULL)!
 
Enter command:
INSERT SNI_NL VALUES ('5', NULL, '0' , '5' , '0' )!
 
Enter command:
INSERT SNI_NL VALUES ('6', NULL, '0' , '6' , '6' )!
 
Enter command:
INSERT SNI_NL VALUES ('7', '7' , '0' , NULL, '0' )!
 
Enter command:
INSERT SNI_NL VALUES ('8', '8' , '8' , '8' , '8' )!
 
Enter command:
SELECT * FROM SNI_NL!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K1         | F1         | F2         | F3         | F4
-----------+------------+------------+------------+-----------
1          | 1          | ?????????? | ?????????? | 0
2          | 2          | 2          | ?????????? | 0
3          | ?????????? | 3          | ?????????? | 3
4          | ?????????? | 0          | 4          | ??????????
5          | ?????????? | 0          | 5          | 0
6          | ?????????? | 0          | 6          | 6
7          | 7          | 0          | ?????????? | 0
8          | 8          | 8          | 8          | 8
 
resultcount :                     8
 
Enter command:
SELECT * FROM SNI_NL WHERE
 (F1 IS NOT NULL  AND
    (F2 IS NULL OR '1' <= F2 ))
 OR
 (F3 IS NOT NULL  AND
    (F4 IS NULL OR '1' <= F4 ))!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K1         | F1         | F2         | F3         | F4
-----------+------------+------------+------------+-----------
1          | 1          | ?????????? | ?????????? | 0
2          | 2          | 2          | ?????????? | 0
4          | ?????????? | 0          | 4          | ??????????
6          | ?????????? | 0          | 6          | 6
8          | 8          | 8          | 8          | 8
 
resultcount :                     5
 
Enter command:
SELECT * FROM SNI_NL WHERE
 (F1 IS NOT NULL  AND
    (F2 IS NULL OR '1' <= F2 ))
 AND
 (F3 IS NOT NULL  AND
    (F4 IS NULL OR '1' <= F4 ))!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K1         | F1         | F2         | F3         | F4
-----------+------------+------------+------------+-----------
8          | 8          | 8          | 8          | 8
 
resultcount :                     1
 
Enter command:
SELECT * FROM SNI_NL WHERE
    ((F2 IS NULL OR '1' <= F2 ) AND
       F1 IS NOT NULL)
 OR
    ((F4 IS NULL OR '1' <= F4 ) AND
       F3 IS NOT NULL)!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K1         | F1         | F2         | F3         | F4
-----------+------------+------------+------------+-----------
1          | 1          | ?????????? | ?????????? | 0
2          | 2          | 2          | ?????????? | 0
4          | ?????????? | 0          | 4          | ??????????
6          | ?????????? | 0          | 6          | 6
8          | 8          | 8          | 8          | 8
 
resultcount :                     5
 
Enter command:
SELECT * FROM SNI_NL WHERE
    ((F2 IS NULL OR '1' <= F2 ) AND
       F1 IS NOT NULL)
 AND
    ((F4 IS NULL OR '1' <= F4 ) AND
       F3 IS NOT NULL)!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
K1         | F1         | F2         | F3         | F4
-----------+------------+------------+------------+-----------
8          | 8          | 8          | 8          | 8
 
resultcount :                     1
 
Enter command:
DROP TABLE SNI_NL !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE C00E262 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (
  K1 FIXED (1) KEY,
  K2 FIXED (2) KEY,
  K3 FIXED (5) KEY) !
 
Enter command:
INSERT T VALUES (1, 12, 1)!
 
Enter command:
INSERT T VALUES (1, 12, 2)!
 
Enter command:
INSERT T VALUES (1, 12, 8)!
 
Enter command:
INSERT T VALUES (1, 12,10)!
 
Enter command:
INSERT T VALUES (1, 12,23)!
 
Enter command:
INSERT T VALUES (1, 12,91)!
 
Enter command:
INSERT T VALUES (2, 12, 1)!
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T WHERE
   K1 < 5 AND K2 < 99 AND
  (K1 = 1 AND K2 = 12 AND K3 = 1) !
 
resultcount :               unknown
 
Enter command:
FETCH ERG !
 
K1 | K2  | K3
---+-----+-------
 1 |  12 |      1
 
resultcount :                     1
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T WHERE
   K1 < 5 AND K2 < 99 AND
  (K1 = 1 AND K2 = 12 AND K3 = 1) FOR REUSE!
 
resultcount :                     1
 
Enter command:
FETCH ERG !
 
K1 | K2  | K3
---+-----+-------
 1 |  12 |      1
 
resultcount :                     1
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE C00E263 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8),
                 B CHAR (8))!
 
Enter command:
INSERT T SET A = 'aaa', B = 'bbb'!
 
Enter command:
INSERT T SET A = 'aaa', B = 'ccc'!
 
Enter command:
CREATE TABLE T1 ( A1 FIXED(8), B1 CHAR (8))!
 
Enter command:
INSERT T1 SET A1 = 2, B1 = 'aaa'!
 
Enter command:
INSERT T1 SET A1 = 2, B1 = 'bbb'!
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM T, T1
    WHERE B = B1 !
 
Enter command:
SELECT * FROM V1
  WHERE B = 'bbb'
    AND A = (SELECT MIN (A) FROM V1 WHERE B||B1 > 'b')!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B        | A1        | B1
---------+----------+-----------+---------
aaa      | bbb      |         2 | bbb
 
resultcount :                     1
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * INTO :A, :B, :C, :D FROM V1
  WHERE B = :B1
    AND A = (SELECT MIN (A) FROM V1 WHERE B||B1 > :B2 AND A <> :A)!
 
c 8 'bbb'
c 255 'b'
c 8 'z'
 
A                 :  aaa
B                 :  bbb
A1                :          2
B1                :  bbb
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE C00E265 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED (7) KEY,  B FIXED (8), C FIXED (3))!
 
Enter command:
INSERT T SET A = 1, C = 80, B = 3 !
 
Enter command:
INSERT T SET A = 2, C = 80, B = 5 !
 
Enter command:
CREATE VIEW TT AS SELECT * FROM KERN.T !
 
Enter command:
EXPLAIN SELECT * FROM TT X WHERE C = 80 AND
B = (SELECT MAX (B) FROM TT Y WHERE X.A = Y.A )!
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | X                  |                    | TABLE SCAN                               |          1
INTERNAL           | TEMPORARY RESULT   |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | A                  |      (USED KEY COLUMN)                   |
                   | Y                  |                    | EQUAL CONDITION FOR KEY                  |          1
                   |                    | A                  |      (USED KEY COLUMN)                   |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |       1006
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE C00E273 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (
 S1 CHAR(40)ASCII, S2 CHAR(40)ASCII,  S3 CHAR(40)ASCII,  S4 CHAR(40)ASCII,
 S5 CHAR(40)ASCII, S6 CHAR(40)ASCII,  S7 CHAR(40)ASCII,  S8 CHAR(40)ASCII,
 S9 CHAR(40)ASCII, S10 CHAR(40)ASCII,
S11 CHAR(40)ASCII, S12 CHAR(40)ASCII, S13 CHAR(40)ASCII, S14 CHAR(40)ASCII,
S15 CHAR(40)ASCII, S16 CHAR(40)ASCII, S17 CHAR(40)ASCII, S18 CHAR(40)ASCII,
S19 CHAR(40)ASCII, S20 CHAR(40)ASCII,
S21 CHAR(40)ASCII, S22 CHAR(40)ASCII, S23 CHAR(40)ASCII, S24 CHAR(40)ASCII,
S25 CHAR(40)ASCII, S26 CHAR(40)ASCII, S27 CHAR(40)ASCII, S28 CHAR(40)ASCII,
S29 CHAR(40)ASCII, S30 CHAR(40)ASCII,
S31 CHAR(40)ASCII, S32 CHAR(40)ASCII, S33 CHAR(40)ASCII, S34 CHAR(40)ASCII,
S35 CHAR(40)ASCII, S36 CHAR(40)ASCII, S37 CHAR(40)ASCII, S38 CHAR(40)ASCII,
S39 CHAR(40)ASCII, S40 CHAR(40)ASCII,
S41 CHAR(40)ASCII, S42 CHAR(40)ASCII, S43 CHAR(40)ASCII, S44 CHAR(40)ASCII,
S45 CHAR(40)ASCII, S46 CHAR(40)ASCII, S47 CHAR(40)ASCII, S48 CHAR(40)ASCII,
S49 CHAR(40)ASCII, S50 CHAR(40)ASCII,
S51 CHAR(40)ASCII, S52 CHAR(40)ASCII, S53 CHAR(40)ASCII, S54 CHAR(40)ASCII,
S55 CHAR(40)ASCII, S56 CHAR(40)ASCII, S57 CHAR(40)ASCII, S58 CHAR(40)ASCII,
S59 CHAR(40)ASCII, S60 CHAR(40)ASCII,
S61 CHAR(40)ASCII, S62 CHAR(40)ASCII, S63 CHAR(40)ASCII, S64 CHAR(40)ASCII,
S65 CHAR(40)ASCII, S66 CHAR(40)ASCII, S67 CHAR(40)ASCII, S68 CHAR(40)ASCII,
S69 CHAR(40)ASCII, S70 CHAR(40)ASCII,
S71 CHAR(40)ASCII, S72 CHAR(40)ASCII, S73 CHAR(40)ASCII, S74 CHAR(40)ASCII,
S75 CHAR(40)ASCII, S76 CHAR(40)ASCII, S77 CHAR(40)ASCII, S78 CHAR(40)ASCII,
S79 CHAR(40)ASCII, S80 CHAR(40)ASCII,
S81 CHAR(40)ASCII, S82 CHAR(40)ASCII, S83 CHAR(40)ASCII, S84 CHAR(40)ASCII,
S85 CHAR(40)ASCII, S86 CHAR(40)ASCII, S87 CHAR(40)ASCII, S88 CHAR(40)ASCII,
S89 CHAR(40)ASCII, S90 CHAR(40)ASCII,
S91 CHAR(40)ASCII, S92 CHAR(40)ASCII, S93 CHAR(40)ASCII, S94 CHAR(40)ASCII,
S95 CHAR(40)ASCII, S96 CHAR(40)ASCII, S97 CHAR(40)ASCII, S98 CHAR(40)ASCII,
S99 CHAR(40)ASCII, S100 CHAR(40)ASCII)!
 
Enter command:
INSERT T1 SET S1 = 'abcdef' !
 
Enter command:
SELECT
 S1,  S2,  S3,  S4,  S5,
 S6,  S7,  S8,  S9, S10,
S11, S12, S13, S14, S15,
S16, S17, S18, S19, S20,
S21, S22, S23, S24, S25,
S26, S27, S28, S29, S30,
S31, S32, S33, S34, S35,
S36, S37, S38, S39, S40,
S41, S42, S43, S44, S45,
S46, S47, S48, S49, S50,
S51, S52, S53, S54, S55,
S56, S57, S58, S59, S60,
S61, S62, S63, S64, S65,
S66, S67, S68, S69, S70,
S71, S72, S73, S74, S75,
S76, S77, S78, S79, S80,
S81, S82, S83, S84, S85,
S86, S87, S88, S89, S90,
S91, S92, S93, S94, S95,
S96, S97, S98, S99, S100,
 S1,  S2,  S3,  S4,  S5,
 S6,  S7,  S8,  S9, S10,
S11, S12, S13, S14, S15,
S16, S17, S18, S19, S20,
S21, S22, S23, S24, S25,
S26, S27, S28, S29, S30,
S31, S32, S33, S34, S35,
S36, S37, S38, S39, S40,
S41, S42, S43, S44, S45,
S46, S47, S48, S49, S50,
S51, S52, S53, S54, S55,
S56, S57, S58, S59, S60,
S61, S62, S63, S64, S65,
S66, S67, S68, S69, S70,
S71, S72, S73, S74, S75,
S76, S77, S78, S79, S80,
S81, S82, S83, S84, S85,
S86, S87, S88, S89, S90,
S91, S92, S93, S94, S95,
S96, S97, S98, S99, S100
FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S1                :  abcdef
S2                :  ?????
S3                :  ?????
S4                :  ?????
S5                :  ?????
S6                :  ?????
S7                :  ?????
S8                :  ?????
S9                :  ?????
S10               :  ?????
S11               :  ?????
S12               :  ?????
S13               :  ?????
S14               :  ?????
S15               :  ?????
S16               :  ?????
S17               :  ?????
S18               :  ?????
S19               :  ?????
S20               :  ?????
S21               :  ?????
S22               :  ?????
S23               :  ?????
S24               :  ?????
S25               :  ?????
S26               :  ?????
S27               :  ?????
S28               :  ?????
S29               :  ?????
S30               :  ?????
S31               :  ?????
S32               :  ?????
S33               :  ?????
S34               :  ?????
S35               :  ?????
S36               :  ?????
S37               :  ?????
S38               :  ?????
S39               :  ?????
S40               :  ?????
S41               :  ?????
S42               :  ?????
S43               :  ?????
S44               :  ?????
S45               :  ?????
S46               :  ?????
S47               :  ?????
S48               :  ?????
S49               :  ?????
S50               :  ?????
S51               :  ?????
S52               :  ?????
S53               :  ?????
S54               :  ?????
S55               :  ?????
S56               :  ?????
S57               :  ?????
S58               :  ?????
S59               :  ?????
S60               :  ?????
S61               :  ?????
S62               :  ?????
S63               :  ?????
S64               :  ?????
S65               :  ?????
S66               :  ?????
S67               :  ?????
S68               :  ?????
S69               :  ?????
S70               :  ?????
S71               :  ?????
S72               :  ?????
S73               :  ?????
S74               :  ?????
S75               :  ?????
S76               :  ?????
S77               :  ?????
S78               :  ?????
S79               :  ?????
S80               :  ?????
S81               :  ?????
S82               :  ?????
S83               :  ?????
S84               :  ?????
S85               :  ?????
S86               :  ?????
S87               :  ?????
S88               :  ?????
S89               :  ?????
S90               :  ?????
S91               :  ?????
S92               :  ?????
S93               :  ?????
S94               :  ?????
S95               :  ?????
S96               :  ?????
S97               :  ?????
S98               :  ?????
S99               :  ?????
S100              :  ?????
S1                :  abcdef
S2                :  ?????
S3                :  ?????
S4                :  ?????
S5                :  ?????
S6                :  ?????
S7                :  ?????
S8                :  ?????
S9                :  ?????
S10               :  ?????
S11               :  ?????
S12               :  ?????
S13               :  ?????
S14               :  ?????
S15               :  ?????
S16               :  ?????
S17               :  ?????
S18               :  ?????
S19               :  ?????
S20               :  ?????
S21               :  ?????
S22               :  ?????
S23               :  ?????
S24               :  ?????
S25               :  ?????
S26               :  ?????
S27               :  ?????
S28               :  ?????
S29               :  ?????
S30               :  ?????
S31               :  ?????
S32               :  ?????
S33               :  ?????
S34               :  ?????
S35               :  ?????
S36               :  ?????
S37               :  ?????
S38               :  ?????
S39               :  ?????
S40               :  ?????
S41               :  ?????
S42               :  ?????
S43               :  ?????
S44               :  ?????
S45               :  ?????
S46               :  ?????
S47               :  ?????
S48               :  ?????
S49               :  ?????
S50               :  ?????
S51               :  ?????
S52               :  ?????
S53               :  ?????
S54               :  ?????
S55               :  ?????
S56               :  ?????
S57               :  ?????
S58               :  ?????
S59               :  ?????
S60               :  ?????
S61               :  ?????
S62               :  ?????
S63               :  ?????
S64               :  ?????
S65               :  ?????
S66               :  ?????
S67               :  ?????
S68               :  ?????
S69               :  ?????
S70               :  ?????
S71               :  ?????
S72               :  ?????
S73               :  ?????
S74               :  ?????
S75               :  ?????
S76               :  ?????
S77               :  ?????
S78               :  ?????
S79               :  ?????
S80               :  ?????
S81               :  ?????
S82               :  ?????
S83               :  ?????
S84               :  ?????
S85               :  ?????
S86               :  ?????
S87               :  ?????
S88               :  ?????
S89               :  ?????
S90               :  ?????
S91               :  ?????
S92               :  ?????
S93               :  ?????
S94               :  ?????
S95               :  ?????
S96               :  ?????
S97               :  ?????
S98               :  ?????
S99               :  ?????
S100              :  ?????
 
resultcount :                     1
 
Enter command:
SELECT T1.*, T1.* FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S1                :  abcdef
S2                :  ?????
S3                :  ?????
S4                :  ?????
S5                :  ?????
S6                :  ?????
S7                :  ?????
S8                :  ?????
S9                :  ?????
S10               :  ?????
S11               :  ?????
S12               :  ?????
S13               :  ?????
S14               :  ?????
S15               :  ?????
S16               :  ?????
S17               :  ?????
S18               :  ?????
S19               :  ?????
S20               :  ?????
S21               :  ?????
S22               :  ?????
S23               :  ?????
S24               :  ?????
S25               :  ?????
S26               :  ?????
S27               :  ?????
S28               :  ?????
S29               :  ?????
S30               :  ?????
S31               :  ?????
S32               :  ?????
S33               :  ?????
S34               :  ?????
S35               :  ?????
S36               :  ?????
S37               :  ?????
S38               :  ?????
S39               :  ?????
S40               :  ?????
S41               :  ?????
S42               :  ?????
S43               :  ?????
S44               :  ?????
S45               :  ?????
S46               :  ?????
S47               :  ?????
S48               :  ?????
S49               :  ?????
S50               :  ?????
S51               :  ?????
S52               :  ?????
S53               :  ?????
S54               :  ?????
S55               :  ?????
S56               :  ?????
S57               :  ?????
S58               :  ?????
S59               :  ?????
S60               :  ?????
S61               :  ?????
S62               :  ?????
S63               :  ?????
S64               :  ?????
S65               :  ?????
S66               :  ?????
S67               :  ?????
S68               :  ?????
S69               :  ?????
S70               :  ?????
S71               :  ?????
S72               :  ?????
S73               :  ?????
S74               :  ?????
S75               :  ?????
S76               :  ?????
S77               :  ?????
S78               :  ?????
S79               :  ?????
S80               :  ?????
S81               :  ?????
S82               :  ?????
S83               :  ?????
S84               :  ?????
S85               :  ?????
S86               :  ?????
S87               :  ?????
S88               :  ?????
S89               :  ?????
S90               :  ?????
S91               :  ?????
S92               :  ?????
S93               :  ?????
S94               :  ?????
S95               :  ?????
S96               :  ?????
S97               :  ?????
S98               :  ?????
S99               :  ?????
S100              :  ?????
S1                :  abcdef
S2                :  ?????
S3                :  ?????
S4                :  ?????
S5                :  ?????
S6                :  ?????
S7                :  ?????
S8                :  ?????
S9                :  ?????
S10               :  ?????
S11               :  ?????
S12               :  ?????
S13               :  ?????
S14               :  ?????
S15               :  ?????
S16               :  ?????
S17               :  ?????
S18               :  ?????
S19               :  ?????
S20               :  ?????
S21               :  ?????
S22               :  ?????
S23               :  ?????
S24               :  ?????
S25               :  ?????
S26               :  ?????
S27               :  ?????
S28               :  ?????
S29               :  ?????
S30               :  ?????
S31               :  ?????
S32               :  ?????
S33               :  ?????
S34               :  ?????
S35               :  ?????
S36               :  ?????
S37               :  ?????
S38               :  ?????
S39               :  ?????
S40               :  ?????
S41               :  ?????
S42               :  ?????
S43               :  ?????
S44               :  ?????
S45               :  ?????
S46               :  ?????
S47               :  ?????
S48               :  ?????
S49               :  ?????
S50               :  ?????
S51               :  ?????
S52               :  ?????
S53               :  ?????
S54               :  ?????
S55               :  ?????
S56               :  ?????
S57               :  ?????
S58               :  ?????
S59               :  ?????
S60               :  ?????
S61               :  ?????
S62               :  ?????
S63               :  ?????
S64               :  ?????
S65               :  ?????
S66               :  ?????
S67               :  ?????
S68               :  ?????
S69               :  ?????
S70               :  ?????
S71               :  ?????
S72               :  ?????
S73               :  ?????
S74               :  ?????
S75               :  ?????
S76               :  ?????
S77               :  ?????
S78               :  ?????
S79               :  ?????
S80               :  ?????
S81               :  ?????
S82               :  ?????
S83               :  ?????
S84               :  ?????
S85               :  ?????
S86               :  ?????
S87               :  ?????
S88               :  ?????
S89               :  ?????
S90               :  ?????
S91               :  ?????
S92               :  ?????
S93               :  ?????
S94               :  ?????
S95               :  ?????
S96               :  ?????
S97               :  ?????
S98               :  ?????
S99               :  ?????
S100              :  ?????
 
resultcount :                     1
 
Enter command:
SELECT T1.*, R.* FROM T1, T1 R !
 
***ERROR  -2003 Output columns too long                                    0014
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE C00E284 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE RECHNUNG (
RECHJAHR CHAR(4) KEY,
RECHNR   FIXED (5) KEY,
VA            CHAR (3) NOT NULL,
JAHR          CHAR (4) NOT NULL,
MONAT         FIXED (4) NOT NULL,
RHYTHMUS      CHAR (1) NOT NULL RANGE IN ('w', 'm') ,
ABRECHKLASSE CHAR (3) NOT NULL RANGE IN
            ('fix', 'opt', 'ccl', 'kum', 'HIT', 'sfx',
             'rfa', 'rab', 'mfl', 'mfr', 'zpf', 'zpo') ,
STRECKENKLASSE CHAR (1)  NOT NULL RANGE IN ('K', 'M', 'L') ,
RP_TYP        CHAR (1) NOT NULL RANGE IN ('B', 'G') ,
WAEHRUNG      CHAR (5) NOT NULL,
RECHN_ERSTELL_NR FIXED (4) NOT NULL,
RECH_STATUS CHAR (1) NOT NULL RANGE IN ('O', 'F') ,
DATUM_ERSTELLT DATE NOT NULL,
BENUTZER_ERSTELLT CHAR (8) NOT NULL DEFAULT ' ' )!
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA !
 
Enter command:
DECLARE CURSOR_RECHNUNG CURSOR FOR
SELECT RECHJAHR, RECHNR  , VA           , JAHR         ,
MONAT        , RHYTHMUS     , ABRECHKLASSE ,
STRECKENKLASSE, RP_TYP       , WAEHRUNG     ,
RECHN_ERSTELL_NR,
RECH_STATUS,
DATUM_ERSTELLT,
BENUTZER_ERSTELLT
FROM RECHNUNG
WHERE (ABRECHKLASSE = :A OR
       ABRECHKLASSE = :B)
  AND (RECHN_ERSTELL_NR = 9999 OR
       DATUM_ERSTELLT  >= :C )
  AND VA                = :D
ORDER BY RECHJAHR, RECHNR !
 
c 3 'fix'
c 3 'opt'
c 10 '19910212'
c 3 'abc'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA!
 
Enter command:
FETCH CURSOR_RECHNUNG INTO :A, :B, :C, :D, :E, :F, :G !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE CURSOR_RECHNUNG !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
CREATE INDEX RE_JAHR_AKL_VA ON RECHNUNG (JAHR,
ABRECHKLASSE, VA, STRECKENKLASSE,
WAEHRUNG, MONAT, RECHN_ERSTELL_NR) !
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA !
 
Enter command:
DECLARE CURSOR_RECHNUNG CURSOR FOR
SELECT RECHJAHR, RECHNR  , VA           , JAHR         ,
MONAT        , RHYTHMUS     , ABRECHKLASSE ,
STRECKENKLASSE, RP_TYP       , WAEHRUNG     ,
RECHN_ERSTELL_NR,
RECH_STATUS,
DATUM_ERSTELLT,
BENUTZER_ERSTELLT
FROM RECHNUNG
WHERE (ABRECHKLASSE = :A OR
       ABRECHKLASSE = :B)
  AND (RECHN_ERSTELL_NR = 9999 OR
       DATUM_ERSTELLT  >= :C )
  AND VA                = :V
ORDER BY RECHJAHR, RECHNR !
 
c 3 'fix'
c 3 'opt'
c 10 '19910212'
c 3 'abc'
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA!
 
Enter command:
FETCH CURSOR_RECHNUNG INTO :A, :B, :C, :D, :E, :F, :G !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE CURSOR_RECHNUNG !
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE C00E1000 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE DBTYPES(
DBTYPE        CHAR(8) NOT NULL,
DATA_TYPE     FIXED (4) NOT NULL,
TYPE_NAME     VARCHAR(30) NOT NULL,
DBPRECISION   FIXED (4),
DBEXTRALENGTH FIXED (4),
DBSCALE       FIXED (4),
DBRADIX       FIXED (4)) !
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'CHAR',    1, 'CHAR',          NULL, 0, NULL, NULL) !
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'DATE',    9, 'DATE',            10, 2, NULL, NULL) !
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'FIXED',   3, 'DECIMAL',       NULL, 2,    0,   10)!
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'FLOAT',   6, 'FLOAT',           15, 0, NULL,   10)!
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'LONG',    -1, 'LONG VARCHAR', NULL, 0, NULL, NULL)!
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'TIME',    10, 'TIME',            8, 3, NULL, NULL)!
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'TIMESTMP',11, 'TIMESTAMP',      26, 6,    6, NULL)!
 
Enter command:
INSERT INTO DBTYPES VALUES
( 'VARCHAR', 12, 'VARCHAR',      NULL, 0, NULL, NULL)!
 
Enter command:
CREATE TABLE COLUMNS ( OWNER         CHAR(20),
                      TABLENAME     CHAR(20),
                      COLUMNNAME    CHAR(20),
                      LEN           FIXED (6),
                      XXX           FIXED (6),
                      MODE          CHAR (3),
                      DATATYPE      CHAR(8) NOT NULL,
                      CCOMMENT      CHAR (20))!
 
Enter command:
INSERT INTO COLUMNS VALUES
('SQLhugo', 'tab', 'col', 5, 3, 'OPT', 'CHAR', 'ohne worte') !
 
Enter command:
SELECT  NULL,
        COL.OWNER, COL.TABLENAME,
        DBTY.DATA_TYPE, DBTY.TYPE_NAME,
        VALUE (DBTY.DBPRECISION, COL.LEN),
        DBTY.DBSCALE + COL.XXX,
        DBTY.DBRADIX,
        DECODE (COL.MODE, 'KEY', 0,
                          'OPT', 1,
                          'MAN', 0),
        COL.CCOMMENT
 
FROM    COLUMNS COL,
        DBTYPES DBTY
 
WHERE   (1=1)
AND     COL.OWNER LIKE 'SQ%'
AND     COL.TABLENAME LIKE '%'
AND     COL.COLUMNNAME LIKE '%'
AND     DBTY.DBTYPE = COL.DATATYPE
 
ORDER BY COL.OWNER, COL.TABLENAME !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1       :  ??
OWNER             :  SQLhugo
TABLENAME         :  tab
DATA_TYPE         :      1
TYPE_NAME         :  CHAR
EXPRESSION2       :        5
EXPRESSION3       :  ????????
DBRADIX           :  ?????
EXPRESSION4       :   1
CCOMMENT          :  ohne worte
 
resultcount :                     1
 
Enter command:
DROP TABLE DBTYPES !
 
Enter command:
DROP TABLE COLUMNS !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE C00EABC !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (16) KEY, B CHAR (36) KEY, C CHAR (4) KEY,
D CHAR (3))!
 
Enter command:
INSERT T VALUES ('A', 'B', 'C', 'D')!
 
Enter command:
PARS_THEN_EX!
 
Enter command:
DATA !
 
Enter command:
SELECT *, *, *, *, * FROM T WHERE
A = :A AND
 B IN (
:A1,:A2,:A3,:A4,:A5,:A6,:A7,
:C0,:C1,:C2,:C3,:C4,:C5,:C6,:C7,:C8,:C9,
:C10,:C11,:C12,:C13,:C14,:C15,:C16,:C17,:C18,:C19,
:C20,:C21,:C22,:C23,:C24,:C25,:C26,:C27,:C28,:C29,
:C30,:C31,:C32,:C33,:C34,:C35,:C36,:C37,:C38,:C39,
:C40,:C41,:C42,:C43,:C44,:C45,:C46,:C47,:C48,:C49,
:C50,:C51,:C52,:C53,:C54,:C55,:C56,:C57,:C58,:C59,
:C60,:C61,:C62,:C63,:C64,:C65,:C66,:C67,:C68,:C69,
:C70,:C71,:C72,:C73,:C74,:C75,:C76,:C77,:C78,:C79,
:C80,:C81,:C82,:C83,:C84,:C85,:C86,:C87,:C88,:C89,
:C90,:C91,:C92,:C93,:C94,:C95,:C96,:C97,:C98,:C99)
AND C = :C
ORDER BY 1,2,3!
 
 c 19 'A'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B' c 36 'B' c 36 'B' c 36 'B'
c 36 'B' c 36 'B'
 c 4 'C'
 
resultcount :               unknown
 
Enter command:
NODATA!
 
Enter command:
FETCH INTO :A, :B, :C, :D, :A, :B, :C, :D, :A, :B, :C, :D,
   :A, :B, :C, :D, :A, :B, :C, :D !
 
A                 :  A
B                 :  B
C                 :  C
D                 :  D
A                 :  A
B                 :  B
C                 :  C
D                 :  D
A                 :  A
B                 :  B
C                 :  C
D                 :  D
A                 :  A
B                 :  B
C                 :  C
D                 :  D
A                 :  A
B                 :  B
C                 :  C
D                 :  D
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
