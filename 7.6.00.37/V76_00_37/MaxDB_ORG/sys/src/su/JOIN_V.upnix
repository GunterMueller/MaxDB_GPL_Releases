JOIN_V.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_V ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE VERI_CLNT (
CLIENT VARCHAR(3) ASCII DEFAULT '000',
ARG1 VARCHAR(3) ASCII DEFAULT ' ',
ARG2 VARCHAR(3) ASCII DEFAULT ' ',
FUNCTION VARCHAR(10) ASCII DEFAULT ' ',
FUNCTINT FIXED(10,0) DEFAULT 0,
PRIMARY KEY (CLIENT,ARG1,ARG2))!
 
Enter command:
 
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 0' ,  'Text 001' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 1' ,  'Text 002' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 2' ,  'Text 003' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 3' ,  'Text 004' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 0' ,  'Text 005' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 1' ,  'Text 006' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 2' ,  'Text 007' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 3' ,  'Text 008' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 0' ,  'Text 009' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 1' ,  'Text 010' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 2' ,  'Text 011' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 3' ,  'Text 012' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 0' ,  'Text 013' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 1' ,  'Text 014' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 2' ,  'Text 015' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 3' ,  'Text 016' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 0' ,  'Text 017' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 1' ,  'Text 018' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 2' ,  'Text 019' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 3' ,  'Text 020' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 0' ,  'Text 021' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 1' ,  'Text 022' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 2' ,  'Text 023' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 3' ,  'Text 024' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 0' ,  'Text 025' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 1' ,  'Text 026' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 2' ,  'Text 027' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 3' ,  'Text 028' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 0' ,  'Text 029' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 1' ,  'Text 030' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 2' ,  'Text 031' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 3' ,  'Text 032' ,  3 )!
 
Enter command:
 
 
CREATE TABLE "VERI_JOIN" (
CLIENT VARCHAR(3) ASCII DEFAULT '000',
ARG1 VARCHAR(3) ASCII DEFAULT ' ',
ARG2 VARCHAR(3) ASCII DEFAULT ' ',
FUNCTION VARCHAR(10) ASCII DEFAULT ' ',
FUNCTINT FIXED(10,0) DEFAULT 0,
FUNCTFLT FLOAT(20) DEFAULT 0.0000000000000000000E+00,
FUNCTPKD FIXED(8,2) DEFAULT 0.00,
PRIMARY KEY (CLIENT,ARG1,ARG2))!
 
Enter command:
 
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 0' ,  'Text 001' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 1' ,  'Text 002' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 2' ,  'Text 003' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 3' ,  'Text 004' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 0' ,  'Text 005' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 1' ,  'Text 006' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 2' ,  'Text 007' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 3' ,  'Text 008' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 0' ,  'Text 009' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 1' ,  'Text 010' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 2' ,  'Text 011' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 3' ,  'Text 012' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 0' ,  'Text 013' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 1' ,  'Text 014' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 2' ,  'Text 015' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 3' ,  'Text 016' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
 
 
SELECT
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
 VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
( T_01 . CLIENT = '000' AND
T_00 . ARG1 = T_01 . ARG1 AND
T_00 . ARG2 = T_01 . ARG2 ) AND
T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
 VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
( T_01 . CLIENT = '000' AND
T_00 . ARG1 = T_01 . ARG1 AND
T_00 . ARG2 = T_01 . ARG2 AND
T_01 . FUNCTINT = 3 ) AND
T_00 . CLIENT = '000' !
 
resultcount :                     4
 
Enter command:
 
SELECT
T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000'!
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT >= 3 ) AND
  T_00 . CLIENT = '000'!
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2!
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_00 . FUNCTINT = 3 !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . ARG1 = ' 1' ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . ARG1 = ' 1' )!
 
resultcount :                   128
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  T_00 . CLIENT = '000' AND
  T_00 . FUNCTINT = 3 !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT (+) AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT (+) AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . ARG1 (+) = ' 1' ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                   256
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  ( T_02 . CLIENT = '000' AND
  T_02 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT ) AND
  ( T_02 . CLIENT = '000' AND
  T_02 . ARG1 = T_01 . ARG1 AND
  T_02 . ARG2 = T_01 . ARG2 AND
  T_02 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . ARG1 = T_02 . ARG1 AND
  T_00 . ARG2 = T_02 . ARG2 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . FUNCTINT (+) = T_00 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT (+) ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . ARG1 (+) = T_00 . ARG1 AND
  T_02 . ARG2 (+) = T_00 . ARG2 AND
  T_02 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT (+) ) AND
  ( T_02 . CLIENT = '000' AND
  T_02 . ARG1 = T_01 . ARG1 AND
  T_02 . ARG2 = T_01 . ARG2 AND
  T_02 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . ARG1 (+) = T_01 . ARG1 AND
  T_02 . ARG2 (+) = T_01 . ARG2 AND
  T_02 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT AND
  T_01 . FUNCTINT = 1 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . ARG1 (+) = T_01 . ARG1 AND
  T_02 . ARG2 (+) = T_01 . ARG2 AND
  T_02 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 MAX( T_00 . ARG2 ) ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
GROUP BY
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1!
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ALIAS ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
ORDER BY
 T_00 . ARG1 ,
 ALIAS ,
 T_00 . FUNCTION ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD!
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ALIAS ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
ORDER BY
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 ALIAS ,
 T_00 . FUNCTION ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD!
 
resultcount :                    64
 
Enter command:
 
SELECT
   *
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
ORDER BY  T_00 . ARG1!
 
resultcount :                    64
 
Enter command:
 
SELECT
   *
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2!
 
resultcount :                    16
 
Enter command:
 
SELECT
   *
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG1 IN ( ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' )!
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_00 . FUNCTFLT ,
 T_00 . FUNCTPKD
FROM
  VERI_JOIN T_00 ,
 VERI_CLNT T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . ARG1 = T_00 . ARG1 AND
  T_01 . ARG2 = T_00 . ARG2 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1!
 
Enter command:
LOCK TABLE V1 IN SHARE MODE !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      7
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      7
     11
 
resultcount :                     2
 
Enter command:
INSERT T1 SET B = 5!
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE B > 4 !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      5 |       8
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.5000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      8
     11
 
resultcount :                     2
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
INSERT T SET A = 5!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V2 (X) AS SELECT SUM(B) FROM T, T1 GROUP BY A!
 
Enter command:
CREATE VIEW V3 (X) AS SELECT SUM(B) FROM T, T1 HAVING AVG(B) > 3!
 
Enter command:
CREATE VIEW V1 (X) AS SELECT SUM(B) FROM T, T1!
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X
--------------------------------------------
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
***ERROR  -7021 View column derived from function not allowed:X            0024
 
Enter command:
SELECT * FROM V1 GROUP BY A!
 
***ERROR  -8017 Column must be group column:X                              0008
 
Enter command:
SELECT X FROM V1 GROUP BY X !
 
***ERROR  -7021 View column derived from function not allowed:X            0027
 
Enter command:
SELECT AVG(X) FROM V1!
 
***ERROR  -7021 View column derived from function not allowed:X            0012
 
Enter command:
SELECT X FROM V1 HAVING X > 12!
 
***ERROR  -8017 Column must be group column:X                              0025
 
Enter command:
SELECT X FROM V1 HAVING X >= 12 ORDER BY X!
 
***ERROR  -8017 Column must be group column:X                              0025
 
Enter command:
SELECT X FROM V1 HAVING X >= 12 ORDER BY 1!
 
***ERROR  -7021 View column derived from function not allowed:X            0001
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (X) AS SELECT SUM(B) FROM T, T1 WHERE A > 3!
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X
--------------------------------------------
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
***ERROR  -7021 View column derived from function not allowed:X            0024
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T ( A CHAR (7) )!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE VIEW V1 (SYSK, A) AS SELECT DISTINCT SYSKEY,* FROM T!
 
Enter command:
CREATE TABLE T1 (B CHAR (7) )!
 
Enter command:
INSERT T1 SET B = 'aaa'!
 
Enter command:
SELECT A,B FROM T1, V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A       | B
--------+--------
aaa     | aaa
aaa     | aaa
 
resultcount :                     2
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
SELECT ROWNO, A, B FROM T, T1!
 
resultcount :                     2
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE A+B > 6!
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      7
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      7
     11
 
resultcount :                     2
 
Enter command:
INSERT T1 SET B = 5!
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE A+B > 7 !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      5 |       8
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.5000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      8
     11
 
resultcount :                     2
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PROBEW (OID CHAR(36) KEY,
I_REL FIXED(10) KEY, I_CONCAT_ID CHAR (36), LAND_NR FIXED (10),
LFD_NR FIXED (10))!
 
Enter command:
INSERT PROBEW VALUES ('aaa', 1, 'a', 116, 3)!
 
Enter command:
CREATE TABLE PROBEWBEWILL
(OID CHAR(36) KEY, I_REL FIXED (10) KEY,
I_TAB_KEY CHAR(8) BYTE, I_CONCAT_ID CHAR(9))!
 
Enter command:
INSERT PROBEWBEWILL VALUES ('aaa', 1, X'99', 'a')!
 
Enter command:
CREATE TABLE PROJECT(OID CHAR(27) KEY,
I_REL FIXED(10) KEY, I_CONCAT_ID CHAR (27), LAND_NR FIXED (10),
LFD_NR FIXED (10))!
 
Enter command:
INSERT PROJECT VALUES ('aaa', 1, 'a', 116, 3)!
 
Enter command:
CREATE VIEW GRUNDBEW AS SELECT
 PROBEW.OID, PROJECT.I_REL, PROJECT.LAND_NR, PROJECT.LFD_NR
 FROM PROBEW, PROBEWBEWILL, PROJECT
WHERE PROBEW.OID = PROBEWBEWILL.OID
  AND PROBEW.LAND_NR = PROJECT.LAND_NR
  AND PROBEW.LFD_NR = PROJECT.LFD_NR !
 
Enter command:
CREATE INDEX "project.land_nr"
 ON PROJECT( LAND_NR ) !
 
Enter command:
DROP   INDEX "probew.land_nr" !
 
***ERROR  -4011 Unknown index name:probew.land_nr                          0015
 
Enter command:
EXPLAIN SELECT * FROM GRUNDBEW WHERE LAND_NR = 116 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PROBEWBEWILL       |                    | TABLE SCAN                               |          1
KERN               | PROBEW             | OID                | JOIN VIA KEY RANGE                       |          1
KERN               | PROJECT            | project.land_nr    | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | LAND_NR            |      (USED INDEX COLUMN)                 |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
SELECT * FROM GRUNDBEW WHERE LAND_NR = 116 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
OID                                  | I_REL       | LAND_NR     | LFD_NR
-------------------------------------+-------------+-------------+------------
aaa                                  |           1 |         116 |           3
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TEST1
( K1 INT, K2 INT, C3 INT, C4 INT, PRIMARY KEY(K1,K2))!
 
Enter command:
CREATE INDEX I1 ON TEST1(K2,K1)!
 
Enter command:
CREATE TABLE TEST2
( K1 INT, K2 INT, C3 INT, C4 INT, PRIMARY KEY(K1,K2),
FOREIGN KEY(K1, K2) REFERENCES TEST1(K1,K2))!
 
Enter command:
CREATE INDEX I2 ON TEST2(K2,K1)!
 
Enter command:
 
 
CREATE VIEW TESTV( K1, K2, C3, C4, C5 ) AS
SELECT T1.K1, T1.K2, T1.C3, T1.C4, T2.C4
FROM TEST1 T1, TEST2 T2
WHERE
T1.C4 = T2.C4 AND T1.K1=T2.K1 AND T1.K2=T2.K2 AND T2.K1 = 1
WITH CHECK OPTION !
 
Enter command:
 
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (3,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,1)!
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,3,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,3,1,2,2)!
 
Enter command:
UPDATE TESTV SET K1=3 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=45 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=2 WHERE K2=2!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C4=2, C5=2 WHERE K2=2!
 
resultcount :                     1
 
Enter command:
 
DELETE FROM TEST2!
 
resultcount :                     2
 
Enter command:
DELETE FROM TEST1!
 
resultcount :                     2
 
Enter command:
 
CREATE OR REPLACE VIEW TESTV( K1, K2, C3, C4, C5 ) AS
SELECT T1.K1, T1.K2, T1.C3, T1.C4, T2.C4
FROM TEST1 T1, TEST2 T2
WHERE
T1.K1=T2.K1 AND T1.K2=T2.K2 AND T2.K1 = 1 AND T1.C4 = T2.C4
WITH CHECK OPTION !
 
Enter command:
 
PARS_THEN_EX!
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (3,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,1)!
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,3,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,3,1,2,2)!
 
Enter command:
UPDATE TESTV SET K1=3 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=45 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=2 WHERE K2=2!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C4=2, C5=2 WHERE K2=2!
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DELETE FROM TEST2!
 
resultcount :                     2
 
Enter command:
DELETE FROM TEST1!
 
resultcount :                     2
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (3,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE JOIN_V ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE VERI_CLNT (
CLIENT VARCHAR(3) ASCII DEFAULT '000',
ARG1 VARCHAR(3) ASCII DEFAULT ' ',
ARG2 VARCHAR(3) ASCII DEFAULT ' ',
FUNCTION VARCHAR(10) ASCII DEFAULT ' ',
FUNCTINT FIXED(10,0) DEFAULT 0,
PRIMARY KEY (CLIENT,ARG1,ARG2))!
 
Enter command:
 
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 0' ,  'Text 001' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 1' ,  'Text 002' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 2' ,  'Text 003' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 0' ,  ' 3' ,  'Text 004' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 0' ,  'Text 005' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 1' ,  'Text 006' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 2' ,  'Text 007' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 1' ,  ' 3' ,  'Text 008' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 0' ,  'Text 009' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 1' ,  'Text 010' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 2' ,  'Text 011' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 2' ,  ' 3' ,  'Text 012' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 0' ,  'Text 013' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 1' ,  'Text 014' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 2' ,  'Text 015' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '000' ,  ' 3' ,  ' 3' ,  'Text 016' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 0' ,  'Text 017' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 1' ,  'Text 018' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 2' ,  'Text 019' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 0' ,  ' 3' ,  'Text 020' ,  0 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 0' ,  'Text 021' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 1' ,  'Text 022' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 2' ,  'Text 023' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 1' ,  ' 3' ,  'Text 024' ,  1 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 0' ,  'Text 025' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 1' ,  'Text 026' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 2' ,  'Text 027' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 2' ,  ' 3' ,  'Text 028' ,  2 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 0' ,  'Text 029' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 1' ,  'Text 030' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 2' ,  'Text 031' ,  3 )!
 
Enter command:
INSERT INTO VERI_CLNT VALUES ( '001' ,  ' 3' ,  ' 3' ,  'Text 032' ,  3 )!
 
Enter command:
 
 
CREATE TABLE "VERI_JOIN" (
CLIENT VARCHAR(3) ASCII DEFAULT '000',
ARG1 VARCHAR(3) ASCII DEFAULT ' ',
ARG2 VARCHAR(3) ASCII DEFAULT ' ',
FUNCTION VARCHAR(10) ASCII DEFAULT ' ',
FUNCTINT FIXED(10,0) DEFAULT 0,
FUNCTFLT FLOAT(20) DEFAULT 0.0000000000000000000E+00,
FUNCTPKD FIXED(8,2) DEFAULT 0.00,
PRIMARY KEY (CLIENT,ARG1,ARG2))!
 
Enter command:
 
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 0' ,  'Text 001' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 1' ,  'Text 002' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 2' ,  'Text 003' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 0' ,  ' 3' ,  'Text 004' ,  0 ,  0.0E+000 ,  0 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 0' ,  'Text 005' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 1' ,  'Text 006' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 2' ,  'Text 007' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 1' ,  ' 3' ,  'Text 008' ,  1 ,  1.0E+000 ,  1 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 0' ,  'Text 009' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 1' ,  'Text 010' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 2' ,  'Text 011' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 2' ,  ' 3' ,  'Text 012' ,  2 ,  2.0E+000 ,  2 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 0' ,  'Text 013' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 1' ,  'Text 014' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 2' ,  'Text 015' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
INSERT INTO VERI_JOIN VALUES
 ( '000' ,  ' 3' ,  ' 3' ,  'Text 016' ,  3 ,  3.0E+000 ,  3 )!
 
Enter command:
 
 
SELECT
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
 VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
( T_01 . CLIENT = '000' AND
T_00 . ARG1 = T_01 . ARG1 AND
T_00 . ARG2 = T_01 . ARG2 ) AND
T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
 VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
( T_01 . CLIENT = '000' AND
T_00 . ARG1 = T_01 . ARG1 AND
T_00 . ARG2 = T_01 . ARG2 AND
T_01 . FUNCTINT = 3 ) AND
T_00 . CLIENT = '000' !
 
resultcount :                     4
 
Enter command:
 
SELECT
T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000'!
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT >= 3 ) AND
  T_00 . CLIENT = '000'!
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2!
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_00 . FUNCTINT = 3 !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . ARG1 = ' 1' ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . ARG1 = ' 1' )!
 
resultcount :                   128
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  T_00 . CLIENT = '000' AND
  T_00 . FUNCTINT = 3 !
 
resultcount :                     4
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT (+) AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_00 . CLIENT = T_01 . CLIENT (+) AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . ARG1 (+) = ' 1' ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                   256
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  ( T_02 . CLIENT = '000' AND
  T_02 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT ) AND
  ( T_02 . CLIENT = '000' AND
  T_02 . ARG1 = T_01 . ARG1 AND
  T_02 . ARG2 = T_01 . ARG2 AND
  T_02 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . ARG1 = T_02 . ARG1 AND
  T_00 . ARG2 = T_02 . ARG2 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . FUNCTINT (+) = T_00 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT (+) ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . ARG1 (+) = T_00 . ARG1 AND
  T_02 . ARG2 (+) = T_00 . ARG2 AND
  T_02 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . ARG1 = T_01 . ARG1 (+) AND
  T_00 . ARG2 = T_01 . ARG2 (+) AND
  T_01 . FUNCTINT (+) = 3 ) AND
  ( T_02 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT (+) ) AND
  ( T_02 . CLIENT = '000' AND
  T_02 . ARG1 = T_01 . ARG1 AND
  T_02 . ARG2 = T_01 . ARG2 AND
  T_02 . FUNCTINT = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_01 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 AND
  T_00 . ARG2 = T_01 . ARG2 AND
  T_01 . FUNCTINT = 3 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_00 . FUNCTINT = T_02 . FUNCTINT (+) ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . ARG1 (+) = T_01 . ARG1 AND
  T_02 . ARG2 (+) = T_01 . ARG2 AND
  T_02 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD ,
 T_02 . CLIENT ,
 T_02 . ARG1 ,
 T_02 . ARG2 ,
 T_02 . FUNCTION ,
 T_02 . FUNCTINT
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01 ,
 VERI_CLNT T_02
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . FUNCTINT = T_01 . FUNCTINT AND
  T_01 . FUNCTINT = 1 ) AND
  ( T_02 . CLIENT (+) = '000' AND
  T_02 . ARG1 (+) = T_01 . ARG1 AND
  T_02 . ARG2 (+) = T_01 . ARG2 AND
  T_02 . FUNCTINT (+) = 3 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 MAX( T_00 . ARG2 ) ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
GROUP BY
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1!
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ALIAS ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
ORDER BY
 T_00 . ARG1 ,
 ALIAS ,
 T_00 . FUNCTION ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD!
 
resultcount :                    64
 
Enter command:
 
SELECT
  T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ALIAS ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
ORDER BY
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 ALIAS ,
 T_00 . FUNCTION ,
 T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_01 . FUNCTFLT ,
 T_01 . FUNCTPKD!
 
resultcount :                    64
 
Enter command:
 
SELECT
   *
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000'
ORDER BY  T_00 . ARG1!
 
resultcount :                    64
 
Enter command:
 
SELECT
   *
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG2 = T_01 . ARG2!
 
resultcount :                    16
 
Enter command:
 
SELECT
   *
FROM
  VERI_CLNT T_00 ,
 VERI_JOIN T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_00 . ARG1 = T_01 . ARG1 ) AND
  T_00 . CLIENT = '000' AND
  T_00 . ARG1 IN ( ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' , ' 1' ,
 ' 1' , ' 1' , ' 1' , ' 1' , ' 1' )!
 
resultcount :                    16
 
Enter command:
 
SELECT
  T_01 . CLIENT ,
 T_01 . ARG1 ,
 T_01 . ARG2 ,
 T_01 . FUNCTION ,
 T_01 . FUNCTINT ,
 T_00 . CLIENT ,
 T_00 . ARG1 ,
 T_00 . ARG2 ,
 T_00 . FUNCTION ,
 T_00 . FUNCTINT ,
 T_00 . FUNCTFLT ,
 T_00 . FUNCTPKD
FROM
  VERI_JOIN T_00 ,
 VERI_CLNT T_01
WHERE
  ( T_01 . CLIENT = '000' AND
  T_01 . ARG1 = T_00 . ARG1 AND
  T_01 . ARG2 = T_00 . ARG2 ) AND
  T_00 . CLIENT = '000' !
 
resultcount :                    16
 
Enter command:
 
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1!
 
Enter command:
LOCK TABLE V1 IN SHARE MODE !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      7
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      7
     11
 
resultcount :                     2
 
Enter command:
INSERT T1 SET B = 5!
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE B > 4 !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      5 |       8
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.5000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      8
     11
 
resultcount :                     2
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
INSERT T SET A = 5!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V2 (X) AS SELECT SUM(B) FROM T, T1 GROUP BY A!
 
Enter command:
CREATE VIEW V3 (X) AS SELECT SUM(B) FROM T, T1 HAVING AVG(B) > 3!
 
Enter command:
CREATE VIEW V1 (X) AS SELECT SUM(B) FROM T, T1!
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X
--------------------------------------------
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
***ERROR  -7021 View column derived from function not allowed:X            0024
 
Enter command:
SELECT * FROM V1 GROUP BY A!
 
***ERROR  -8017 Column must be group column:X                              0008
 
Enter command:
SELECT X FROM V1 GROUP BY X !
 
***ERROR  -7021 View column derived from function not allowed:X            0027
 
Enter command:
SELECT AVG(X) FROM V1!
 
***ERROR  -7021 View column derived from function not allowed:X            0012
 
Enter command:
SELECT X FROM V1 HAVING X > 12!
 
***ERROR  -8017 Column must be group column:X                              0025
 
Enter command:
SELECT X FROM V1 HAVING X >= 12 ORDER BY X!
 
***ERROR  -8017 Column must be group column:X                              0025
 
Enter command:
SELECT X FROM V1 HAVING X >= 12 ORDER BY 1!
 
***ERROR  -7021 View column derived from function not allowed:X            0001
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (X) AS SELECT SUM(B) FROM T, T1 WHERE A > 3!
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X
--------------------------------------------
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
***ERROR  -7021 View column derived from function not allowed:X            0024
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T ( A CHAR (7) )!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE VIEW V1 (SYSK, A) AS SELECT DISTINCT SYSKEY,* FROM T!
 
Enter command:
CREATE TABLE T1 (B CHAR (7) )!
 
Enter command:
INSERT T1 SET B = 'aaa'!
 
Enter command:
SELECT A,B FROM T1, V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A       | B
--------+--------
aaa     | aaa
aaa     | aaa
 
resultcount :                     2
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
SELECT ROWNO, A, B FROM T, T1!
 
resultcount :                     2
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE A+B > 6!
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      7
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      7
     11
 
resultcount :                     2
 
Enter command:
INSERT T1 SET B = 5!
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE A+B > 7 !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      5 |       8
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.5000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      8
     11
 
resultcount :                     2
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PROBEW (OID CHAR(36) KEY,
I_REL FIXED(10) KEY, I_CONCAT_ID CHAR (36), LAND_NR FIXED (10),
LFD_NR FIXED (10))!
 
Enter command:
INSERT PROBEW VALUES ('aaa', 1, 'a', 116, 3)!
 
Enter command:
CREATE TABLE PROBEWBEWILL
(OID CHAR(36) KEY, I_REL FIXED (10) KEY,
I_TAB_KEY CHAR(8) BYTE, I_CONCAT_ID CHAR(9))!
 
Enter command:
INSERT PROBEWBEWILL VALUES ('aaa', 1, X'99', 'a')!
 
Enter command:
CREATE TABLE PROJECT(OID CHAR(27) KEY,
I_REL FIXED(10) KEY, I_CONCAT_ID CHAR (27), LAND_NR FIXED (10),
LFD_NR FIXED (10))!
 
Enter command:
INSERT PROJECT VALUES ('aaa', 1, 'a', 116, 3)!
 
Enter command:
CREATE VIEW GRUNDBEW AS SELECT
 PROBEW.OID, PROJECT.I_REL, PROJECT.LAND_NR, PROJECT.LFD_NR
 FROM PROBEW, PROBEWBEWILL, PROJECT
WHERE PROBEW.OID = PROBEWBEWILL.OID
  AND PROBEW.LAND_NR = PROJECT.LAND_NR
  AND PROBEW.LFD_NR = PROJECT.LFD_NR !
 
Enter command:
CREATE INDEX "project.land_nr"
 ON PROJECT( LAND_NR ) !
 
Enter command:
DROP   INDEX "probew.land_nr" !
 
***ERROR  -4011 Unknown index name:probew.land_nr                          0015
 
Enter command:
EXPLAIN SELECT * FROM GRUNDBEW WHERE LAND_NR = 116 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PROBEW             |                    | TABLE SCAN                               |          1
KERN               | PROBEWBEWILL       | OID                | JOIN VIA KEY RANGE                       |          1
KERN               | PROJECT            | project.land_nr    | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | LAND_NR            |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT * FROM GRUNDBEW WHERE LAND_NR = 116 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
OID                                  | I_REL       | LAND_NR     | LFD_NR
-------------------------------------+-------------+-------------+------------
aaa                                  |           1 |         116 |           3
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TEST1
( K1 INT, K2 INT, C3 INT, C4 INT, PRIMARY KEY(K1,K2))!
 
Enter command:
CREATE INDEX I1 ON TEST1(K2,K1)!
 
Enter command:
CREATE TABLE TEST2
( K1 INT, K2 INT, C3 INT, C4 INT, PRIMARY KEY(K1,K2),
FOREIGN KEY(K1, K2) REFERENCES TEST1(K1,K2))!
 
Enter command:
CREATE INDEX I2 ON TEST2(K2,K1)!
 
Enter command:
 
 
CREATE VIEW TESTV( K1, K2, C3, C4, C5 ) AS
SELECT T1.K1, T1.K2, T1.C3, T1.C4, T2.C4
FROM TEST1 T1, TEST2 T2
WHERE
T1.C4 = T2.C4 AND T1.K1=T2.K1 AND T1.K2=T2.K2 AND T2.K1 = 1
WITH CHECK OPTION !
 
Enter command:
 
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (3,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,1)!
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,3,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,3,1,2,2)!
 
Enter command:
UPDATE TESTV SET K1=3 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=45 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=2 WHERE K2=2!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C4=2, C5=2 WHERE K2=2!
 
resultcount :                     1
 
Enter command:
 
DELETE FROM TEST2!
 
resultcount :                     2
 
Enter command:
DELETE FROM TEST1!
 
resultcount :                     2
 
Enter command:
 
CREATE OR REPLACE VIEW TESTV( K1, K2, C3, C4, C5 ) AS
SELECT T1.K1, T1.K2, T1.C3, T1.C4, T2.C4
FROM TEST1 T1, TEST2 T2
WHERE
T1.K1=T2.K1 AND T1.K2=T2.K2 AND T2.K1 = 1 AND T1.C4 = T2.C4
WITH CHECK OPTION !
 
Enter command:
 
PARS_THEN_EX!
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (3,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,2,1,1,1)!
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (1,3,1,2)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4,C5) VALUES (1,3,1,2,2)!
 
Enter command:
UPDATE TESTV SET K1=3 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=45 WHERE K1=1!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C5=2 WHERE K2=2!
 
***ERROR    100 Integrity violation                                        0001
 
Enter command:
UPDATE TESTV SET C4=2, C5=2 WHERE K2=2!
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
DELETE FROM TEST2!
 
resultcount :                     2
 
Enter command:
DELETE FROM TEST1!
 
resultcount :                     2
 
Enter command:
INSERT INTO TESTV(K1,K2,C3,C4) VALUES (3,2,1,1)!
 
***ERROR    300 Integrity violation:TESTV,KERN                             0001
 
Enter command:
 
PARS_EXECUTE!
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
