N61VIEWG.vdnts
 
Enter command:
 *** TESTING VIEWS WITH GROUP BY !
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N61V1 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( SPALTE1 CHAR(10),
                  SPALTE2 FIXED(5),
                  SPALTE3 FIXED(5) ) !
 
Enter command:
INSERT T1 VALUES ( NULL, 5, 60 ) !
 
Enter command:
INSERT T1 VALUES ( 'aa', 5, 40 ) !
 
Enter command:
INSERT T1 VALUES ( 'bb', NULL, 40 ) !
 
Enter command:
INSERT T1 VALUES ( 'aa', 1, 10 ) !
 
Enter command:
INSERT T1 VALUES ( 'aa', 1, NULL ) !
 
Enter command:
CREATE VIEW V1 AS
SELECT COUNT(*), SUM ( DISTINCT 2*SPALTE2 ),
       MAX(SPALTE2), COUNT ( ALL 'd' )
   FROM T1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :            5
EXPRESSION2       :   1.2000000000000000000000000000000000000E+01
EXPRESSION3       :       5
EXPRESSION4       :            5
 
resultcount :                     1
 
Enter command:
CREATE VIEW V2 AS
SELECT SPALTE1, COUNT ( DISTINCT SPALTE2), COUNT (SPALTE2),
       MIN ( ALL ( 2*SPALTE3 )), AVG ( DISTINCT ( SPALTE3 ) )
   FROM T1 GROUP BY SPALTE1 HAVING SUM ( SPALTE3 ) >= 50 !
 
Enter command:
SELECT * FROM V2 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
SPALTE1           :  aa
EXPRESSION1       :            2
EXPRESSION2       :            3
EXPRESSION3       :       20
EXPRESSION4       :   2.5000000000000000000000000000000000000E+01
-----------------------------------------------------------------
SPALTE1           :  ?????
EXPRESSION1       :            1
EXPRESSION2       :            1
EXPRESSION3       :      120
EXPRESSION4       :   6.0000000000000000000000000000000000000E+01
 
resultcount :                     2
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT V1.EXPRESSION1 N1, V2.EXPRESSION1 N2
   FROM V1, KERN.V2
   WHERE V2.EXPRESSION2 + V2.EXPRESSION1 = V1.EXPRESSION3 !
 
***ERROR  -7021 View column derived from function not allowed:EXPRESSION1  0035
 
Enter command:
SELECT * FROM ERG1 !
 
***ERROR  -4004 Unknown table name:ERG1                                    0015
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N61V2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 FIXED(3) KEY, T1XC2 FIXED(3) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(3), T2XC2 FIXED(3) ) !
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM T1,T2 WHERE T1XC1 = T2XC1 !
 
Enter command:
INSERT T1 VALUES ( 3, 11 ) !
 
Enter command:
INSERT T1 VALUES ( 5, 44 ) !
 
Enter command:
INSERT T1 VALUES ( 7, 11 ) !
 
Enter command:
INSERT T1 VALUES ( 1, 11 ) !
 
Enter command:
INSERT T2 VALUES ( 5, 66 ) !
 
Enter command:
INSERT T2 VALUES ( 5, 66 ) !
 
Enter command:
INSERT T2 VALUES ( 1, 11 ) !
 
Enter command:
INSERT T2 VALUES ( 5, 11 ) !
 
Enter command:
INSERT T2 VALUES ( 7, 22 ) !
 
Enter command:
INSERT T2 VALUES ( 7, 11 ) !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
T1XC1 | T1XC2 | T2XC1 | T2XC2
------+-------+-------+------
   5  |   44  |    5  |   66
   5  |   44  |    5  |   66
   1  |   11  |    1  |   11
   5  |   44  |    5  |   11
   7  |   11  |    7  |   22
   7  |   11  |    7  |   11
 
resultcount :                     6
 
Enter command:
CREATE VIEW V3 AS
SELECT COUNT(*) * 3, ((MAX(T1XC1 + 6) + SUM(T2XC1)) * T1XC2) MOD 4 COL
   FROM V1 WHERE T2XC2 + T1XC1 > T1XC2
   GROUP BY T1XC2, T2XC1
   HAVING COUNT(*) + 30 < T1XC2 + SUM(T2XC2) !
 
Enter command:
SELECT * FROM V3 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1  | COL
-------------+---------------------------------------------
           6 |  1.0000000000000000000000000000000000000E+00
           6 |  0.0000000000000000000000000000000000000E+00
 
resultcount :                     2
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N61V3 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 CHAR(20),
                  T1XC2 FIXED(10),
                  T1XC3 CHAR(10) ASCII,
                  T1XC4 FIXED(10,5),
                  T1XC5 FLOAT(10),
                  T1XC6 FIXED(18) ) !
 
Enter command:
INSERT T1 VALUES ( 'Hans', 100, 'Muenchen', 100.100, NULL,
                    500000000000000000 ) !
 
Enter command:
INSERT T1 VALUES ( NULL, NULL, 'Hamburg', 0.00005, 8E-30, -2000 ) !
 
Enter command:
INSERT T1 VALUES ( 'Karin', -600000, NULL, NULL, -1E12,
                    800000000000000000 ) !
 
Enter command:
INSERT T1 VALUES ( 'Karin', 5, 'Bonn', -700, 1000, NULL ) !
 
Enter command:
INSERT T1 VALUES ( 'Hans', -500000, 'Bremen', 700.00005, NULL, 300 ) !
 
Enter command:
INSERT T1 VALUES ( ' Marianne', -80, 'Koeln 1', -300, 10E-10, NULL ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(5) KEY,
                  T2XC2 CHAR(10) ASCII,
                  T2XC3 CHAR(15) ASCII,
                  T2XC4 FLOAT(5),
                  T2XC5 FIXED(5) RANGE BETWEEN -50000 AND +50000 ) !
 
Enter command:
INSERT T2 VALUES ( 10, 'Klaus', 'Mueller', 1E20, 20000 ) !
 
Enter command:
INSERT T2 VALUES ( 20, 'Elena', 'Meier', -5E10, -100 ) !
 
Enter command:
INSERT T2 VALUES ( 30, NULL, 'Lehmann', NULL, NULL ) !
 
Enter command:
INSERT T2 VALUES ( 40, 'Paul', 'Anse Rauch', 8 , -50000 ) !
 
Enter command:
CREATE TABLE T3 ( T3XC1 FIXED(2,1 ) KEY,
                  T3XC2 CHAR(20) KEY ,
                  T3XC3 FLOAT( 5) ,
                  T3XC4 CHAR(20) ASCII RANGE BETWEEN 'A' AND 'G' ,
                  T3XC5 FIXED(18) ) !
 
Enter command:
INSERT T3 VALUES ( 0.1, 'Frankreich', 80E50, 'Amsel',
                   700000000000000000 ) !
 
Enter command:
INSERT T3 VALUES ( 2.5, 'Belgien', 1E-30, 'Fink', NULL ) !
 
Enter command:
INSERT T3 VALUES ( 3.0, 'Italien', -5E30, 'Amsel', -1000 ) !
 
Enter command:
INSERT T3 VALUES ( 4.1, 'VR Polen', NULL, 'Fink', +200 ) !
 
Enter command:
CREATE VIEW V1 AS
   SELECT SUM ( T1.T1XC2 ) , SUM ( T2.T2XC1 ) FROM T1, T2 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :  -4.3999000000000000000000000000000000000E+06
EXPRESSION2       :   6.0000000000000000000000000000000000000E+02
 
resultcount :                     1
 
Enter command:
CREATE VIEW V2 AS
SELECT COUNT (*), COUNT ( DISTINCT KERN.T2.T2XC2 ),
       COUNT ( ALL ( T3XC5)) FROM T1,T2,T3 !
 
Enter command:
SELECT * FROM V2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2 | EXPRESSION3
------------+-------------+------------
         96 |           3 |          72
 
resultcount :                     1
 
Enter command:
CREATE VIEW V3 AS
SELECT AVG ( DISTINCT T2.T2XC1 ) ,
       COUNT ( DISTINCT T2.T2XC1 ) ,
       AVG ( ALL KERN.T1.T1XC5 ) ,
       SUM ( ALL T1XC5 ) ,
       COUNT ( ALL ( T1XC5 ) ) FROM T1,T2 !
 
Enter command:
SELECT * FROM V3 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :   2.5000000000000000000000000000000000000E+01
EXPRESSION2       :            4
EXPRESSION3       :  -2.4999999974999999999975000000000000000E+11
EXPRESSION4       :  -3.9999999959999999999960000000000000000E+12
EXPRESSION5       :           16
 
resultcount :                     1
 
Enter command:
CREATE VIEW V4 AS
SELECT SUM ( REF.T1XC6 ) , AVG ( REF.T1XC4) FROM T1,T1 REF !
 
Enter command:
SELECT * FROM V4 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :   7.7999999999999898000000000000000000000E+18
EXPRESSION2       :  -3.9979980000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V5 AS
SELECT SUM ( T1XC4 ), AVG ( T1XC4), T1XC1, COUNT(T1XC1)
    FROM T1,T2 GROUP BY T1XC1 !
 
Enter command:
SELECT EXPRESSION1, EXPRESSION2, T1XC1 || ' aa', EXPRESSION3 + 1
   FROM V5 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.2000000000000000000000000000000000000E+03
EXPRESSION2       :  -3.0000000000000000000000000000000000000E+02
EXPRESSION1       :   Marianne aa
EXPRESSION2       :             5
-----------------------------------------------------------------
EXPRESSION1       :   3.2004002000000000000000000000000000000E+03
EXPRESSION2       :   4.0005002500000000000000000000000000000E+02
EXPRESSION1       :  Hans aa
EXPRESSION2       :             9
-----------------------------------------------------------------
EXPRESSION1       :  -2.8000000000000000000000000000000000000E+03
EXPRESSION2       :  -7.0000000000000000000000000000000000000E+02
EXPRESSION1       :  Karin aa
EXPRESSION2       :             9
-----------------------------------------------------------------
EXPRESSION1       :   2.0000000000000000000000000000000000000E-04
EXPRESSION2       :   5.0000000000000000000000000000000000000E-05
EXPRESSION1       :  ?????
EXPRESSION2       :             1
 
resultcount :                     4
 
Enter command:
CREATE VIEW V6 AS
SELECT SUM ( T1XC4 ), SUM ( T2XC4)
    FROM T1, T2 REF
    GROUP BY REF.T2XC1
    HAVING REF.T2XC1 > 10
       AND SUM ( REF.T2XC4) IS NOT NULL !
 
Enter command:
DECLARE ERG1 CURSOR FOR
SELECT EXPRESSION1, MAX ( EXPRESSION2 ) EXP1 FROM V6
   WHERE EXPRESSION1 <> V6.EXPRESSION2
   GROUP BY EXPRESSION1
   HAVING COUNT(*) = 2 !
 
resultcount :                     1
 
Enter command:
FETCH ERG1 !
 
EXPRESSION1       :  -1.9989990000000000000000000000000000000E+02
EXP1              :   4.8000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
CREATE VIEW V7 AS
SELECT AVG ( T1XC2), AVG ( DISTINCT T1XC5 ) , T1.T1XC5
    FROM T1, T2
    GROUP BY T1XC1 , KERN.T1.T1XC5
    HAVING SUM ( T1XC5 ) > 0 !
 
Enter command:
SELECT * FROM V7 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1       :  -8.0000000000000000000000000000000000000E+01
EXPRESSION2       :   1.0000000000000000000000000000000000000E-09
T1XC5             :   1.000000000E-09
-----------------------------------------------------------------
EXPRESSION1       :   5.0000000000000000000000000000000000000E+00
EXPRESSION2       :   1.0000000000000000000000000000000000000E+03
T1XC5             :   1.000000000E+03
-----------------------------------------------------------------
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :   8.0000000000000000000000000000000000000E-30
T1XC5             :   8.000000000E-30
 
resultcount :                     3
 
Enter command:
CREATE VIEW V8 AS
SELECT SUM( T1XC2) , COUNT ( T1XC2) , AVG (T1XC2)
    FROM T1,T3 GROUP BY T1XC1, T3.T3XC4 !
 
Enter command:
SELECT * FROM V8 WHERE EXPRESSION2 < 3 ORDER BY 1 !
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.6000000000000000000000000000000000000E+02
EXPRESSION2       :            2
EXPRESSION3       :  -8.0000000000000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :  -1.6000000000000000000000000000000000000E+02
EXPRESSION2       :            2
EXPRESSION3       :  -8.0000000000000000000000000000000000000E+01
-----------------------------------------------------------------
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :            0
EXPRESSION3       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :  ????????????????????????????????????????????
EXPRESSION2       :            0
EXPRESSION3       :  ????????????????????????????????????????????
 
resultcount :                     4
 
Enter command:
CREATE VIEW V9 AS
SELECT SUM ( T1.T1XC2 + T2.T2XC1 ),
       AVG ( T1XC4 * 5 * T2XC5 ),
       ( SUM ( DISTINCT KERN.T1.T1XC4 / T2XC5 ) )
    FROM T1, T2 GROUP BY T2XC1 !
 
Enter command:
SELECT * FROM V9 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     4
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.0999250000000000000000000000000000000E+06
EXPRESSION2       :  -3.9979980000000000000000000000000000000E+06
EXPRESSION3       :  -9.9949950000000000000000000000000000000E-03
-----------------------------------------------------------------
EXPRESSION1       :  -1.0998750000000000000000000000000000000E+06
EXPRESSION2       :   1.9989990000000000000000000000000000000E+04
EXPRESSION3       :   1.9989990000000000000000000000000000000E+00
-----------------------------------------------------------------
EXPRESSION1       :  -1.0998250000000000000000000000000000000E+06
EXPRESSION2       :  ????????????????????????????????????????????
EXPRESSION3       :  ????????????????????????????????????????????
-----------------------------------------------------------------
EXPRESSION1       :  -1.0997750000000000000000000000000000000E+06
EXPRESSION2       :   9.9949950000000000000000000000000000000E+06
EXPRESSION3       :   3.9979980000000000000000000000000000000E-03
 
resultcount :                     4
 
Enter command:
CREATE TABLE I (I1 FLOAT (14), I2 FLOAT (14), I3 FIXED(18))!
 
Enter command:
CREATE VIEW V10 AS
SELECT SUM ( ALL T1.T1XC5 - T2XC4*T3XC1),
       AVG ( ALL  (T1.T1XC5  )- T2XC4 * T3XC1 ) ,
       COUNT (ALL ( T2XC4 * T3XC1 *((-1))+ T1.T1XC5 )) COL3
    FROM T1,T2, T3
    GROUP BY T3XC4 !
 
Enter command:
SELECT * FROM V10 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
EXPRESSION2       :  -5.1666666890833333087466666666416666666E+19
COL3              :           24
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
EXPRESSION2       :  -1.1000000019499999975879999999975000000E+20
COL3              :           24
 
resultcount :                     2
 
Enter command:
INSERT I SELECT * FROM V10 !
 
Enter command:
SELECT * FROM I !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
I1                   | I2                   | I3
---------------------+----------------------+--------------------
-1.2400000053800E+21 | -5.1666666890833E+19 |                  24
-2.6400000046800E+21 | -1.1000000019500E+20 |                  24
 
resultcount :                     2
 
Enter command:
DECLARE ERG3 CURSOR FOR
SELECT MIN (V9.EXPRESSION1) N1, V10.EXPRESSION2 N2
   FROM V9, V10
   WHERE V9.EXPRESSION2 IS NOT NULL OR V9.EXPRESSION3 < 0
   GROUP BY V10.EXPRESSION1, V10.EXPRESSION2
   HAVING SUM (V9.EXPRESSION2) - SUM (V10.EXPRESSION2) > 0
   ORDER BY 2 DESC !
 
resultcount :                     2
 
Enter command:
SELECT * FROM ERG3 !
 
resultcount :                     2
 
Enter command:
FETCH ERG3 !
 
N1                :  -1.0999250000000000000000000000000000000E+06
N2                :  -5.1666666890833333087466666666416666666E+19
-----------------------------------------------------------------
N1                :  -1.0999250000000000000000000000000000000E+06
N2                :  -1.1000000019499999975879999999975000000E+20
 
resultcount :                     2
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT N1 FROM ERG3 !
 
resultcount :                     2
 
Enter command:
FETCH ERG4 !
 
N1
--------------------------------------------
-1.0999250000000000000000000000000000000E+06
-1.0999250000000000000000000000000000000E+06
 
resultcount :                     2
 
Enter command:
SELECT * FROM V10 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
EXPRESSION2       :  -5.1666666890833333087466666666416666666E+19
COL3              :           24
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
EXPRESSION2       :  -1.1000000019499999975879999999975000000E+20
COL3              :           24
 
resultcount :                     2
 
Enter command:
SELECT * FROM T1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
T1XC1             :  Hans
T1XC2             :          100
T1XC3             :  Muenchen
T1XC4             :     100.10000
T1XC5             :  ????????????????
T1XC6             :   500000000000000000
-----------------------------------------
T1XC1             :  ?????
T1XC2             :  ???????????
T1XC3             :  Hamburg
T1XC4             :       0.00005
T1XC5             :   8.000000000E-30
T1XC6             :                -2000
-----------------------------------------
T1XC1             :  Karin
T1XC2             :      -600000
T1XC3             :  ?????
T1XC4             :  ????????????
T1XC5             :  -1.000000000E+12
T1XC6             :   800000000000000000
-----------------------------------------
T1XC1             :  Karin
T1XC2             :            5
T1XC3             :  Bonn
T1XC4             :    -700.00000
T1XC5             :   1.000000000E+03
T1XC6             :  ???????????????????
-----------------------------------------
T1XC1             :  Hans
T1XC2             :      -500000
T1XC3             :  Bremen
T1XC4             :     700.00005
T1XC5             :  ????????????????
T1XC6             :                  300
-----------------------------------------
T1XC1             :   Marianne
T1XC2             :          -80
T1XC3             :  Koeln 1
T1XC4             :    -300.00000
T1XC5             :   1.000000000E-09
T1XC6             :  ???????????????????
 
resultcount :                     6
 
Enter command:
SELECT V10.EXPRESSION1, T1.T1XC1, T1.T1XC2 FROM V10, T1 !
 
resultcount :                    12
 
Enter command:
FETCH !
 
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Hans
T1XC2             :          100
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  ?????
T1XC2             :  ???????????
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Karin
T1XC2             :      -600000
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Karin
T1XC2             :            5
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Hans
T1XC2             :      -500000
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :   Marianne
T1XC2             :          -80
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Hans
T1XC2             :          100
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  ?????
T1XC2             :  ???????????
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Karin
T1XC2             :      -600000
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Karin
T1XC2             :            5
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Hans
T1XC2             :      -500000
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :   Marianne
T1XC2             :          -80
 
resultcount :                    12
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT V10.EXPRESSION1, T1.T1XC1, T1.T1XC2 FROM V10, T1 !
 
resultcount :                    12
 
Enter command:
FETCH INTO :A, :B, :C!
 
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Hans
T1XC2             :          100
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  ?????
T1XC2             :  ???????????
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Karin
T1XC2             :      -600000
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Karin
T1XC2             :            5
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :  Hans
T1XC2             :      -500000
-----------------------------------------------------------------
EXPRESSION1       :  -1.2400000053799999940991999999940000000E+21
T1XC1             :   Marianne
T1XC2             :          -80
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Hans
T1XC2             :          100
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  ?????
T1XC2             :  ???????????
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Karin
T1XC2             :      -600000
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Karin
T1XC2             :            5
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :  Hans
T1XC2             :      -500000
-----------------------------------------------------------------
EXPRESSION1       :  -2.6400000046799999942111999999940000000E+21
T1XC1             :   Marianne
T1XC2             :          -80
 
resultcount :                    12
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N61V4 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 ( T1XC1 FIXED(5) KEY,
                  T1XC2 CHAR(5),
                  T1XC3 CHAR(5) ) !
 
Enter command:
CREATE TABLE T2 ( T2XC1 FIXED(5),
                  T2XC2 FIXED(5),
                  T2XC3 CHAR(5) ) !
 
Enter command:
INSERT T1 VALUES ( 2, 'aaa' , 'sss' ) !
 
Enter command:
INSERT T1 VALUES ( 3, 'nnn' , 'nnn' ) !
 
Enter command:
INSERT T1 VALUES ( 4, 'qqq' , 'aaa' ) !
 
Enter command:
INSERT T1 VALUES ( 9, 'aaa' , 'bbb' ) !
 
Enter command:
INSERT T1 VALUES ( 6, 'ccc' , 'bbb' ) !
 
Enter command:
INSERT T1 VALUES ( 8, 'aaa' , 'bbb' ) !
 
Enter command:
INSERT T1 VALUES ( 5, NULL  , NULL  ) !
 
Enter command:
INSERT T1 VALUES ( 1, 'aaa' , 'sss' ) !
 
Enter command:
INSERT T2 VALUES ( 3, 2, 'aaa' ) !
 
Enter command:
INSERT T2 VALUES ( 4, 1, 'nnn' ) !
 
Enter command:
INSERT T2 VALUES ( 4, 2, 'nnn' ) !
 
Enter command:
INSERT T2 VALUES ( 8, NULL, 'bbb' ) !
 
Enter command:
INSERT T2 VALUES ( 1, 4, 'sss' ) !
 
Enter command:
INSERT T2 VALUES ( NULL, 2, 'bbb' ) !
 
Enter command:
INSERT T2 VALUES ( 5, 1, NULL ) !
 
Enter command:
INSERT T2 VALUES ( 1, 8, 'aaa' ) !
 
Enter command:
INSERT T2 VALUES ( 1, 4, 'bbb' ) !
 
Enter command:
INSERT T2 VALUES ( 3, 2, 'nnn' ) !
 
Enter command:
INSERT T2 VALUES ( 2, 1, 'sss' ) !
 
Enter command:
INSERT T2 VALUES ( 3, 2, 'bbb' ) !
 
Enter command:
INSERT T2 VALUES ( 2, 1, 'bbb' ) !
 
Enter command:
CREATE VIEW V1 AS
  SELECT DISTINCT SUM ( DISTINCT 5 + T2XC1 ) + 2 * SUM ( T1XC1 ),
                  COUNT ( T2XC1 ),
                  MAX ( T1XC2 ),
                  T2XC2
  FROM T1, T2
  WHERE T1XC3 = T2.T2XC3
    AND T1XC1 > T2XC1 - 1
  GROUP BY T2XC2, T1XC2
  HAVING MIN ( T2XC1 ) < MAX ( ALL T1XC1 )
     AND AVG ( DISTINCT T1.T1XC1 ) + MIN ( T1XC1 ) <= KERN.T2.T2XC2 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :   1.4000000000000000000000000000000000000E+01
EXPRESSION2       :            1
EXPRESSION3       :  qqq
T2XC2             :       8
 
resultcount :                     1
 
Enter command:
SELECT V1.T2XC2, REF.T2XC2, V1.T2XC2 + REF.T2XC2 FROM V1, V1 REF
   WHERE V1.T2XC2 = REF.T2XC2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
T2XC2  | T2XC2  | EXPRESSION1
-------+--------+------------
     8 |      8 |      16
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK !
 
Enter command:
CREATE TABLE T ( A CHAR (8))!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE TABLE T1 (B CHAR (8))!
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM T,T1
   WHERE T.A = T1.B(+) !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B
---------+---------
aaa      | ????????
 
resultcount :                     1
 
Enter command:
SELECT * INTO :A, :B FROM V1 WHERE V1.A = 'aaa'!
 
A                 :  aaa
B                 :  ?????
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
A        | B
---------+---------
aaa      | ????????
 
resultcount :                     1
 
Enter command:
SELECT * INTO :A, :B FROM V1 WHERE A = 'aaa'!
 
A                 :  aaa
B                 :  ?????
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
