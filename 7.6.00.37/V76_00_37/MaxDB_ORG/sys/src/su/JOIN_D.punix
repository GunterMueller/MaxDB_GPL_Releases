JOIN_D.vdnts
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
 
FILE JOIN_D ( 'NO' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'NO' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( S1 FIXED(5), S2 FIXED(3),S3 FIXED(3),S4 CHAR(5))!
 
Enter command:
INSERT INTO TAB VALUES (5,1,5,'bla')!
 
Enter command:
INSERT INTO TAB VALUES (0,2,5,'arg')!
 
Enter command:
INSERT INTO TAB VALUES (3,3,5,'ist')!
 
Enter command:
INSERT INTO TAB VALUES (4,4,5,'soll')!
 
Enter command:
INSERT INTO TAB VALUES (2,5,5,'wer')!
 
Enter command:
INSERT INTO TAB VALUES (1,6,5,'mein')!
 
Enter command:
CREATE TABLE TAB1 (S1 FIXED (5),S2 CHAR(5))!
 
Enter command:
INSERT INTO TAB1 VALUES (5,'ente')!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1 ORDER BY 1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     0 |    2 |    5 | arg   | ente
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     3 |    3 |    5 | ist   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY 1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     3 |    3 |    5 | ist   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
     0 |    2 |    5 | arg   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB.S1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     0 |    2 |    5 | arg   | ente
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     3 |    3 |    5 | ist   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB.S1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     3 |    3 |    5 | ist   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
     0 |    2 |    5 | arg   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.S1,TAB.S4,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB1.S2 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S4    | S2
-------+-------+------
     5 | bla   | ente
     0 | arg   | ente
     3 | ist   | ente
     4 | soll  | ente
     2 | wer   | ente
     1 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.S1,TAB.S4,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB1.S2 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S4    | S2
-------+-------+------
     5 | bla   | ente
     0 | arg   | ente
     3 | ist   | ente
     4 | soll  | ente
     2 | wer   | ente
     1 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY SUBSTR(TAB.S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     0 |    2 |    5 | arg   | ente
     3 |    3 |    5 | ist   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY SUBSTR(TAB.S4,2,2) DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     3 |    3 |    5 | ist   | ente
     0 |    2 |    5 | arg   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
 
resultcount :                     6
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT MIN(TAB.S1),MAX(TAB.S4),TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY TAB1.S2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2 | S2
------------+-------------+------
     0      | wer         | ente
 
resultcount :                     1
 
Enter command:
SELECT SUBSTR(TAB.S4,2,2),MIN(TAB1.S2) FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY SUBSTR(TAB.S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2
------------+------------
ei          | ente
er          | ente
la          | ente
ol          | ente
rg          | ente
st          | ente
 
resultcount :                     6
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8) KEY )!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE TABLE T1 (A CHAR (8) KEY, B CHAR (8) KEY, C CHAR (8))!
 
Enter command:
INSERT T1 SET A = 'aaa', B = 'bbb', C = 'ccc' !
 
Enter command:
CREATE VIEW V1 AS SELECT T.A X, T1.* FROM T, T1 WHERE T.A = T1.A!
 
Enter command:
SELECT * INTO :A FROM T WHERE A = 'aaa'!
 
A                 :  aaa
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT T.A, T1.A B INTO :A, :B FROM T, T T1 WHERE T1.A = 'aaa'!
 
A                 :  aaa
B                 :  aaa
 
Enter command:
SELECT * INTO :A, :B, :C FROM V1 WHERE A = 'aaa' !
 
X                 :  aaa
A                 :  aaa
B                 :  bbb
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SELECT TASKNAME, STATEDESC FROM SYSDD.SYSMON_TASK_DETAIL TD
WHERE
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
resultcount :                     2
 
Enter command:
FETCH !
 
TASKNAME         | STATEDESC
-----------------+-----------------
User             | Running
Timer            | Vsleep
 
resultcount :                     2
 
Enter command:
SELECT * FROM SYSDD.RUNNING_COMMANDS!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
EXPLAIN SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.SYSMON_TASK_DETAIL TD,
 SYSDD.RUNNING_COMMANDS RP
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | TD                 |                    | CATALOG SCAN                             |         20
                   | RP                 |                    | CATALOG SCAN                             |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         52
 
Enter command:
SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.SYSMON_TASK_DETAIL TD,
 SYSDD.RUNNING_COMMANDS RP
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
resultcount :                     2
 
Enter command:
FETCH!
 
TASKNAME         | STATEDESC
-----------------+-----------------
User             | Running
Timer            | Vsleep
 
resultcount :                     2
 
Enter command:
 
EXPLAIN SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.RUNNING_COMMANDS RP,
 SYSDD.SYSMON_TASK_DETAIL TD
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | RP                 |                    | CATALOG SCAN                             |          1
                   | TD                 |                    | CATALOG SCAN                             |         20
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         27
 
Enter command:
SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.RUNNING_COMMANDS RP,
 SYSDD.SYSMON_TASK_DETAIL TD
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
resultcount :                     2
 
Enter command:
FETCH!
 
TASKNAME         | STATEDESC
-----------------+-----------------
User             | Running
Timer            | Vsleep
 
resultcount :                     2
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB( C1 INT, C2 INT, C3 INT,
PRIMARY KEY(C3))!
 
Enter command:
CREATE UNIQUE INDEX I1 ON TAB(C2)!
 
Enter command:
INSERT INTO TAB VALUES(0,0,0)!
 
Enter command:
INSERT INTO TAB VALUES(1,1,1)!
 
Enter command:
INSERT INTO TAB VALUES(2,2,2)!
 
Enter command:
INSERT INTO TAB VALUES(3,3,3)!
 
Enter command:
INSERT INTO TAB VALUES(3,4,4)!
 
Enter command:
INSERT INTO TAB VALUES(4,5,5)!
 
Enter command:
INSERT INTO TAB VALUES(4,6,6)!
 
Enter command:
INSERT INTO TAB VALUES(0,7,7)!
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T1, TAB T2
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | DIFFERENT STRATEGIES FOR OR-TERMS        |          1
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         14
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T1, TAB T2
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
resultcount :                    24
 
Enter command:
FETCH!
 
C3
-----------
          0
          1
          2
          0
          1
          2
          0
          1
          2
          0
          1
          2
          0
          1
          2
          0
          1
 
C3
-----------
          2
          0
          1
          2
          0
          1
          2
 
resultcount :                    24
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(;ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T2, TAB T1
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T2                 |                    | TABLE SCAN                               |          1
                   | T1                 |                    | DIFFERENT STRATEGIES FOR OR-TERMS        |          1
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          5
 
Enter command:
 
SELECT /*+ORDERED,JOIN(;ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T2, TAB T1
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
resultcount :                    24
 
Enter command:
FETCH!
 
C3
-----------
          0
          0
          0
          0
          0
          0
          0
          0
          1
          1
          1
          1
          1
          1
          1
          1
          2
 
C3
-----------
          2
          2
          2
          2
          2
          2
          2
 
resultcount :                    24
 
Enter command:
 
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "TP2_DEFINITIONS"
(
    "ID"               INTEGER    NOT NULL,
    "USERCOUNT"        INTEGER    NOT NULL,
    PRIMARY KEY ("ID")
)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112910, 32)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112911, 32)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112938, 32)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112939, 32)!
 
Enter command:
 
CREATE TABLE "TP2_RESULTS"
(
    "DEF_ID"           INTEGER    NOT NULL,
    "TPS"              FIXED (12,4)    NOT NULL,
    PRIMARY KEY ("DEF_ID")
)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112910, 2324.5166)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112911, 1801.15)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112938, 1952.8334)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112939, 2109.4666)!
 
Enter command:
 
 
CREATE TABLE "TP2_SESSIONS_RESULTS"
(
    "DEF_ID"           INTEGER    NOT NULL,
    "SESSION_ID"       INTEGER    NOT NULL,
    PRIMARY KEY ("DEF_ID")
)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112910, 2503)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112911, 2503)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112938, 2503)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112939, 2503)!
 
Enter command:
 
EXPLAIN SELECT
AVG(RES.TPS) AS TPS_AVG,
STDDEV(RES.TPS) AS TPS_DEV,
COUNT(RES.DEF_ID) AS TEST_COUNT
FROM
TP2_DEFINITIONS DEF, TP2_RESULTS RES, TP2_SESSIONS_RESULTS LNK
WHERE LNK.DEF_ID = DEF.ID AND RES.DEF_ID = DEF.ID
GROUP BY DEF.USERCOUNT !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | LNK                |                    | TABLE SCAN                               |          1
                   | DEF                | ID                 | JOIN VIA KEY COLUMN                      |          1
                   | RES                | DEF_ID             | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          6
 
Enter command:
SELECT
AVG(RES.TPS) AS TPS_AVG,
STDDEV(RES.TPS) AS TPS_DEV,
COUNT(RES.DEF_ID) AS TEST_COUNT
FROM
TP2_DEFINITIONS DEF, TP2_RESULTS RES, TP2_SESSIONS_RESULTS LNK
WHERE LNK.DEF_ID = DEF.ID AND RES.DEF_ID = DEF.ID
GROUP BY DEF.USERCOUNT !
 
resultcount :                     1
 
Enter command:
FETCH!
 
TPS_AVG           :   2.0469916500000000000000000000000000000E+03
TPS_DEV           :   2.2377601164839660564177984012225414309E+02
TEST_COUNT        :            4
 
resultcount :                     1
 
Enter command:
 
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE "historico" (
H1 CHAR (8), HTS1 TIMESTAMP, HTS2 TIMESTAMP, H2 CHAR (40))!
 
Enter command:
INSERT "historico" VALUES ('h1h1h1h1', '20051028114023000000',
 '20051028114023000000',
 'h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2')!
 
Enter command:
CREATE TABLE "operadores" ( O1 INT, OTS1 TIMESTAMP, O2 CHAR (12))!
 
Enter command:
INSERT "operadores" VALUES (1234, '20051028114023000000', 'o2o2o2o2o2o2')!
 
Enter command:
CREATE VIEW "base_histo1" AS
SELECT * FROM "historico", "operadores" WHERE HTS1 = OTS1 !
 
Enter command:
 
SELECT * FROM "historico", "operadores" WHERE HTS1 = OTS1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
H1                :  h1h1h1h1
HTS1              :  20051028114023000000
HTS2              :  20051028114023000000
H2                :  h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2
O1                :         1234
OTS1              :  20051028114023000000
O2                :  o2o2o2o2o2o2
 
resultcount :                     1
 
Enter command:
SELECT * FROM "base_histo1" !
 
resultcount :                     1
 
Enter command:
FETCH!
 
H1                :  h1h1h1h1
HTS1              :  20051028114023000000
HTS2              :  20051028114023000000
H2                :  h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2
O1                :         1234
OTS1              :  20051028114023000000
O2                :  o2o2o2o2o2o2
 
resultcount :                     1
 
Enter command:
 
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE JOIN_D ( 'YES' !
 
Enter command:
SENDERID DBM !
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SET PARAMETER OPTIMIZE_OPERATOR_JOIN = 'YES' !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
SENDERID XCI !
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( S1 FIXED(5), S2 FIXED(3),S3 FIXED(3),S4 CHAR(5))!
 
Enter command:
INSERT INTO TAB VALUES (5,1,5,'bla')!
 
Enter command:
INSERT INTO TAB VALUES (0,2,5,'arg')!
 
Enter command:
INSERT INTO TAB VALUES (3,3,5,'ist')!
 
Enter command:
INSERT INTO TAB VALUES (4,4,5,'soll')!
 
Enter command:
INSERT INTO TAB VALUES (2,5,5,'wer')!
 
Enter command:
INSERT INTO TAB VALUES (1,6,5,'mein')!
 
Enter command:
CREATE TABLE TAB1 (S1 FIXED (5),S2 CHAR(5))!
 
Enter command:
INSERT INTO TAB1 VALUES (5,'ente')!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1 ORDER BY 1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     0 |    2 |    5 | arg   | ente
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     3 |    3 |    5 | ist   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY 1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     3 |    3 |    5 | ist   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
     0 |    2 |    5 | arg   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB.S1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     0 |    2 |    5 | arg   | ente
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     3 |    3 |    5 | ist   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB.S1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     3 |    3 |    5 | ist   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
     0 |    2 |    5 | arg   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.S1,TAB.S4,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB1.S2 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S4    | S2
-------+-------+------
     5 | bla   | ente
     0 | arg   | ente
     3 | ist   | ente
     4 | soll  | ente
     2 | wer   | ente
     1 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.S1,TAB.S4,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB1.S2 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S4    | S2
-------+-------+------
     5 | bla   | ente
     0 | arg   | ente
     3 | ist   | ente
     4 | soll  | ente
     2 | wer   | ente
     1 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY SUBSTR(TAB.S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     0 |    2 |    5 | arg   | ente
     3 |    3 |    5 | ist   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY SUBSTR(TAB.S4,2,2) DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     3 |    3 |    5 | ist   | ente
     0 |    2 |    5 | arg   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
 
resultcount :                     6
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT MIN(TAB.S1),MAX(TAB.S4),TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY TAB1.S2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2 | S2
------------+-------------+------
     0      | wer         | ente
 
resultcount :                     1
 
Enter command:
SELECT SUBSTR(TAB.S4,2,2),MIN(TAB1.S2) FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY SUBSTR(TAB.S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2
------------+------------
ei          | ente
er          | ente
la          | ente
ol          | ente
rg          | ente
st          | ente
 
resultcount :                     6
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8) KEY )!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE TABLE T1 (A CHAR (8) KEY, B CHAR (8) KEY, C CHAR (8))!
 
Enter command:
INSERT T1 SET A = 'aaa', B = 'bbb', C = 'ccc' !
 
Enter command:
CREATE VIEW V1 AS SELECT T.A X, T1.* FROM T, T1 WHERE T.A = T1.A!
 
Enter command:
SELECT * INTO :A FROM T WHERE A = 'aaa'!
 
A                 :  aaa
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT T.A, T1.A B INTO :A, :B FROM T, T T1 WHERE T1.A = 'aaa'!
 
A                 :  aaa
B                 :  aaa
 
Enter command:
SELECT * INTO :A, :B, :C FROM V1 WHERE A = 'aaa' !
 
X                 :  aaa
A                 :  aaa
B                 :  bbb
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
SELECT TASKNAME, STATEDESC FROM SYSDD.SYSMON_TASK_DETAIL TD
WHERE
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
resultcount :                     2
 
Enter command:
FETCH !
 
TASKNAME         | STATEDESC
-----------------+-----------------
User             | Running
Timer            | Vsleep
 
resultcount :                     2
 
Enter command:
SELECT * FROM SYSDD.RUNNING_COMMANDS!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
EXPLAIN SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.SYSMON_TASK_DETAIL TD,
 SYSDD.RUNNING_COMMANDS RP
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | TD                 |                    | CATALOG SCAN                             |         20
                   | RP                 |                    | JOIN VIA KEY RANGE                       |          1
                   |                    |                    | TABLE TEMPORARY SORTED                   |
                   |                    | TASKID             |      (USED SORT COLUMN)                  |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |        284
 
Enter command:
SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.SYSMON_TASK_DETAIL TD,
 SYSDD.RUNNING_COMMANDS RP
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
resultcount :                     2
 
Enter command:
FETCH!
 
TASKNAME         | STATEDESC
-----------------+-----------------
User             | Running
Timer            | Vsleep
 
resultcount :                     2
 
Enter command:
 
EXPLAIN SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.RUNNING_COMMANDS RP,
 SYSDD.SYSMON_TASK_DETAIL TD
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | RP                 |                    | CATALOG SCAN                             |          1
                   | TD                 |                    | CATALOG SCAN                             |         20
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         83
 
Enter command:
SELECT /*+ORDERED*/ TASKNAME, STATEDESC FROM
 SYSDD.RUNNING_COMMANDS RP,
 SYSDD.SYSMON_TASK_DETAIL TD
WHERE
  RP.TASKID (+) = TD.DBPID AND
  TD.TASKNAME IN ('User', 'Timer') AND
  NOT TD.STATEDESC LIKE 'Connect wait' AND
  NOT TD.STATEDESC LIKE 'Inactive'
  ORDER BY STATEDESC !
 
resultcount :                     2
 
Enter command:
FETCH!
 
TASKNAME         | STATEDESC
-----------------+-----------------
User             | Running
Timer            | Vsleep
 
resultcount :                     2
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE TAB( C1 INT, C2 INT, C3 INT,
PRIMARY KEY(C3))!
 
Enter command:
CREATE UNIQUE INDEX I1 ON TAB(C2)!
 
Enter command:
INSERT INTO TAB VALUES(0,0,0)!
 
Enter command:
INSERT INTO TAB VALUES(1,1,1)!
 
Enter command:
INSERT INTO TAB VALUES(2,2,2)!
 
Enter command:
INSERT INTO TAB VALUES(3,3,3)!
 
Enter command:
INSERT INTO TAB VALUES(3,4,4)!
 
Enter command:
INSERT INTO TAB VALUES(4,5,5)!
 
Enter command:
INSERT INTO TAB VALUES(4,6,6)!
 
Enter command:
INSERT INTO TAB VALUES(0,7,7)!
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T1, TAB T2
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T1                 |                    | DIFFERENT STRATEGIES FOR OR-TERMS        |          1
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   | T2                 |                    | TABLE SCAN                               |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |         14
 
Enter command:
 
SELECT /*+ORDERED,JOIN(ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T1, TAB T2
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
resultcount :                    24
 
Enter command:
FETCH!
 
C3
-----------
          0
          0
          0
          0
          0
          0
          0
          0
          1
          1
          1
          1
          1
          1
          1
          1
          2
 
C3
-----------
          2
          2
          2
          2
          2
          2
          2
 
resultcount :                    24
 
Enter command:
 
EXPLAIN
SELECT /*+ORDERED,JOIN(;ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T2, TAB T1
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | T2                 |                    | TABLE SCAN                               |          1
                   | T1                 |                    | DIFFERENT STRATEGIES FOR OR-TERMS        |          1
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    | I1                 | INDEX SCAN                               |
                   |                    |                    | ONLY INDEX ACCESSED                      |
                   |                    | C3                 |      (USED KEY COLUMN)                   |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
 
SELECT /*+ORDERED,JOIN(;ACCESS=L2_MORE_STRATEGIES,
  L2_STRAT_NO_OPTIM,INDEXACCESS)*/
 T1.C3 FROM TAB T2, TAB T1
WHERE
T1.C3=0 OR T1.C3=1 OR T1.C3=2 OR T1.C3=2 !
 
resultcount :                    24
 
Enter command:
FETCH!
 
C3
-----------
          0
          1
          2
          0
          1
          2
          0
          1
          2
          0
          1
          2
          0
          1
          2
          0
          1
 
C3
-----------
          2
          0
          1
          2
          0
          1
          2
 
resultcount :                    24
 
Enter command:
 
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE "TP2_DEFINITIONS"
(
    "ID"               INTEGER    NOT NULL,
    "USERCOUNT"        INTEGER    NOT NULL,
    PRIMARY KEY ("ID")
)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112910, 32)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112911, 32)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112938, 32)!
 
Enter command:
INSERT INTO "TP2_DEFINITIONS" VALUES (112939, 32)!
 
Enter command:
 
CREATE TABLE "TP2_RESULTS"
(
    "DEF_ID"           INTEGER    NOT NULL,
    "TPS"              FIXED (12,4)    NOT NULL,
    PRIMARY KEY ("DEF_ID")
)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112910, 2324.5166)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112911, 1801.15)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112938, 1952.8334)!
 
Enter command:
INSERT INTO "TP2_RESULTS" VALUES (112939, 2109.4666)!
 
Enter command:
 
 
CREATE TABLE "TP2_SESSIONS_RESULTS"
(
    "DEF_ID"           INTEGER    NOT NULL,
    "SESSION_ID"       INTEGER    NOT NULL,
    PRIMARY KEY ("DEF_ID")
)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112910, 2503)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112911, 2503)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112938, 2503)!
 
Enter command:
INSERT INTO "TP2_SESSIONS_RESULTS" VALUES (112939, 2503)!
 
Enter command:
 
EXPLAIN SELECT
AVG(RES.TPS) AS TPS_AVG,
STDDEV(RES.TPS) AS TPS_DEV,
COUNT(RES.DEF_ID) AS TEST_COUNT
FROM
TP2_DEFINITIONS DEF, TP2_RESULTS RES, TP2_SESSIONS_RESULTS LNK
WHERE LNK.DEF_ID = DEF.ID AND RES.DEF_ID = DEF.ID
GROUP BY DEF.USERCOUNT !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | DEF                |                    | TABLE SCAN                               |          1
                   | LNK                | DEF_ID             | JOIN VIA KEY COLUMN                      |          1
                   | RES                | DEF_ID             | JOIN VIA KEY COLUMN                      |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          4
 
Enter command:
SELECT
AVG(RES.TPS) AS TPS_AVG,
STDDEV(RES.TPS) AS TPS_DEV,
COUNT(RES.DEF_ID) AS TEST_COUNT
FROM
TP2_DEFINITIONS DEF, TP2_RESULTS RES, TP2_SESSIONS_RESULTS LNK
WHERE LNK.DEF_ID = DEF.ID AND RES.DEF_ID = DEF.ID
GROUP BY DEF.USERCOUNT !
 
resultcount :                     1
 
Enter command:
FETCH!
 
TPS_AVG           :   2.0469916500000000000000000000000000000E+03
TPS_DEV           :   2.2377601164839660564177984012225414309E+02
TEST_COUNT        :            4
 
resultcount :                     1
 
Enter command:
 
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
CREATE TABLE "historico" (
H1 CHAR (8), HTS1 TIMESTAMP, HTS2 TIMESTAMP, H2 CHAR (40))!
 
Enter command:
INSERT "historico" VALUES ('h1h1h1h1', '20051028114023000000',
 '20051028114023000000',
 'h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2')!
 
Enter command:
CREATE TABLE "operadores" ( O1 INT, OTS1 TIMESTAMP, O2 CHAR (12))!
 
Enter command:
INSERT "operadores" VALUES (1234, '20051028114023000000', 'o2o2o2o2o2o2')!
 
Enter command:
CREATE VIEW "base_histo1" AS
SELECT * FROM "historico", "operadores" WHERE HTS1 = OTS1 !
 
Enter command:
 
SELECT * FROM "historico", "operadores" WHERE HTS1 = OTS1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
H1                :  h1h1h1h1
HTS1              :  20051028114023000000
HTS2              :  20051028114023000000
H2                :  h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2
O1                :         1234
OTS1              :  20051028114023000000
O2                :  o2o2o2o2o2o2
 
resultcount :                     1
 
Enter command:
SELECT * FROM "base_histo1" !
 
resultcount :                     1
 
Enter command:
FETCH!
 
H1                :  h1h1h1h1
HTS1              :  20051028114023000000
HTS2              :  20051028114023000000
H2                :  h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2h2
O1                :         1234
OTS1              :  20051028114023000000
O2                :  o2o2o2o2o2o2
 
resultcount :                     1
 
Enter command:
 
ROLLBACK WORK RELEASE !
 
Enter command:
 
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
