T05TEST.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
FILE T05DBS!
 
Enter command:
 ***************************
 ***   T 0 5 D B S       ***
 ***************************!
 
Enter command:
CREATE TABLE X ( Y CHAR (1) KEY RANGE BETWEEN 'A' AND 'L' ,
                     A CHAR (7) NOT NULL,
                     B FIXED (3) NOT NULL ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO X
   SET Y = 'B',
       A = 'abc',
       B = 76       !
 
Enter command:
LOCK TABLE X IN SHARE MODE  !
 
Enter command:
LOCK (NOWAIT) TABLE X IN SHARE MODE  !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK (NOWAIT) TABLE X ROW X KEY   Y = 'B'   IN EXCLUSIVE MODE !
 
Enter command:
UPDATE OF X
   SET Y = 'B'
   KEY A = 'xyz'  !
 
***ERROR  -8007 Column must be key column:A                                0029
 
Enter command:
COMMIT WORK !
 
Enter command:
 *** DML_KOMMANDOS !
 
Enter command:
CREATE TABLE P1
       ( K1 CHAR (5) KEY,
         F1 CHAR (20) NOT NULL )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P1
   SET K1 = 'abcde',
       F1 = 'xyz12345'  !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P1
   SET K1 = 'abcde',
       F1 = 'xyz12345'  !
 
***ERROR    200 Duplicate key                                              0048
 
Enter command:
LOCK ROW P1 KEY   K1 = 'abcde'   IN EXCLUSIVE MODE !
 
Enter command:
LOCK ROW P1 KEY   K1 = 'abcde'   IN EXCLUSIVE MODE !
 
Enter command:
UPDATE OF P1
   SET F1 = '2XCVB'
   KEY K1 = 'abcde' !
 
Enter command:
UPDATE OF P1
   SET F1 = 'ZXCVB'
   KEY K1 = 'vwxyz' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK !
 
Enter command:
INSERT INTO P1
   SET K1 = 'abcde',
       F1 = 'xyz12345'  !
 
***ERROR    200 Duplicate key                                              0048
 
Enter command:
INSERT INTO P1
   SET K1 = 'abcde',
       F1 = 'xyz12345'  !
 
***ERROR    200 Duplicate key                                              0048
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK ROW P1 KEY   K1 = 'abcde'   IN EXCLUSIVE MODE !
 
Enter command:
DELETE FROM P1
   KEY K1 = 'abcde'  !
 
Enter command:
DELETE FROM P1
   KEY K1 = 'abcde'  !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
COMMIT WORK !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE P2
       ( K1 CHAR (5) KEY,
         F1 CHAR (1) NOT NULL ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE P2 IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO P2
   SET K1 = 'abcde',
       F1 = 'a'        !
 
Enter command:
INSERT INTO P2
   SET K1 = 'ccccc',
       F1 = 'c'        !
 
Enter command:
INSERT INTO P2
   SET K1 = 'xxxxx',
       F1 = 'x'        !
 
Enter command:
INSERT INTO P2
   SET K1 = 'cdefg',
       F1 = 'c'        !
 
Enter command:
INSERT INTO P2
   SET K1 = 'rlyyy',
       F1 = 'r'        !
 
Enter command:
COMMIT WORK !
 
Enter command:
DELETE FROM P2
   KEY K1 = 'abcde' !
 
Enter command:
LOCK TABLE P2 IN EXCLUSIVE MODE  !
 
Enter command:
DELETE FROM P2
   KEY K1 = 'abcde'  !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DELETE FROM P2
   KEY K1 = 'xxxxx'  !
 
Enter command:
DELETE FROM P2
   KEY K1 = 'ccccc'  !
 
Enter command:
DELETE FROM P2
   KEY K1 = 'cdefg'  !
 
Enter command:
DELETE FROM P2
   KEY K1 = 'rlyyy'  !
 
Enter command:
COMMIT WORK !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
FILE T05DBA!
 
Enter command:
 ***************************
 ***   T 0 5 D B A       ***
 ***************************!
 
Enter command:
CREATE TABLE P2     ( K1 CHAR (5) KEY,
                      F1 FIXED (4,2) NOT NULL )  !
 
Enter command:
CREATE TABLE P1     ( K1 CHAR (3) KEY,
                      F1 CHAR (1) ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_TAB_OWNER ( KERN !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER = 'KERN'
    AND TABLENAME <> 'SEL_TAB' !
 
resultcount :                     2
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  KERN
TABLENAME         :  P1
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  P2
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
 
resultcount :                     2
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
ALTER TABLE P1
  ADD  F4 CHAR (7)   !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_COLS_1TAB ( KERN P1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE SCHEMANAME = 'KERN'
    AND TABLENAME = 'P1'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  K1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      3
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  F1
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  F4
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      7
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
ALTER TABLE KERN.P2
  ADD  F3 CHAR (5)     !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_COLS_1TAB ( KERN P2 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE SCHEMANAME = 'KERN'
    AND TABLENAME = 'P2'
  ORDER BY POS !
 
resultcount :                     3
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  K1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  F1
MOD               :  MAN
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     2
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  F3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     3
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
ALTER TABLE KERN.P2
  DROP F1  !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_COLS_1TAB ( KERN P2 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE SCHEMANAME = 'KERN'
    AND TABLENAME = 'P2'
  ORDER BY POS !
 
resultcount :                     2
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  K1
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  F3
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     2
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
CREATE VIEW KERN.P2_TEIL AS SELECT *
                       FROM KERN.P2
                       WHERE ( K1 <= 'ghijk' )  !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_VIEW1 ( KERN P2_TEIL !
 
Enter command:
DECLARE SEL_VIEW CURSOR FOR
 SELECT DEFINITION
   FROM SYSDD.SHOWVIEW
  WHERE OWNER = 'KERN'
    AND OWNER = USERGROUP
    AND TABLENAME = 'P2_TEIL' !
 
resultcount :                     1
 
Enter command:
FETCH SEL_VIEW INTO :A !
 
DEFINITION
--------------------------------------------------------------------------------
CREATE VIEW KERN.P2_TEIL AS SELECT * FROM KERN.P2 WHERE (K1 <= 'ghijk')
 
resultcount :                     1
 
Enter command:
CLOSE SEL_VIEW !
 
Enter command:
DROP VIEW KERN.P2_TEIL !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_VIEW1 ( KERN P2_TEIL !
 
Enter command:
DECLARE SEL_VIEW CURSOR FOR
 SELECT DEFINITION
   FROM SYSDD.SHOWVIEW
  WHERE OWNER = 'KERN'
    AND OWNER = USERGROUP
    AND TABLENAME = 'P2_TEIL' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_VIEW INTO :A !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_VIEW !
 
Enter command:
DROP TABLE KERN.P1 !
 
Enter command:
DROP TABLE KERN.P2 !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_TAB_OWNER ( KERN !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER = 'KERN'
    AND TABLENAME <> 'SEL_TAB' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
FILE T05INDEX!
 
Enter command:
 ***************************
 ***   T 0 5 I N D E X   ***
 ***************************!
 
Enter command:
 *** TESTFAELLE FUER :                       ***
 *** EINE INVERTIERUNG                       ***
 *** EINE INVERTIERUNG MIT MEHRFACHKEY       ***
 *** ZWEI INVERTIERUNGEN                     ***
 *** TEILWEISE AUFWAERTS- UND ABWAERTSSUCHEN ***
 *** IN-OPERATOR OHNE/MIT INVERTIERUNGEN     ***
 *** SELECT IN TRANSAKTIONEN NACH INSERTS    *** !
 
Enter command:
CREATE TABLE KERN.P3 (K1 CHAR(1) KEY,F1 CHAR(1) NOT NULL,
                                    F2 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE P3 IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO P3 SET K1 = 'a', F1 = 'b', F2 = 'b' !
 
Enter command:
INSERT INTO P3 SET K1 = 'b', F1 = 'b', F2 = 'c' !
 
Enter command:
INSERT INTO P3 SET K1 = 'c', F1 = 'c', F2 = 'c' !
 
Enter command:
COMMIT WORK !
 
Enter command:
 *** EINE INVERTIERUNG ! -505
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
 
resultcount :                     1
 
Enter command:
CLOSE ERG1 !
 
Enter command:
CREATE INDEX "kern.p3.f1"
 ON KERN.P3( F1 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
 
resultcount :                     1
 
Enter command:
CLOSE ERG1 !
 
Enter command:
INSERT INTO P3 SET K1 = 'd', F1 = 'c', F2 = 'c' !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG1 !
 
Enter command:
DROP INDEX "kern.p3.f1" !
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG1 !
 
Enter command:
COMMIT WORK !
 
Enter command:
 *** EINE INVERTIERUNG MIT MEHRFACHKEY ! -505
 
Enter command:
CREATE TABLE KERN.P4       (K1 CHAR(1) KEY,
                       K2 CHAR(1) KEY,
                       K3 CHAR(1) KEY,
                       F1 CHAR(1) NOT NULL,
                       F2 CHAR(1)  NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P4 SET K1 = 'a', K2 = 'a', K3 = 'a',
         F1 = 'b', F2 = 'b' !
 
Enter command:
INSERT INTO P4 SET K1 = 'a', K2 = 'b', K3 = 'c',
         F1 = 's', F2 = 'b' !
 
Enter command:
INSERT INTO P4 SET K1 = 'x', K2 = 'y', K3 = 'z',
         F1 = 'r', F2 = 'b' !
 
Enter command:
INSERT INTO P4 SET K1 = 'u', K2 = 'y', K3 = 'z',
         F1 = 'a', F2 = 'b' !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE INDEX "kern.p4.f2"
 ON KERN.P4( F2 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG1 CURSOR FOR SELECT K1,K2,K3,F1,F2
       FROM P4
       WHERE P4.F2 = 'b' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG1 !
 
K1 | K2 | K3 | F1 | F2
---+----+----+----+---
a  | a  | a  | b  | b
a  | b  | c  | s  | b
u  | y  | z  | a  | b
x  | y  | z  | r  | b
 
resultcount :                     4
 
Enter command:
CLOSE ERG1 !
 
Enter command:
 *** ZWEI INVERTIERUNGEN ! -505
 
Enter command:
DECLARE ERG2 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' AND
       P3.F2 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG2 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG2 !
 
Enter command:
CREATE INDEX "kern.p3.f1"
 ON KERN.P3( F1 ) !
 
Enter command:
CREATE INDEX "kern.p3.f2"
 ON KERN.P3( F2 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG2 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' AND
       P3.F2 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG2 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG2 !
 
Enter command:
DROP INDEX "kern.p3.f1" !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG2 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' AND
       P3.F2 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG2 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG2 !
 
Enter command:
DROP INDEX "kern.p3.f2" !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG2 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 = 'c' AND
       P3.F2 = 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG2 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG2 !
 
Enter command:
 *** TEILWEISE AUFWAERTS- UND ABWAERTSSUCHEN ! -505
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.K1 > 'b' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG3 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG3 !
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.K1 >= 'b' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG3 !
 
K1 | F1 | F2
---+----+---
b  | b  | c
c  | c  | c
d  | c  | c
 
resultcount :                     3
 
Enter command:
CLOSE ERG3 !
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.K1 < 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG3 !
 
K1 | F1 | F2
---+----+---
a  | b  | b
b  | b  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG3 !
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.K1 <= 'c' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG3 !
 
K1 | F1 | F2
---+----+---
a  | b  | b
b  | b  | c
c  | c  | c
 
resultcount :                     3
 
Enter command:
CLOSE ERG3 !
 
Enter command:
DECLARE ERG3 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.K1 > 'a' AND
       P3.K1 < 'd' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG3 !
 
K1 | F1 | F2
---+----+---
b  | b  | c
c  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG3 !
 
Enter command:
 *** IN-OPERATOR OHNE/MIT INVERTIERUNGEN ! -505
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 IN ('b','c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
a  | b  | b
b  | b  | c
c  | c  | c
d  | c  | c
 
resultcount :                     4
 
Enter command:
CLOSE ERG4 !
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 NOT IN ('c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
a  | b  | b
b  | b  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG4 !
 
Enter command:
CREATE INDEX "kern.p3.f1"
 ON KERN.P3( F1 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 IN ('b','c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
a  | b  | b
b  | b  | c
c  | c  | c
d  | c  | c
 
resultcount :                     4
 
Enter command:
CLOSE ERG4 !
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 NOT IN ('c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
a  | b  | b
b  | b  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG4 !
 
Enter command:
CREATE INDEX "kern.p3.f2"
 ON KERN.P3( F2 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 IN ('c') AND
             P3.F2 IN ('c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG4 !
 
Enter command:
DROP INDEX "kern.p3.f1" !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 IN ('c') AND
             P3.F2 IN ('c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG4 !
 
Enter command:
DROP INDEX "kern.p3.f2" !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG4 CURSOR FOR SELECT K1,F1,F2
       FROM P3
       WHERE P3.F1 IN ('c') AND
             P3.F2 IN ('c') !
 
resultcount :               unknown
 
Enter command:
FETCH ERG4 !
 
K1 | F1 | F2
---+----+---
c  | c  | c
d  | c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG4 !
 
Enter command:
COMMIT WORK !
 
Enter command:
 *** SELECT IN TRANSAKTIONEN NACH INSERTS !
 
Enter command:
CREATE TABLE KERN.P5      (K1 CHAR(1) KEY,
                      F1 CHAR(1) NOT NULL) !
 
Enter command:
CREATE INDEX "kern.p5.f1"
 ON KERN.P5( F1 ) !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P5 SET K1 = 'u', F1 = 'u' !
 
Enter command:
DECLARE ERG5 CURSOR FOR SELECT K1,F1
       FROM P5
       WHERE F1 = 'u' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG5 !
 
K1 | F1
---+---
u  | u
 
resultcount :                     1
 
Enter command:
CLOSE ERG5 !
 
Enter command:
COMMIT WORK !
 
Enter command:
INSERT INTO P5 SET K1 = 'x', F1 = 'u' !
 
Enter command:
DECLARE ERG5 CURSOR FOR SELECT K1,F1
       FROM P5
       WHERE F1 = 'u' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG5 !
 
K1 | F1
---+---
u  | u
x  | u
 
resultcount :                     2
 
Enter command:
CLOSE ERG5 !
 
Enter command:
COMMIT WORK !
 
Enter command:
DECLARE ERG5 CURSOR FOR SELECT K1,F1
       FROM P5
       WHERE F1 = 'u' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG5 !
 
K1 | F1
---+---
u  | u
x  | u
 
resultcount :                     2
 
Enter command:
CLOSE ERG5 !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
FILE T05ENUM!
 
Enter command:
 ***************************
 ***   T 0 5 E N U M     ***
 ***************************!
 
Enter command:
 *** TESTFAELLE FUER :          ***
 *** ENUM-RUECKENTSCHLUESSELUNG ***
 *** ENUM-LINKS                 *** !
 
Enter command:
CREATE TABLE KERN.P6 (K1 CHAR(1) KEY RANGE IN ('a','c','x'),
                    F1 CHAR(1) NOT NULL RANGE IN ('c','x') ) !
 
Enter command:
CREATE TABLE KERN.P7   (K1 CHAR(1) KEY RANGE IN ('a','x'),
                    F1 CHAR(1) NOT NULL RANGE IN ('u','x','c')) !
 
Enter command:
CREATE TABLE KERN.P8   (K1 CHAR(1) KEY,
                    F1 CHAR(1) NOT NULL) !
 
Enter command:
COMMIT WORK !
 
Enter command:
LOCK TABLE P6 , P7 IN EXCLUSIVE MODE !
 
Enter command:
INSERT INTO P6 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P6 SET K1 = 'c', F1 = 'c' !
 
Enter command:
INSERT INTO P6 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P7 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P7 SET K1 = 'a', F1 = 'c' !
 
Enter command:
INSERT INTO P8 SET K1 = 'x', F1 = 'x' !
 
Enter command:
INSERT INTO P8 SET K1 = 'a', F1 = 'c' !
 
Enter command:
COMMIT WORK !
 
Enter command:
 *** ENUM-RUECKENTSCHLUESSELUNG ! -505
 
Enter command:
DECLARE ERG6 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2
       FROM P6 !
 
resultcount :               unknown
 
Enter command:
FETCH ERG6 !
 
F1 | F2
---+---
a  | c
c  | c
x  | x
 
resultcount :                     3
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2
       FROM P6
       WHERE P6.K1 = 'a' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG6 !
 
F1 | F2
---+---
a  | c
 
resultcount :                     1
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2
       FROM P6
       WHERE P6.F1 < 'r' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG6 !
 
F1 | F2
---+---
a  | c
c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG6 !
 
Enter command:
DECLARE ERG6 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2
       FROM P6
       WHERE P6.F1 < 'x' !
 
resultcount :               unknown
 
Enter command:
FETCH ERG6 !
 
F1 | F2
---+---
a  | c
c  | c
 
resultcount :                     2
 
Enter command:
CLOSE ERG6!
 
Enter command:
 *** ENUM-LINKS ! -505
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | a  | c
x  | x  | x  | x
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 AND
       P6.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2,P7.K1 F3,P7.F1 F4
       FROM P6, P7
       WHERE P6.K1 = P7.K1 AND
       P6.K1 = 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 !
 
resultcount :                     2
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
a  | c  | a  | c
x  | x  | x  | x
 
resultcount :                     2
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 AND
       P6.K1 = 'x' !
 
resultcount :                     1
 
Enter command:
FETCH ERG7 !
 
F1 | F2 | F3 | F4
---+----+----+---
x  | x  | x  | x
 
resultcount :                     1
 
Enter command:
CLOSE ERG7 !
 
Enter command:
DECLARE ERG7 CURSOR FOR SELECT P6.K1 F1,P6.F1 F2,P8.K1 F3,P8.F1 F4
       FROM P6, P8
       WHERE P6.K1 = P8.K1 AND
       P6.K1 = 'c' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH ERG7 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE ERG7 !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
