GETNAME.vdnts
 
Enter command:
FILE XINITDBK!
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TIMEST ( T TIME, D DATE)!
 
Enter command:
INSERT TIMEST VALUES (TIME,DATE)!
 
Enter command:
GRANT SELECT ON TIMEST TO PUBLIC !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE SUTTAB1 ( A CHAR (8))!
 
Enter command:
GRANT ALL ON SUTTAB1 TO PUBLIC !
 
Enter command:
CREATE TABLE SUTTAB2 ( A CHAR (8))!
 
Enter command:
CREATE TABLE KERNTAB1 ( A CHAR (8))!
 
Enter command:
GRANT ALL ON KERNTAB1 TO PUBLIC !
 
Enter command:
CREATE TABLE KERNTAB2 ( A CHAR (8))!
 
Enter command:
GRANT ALL ON KERNTAB2 TO PUBLIC !
 
Enter command:
CREATE VIEW SUTV1 AS SELECT * FROM SUTTAB2 !
 
Enter command:
GRANT ALL ON SUTV1 TO PUBLIC !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE KERNTAB1 ( A CHAR (8))!
 
Enter command:
CREATE TABLE KERNTAB2 ( A CHAR (8))!
 
Enter command:
CREATE TABLE KERNTAB3 ( A CHAR (8))!
 
Enter command:
CREATE USER ELKE PASSWORD ELKE RESOURCE !
 
Enter command:
GRANT ALL ON KERNTAB1 TO ELKE !
 
Enter command:
GRANT INSERT ON KERNTAB3 TO ELKE !
 
Enter command:
CREATE SYNONYM KERNSYN3 FOR KERNTAB3 !
 
Enter command:
CREATE PUBLIC SYNONYM KERNPUBSYN3 FOR KERNTAB3 !
 
Enter command:
CREATE SEQUENCE KERNSEQ1 !
 
Enter command:
GRANT SELECT ON KERNSEQ1 TO PUBLIC !
 
Enter command:
CREATE SEQUENCE KERNSEQ2 !
 
Enter command:
CREATE DOMAIN KERNDOM CHAR (8) !
 
Enter command:
CREATE DBPROC KERNPROC (IN AVAL CHAR(8)) AS
TRY
  INSERT KERN.KERNTAB1 VALUES (:AVAL);
CATCH
  IF $RC <> 200 THEN STOP ($RC, 'Unexpected error')
  ELSE STOP (200, 'duplicate value');
!
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( ELKE ELKE !
 
Enter command:
CONNECT ELKE IDENTIFIED BY ELKE   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE ELKETAB (A CHAR (8))!
 
Enter command:
CREATE SYNONYM ELKESYN FOR ELKETAB !
 
Enter command:
CREATE SEQUENCE ELKESEQ !
 
Enter command:
SELECT OWNER,TABLENAME,TYPE
  FROM SYSDD.TABLES, KERN.TIMEST
 WHERE TABLENAME <> 'TIMEST'
   AND
       (("DATE" = D AND "TIME" >= T)
    OR "DATE" > D) !
 
resultcount :                     9
 
Enter command:
FETCH!
 
OWNER                            | TABLENAME                        | TYPE
---------------------------------+----------------------------------+---------
ELKE                             | ELKESYN                          | SYNONYM
ELKE                             | ELKETAB                          | TABLE
KERN                             | KERNTAB1                         | TABLE
KERN                             | KERNTAB3                         | TABLE
SUT                              | SUTTAB1                          | TABLE
SUT                              | KERNTAB1                         | TABLE
SUT                              | KERNTAB2                         | TABLE
SUT                              | SUTV1                            | VIEW
KERN                             | KERNPUBSYN3                      | SYNONYM
 
resultcount :                     9
 
Enter command:
SELECT GET_SCHEMA ('elketab',       TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKE
 
Enter command:
SELECT GET_SCHEMA ('kerntab1',      TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERN
 
Enter command:
SELECT GET_SCHEMA ('kerntab2',      TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('kerntab3',      TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERN
 
Enter command:
SELECT GET_SCHEMA ('suttab1',       TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUT
 
Enter command:
SELECT GET_SCHEMA ('suttab2',       TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('"suttab1"',     TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('"SUTTAB1"',     TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUT
 
Enter command:
SELECT GET_SCHEMA ('sut.suttab1',   TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUT
 
Enter command:
SELECT GET_SCHEMA ('sysdba.suttab1',TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUT
 
Enter command:
SELECT GET_SCHEMA ('kern.suttab1',  TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('sutv1',         TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('elkesyn',       TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('elkeseq',       TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
 
SELECT GET_SCHEMA ('elketab',       VIEW) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('sutv1',         VIEW) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUT
 
Enter command:
SELECT GET_SCHEMA ('sut.sutv1',     VIEW) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUT
 
Enter command:
SELECT GET_SCHEMA ('elkesyn',       VIEW) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
 
SELECT GET_SCHEMA ('elketab',       SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('sutv1',         SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('elkesyn',       SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKE
 
Enter command:
SELECT GET_SCHEMA ('kernsyn3',      SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('kernpubsyn3',   SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKE
 
Enter command:
 
SELECT GET_SCHEMA ('elkeseq',       SEQUENCE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKE
 
Enter command:
SELECT GET_SCHEMA ('kernseq1',      SEQUENCE) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERN
 
Enter command:
SELECT GET_SCHEMA ('kernseq2',      SEQUENCE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
 
SELECT GET_SCHEMA ('kerndom',         DOMAIN) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERN
 
Enter command:
SELECT GET_SCHEMA ('"KERN"."KERNDOM"',DOMAIN) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERN
 
Enter command:
 
SELECT GET_SCHEMA ('kernproc',      DBPROCEDURE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_SCHEMA ('KERN.KERNPROC', DBPROC)      INTO :A FROM DUAL !
 
EXPRESSION1       :  KERN
 
Enter command:
 
SELECT GET_OBJECTNAME ('elketab',       TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKETAB
 
Enter command:
SELECT GET_OBJECTNAME ('sut.suttab1',   TABLE) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUTTAB1
 
Enter command:
SELECT GET_OBJECTNAME ('elketab',       VIEW) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_OBJECTNAME ('sut.sutv1',     VIEW) INTO :A FROM DUAL !
 
EXPRESSION1       :  SUTV1
 
Enter command:
SELECT GET_OBJECTNAME ('elkesyn',       SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKESYN
 
Enter command:
SELECT GET_OBJECTNAME ('elke.elkesyn',  SYNONYM) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKESYN
 
Enter command:
SELECT GET_OBJECTNAME ('elkeseq',       SEQUENCE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKESEQ
 
Enter command:
SELECT GET_OBJECTNAME ('elke.elkeseq',  SEQUENCE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ELKESEQ
 
Enter command:
SELECT GET_OBJECTNAME ('kerndom',         DOMAIN) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERNDOM
 
Enter command:
SELECT GET_OBJECTNAME ('"KERN"."KERNDOM"',DOMAIN) INTO :A FROM DUAL !
 
EXPRESSION1       :  KERNDOM
 
Enter command:
SELECT GET_OBJECTNAME ('kernproc',      DBPROCEDURE) INTO :A FROM DUAL !
 
EXPRESSION1       :  ?????
 
Enter command:
SELECT GET_OBJECTNAME ('KERN.KERNPROC', DBPROC)      INTO :A FROM DUAL !
 
EXPRESSION1       :  KERNPROC
 
Enter command:
 
SELECT GET_SCHEMA ('kerntab1',      TABLE),
       GET_OBJECTNAME ('kerntab1',      TABLE)
  INTO :A, :B FROM DUAL !
 
EXPRESSION1       :  KERN
EXPRESSION2       :  KERNTAB1
 
Enter command:
 
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT GET_SCHEMA (:A, TABLE) INTO :A FROM DUAL !
 
c 74 'elketab'
 
EXPRESSION1       :  ELKE
 
Enter command:
SELECT GET_OBJECTNAME (:A,  SEQUENCE) INTO :A FROM DUAL !
 
c 74 'elke.elkeseq'
 
EXPRESSION1       :  ELKESEQ
 
Enter command:
SELECT GET_SCHEMA (:A, TABLE),
       GET_SCHEMA (:A, TABLE)
  INTO :A, :B FROM DUAL !
 
c 74 'elketab'
c 74 'elketab'
 
EXPRESSION1       :  ELKE
EXPRESSION2       :  ELKE
 
Enter command:
PARS_EXECUTE !
 
Enter command:
NODATA !
 
Enter command:
 
INSERT KERNTAB1 VALUES ('aaa')!
 
Enter command:
INSERT KERN.KERNTAB1 VALUES ('aaa')!
 
Enter command:
INSERT SUT.KERNTAB1 VALUES ('aaa')!
 
Enter command:
SELECT * FROM KERNTAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A
--------
aaa
aaa
 
resultcount :                     2
 
Enter command:
SELECT * FROM KERN.KERNTAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A
--------
aaa
aaa
 
resultcount :                     2
 
Enter command:
SELECT * FROM SUT.KERNTAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A
--------
aaa
 
resultcount :                     1
 
Enter command:
 
INSERT KERNTAB2 VALUES ('aaa')!
 
***ERROR  -4004 Unknown table name:KERNTAB2                                0008
 
Enter command:
INSERT KERN.KERNTAB2 VALUES ('aaa')!
 
***ERROR  -4004 Unknown table name:KERNTAB2                                0008
 
Enter command:
INSERT SUT.KERNTAB2 VALUES ('aaa')!
 
Enter command:
SELECT * FROM KERNTAB2 !
 
***ERROR  -4004 Unknown table name:KERNTAB2                                0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM KERN.KERNTAB2 !
 
***ERROR  -4004 Unknown table name:KERNTAB2                                0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM SUT.KERNTAB2 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A
--------
aaa
 
resultcount :                     1
 
Enter command:
 
INSERT KERNTAB3 VALUES ('aaa')!
 
Enter command:
INSERT KERN.KERNTAB3 VALUES ('aaa')!
 
Enter command:
INSERT SUT.KERNTAB3 VALUES ('aaa')!
 
***ERROR  -4004 Unknown table name:KERNTAB3                                0008
 
Enter command:
SELECT * FROM KERNTAB3 !
 
***ERROR  -5001 Missing privilege:SELECT                                   0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM KERN.KERNTAB3 !
 
***ERROR  -5001 Missing privilege:SELECT                                   0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM SUT.KERNTAB3 !
 
***ERROR  -4004 Unknown table name:KERNTAB3                                0015
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE ELKE !
 
***ERROR  -4004 Unknown table name:ELKE                                    0012
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE ELKE !
 
***ERROR  -4004 Unknown table name:ELKE                                    0012
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT (SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8))!
 
Enter command:
INSERT T VALUES ('abc')!
 
Enter command:
CREATE VIEW V1 AS SELECT A, UPPER(A) A_UPP FROM T !
 
Enter command:
GRANT ALL ON V1 TO KERN !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM V1 !
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A        | A_UPP
---------+---------
abc      | ABC
 
resultcount :                     1
 
Enter command:
SELECT A_UPP FROM V1 !
 
resultcount :               unknown
 
Enter command:
SELECT SCHEMANAME,OWNER,TABLENAME,TABLEID,DYNAMIC
FROM TABLES
WHERE TABLENAME = 'V1' AND
SCHEMANAME = GET_SCHEMA ('V1', VIEW) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  SUT
OWNER             :  SUT
TABLENAME         :  V1
TABLEID           :  0000000000000XYZ
DYNAMIC           :  ?????
 
resultcount :                     1
 
Enter command:
SELECT SCHEMANAME,OWNER,TABLENAME,
COLUMNNAME,DATATYPE,LEN,MODE
FROM COLUMNS WHERE TABLENAME = 'V1' AND
SCHEMANAME = GET_SCHEMA ('V1', VIEW) !
 
resultcount :                     2
 
Enter command:
FETCH!
 
SCHEMANAME        :  SUT
OWNER             :  SUT
TABLENAME         :  V1
COLUMNNAME        :  A
DATATYPE          :  CHAR
LEN               :      8
MODE              :  OPT
-----------------------------------------------------
SCHEMANAME        :  SUT
OWNER             :  SUT
TABLENAME         :  V1
COLUMNNAME        :  A_UPP
DATATYPE          :  CHAR
LEN               :      8
MODE              :  OPT
 
resultcount :                     2
 
Enter command:
CREATE TABLE MY_T ( I INT)!
 
Enter command:
INSERT MY_T VALUES (1)!
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM MY_T !
 
Enter command:
SELECT A_UPP FROM V1 !
 
***ERROR  -4005 Unknown column name:A_UPP                                  0008
 
Enter command:
SELECT * FROM VIEWS WHERE VIEWNAME = 'V1' AND
SCHEMANAME = GET_SCHEMA ('V1', VIEW) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
VIEWNAME          :  V1
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
CREATEDATE        :  DATEXXXX
CREATETIME        :  TIMEYYYY
UPDSTATDATE       :  DATEXXXX
UPDSTATTIME       :  TIMEYYYY
ALTERDATE         :  ?????
ALTERTIME         :  ?????
UNLOADED          :  ?????
WITHCHECKOPTION   :  NO
COMPLEX           :  NO
COMMENT           :  ?????
 
resultcount :                     1
 
Enter command:
SELECT * FROM VIEWDEFS WHERE VIEWNAME = 'V1' AND
SCHEMANAME = GET_SCHEMA ('V1', VIEW) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
VIEWNAME          :  V1
LEN               :      41
DEFINITION        :  CREATE VIEW V1 AS SELECT * FROM KERN.MY_T
 
resultcount :                     1
 
Enter command:
 SELECT * FROM TABLES WHERE TABLENAME = 'V1' AND
SCHEMANAME = GET_SCHEMA ('V1', VIEW) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  V1
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
TABLETYPE         :  VIEW
CREATEDATE        :  DATEXXXX
CREATETIME        :  TIMEYYYY
UPDSTATDATE       :  DATEXXXX
UPDSTATTIME       :  TIMEYYYY
ALTERDATE         :  ?????
ALTERTIME         :  ?????
UNLOADED          :  ?????
SAMPLE_PERCENT    :  ????
SAMPLE_ROWS       :  ???????????
COMMENT           :  ?????
TABLEID           :  0000000000000XYZ
DYNAMIC           :  ?????
ARCHIVE           :  ?????
VARIABLE_COLUMNS  :  ?????
VIRTUALKEY        :  ?????
 
resultcount :                     1
 
Enter command:
 SELECT * FROM COLUMNS WHERE TABLENAME = 'V1' AND
SCHEMANAME = GET_SCHEMA ('V1', VIEW) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
SCHEMANAME        :  KERN
OWNER             :  KERN
TABLENAME         :  V1
COLUMNNAME        :  I
MODE              :  OPT
DATATYPE          :  INTEGER
CODETYPE          :
LEN               :     10
DEC               :     0
NULLABLE          :  YES
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
DEFAULTFUNCTION   :  ?????
DOMAINOWNER       :  ?????
DOMAINNAME        :  ?????
POS               :      1
KEYPOS            :  ?????
PHYSICALPOS       :      2
CREATEDATE        :  DATEXXXX
CREATETIME        :  TIMEYYYY
ALTERDATE         :  DATEXXXX
ALTERTIME         :  TIMEYYYY
TABLETYPE         :  VIEW
COMMENT           :  ?????
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE SHUTDWNK!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT!
SESSION END
 
