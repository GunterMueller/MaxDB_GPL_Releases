VIEW.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1!
 
Enter command:
LOCK TABLE V1 IN SHARE MODE !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      7
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      7
     11
 
resultcount :                     2
 
Enter command:
INSERT T1 SET B = 5!
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE B > 4 !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      5 |       8
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.5000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      8
     11
 
resultcount :                     2
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
INSERT T SET A = 5!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V2 (X) AS SELECT SUM(B) FROM T, T1 GROUP BY A!
 
Enter command:
CREATE VIEW V3 (X) AS SELECT SUM(B) FROM T, T1 HAVING AVG(B) > 3!
 
Enter command:
CREATE VIEW V1 (X) AS SELECT SUM(B) FROM T, T1!
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X
--------------------------------------------
 2.4000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
***ERROR  -7021 View column derived from function not allowed:X            0024
 
Enter command:
SELECT * FROM V1 GROUP BY A!
 
***ERROR  -8017 Column must be group column:X                              0008
 
Enter command:
SELECT X FROM V1 GROUP BY X !
 
***ERROR  -7021 View column derived from function not allowed:X            0027
 
Enter command:
SELECT AVG(X) FROM V1!
 
***ERROR  -7021 View column derived from function not allowed:X            0012
 
Enter command:
SELECT X FROM V1 HAVING X > 12!
 
***ERROR  -8017 Column must be group column:X                              0025
 
Enter command:
SELECT X FROM V1 HAVING X >= 12 ORDER BY X!
 
***ERROR  -8017 Column must be group column:X                              0025
 
Enter command:
SELECT X FROM V1 HAVING X >= 12 ORDER BY 1!
 
***ERROR  -7021 View column derived from function not allowed:X            0001
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (X) AS SELECT SUM(B) FROM T, T1 WHERE A > 3!
 
Enter command:
SELECT * FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X
--------------------------------------------
 1.2000000000000000000000000000000000000E+01
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
***ERROR  -7021 View column derived from function not allowed:X            0024
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1!
 
Enter command:
COMMIT !
 
Enter command:
CREATE TABLE T ( A CHAR (7) )!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
CREATE VIEW V1 (SYSK, A) AS SELECT DISTINCT SYSKEY,* FROM T!
 
Enter command:
SELECT * FROM V1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
SYSK             | A
-----------------+--------
FFFE000000000001 | aaa
FFFE000000000002 | aaa
 
resultcount :                     2
 
Enter command:
SELECT A FROM V1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A
-------
aaa
aaa
 
resultcount :                     2
 
Enter command:
CREATE TABLE T1 (B CHAR (7) )!
 
Enter command:
INSERT T1 SET B = 'aaa'!
 
Enter command:
SELECT A,B FROM T1, V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A       | B
--------+--------
aaa     | aaa
aaa     | aaa
 
resultcount :                     2
 
Enter command:
CREATE TABLE TE ( A CHAR, B CHAR )!
 
Enter command:
INSERT TE VALUES ('a', 'a')!
 
Enter command:
INSERT TE VALUES ('a', 'b')!
 
Enter command:
CREATE VIEW VE AS SELECT DISTINCT A, B FROM TE!
 
Enter command:
SELECT * FROM VE !
 
resultcount :                     2
 
Enter command:
FETCH!
 
A | B
--+--
a | a
a | b
 
resultcount :                     2
 
Enter command:
SELECT A FROM VE !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A
-
a
a
 
resultcount :                     2
 
Enter command:
DROP TABLE TE!
 
Enter command:
 
CREATE TABLE X ( I INT )!
 
Enter command:
INSERT X VALUES (1)!
 
Enter command:
CREATE TABLE Y ( J INT )!
 
Enter command:
INSERT Y VALUES (1)!
 
Enter command:
CREATE VIEW XY AS
SELECT I, J FROM X,Y WHERE I = J!
 
Enter command:
CREATE VIEW XY_OV AS
SELECT SUM(I), COUNT (DISTINCT J),
(SUM(I) * SUM(I) )/SUM (I)
FROM XY WHERE I IS NOT NULL !
 
Enter command:
SELECT * FROM XY_OV!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1       :   1.0000000000000000000000000000000000000E+00
EXPRESSION2       :            1
EXPRESSION3       :   1.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
 
COMMIT RELEASE !
 
Enter command:
FILE VIEW2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
CREATE TABLE T ( A FIXED(4))!
 
Enter command:
INSERT T SET A = 3!
 
Enter command:
CREATE TABLE T1 ( B FIXED (5))!
 
Enter command:
INSERT T1 SET B = 8!
 
Enter command:
INSERT T1 SET B = 4!
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM T1 !
 
Enter command:
SELECT * FROM V1 ORDER BY B !
 
resultcount :                     2
 
Enter command:
FETCH !
 
B
------
     4
     8
 
resultcount :                     2
 
Enter command:
DROP VIEW V1 !
 
Enter command:
SELECT ROWNO, A, B FROM T, T1!
 
resultcount :                     2
 
Enter command:
CREATE VIEW V1 (A, B, R) AS SELECT A, B, ROWNO FROM T, T1!
 
***ERROR  -7019 Feature not allowed in view definition                     0042
 
Enter command:
DROP VIEW V1!
 
***ERROR  -4004 Unknown table name:V1                                      0011
 
Enter command:
CREATE VIEW V1 (A, B) AS SELECT A, B FROM T, T1 WHERE ROWNO < 5!
 
***ERROR  -7019 Feature not allowed in view definition                     0055
 
Enter command:
DROP VIEW V1!
 
***ERROR  -4004 Unknown table name:V1                                      0011
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE A+B > 6!
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      4 |       7
 
resultcount :                     2
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      7
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 7.0000000000000000000000000000000000000E+00 |      4
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      7
     11
 
resultcount :                     2
 
Enter command:
INSERT T1 SET B = 5!
 
Enter command:
DROP VIEW V1 !
 
Enter command:
CREATE VIEW V1 (A, B, X) AS SELECT A, B, A+B FROM T, T1 WHERE A+B > 7 !
 
Enter command:
SELECT * FROM V1 WHERE X > 10!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A < X!
 
resultcount :                     2
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
    3 |      5 |       8
 
resultcount :                     2
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND X > 10!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE B = 4 OR X > 10 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE NOT (X <= 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT * FROM V1 WHERE A = 3 AND (B = 4 OR X > 10)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
A     | B      | X
------+--------+--------
    3 |      8 |      11
 
resultcount :                     1
 
Enter command:
SELECT X FROM V1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
X
-------
     11
      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X) FROM V1!
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.5000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B !
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT AVG(X), B FROM V1 GROUP BY B ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT SUM(X), B FROM V1 WHERE X > 6 GROUP BY B HAVING AVG(A) > 0!
 
resultcount :                     2
 
Enter command:
FETCH!
 
EXPRESSION1                                  | B
---------------------------------------------+-------
 8.0000000000000000000000000000000000000E+00 |      5
 1.1000000000000000000000000000000000000E+01 |      8
 
resultcount :                     2
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(X) > 8!
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
     11
 
resultcount :                     1
 
Enter command:
SELECT MIN (X) FROM V1 GROUP BY B HAVING AVG(A) > 2 ORDER BY 1!
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
      8
     11
 
resultcount :                     2
 
Enter command:
DROP TABLE T!
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE VIEW3 !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PROBEW (OID CHAR(36) KEY,
I_REL FIXED(10) KEY, I_CONCAT_ID CHAR (36), LAND_NR FIXED (10),
LFD_NR FIXED (10))!
 
Enter command:
INSERT PROBEW VALUES ('aaa', 1, 'a', 116, 3)!
 
Enter command:
CREATE TABLE PROBEWBEWILL
(OID CHAR(36) KEY, I_REL FIXED (10) KEY,
I_TAB_KEY CHAR(8) BYTE, I_CONCAT_ID CHAR(9))!
 
Enter command:
INSERT PROBEWBEWILL VALUES ('aaa', 1, X'99', 'a')!
 
Enter command:
CREATE TABLE PROJECT(OID CHAR(27) KEY,
I_REL FIXED(10) KEY, I_CONCAT_ID CHAR (27), LAND_NR FIXED (10),
LFD_NR FIXED (10))!
 
Enter command:
INSERT PROJECT VALUES ('aaa', 1, 'a', 116, 3)!
 
Enter command:
CREATE VIEW GRUNDBEW AS SELECT
 PROBEW.OID, PROJECT.I_REL, PROJECT.LAND_NR, PROJECT.LFD_NR
 FROM PROBEW, PROBEWBEWILL, PROJECT
WHERE PROBEW.OID = PROBEWBEWILL.OID
  AND PROBEW.LAND_NR = PROJECT.LAND_NR
  AND PROBEW.LFD_NR = PROJECT.LFD_NR !
 
Enter command:
CREATE INDEX "project.land_nr"
 ON PROJECT( LAND_NR ) !
 
Enter command:
DROP   INDEX "probew.land_nr" !
 
***ERROR  -4011 Unknown index name:probew.land_nr                          0015
 
Enter command:
EXPLAIN SELECT * FROM GRUNDBEW WHERE LAND_NR = 116 !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | PROBEW             |                    | TABLE SCAN                               |          1
KERN               | PROBEWBEWILL       | OID                | JOIN VIA KEY RANGE                       |          1
KERN               | PROJECT            | project.land_nr    | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | LAND_NR            |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          3
 
Enter command:
SELECT * FROM GRUNDBEW WHERE LAND_NR = 116 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
OID                                  | I_REL       | LAND_NR     | LFD_NR
-------------------------------------+-------------+-------------+------------
aaa                                  |           1 |         116 |           3
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE VIEW4 !
 
Enter command:
FILE CONNECT (KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE SYSDDMOD
  (
   OWNER        CHAR(64) ASCII KEY DEFAULT USERGROUP,
   MODULNAM1    CHAR(18) ASCII KEY DEFAULT ' ',
   MODULNAM2    CHAR(18) ASCII KEY DEFAULT ' ',
   PROGLANG     CHAR(18) ASCII KEY DEFAULT ' ',
   OBJTYPE      CHAR(18) ASCII KEY DEFAULT 'MODULE',
   SUBTYPE      CHAR(12) ASCII KEY DEFAULT ' ',
   VERSION      CHAR(4)  ASCII KEY DEFAULT ' ',
   LONGNAME     CHAR(40) ASCII DEFAULT ' ',
   TYPE         CHAR(18) ASCII DEFAULT ' ',
   CREATEDATE   DATE DEFAULT DATE,
   CREATETIME   TIME DEFAULT TIME,
   UPDDATE      DATE DEFAULT DATE,
   UPDTIME      TIME DEFAULT TIME,
   COMMENT      LONG
  )!
 
Enter command:
COMMIT WORK!
 
Enter command:
CREATE VIEW SYSDDMODV
  (OBJTYPE, OWNER, NAME1, NAME2, NAME3, SUBTYPE, VERSION, COMMENT)
AS SELECT
   OBJTYPE, OWNER, MODULNAM1, MODULNAM2, PROGLANG,
   SUBTYPE, VERSION, COMMENT
FROM SYSDDMOD!
 
Enter command:
COMMIT WORK!
 
Enter command:
GRANT SELECT ON SYSDDMODV TO PUBLIC!
 
Enter command:
CREATE VIEW SYSDD_MOD
AS SELECT *
   FROM SYSDDMOD
   WHERE OWNER = USERGROUP!
 
Enter command:
COMMIT WORK!
 
Enter command:
GRANT ALL ON SYSDD_MOD TO PUBLIC!
 
Enter command:
CREATE VIEW SYSDDPRG
  (OWNER,PROGRAMNAME,NAME2,NAME3,OBJTYPE,SUBTYPE,VERSION,
   LONGNAME,CREATEDATE,CREATETIME,UPDDATE,UPDTIME,COMMENT)
AS SELECT
   OWNER,MODULNAM1,' ',' ','PROGRAM',SUBTYPE,VERSION,
   ' ',CREATEDATE,CREATETIME,UPDDATE,UPDTIME,COMMENT
   FROM SYSDDMOD!
 
Enter command:
COMMIT WORK!
 
Enter command:
CREATE VIEW SYSDDPRG_
  (OBJTYPE, OWNER, NAME1, NAME2, NAME3, SUBTYPE, VERSION, COMMENT)
AS SELECT
   OBJTYPE, OWNER, PROGRAMNAME, NAME2, NAME3, SUBTYPE,
   VERSION, COMMENT
   FROM SYSDDPRG!
 
Enter command:
FILE SEL_TABLE !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER <> 'SUT'
    AND TABLENAME <> 'SEL_TAB' !
 
resultcount :                     5
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  KERN
TABLENAME         :  SYSDDMOD
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  SYSDDMODV
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  SYSDDPRG
PRIVILEGES        :  SEL+UPD-DEL+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  SYSDDPRG_
PRIVILEGES        :  SEL+UPD-DEL+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  SYSDD_MOD
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
 
resultcount :                     5
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
ROLLBACK WORK RELEASE!
 
Enter command:
 
 * NORMAL BEHAVIOUR !
 
Enter command:
 
FILE CONNECT ( KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( TA CHAR (8))!
 
Enter command:
INSERT T VALUES ('bbb')!
 
Enter command:
CREATE TABLE TAB ( A CHAR (8), B CHAR (8) PRIMARY KEY)!
 
Enter command:
INSERT TAB VALUES ('aaa', 'bbb')!
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW KLEIN1 AS SELECT A,B FROM TAB WHERE
B <> 'i' !
 
Enter command:
CREATE VIEW GROSS1 AS SELECT MAX(A), B FROM T, KLEIN1
WHERE B = TA GROUP BY B !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW KLEIN2 AS SELECT A,B FROM TAB WHERE
B <> 'i' !
 
Enter command:
CREATE VIEW GROSS2 AS SELECT MAX(A), B FROM T, KLEIN2
WHERE B = TA GROUP BY B !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP VIEW KLEIN1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM GROSS2 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE TAB !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
 * CREATE VIEW WITH POST-OPTION 'NO REFERENCES' !
 
Enter command:
 
FILE CONNECT ( KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( TA CHAR (8))!
 
Enter command:
INSERT T VALUES ('bbb')!
 
Enter command:
CREATE TABLE TAB ( A CHAR (8), B CHAR (8) PRIMARY KEY)!
 
Enter command:
INSERT TAB VALUES ('aaa', 'bbb')!
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW KLEIN1 AS SELECT A,B FROM TAB WHERE
B <> 'i' NO REFERENCES!
 
Enter command:
CREATE VIEW GROSS1 AS SELECT MAX(A), B FROM T, KLEIN1
WHERE B = TA GROUP BY B !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW KLEIN2 AS SELECT A,B FROM TAB WHERE
B <> 'i' NO REFERENCES!
 
Enter command:
CREATE VIEW GROSS2 AS SELECT MAX(A), B FROM T, KLEIN2
WHERE B = TA GROUP BY B !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP VIEW KLEIN1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM GROSS2 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP VIEW KLEIN2 !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE TAB !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
 * CREATE AND DROP VIEW WITH POST-OPTION 'NO REFERENCES' !
 
Enter command:
FILE CONNECT ( KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( TA CHAR (8))!
 
Enter command:
INSERT T VALUES ('bbb')!
 
Enter command:
CREATE TABLE TAB ( A CHAR (8), B CHAR (8) PRIMARY KEY)!
 
Enter command:
INSERT TAB VALUES ('aaa', 'bbb')!
 
Enter command:
COMMIT !
 
Enter command:
CREATE VIEW KLEIN1 AS SELECT A,B FROM TAB WHERE
B <> 'i' NO REFERENCES!
 
Enter command:
CREATE VIEW GROSS1 AS SELECT MAX(A), B FROM T, KLEIN1
WHERE B = TA GROUP BY B !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE VIEW KLEIN2 AS SELECT A,B FROM TAB WHERE
B <> 'i' NO REFERENCES!
 
Enter command:
CREATE VIEW GROSS2 AS SELECT MAX(A), B FROM T, KLEIN2
WHERE B = TA GROUP BY B !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP VIEW KLEIN1 NO REFERENCES !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
 
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM GROSS2 !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE TAB !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TTKTYPES
    ( "TYPE_NAME"           VARCHAR(18) ASCII NOT NULL,
      "DATA_TYPE"           SMALLINT NOT NULL,
      "PRECISION"           INTEGER )!
 
Enter command:
CREATE OR REPLACE VIEW TTKTYPESV2
 AS SELECT  TYPE_NAME, DATA_TYPE, PRECISION FROM TTKTYPES!
 
Enter command:
CREATE OR REPLACE VIEW TTKTYPESV4
 AS SELECT  TYPE_NAME, DATA_TYPE, PRECISION
 FROM TTKTYPES, SYSINFO.ACTIVECONFIGURATION T
 WHERE T.PARAMETERNAME='DEFAULT_CODE'!
 
Enter command:
SELECT COLUMNNAME, MODE, DATATYPE, CODETYPE, LEN, DEC, NULLABLE
 FROM COLUMNS WHERE SCHEMANAME = 'KERN' AND TABLENAME='TTKTYPES'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
COLUMNNAME        :  TYPE_NAME
MODE              :  MAN
DATATYPE          :  VARCHAR
CODETYPE          :  ASCII
LEN               :     18
DEC               :  ????
NULLABLE          :  NO
-----------------------------------------------------
COLUMNNAME        :  DATA_TYPE
MODE              :  MAN
DATATYPE          :  SMALLINT
CODETYPE          :
LEN               :      5
DEC               :     0
NULLABLE          :  NO
-----------------------------------------------------
COLUMNNAME        :  PRECISION
MODE              :  OPT
DATATYPE          :  INTEGER
CODETYPE          :
LEN               :     10
DEC               :     0
NULLABLE          :  YES
 
resultcount :                     3
 
Enter command:
SELECT COLUMNNAME, MODE, DATATYPE, CODETYPE, LEN, DEC, NULLABLE
 FROM COLUMNS WHERE SCHEMANAME = 'KERN' AND TABLENAME='TTKTYPESV2'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
COLUMNNAME        :  TYPE_NAME
MODE              :  MAN
DATATYPE          :  VARCHAR
CODETYPE          :  ASCII
LEN               :     18
DEC               :  ????
NULLABLE          :  NO
-----------------------------------------------------
COLUMNNAME        :  DATA_TYPE
MODE              :  MAN
DATATYPE          :  SMALLINT
CODETYPE          :
LEN               :      5
DEC               :     0
NULLABLE          :  NO
-----------------------------------------------------
COLUMNNAME        :  PRECISION
MODE              :  OPT
DATATYPE          :  INTEGER
CODETYPE          :
LEN               :     10
DEC               :     0
NULLABLE          :  YES
 
resultcount :                     3
 
Enter command:
SELECT COLUMNNAME, MODE, DATATYPE, CODETYPE, LEN, DEC, NULLABLE
 FROM COLUMNS WHERE SCHEMANAME = 'KERN' AND TABLENAME='TTKTYPESV4'!
 
resultcount :                     3
 
Enter command:
FETCH!
 
COLUMNNAME        :  TYPE_NAME
MODE              :  MAN
DATATYPE          :  VARCHAR
CODETYPE          :  ASCII
LEN               :     18
DEC               :  ????
NULLABLE          :  NO
-----------------------------------------------------
COLUMNNAME        :  DATA_TYPE
MODE              :  MAN
DATATYPE          :  SMALLINT
CODETYPE          :
LEN               :      5
DEC               :     0
NULLABLE          :  NO
-----------------------------------------------------
COLUMNNAME        :  PRECISION
MODE              :  OPT
DATATYPE          :  INTEGER
CODETYPE          :
LEN               :     10
DEC               :     0
NULLABLE          :  YES
 
resultcount :                     3
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
