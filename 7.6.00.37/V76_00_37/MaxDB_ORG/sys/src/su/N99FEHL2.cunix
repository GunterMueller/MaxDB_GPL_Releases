N99FEHL2.vdnts
 
Enter command:
FILE XINITDBK !
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A13 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE DOMAIN DOM FIXED(5) !
 
Enter command:
CREATE USER D PASSWORD W DBA !
 
Enter command:
CREATE USER R PASSWORD W RESOURCE !
 
Enter command:
CREATE USER P PASSWORD W !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( P W !
 
Enter command:
CONNECT P IDENTIFIED BY W   ISOLATION LEVEL 1 !
 
Enter command:
FILE SEL_DOMAIN !
 
Enter command:
DECLARE SEL_DOM CURSOR FOR
 SELECT OWNER,DOMAINNAME,DATATYPE,CODETYPE,LEN,"DEC",
        "DEFAULT"
   FROM DOMAIN.DOMAINS
  WHERE OWNER <> 'SUT' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_DOM INTO :A,:B,:C,:D,:E,:F,:G !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_DOM !
 
Enter command:
DROP DOMAIN DOM !
 
***ERROR  -5001 Missing privilege:DBA                                      0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( R W !
 
Enter command:
CONNECT R IDENTIFIED BY W   ISOLATION LEVEL 1 !
 
Enter command:
FILE SEL_DOMAIN !
 
Enter command:
DECLARE SEL_DOM CURSOR FOR
 SELECT OWNER,DOMAINNAME,DATATYPE,CODETYPE,LEN,"DEC",
        "DEFAULT"
   FROM DOMAIN.DOMAINS
  WHERE OWNER <> 'SUT' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_DOM INTO :A,:B,:C,:D,:E,:F,:G !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_DOM !
 
Enter command:
DROP DOMAIN DOM !
 
***ERROR  -5001 Missing privilege:DBA                                      0001
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( D W !
 
Enter command:
CONNECT D IDENTIFIED BY W   ISOLATION LEVEL 1 !
 
Enter command:
FILE SEL_DOMAIN !
 
Enter command:
DECLARE SEL_DOM CURSOR FOR
 SELECT OWNER,DOMAINNAME,DATATYPE,CODETYPE,LEN,"DEC",
        "DEFAULT"
   FROM DOMAIN.DOMAINS
  WHERE OWNER <> 'SUT' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH SEL_DOM INTO :A,:B,:C,:D,:E,:F,:G !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CLOSE SEL_DOM !
 
Enter command:
DROP DOMAIN DOM !
 
***ERROR  -5001 Missing privilege:OWNER                                    0013
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP DOMAIN DOM !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A14 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE1 FIXED(5) ) !
 
Enter command:
INSERT TAB VALUES ( 1 ) !
 
Enter command:
CREATE SYNONYM SYN FOR TAB !
 
Enter command:
ALTER TABLE SYN ADD ( SPALTE2 CHAR(5) ) !
 
Enter command:
ALTER TABLE TAB ADD ( SPALTE2 CHAR(5) ) !
 
***ERROR  -6001 Duplicate column name:SPALTE2                              0023
 
Enter command:
SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
SPALTE1 | SPALTE2
--------+--------
     1  | ???????
 
resultcount :                     1
 
Enter command:
RENAME TABLE SYN TO TAB2 !
 
Enter command:
RENAME COLUMN SYN.SPALTE1 TO COL1 !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A15 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT TAB VALUES ( 4 ) !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM TAB !
 
resultcount :               unknown
 
Enter command:
CREATE TABLE ERG ( SPALTE FIXED(5) ) !
 
Enter command:
INSERT ERG VALUES ( 8 ) !
 
Enter command:
SELECT * FROM ERG !
 
***ERROR  -8014 Result table must be FOR REUSE:ERG                         0015
 
Enter command:
CLOSE ERG !
 
Enter command:
INSERT ERG VALUES ( 9 ) !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A16 !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
CREATE USER D1 PASSWORD W RESOURCE !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( SPALTE1 FIXED(5), SPALTE2 FIXED(5) ) !
 
Enter command:
CREATE SYNONYM SYN FOR TAB !
 
Enter command:
CREATE TABLE NEWTAB LIKE SYN !
 
Enter command:
GRANT SELECT(SPALTE1) ON TAB TO D1 !
 
Enter command:
CREATE VIEW V1 AS SELECT * FROM TAB !
 
Enter command:
CREATE VIEW V2 AS SELECT SPALTE1 FROM TAB !
 
Enter command:
CREATE TABLE NEWV1 LIKE V1 !
 
Enter command:
CREATE TABLE NEWV2 LIKE V2 !
 
Enter command:
FILE SEL_COLS_TAB ( NEWV1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'NEWV1'
  ORDER BY POS !
 
resultcount :                     2
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  SPALTE1
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  SPALTE2
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     2
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
FILE SEL_COLS_TAB ( NEWV2 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'NEWV2'
  ORDER BY POS !
 
resultcount :                     1
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  SPALTE1
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     1
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
FILE SEL_TABLE !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER <> 'SUT'
    AND TABLENAME <> 'SEL_TAB' !
 
resultcount :                     7
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  KERN
TABLENAME         :  NEWTAB
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  NEWV1
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  NEWV2
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  SYN
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  SYNONYM
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  TAB
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  V1
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  V2
PRIVILEGES        :  SEL+UPD+DEL+INS+
TYPE              :  VIEW
 
resultcount :                     7
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( D1 W !
 
Enter command:
CONNECT D1 IDENTIFIED BY W   ISOLATION LEVEL 1 !
 
Enter command:
CREATE SYNONYM SYN FOR KERN.TAB !
 
Enter command:
FILE SEL_COLS_1TAB ( KERN TAB !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE SCHEMANAME = 'KERN'
    AND TABLENAME = 'TAB'
  ORDER BY POS !
 
resultcount :                     1
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  SPALTE1
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL
DEFAULT           :  ?????
 
resultcount :                     1
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
CREATE TABLE T1 LIKE KERN.TAB !
 
Enter command:
CREATE TABLE T2 LIKE SYN !
 
Enter command:
FILE SEL_TABLE !
 
Enter command:
DECLARE SEL_TAB CURSOR FOR
 SELECT OWNER,TABLENAME,PRIVILEGES,TYPE
   FROM DOMAIN.TABLES
  WHERE OWNER <> 'SUT'
    AND TABLENAME <> 'SEL_TAB' !
 
resultcount :                     4
 
Enter command:
FETCH SEL_TAB INTO :A, :B, :C, :D !
 
OWNER             :  D1
TABLENAME         :  SYN
PRIVILEGES        :  SEL-
TYPE              :  SYNONYM
-----------------------------------------------------
OWNER             :  D1
TABLENAME         :  T1
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  D1
TABLENAME         :  T2
PRIVILEGES        :  SEL+UPD+DEL+INS+REF+IND+ALT+
TYPE              :  TABLE
-----------------------------------------------------
OWNER             :  KERN
TABLENAME         :  TAB
PRIVILEGES        :  SEL-
TYPE              :  TABLE
 
resultcount :                     4
 
Enter command:
CLOSE SEL_TAB !
 
Enter command:
FILE SEL_COLS_TAB ( T1 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T1'
  ORDER BY POS !
 
resultcount :                     1
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  SPALTE1
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     1
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
FILE SEL_COLS_TAB ( T2 !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'T2'
  ORDER BY POS !
 
resultcount :                     1
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  SPALTE1
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      5
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                     1
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER D1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DROP TABLE TAB !
 
Enter command:
DROP TABLE NEWTAB!
 
Enter command:
DROP TABLE NEWV1 !
 
Enter command:
DROP TABLE NEWV2 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A17 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE CT0 (CODE FIXED(3) KEY,
   SYMBOL        CHAR (3),
   CODE_ISO      CHAR (3),
   RNDG_VALUE    FLOAT(7),
   EXCH_UNIT     FIXED(4))!
 
Enter command:
INSERT CT0 VALUES (3, 's', 'iso', 7, 4)!
 
Enter command:
CREATE TABLE CT1 (USAGE_AREA FIXED (2) KEY,
                  CODE       FIXED (3) KEY,
   POS_PRICE     FIXED(1),
   POS_AMOUNTS   FIXED(1))!
 
Enter command:
INSERT CT1 VALUES (1, 3, 0, 9)!
 
Enter command:
CREATE TABLE CT2 (USAGE_AREA FIXED (2) KEY,
                  CODE       FIXED (3) KEY,
                  RATE_DATE  CHAR  (8) KEY,
   RATE_COUNTER  FLOAT(10),
   RATE_DENOMI   FLOAT(10))!
 
Enter command:
INSERT CT2 VALUES (1, 3, '19892808', 10, 9)!
 
Enter command:
DATA !
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT
   CT1.USAGE_AREA,
   CT2.CODE,
   CT2.RATE_DATE,
   CT0.SYMBOL,
   CT0.CODE_ISO,
   CT0.RNDG_VALUE,
   CT0.EXCH_UNIT,
   CT2.RATE_COUNTER,
   CT2.RATE_DENOMI
FROM CT0, CT1, CT2
WHERE CT0.CODE = :CODE
  AND CT1.USAGE_AREA = :UA
  AND CT2.USAGE_AREA = CT1.USAGE_AREA
  AND CT1.CODE = CT0.CODE
  AND CT2.CODE = CT0.CODE
  AND CT2.RATE_DATE <= :RD !
 
n 3 3 n 2 1 c 8 '19990101'
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E, :F, :G, :H, :I, :J, :K !
 
USAGE_AREA        :    1
CODE              :     3
RATE_DATE         :  19892808
SYMBOL            :  s
CODE_ISO          :  iso
RNDG_VALUE        :   7.000000E+00
EXCH_UNIT         :      4
RATE_COUNTER      :   1.000000000E+01
RATE_DENOMI       :   9.000000000E+00
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE N99A18 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (T FIXED(6,2))!
 
Enter command:
CREATE TABLE T2 (T FIXED(6,2))!
 
Enter command:
CREATE VIEW  V1 (V) AS SELECT SUM(T) FROM T1!
 
Enter command:
CREATE VIEW  V2 (V) AS SELECT FIXED(SUM(T),6,2) FROM T1!
 
Enter command:
COMMIT WORK!
 
Enter command:
INSERT T1 SET T = 1!
 
Enter command:
INSERT T1 SET T = 2!
 
Enter command:
INSERT T1 SET T = 3!
 
Enter command:
COMMIT WORK!
 
Enter command:
INSERT T2 SET T = 1!
 
Enter command:
INSERT T2 SET T = 2!
 
Enter command:
INSERT T2 SET T = 3!
 
Enter command:
COMMIT WORK!
 
Enter command:
SELECT V+3 FROM V1 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
--------------------------------------------
 9.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT V FROM V1 ORDER BY V !
 
resultcount :                     1
 
Enter command:
FETCH!
 
V
--------------------------------------------
 6.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT MAX(V) FROM V1 !
 
***ERROR  -7021 View column derived from function not allowed:V            0012
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
CREATE TABLE X ( A FIXED (4), B FIXED (7))!
 
Enter command:
CREATE VIEW VX AS SELECT SUM(A), B FROM X !
 
***ERROR  -8017 Column must be group column:B                              0034
 
Enter command:
CREATE VIEW VX AS SELECT SUM(A) VX1, B FROM X GROUP BY B !
 
Enter command:
INSERT X VALUES (3, 1)!
 
Enter command:
INSERT X VALUES (4, 1)!
 
Enter command:
UPDATE VX SET B = VX1 !
 
***ERROR  -5001 Missing privilege:UPDATE                                   0008
 
Enter command:
DROP TABLE T1 !
 
Enter command:
DROP TABLE T2 !
 
Enter command:
DROP TABLE X !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A19 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A FIXED (5), B FIXED (6))!
 
Enter command:
INSERT T VALUES (2, 5)!
 
Enter command:
INSERT T VALUES (3, 4)!
 
Enter command:
INSERT T VALUES (4, 3)!
 
Enter command:
INSERT T VALUES (5, 2) !
 
Enter command:
SELECT * FROM T WHERE A <= 3 AND A = 3+1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE A <= 3 AND A = 3+1 ORDER BY B!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT * FROM T WHERE A <= 3 AND A = 3+1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM T WHERE A <= 3 AND A = 3+1 ORDER BY B!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T WHERE A <= :A AND A = :A+1 !
 
n 5 3 n 38 3
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T WHERE A <= :A AND A = :A+1 ORDER BY B !
 
n 5 3 n 38 3
 
***ERROR    100 Row not found                                              0001
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A20 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (S1 FIXED (5), S2 FIXED(5))!
 
Enter command:
INSERT T VALUES (1,1)!
 
Enter command:
INSERT T VALUES (2,2)!
 
Enter command:
SELECT S1 FROM T ORDER BY S2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1
------
     1
     2
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT(S1) FROM T ORDER BY S2 !
 
***ERROR  -8013 Order column must be output column                         0037
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SUM(S1) FROM T ORDER BY S2 !
 
***ERROR  -8013 Order column must be output column                         0032
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SUM(S1) FROM T ORDER BY S1 !
 
***ERROR  -8013 Order column must be output column                         0032
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SUM(S1), S2 FROM T !
 
***ERROR  -8017 Column must be group column:S2                             0017
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT SUM(S1), S2 FROM T GROUP BY S2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1                                  | S2
---------------------------------------------+-------
 1.0000000000000000000000000000000000000E+00 |      1
 2.0000000000000000000000000000000000000E+00 |      2
 
resultcount :                     2
 
Enter command:
SELECT SUM(S1), S2 FROM T GROUP BY S2 ORDER BY S2 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1                                  | S2
---------------------------------------------+-------
 1.0000000000000000000000000000000000000E+00 |      1
 2.0000000000000000000000000000000000000E+00 |      2
 
resultcount :                     2
 
Enter command:
CREATE VIEW V (A,B) AS SELECT SUM(S1), SUM(S2) FROM T!
 
Enter command:
SELECT A FROM V!
 
resultcount :                     1
 
Enter command:
FETCH!
 
A
--------------------------------------------
 3.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
SELECT A FROM V ORDER BY A !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A
--------------------------------------------
 3.0000000000000000000000000000000000000E+00
 
resultcount :                     1
 
Enter command:
CREATE VIEW V1 AS SELECT DISTINCT S1, S2 FROM T!
 
Enter command:
CREATE TABLE T1 ( A FIXED (6))!
 
Enter command:
INSERT T1 SET A = 3 !
 
Enter command:
SELECT * FROM V1, T1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1     | S2     | A
-------+--------+--------
     1 |      1 |       3
     2 |      2 |       3
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT * FROM V1, T1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1     | S2     | A
-------+--------+--------
     1 |      1 |       3
     2 |      2 |       3
 
resultcount :                     2
 
Enter command:
CREATE VIEW V2 AS SELECT DISTINCT * FROM V1, T1 !
 
Enter command:
SELECT * FROM V2, T1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1     | S2     | A       | A
-------+--------+---------+--------
     1 |      1 |       3 |       3
     2 |      2 |       3 |       3
 
resultcount :                     2
 
Enter command:
SELECT DISTINCT * FROM V2, T1 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
S1     | S2     | A       | A
-------+--------+---------+--------
     1 |      1 |       3 |       3
     2 |      2 |       3 |       3
 
resultcount :                     2
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A21 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PERSON (
GKZ   FIXED (4) KEY,
PERSNR FIXED(2) KEY,
ANREDE FIXED (1),
TITEL FIXED (1),
NAME CHAR (25),
VNAME CHAR (25),
GEBDAT CHAR(6),
TELNR CHAR (15),
TELEFAX CHAR(15),
PARTEI FIXED (1),
AMTSANTRITT CHAR(6),
WZENDE CHAR(6),
VORZEIT CHAR(1))!
 
Enter command:
SELECT * FROM PERSON
WHERE GKZ = 1111 OR ANREDE = 1 OR TITEL BETWEEN 1 AND 2
OR NAME LIKE '1111111111111111111111111'
OR VNAME LIKE '1111111111111111111111111'
OR ((GEBDAT >= '601111' AND GEBDAT >= '200101')
OR (GEBDAT < '191111' AND GEBDAT < '200101'))
OR TELNR LIKE '111111111111111' OR TELEFAX
LIKE '111111111111111' OR PARTEI BETWEEN 1 AND 2
OR ((AMTSANTRITT >= '601111' AND AMTSANTRITT >= '200201')
OR (AMTSANTRITT <'190101' AND AMTSANTRITT <'200101'))
OR ((WZENDE >= '601111' AND WZENDE >= '200101')
OR (WZENDE < '190101' AND WZENDE < '200101'))
OR VORZEIT = 'J' ORDER BY PERSON.PARTEI, ASCII(PERSON.TELEFAX),
ASCII(PERSON.TELNR), ASCII(PERSON.GEBDAT), ASCII(PERSON.VNAME),
ASCII(PERSON.NAME), PERSON.TITEL, PERSON.ANREDE,
PERSON.GKZ FOR REUSE !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE N99A22 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (30), B FIXED(18) )!
 
Enter command:
INSERT T SET A = 'abcdefghijklmnopqrstuvwxyzabcd',
       B = 333333333333333333!
 
Enter command:
CREATE TABLE T1 ( B1 FIXED(18))!
 
Enter command:
INSERT T1 SET B1 = 333333333333333333 !
 
Enter command:
PARSING !
 
Enter command:
SELECT * FROM T, T1 WHERE B = B1 !
parsing idnr :       1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT * FROM T !
 
resultcount :               unknown
 
Enter command:
FETCH1 !
 
A                 :  abcdefghijklmnopqrstuvwxyzabcd
B                 :   333333333333333333
 
Enter command:
EXECUTING !
 
Enter command:
SELECT * !
Parsing idnr :      1
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
FILE N99A23 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8), B CHAR (8), C CHAR (8))!
 
Enter command:
CREATE INDEX "t.c"
 ON T( C ) !
 
Enter command:
CREATE INDEX I1 ON T (A, B, C) !
 
Enter command:
INSERT T VALUES ('aaa', 'b', '123')!
 
Enter command:
INSERT T VALUES ('aaa', 'b', '234')!
 
Enter command:
INSERT T VALUES ('aaa', 'b', '345')!
 
Enter command:
CREATE TABLE T1 ( B1 CHAR (8))!
 
Enter command:
INSERT T1 SET B1 = 'b' !
 
Enter command:
CREATE INDEX "t1.b1"
 ON T1( B1 ) !
 
Enter command:
EXPLAIN SELECT DISTINCT A, C, B1
  FROM T, T1
  WHERE A = 'aaa' AND
        B = B1    AND
        (C BETWEEN '123' AND '234') !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.b1              | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT DISTINCT A, C, B1
  FROM T, T1
  WHERE A = 'aaa' AND
        B = B1    AND
        (C BETWEEN '123' AND '234') !
 
resultcount :                     2
 
Enter command:
FETCH!
 
A        | C        | B1
---------+----------+---------
aaa      | 123      | b
aaa      | 234      | b
 
resultcount :                     2
 
Enter command:
EXPLAIN SELECT DISTINCT A, C, B1
  FROM T, T1
  WHERE A = 'aaa' AND
        B = B1    AND
        (C = '123' OR C = '234') !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | T                  |                    | TABLE SCAN                               |          1
KERN               | T1                 | t1.b1              | JOIN VIA INDEXED COLUMN                  |          1
                   |                    | B1                 |      (USED INDEX COLUMN)                 |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          2
 
Enter command:
SELECT DISTINCT A, C, B1
  FROM T, T1
  WHERE A = 'aaa' AND
        B = B1    AND
        (C = '123' OR C = '234') !
 
resultcount :                     2
 
Enter command:
FETCH!
 
A        | C        | B1
---------+----------+---------
aaa      | 123      | b
aaa      | 234      | b
 
resultcount :                     2
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A24 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T_APPL_TRACKING
( AA01 CHAR(5) KEY,
  AA02 CHAR(5),
  AA03 CHAR(5),
  AA04 CHAR(5),
  AA05 CHAR(5),
  AA06 CHAR(5),
  AA07 CHAR(5),
  AA08 CHAR(5),
  AA09 CHAR(5),
  AA10 CHAR(5),
  AA11 CHAR(5),
  AA12 CHAR(5),
  AA13 CHAR(5),
  AA14 CHAR(5),
  AA15 CHAR(5),
  AA16 CHAR(5),
  AA17 CHAR(5),
  AA18 CHAR(5),
  AA19 CHAR(5),
  AA20 CHAR(5),
  AA21 CHAR(5),
  AA22 CHAR(5),
  AA23 CHAR(5),
  AA24 CHAR(5),
  AA25 CHAR(5),
  AA26 CHAR(5),
  AA27 CHAR(5),
  AA28 CHAR(5),
  AA29 CHAR(5),
  AA30 CHAR(5),
  AA31 CHAR(5),
  AA32 CHAR(5),
  AA33 CHAR(5),
  AA34 CHAR(5),
  AA35 CHAR(5),
  AA36 CHAR(5),
  AA37 CHAR(5),
  AA38 CHAR(5),
  AA39 CHAR(5),
  AA40 CHAR(5),
  AA41 CHAR(5),
  AA42 CHAR(5),
  AA43 CHAR(5),
  AA44 CHAR(5),
  AA45 CHAR(5),
  AA46 CHAR(5),
  AA47 CHAR(5),
  AA48 CHAR(5),
  AA49 CHAR(5),
  AA50 CHAR(5),
  AA51 CHAR(5),
  AA52 CHAR(5),
  AA53 CHAR(5),
  AA54 CHAR(5),
  AA55 CHAR(5),
  AA56 CHAR(5),
  AA57 CHAR(5),
  AA58 CHAR(5),
  AA59 CHAR(5),
  AA60 CHAR(5),
  AA61 CHAR(5),
  AA62 CHAR(5),
  AA63 CHAR(5),
  AA64 CHAR(5),
  AA65 CHAR(5),
  AA66 CHAR(5),
  AA67 CHAR(5),
  AA68 CHAR(5),
  AA69 CHAR(5),
  AA70 CHAR(6),
  AA71 CHAR(6),
  AA72 CHAR(5),
  AA73 CHAR(5),
  AA74 CHAR(5),
  ZZ01 FIXED(4) RANGE BETWEEN 0 AND 5000,
  ZZ02 CHAR(1) RANGE IN ('Y','N',' ')) !
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE VIEW V_APPL_TRACKING AS
SELECT * FROM T_APPL_TRACKING !
 
Enter command:
COMMIT WORK !
 
Enter command:
FILE SEL_COLS_TAB ( V_APPL_TRACKING !
 
Enter command:
DECLARE SEL_COL CURSOR FOR
 SELECT COLUMNNAME,
        MODE AS "MOD",
        DATATYPE,
        CODETYPE AS "CODE",
        LEN,"DEC",COLUMNPRIVILEGES,"DEFAULT"
   FROM DOMAIN.COLUMNS
  WHERE OWNER <> 'SUT'
    AND TABLENAME = 'V_APPL_TRACKING'
  ORDER BY POS !
 
resultcount :                    76
 
Enter command:
FETCH SEL_COL INTO :A,:B,:C,:D,:E,:F,:G,:H !
 
COLUMNNAME        :  AA01
MOD               :  KEY
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA02
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA03
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA04
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA05
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA06
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA07
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA08
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA09
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA10
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA11
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA12
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA13
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA14
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA15
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA16
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA17
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA18
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA19
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA20
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA21
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA22
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA23
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA24
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA25
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA26
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA27
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA28
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA29
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA30
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA31
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA32
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA33
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA34
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA35
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA36
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA37
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA38
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA39
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA40
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA41
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA42
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA43
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA44
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA45
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA46
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA47
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA48
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA49
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA50
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA51
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA52
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA53
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA54
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA55
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA56
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA57
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA58
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA59
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA60
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA61
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA62
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA63
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA64
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA65
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA66
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA67
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA68
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA69
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA70
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      6
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA71
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      6
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA72
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA73
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  AA74
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      5
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ZZ01
MOD               :  OPT
DATATYPE          :  FIXED
CODE              :
LEN               :      4
DEC               :     0
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
--------------------------------------------------------------------------------
COLUMNNAME        :  ZZ02
MOD               :  OPT
DATATYPE          :  CHAR
CODE              :  ASCII
LEN               :      1
DEC               :  ????
COLUMNPRIVILEGES  :  SEL+UPD+
DEFAULT           :  ?????
 
resultcount :                    76
 
Enter command:
CLOSE SEL_COL !
 
Enter command:
DROP TABLE T_APPL_TRACKING !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A26 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR ( 8),
B CHAR (8),
C CHAR (8),
D CHAR (8),
E CHAR (254),
F CHAR (254),
G CHAR (254),
H CHAR (254),
I CHAR (254),
J CHAR (127),
K CHAR (127),
L CHAR (127),
M CHAR (127))!
 
Enter command:
INSERT T VALUES ('aa', 'bb', 'cc', 'dd',
'eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
'ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg',
'hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh hhhh',
'iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii',
'jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj',
'kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk',
'lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll',
'mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm')!
 
Enter command:
CREATE UNIQUE INDEX I1 ON T (A, B, C, D) !
 
Enter command:
CREATE TABLE T1 (A1 CHAR (8), B1 CHAR (8))!
 
Enter command:
CREATE UNIQUE INDEX I1 ON T1 (A1, B1) !
 
Enter command:
INSERT T1 SET A1 = 'aaa', B1 = 'dd'!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT * FROM T, T1 WHERE A = :A AND B = :B AND C = :C AND D > :D AND
A1 = :A1 AND D = B1 !
 
c 8 'aa' c 8 'bb' c 8 'cc' c 8 'a' c 8 'aaa'
 
resultcount :                     1
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E, :F, :G, :H, :I, :J, :K, :L, :M, :A1, :B1 !
 
A                 :  aa
B                 :  bb
C                 :  cc
D                 :  dd
E                 :  eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
F                 :  fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
G                 :  ggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
H                 :  hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh hhhh
I                 :  iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii
J                 :  jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj
K                 :  kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
L                 :  lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
M                 :  mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
A1                :  aaa
B1                :  dd
 
resultcount :                     1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
DROP TABLE T1 !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A27 !
 
Enter command:
 * 1990-10-25 * KERN-FEHLERPROTOKOLL # 154  (2.407) !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) KEY, A2 CHAR(5) KEY) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
INSERT T1 VALUES ('bbbbb','xxxxx') !
 
Enter command:
INSERT T1 VALUES ('ccccc','zzzzz') !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T1 FOR REUSE !
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM ERG,
T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A1 = ERG.A1 AND R2.A1 = ERG.A1 AND R3.A1 = ERG.A1 AND
R4.A1 = ERG.A1 AND R5.A1 = ERG.A1 AND R6.A1 = ERG.A1 AND R7.A1 = ERG.A1
AND  R1.A2 = 'xxxxx' AND R2.A2 = 'xxxxx' AND R3.A2 = 'xxxxx' AND
R4.A2 = 'xxxxx' AND R5.A2 = 'xxxxx' AND R6.A2 = 'xxxxx' AND
R7.A2 = 'xxxxx' AND ERG.A2 = 'xxxxx' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | ERG                |                    | TABLE SCAN                               |          1
                   | R1                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    |                    | TABLE HASHED                             |
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R2                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R3                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R4                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R5                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | R6                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R7                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          8
 
Enter command:
SELECT * FROM ERG,
T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A1 = ERG.A1 AND R2.A1 = ERG.A1 AND R3.A1 = ERG.A1 AND
R4.A1 = ERG.A1 AND R5.A1 = ERG.A1 AND R6.A1 = ERG.A1 AND R7.A1 = ERG.A1
AND  R1.A2 = 'xxxxx' AND R2.A2 = 'xxxxx' AND R3.A2 = 'xxxxx' AND
R4.A2 = 'xxxxx' AND R5.A2 = 'xxxxx' AND R6.A2 = 'xxxxx' AND
R7.A2 = 'xxxxx' AND ERG.A2 = 'xxxxx' !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
 
resultcount :                     1
 
Enter command:
EXPLAIN SELECT * FROM ERG,
T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A1 = ERG.A1 AND R2.A1 = ERG.A1 AND R3.A1 = ERG.A1 AND
R4.A1 = ERG.A1 AND R5.A1 = ERG.A1 AND R6.A1 = ERG.A1 AND R7.A1 = ERG.A1
AND  R1.A2 = 'xxxxx' AND R2.A1 = 'xxxxx' AND R3.A1 = 'xxxxx' AND
R4.A1 = 'xxxxx' AND R5.A1 = 'xxxxx' AND R6.A1 = 'xxxxx' AND
R7.A1 = 'xxxxx' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | ERG                |                    | TABLE SCAN                               |          1
                   | R1                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    |                    | TABLE HASHED                             |
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R2                 | A1                 | JOIN VIA KEY RANGE                       |          1
                   | R3                 | A1                 | JOIN VIA KEY RANGE                       |          1
                   | R4                 | A1                 | JOIN VIA KEY RANGE                       |          1
                   | R5                 | A1                 | JOIN VIA KEY RANGE                       |          1
                   | R6                 | A1                 | JOIN VIA KEY RANGE                       |          1
                   | R7                 | A1                 | JOIN VIA KEY RANGE                       |          1
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          8
 
Enter command:
SELECT * FROM ERG,
T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A1 = ERG.A1 AND R2.A1 = ERG.A1 AND R3.A1 = ERG.A1 AND
R4.A1 = ERG.A1 AND R5.A1 = ERG.A1 AND R6.A1 = ERG.A1 AND R7.A1 = ERG.A1
AND  R1.A2 = 'xxxxx' AND R2.A1 = 'xxxxx' AND R3.A1 = 'xxxxx' AND
R4.A1 = 'xxxxx' AND R5.A1 = 'xxxxx' AND R6.A1 = 'xxxxx' AND
R7.A1 = 'xxxxx' !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK WORK !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) KEY, A2 CHAR(5) KEY) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
INSERT T1 VALUES ('bbbbb','xxxxx') !
 
Enter command:
INSERT T1 VALUES ('ccccc','zzzzz') !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T1 FOR REUSE !
 
resultcount :                     3
 
Enter command:
SELECT * FROM ERG, T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A1 = ERG.A1 AND R2.A1 = ERG.A1 AND R3.A1 = ERG.A1 AND
R4.A1 = ERG.A1 AND R5.A1 = ERG.A1 AND R6.A1 = ERG.A1 AND R7.A1 = ERG.A1 !
 
resultcount :                     3
 
Enter command:
FETCH !
 
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
A1                :  aaaaa
A2                :  bbbbb
--------------------------
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
--------------------------
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
A1                :  ccccc
A2                :  zzzzz
 
resultcount :                     3
 
Enter command:
ROLLBACK WORK !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5) KEY, A2 CHAR(5) KEY) !
 
Enter command:
INSERT T1 VALUES ('aaaaa','bbbbb') !
 
Enter command:
INSERT T1 VALUES ('bbbbb','xxxxx') !
 
Enter command:
INSERT T1 VALUES ('ccccc','zzzzz') !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT * FROM T1 FOR REUSE !
 
resultcount :                     3
 
Enter command:
EXPLAIN SELECT * FROM ERG,
T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A2 = ERG.A2 AND R2.A2 = ERG.A2 AND R3.A2 = ERG.A2 AND
R4.A2 = ERG.A2 AND R5.A2 = ERG.A2 AND R6.A2 = ERG.A2 AND R7.A2 = ERG.A2
AND  R1.A1 = 'bbbbb' AND R2.A1 = 'bbbbb' AND R3.A1 = 'bbbbb' AND
R4.A1 = 'bbbbb' AND R5.A1 = 'bbbbb' AND R6.A1 = 'bbbbb' AND
R7.A1 = 'bbbbb' !
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
KERN               | ERG                |                    | TABLE SCAN                               |          1
                   | R1                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    |                    | TABLE HASHED                             |
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R2                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R3                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R4                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R5                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
 
OWNER              | TABLENAME          | COLUMN_OR_INDEX    | STRATEGY                                 | PAGECOUNT
-------------------+--------------------+--------------------+------------------------------------------+-----------
                   | R6                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   | R7                 |                    | JOIN VIA MULTIPLE KEY COLUMNS            |          1
                   |                    | A1                 |      (USED KEY COLUMN)                   |
                   |                    | A2                 |      (USED KEY COLUMN)                   |
                   |                    |                    |      NO TEMPORARY RESULTS CREATED        |
                   |                    |                    |      RESULT IS COPIED   , COSTVALUE IS   |          8
 
Enter command:
SELECT * FROM ERG, T1 R1, T1 R2, T1 R3, T1 R4, T1 R5, T1 R6, T1 R7
WHERE R1.A2 = ERG.A2 AND R2.A2 = ERG.A2 AND R3.A2 = ERG.A2 AND
R4.A2 = ERG.A2 AND R5.A2 = ERG.A2 AND R6.A2 = ERG.A2 AND R7.A2 = ERG.A2
AND  R1.A1 = 'bbbbb' AND R2.A1 = 'bbbbb' AND R3.A1 = 'bbbbb' AND
R4.A1 = 'bbbbb' AND R5.A1 = 'bbbbb' AND R6.A1 = 'bbbbb' AND
R7.A1 = 'bbbbb' !
 
resultcount :                     1
 
Enter command:
FETCH !
 
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
A1                :  bbbbb
A2                :  xxxxx
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
 * ----- AUFRAEUMEN !
 
Enter command:
FILE CONNECT ( SUT SUT !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT   ISOLATION LEVEL 1 !
 
Enter command:
DROP USER D !
 
Enter command:
DROP USER P !
 
Enter command:
DROP USER R !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CLEARK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE N99A28 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T1 (A1 CHAR(5), A2 CHAR(5)) !
 
Enter command:
INSERT T1 VALUES ('2aaaa','2bbbb') !
 
Enter command:
INSERT T1 VALUES ('1aaaa','1bbbb') !
 
Enter command:
INSERT T1 VALUES ('4aaaa','4bbbb') !
 
Enter command:
INSERT T1 VALUES ('3aaaa','3bbbb') !
 
Enter command:
INSERT T1 VALUES ('5aaaa','5bbbb') !
 
Enter command:
INSERT T1 VALUES ('7aaaa','7bbbb') !
 
Enter command:
INSERT T1 VALUES ('6aaaa','6bbbb') !
 
Enter command:
INSERT T1 VALUES ('9aaaa','9bbbb') !
 
Enter command:
INSERT T1 VALUES ('8aaaa','8bbbb') !
 
Enter command:
CREATE TABLE T2 (B1 CHAR(5), B2 CHAR(5)) !
 
Enter command:
INSERT T2 VALUES ('aaaaa','bbbbb') !
 
Enter command:
INSERT T2 VALUES ('aaaaa','xxxxx') !
 
Enter command:
CREATE VIEW TV1 (A1, "a2") AS SELECT A1, A2 FROM T1 !
 
Enter command:
CREATE VIEW TV2 (B1, "b2") AS SELECT B1, B2 FROM T2 !
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, B1, "b2" FROM <TV1, TV2> ORDER BY "a2" !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | B1    | b2
------+-------+------
1aaaa | aaaaa | bbbbb
1aaaa | aaaaa | xxxxx
2aaaa | aaaaa | bbbbb
2aaaa | aaaaa | xxxxx
3aaaa | aaaaa | bbbbb
3aaaa | aaaaa | xxxxx
4aaaa | aaaaa | bbbbb
4aaaa | aaaaa | xxxxx
5aaaa | aaaaa | bbbbb
5aaaa | aaaaa | xxxxx
6aaaa | aaaaa | bbbbb
6aaaa | aaaaa | xxxxx
7aaaa | aaaaa | bbbbb
7aaaa | aaaaa | xxxxx
8aaaa | aaaaa | bbbbb
8aaaa | aaaaa | xxxxx
9aaaa | aaaaa | bbbbb
 
A1    | B1    | b2
------+-------+------
9aaaa | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, B1, "b2" FROM <TV2, TV1> ORDER BY "a2" !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | B1    | b2
------+-------+------
1aaaa | aaaaa | bbbbb
1aaaa | aaaaa | xxxxx
2aaaa | aaaaa | bbbbb
2aaaa | aaaaa | xxxxx
3aaaa | aaaaa | bbbbb
3aaaa | aaaaa | xxxxx
4aaaa | aaaaa | bbbbb
4aaaa | aaaaa | xxxxx
5aaaa | aaaaa | bbbbb
5aaaa | aaaaa | xxxxx
6aaaa | aaaaa | bbbbb
6aaaa | aaaaa | xxxxx
7aaaa | aaaaa | bbbbb
7aaaa | aaaaa | xxxxx
8aaaa | aaaaa | bbbbb
8aaaa | aaaaa | xxxxx
9aaaa | aaaaa | bbbbb
 
A1    | B1    | b2
------+-------+------
9aaaa | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, B1, "b2" FROM <TV1, TV2> ORDER BY "a2" DESC !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | B1    | b2
------+-------+------
9aaaa | aaaaa | bbbbb
9aaaa | aaaaa | xxxxx
8aaaa | aaaaa | bbbbb
8aaaa | aaaaa | xxxxx
7aaaa | aaaaa | bbbbb
7aaaa | aaaaa | xxxxx
6aaaa | aaaaa | bbbbb
6aaaa | aaaaa | xxxxx
5aaaa | aaaaa | bbbbb
5aaaa | aaaaa | xxxxx
4aaaa | aaaaa | bbbbb
4aaaa | aaaaa | xxxxx
3aaaa | aaaaa | bbbbb
3aaaa | aaaaa | xxxxx
2aaaa | aaaaa | bbbbb
2aaaa | aaaaa | xxxxx
1aaaa | aaaaa | bbbbb
 
A1    | B1    | b2
------+-------+------
1aaaa | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, B1, "b2" FROM <TV2, TV1> ORDER BY "a2" DESC !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | B1    | b2
------+-------+------
9aaaa | aaaaa | bbbbb
9aaaa | aaaaa | xxxxx
8aaaa | aaaaa | bbbbb
8aaaa | aaaaa | xxxxx
7aaaa | aaaaa | bbbbb
7aaaa | aaaaa | xxxxx
6aaaa | aaaaa | bbbbb
6aaaa | aaaaa | xxxxx
5aaaa | aaaaa | bbbbb
5aaaa | aaaaa | xxxxx
4aaaa | aaaaa | bbbbb
4aaaa | aaaaa | xxxxx
3aaaa | aaaaa | bbbbb
3aaaa | aaaaa | xxxxx
2aaaa | aaaaa | bbbbb
2aaaa | aaaaa | xxxxx
1aaaa | aaaaa | bbbbb
 
A1    | B1    | b2
------+-------+------
1aaaa | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, "a2", B1, "b2" FROM <TV1, TV2> ORDER BY "a2" !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | a2    | B1    | b2
------+-------+-------+------
1aaaa | 1bbbb | aaaaa | bbbbb
1aaaa | 1bbbb | aaaaa | xxxxx
2aaaa | 2bbbb | aaaaa | bbbbb
2aaaa | 2bbbb | aaaaa | xxxxx
3aaaa | 3bbbb | aaaaa | bbbbb
3aaaa | 3bbbb | aaaaa | xxxxx
4aaaa | 4bbbb | aaaaa | bbbbb
4aaaa | 4bbbb | aaaaa | xxxxx
5aaaa | 5bbbb | aaaaa | bbbbb
5aaaa | 5bbbb | aaaaa | xxxxx
6aaaa | 6bbbb | aaaaa | bbbbb
6aaaa | 6bbbb | aaaaa | xxxxx
7aaaa | 7bbbb | aaaaa | bbbbb
7aaaa | 7bbbb | aaaaa | xxxxx
8aaaa | 8bbbb | aaaaa | bbbbb
8aaaa | 8bbbb | aaaaa | xxxxx
9aaaa | 9bbbb | aaaaa | bbbbb
 
A1    | a2    | B1    | b2
------+-------+-------+------
9aaaa | 9bbbb | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, "a2", B1, "b2" FROM <TV2, TV1> ORDER BY "a2" !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | a2    | B1    | b2
------+-------+-------+------
1aaaa | 1bbbb | aaaaa | bbbbb
1aaaa | 1bbbb | aaaaa | xxxxx
2aaaa | 2bbbb | aaaaa | bbbbb
2aaaa | 2bbbb | aaaaa | xxxxx
3aaaa | 3bbbb | aaaaa | bbbbb
3aaaa | 3bbbb | aaaaa | xxxxx
4aaaa | 4bbbb | aaaaa | bbbbb
4aaaa | 4bbbb | aaaaa | xxxxx
5aaaa | 5bbbb | aaaaa | bbbbb
5aaaa | 5bbbb | aaaaa | xxxxx
6aaaa | 6bbbb | aaaaa | bbbbb
6aaaa | 6bbbb | aaaaa | xxxxx
7aaaa | 7bbbb | aaaaa | bbbbb
7aaaa | 7bbbb | aaaaa | xxxxx
8aaaa | 8bbbb | aaaaa | bbbbb
8aaaa | 8bbbb | aaaaa | xxxxx
9aaaa | 9bbbb | aaaaa | bbbbb
 
A1    | a2    | B1    | b2
------+-------+-------+------
9aaaa | 9bbbb | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, "a2", B1, "b2" FROM <TV1, TV2> ORDER BY "a2" DESC !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | a2    | B1    | b2
------+-------+-------+------
9aaaa | 9bbbb | aaaaa | bbbbb
9aaaa | 9bbbb | aaaaa | xxxxx
8aaaa | 8bbbb | aaaaa | bbbbb
8aaaa | 8bbbb | aaaaa | xxxxx
7aaaa | 7bbbb | aaaaa | bbbbb
7aaaa | 7bbbb | aaaaa | xxxxx
6aaaa | 6bbbb | aaaaa | bbbbb
6aaaa | 6bbbb | aaaaa | xxxxx
5aaaa | 5bbbb | aaaaa | bbbbb
5aaaa | 5bbbb | aaaaa | xxxxx
4aaaa | 4bbbb | aaaaa | bbbbb
4aaaa | 4bbbb | aaaaa | xxxxx
3aaaa | 3bbbb | aaaaa | bbbbb
3aaaa | 3bbbb | aaaaa | xxxxx
2aaaa | 2bbbb | aaaaa | bbbbb
2aaaa | 2bbbb | aaaaa | xxxxx
1aaaa | 1bbbb | aaaaa | bbbbb
 
A1    | a2    | B1    | b2
------+-------+-------+------
1aaaa | 1bbbb | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
DECLARE ERG CURSOR FOR
SELECT A1, "a2", B1, "b2" FROM <TV2, TV1> ORDER BY "a2" DESC !
 
resultcount :                    18
 
Enter command:
FETCH ERG!
 
A1    | a2    | B1    | b2
------+-------+-------+------
9aaaa | 9bbbb | aaaaa | bbbbb
9aaaa | 9bbbb | aaaaa | xxxxx
8aaaa | 8bbbb | aaaaa | bbbbb
8aaaa | 8bbbb | aaaaa | xxxxx
7aaaa | 7bbbb | aaaaa | bbbbb
7aaaa | 7bbbb | aaaaa | xxxxx
6aaaa | 6bbbb | aaaaa | bbbbb
6aaaa | 6bbbb | aaaaa | xxxxx
5aaaa | 5bbbb | aaaaa | bbbbb
5aaaa | 5bbbb | aaaaa | xxxxx
4aaaa | 4bbbb | aaaaa | bbbbb
4aaaa | 4bbbb | aaaaa | xxxxx
3aaaa | 3bbbb | aaaaa | bbbbb
3aaaa | 3bbbb | aaaaa | xxxxx
2aaaa | 2bbbb | aaaaa | bbbbb
2aaaa | 2bbbb | aaaaa | xxxxx
1aaaa | 1bbbb | aaaaa | bbbbb
 
A1    | a2    | B1    | b2
------+-------+-------+------
1aaaa | 1bbbb | aaaaa | xxxxx
 
resultcount :                    18
 
Enter command:
ROLLBACK WORK RELEASE !
 
Enter command:
FILE N99A29 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T_REIS (
S1 CHAR (1),
S2 CHAR (1),
S3 CHAR (1),
S4 CHAR (1),
S5 CHAR (1),
S6 CHAR (1),
S7 CHAR (1),
S8 CHAR (1))!
 
Enter command:
CREATE VIEW V_REIS AS SELECT S1 FROM T_REIS
WHERE
   S2 = 'J'
AND (S3 = 'N' AND NOT (S4 IS NULL OR S5 IS NULL))
AND (S3 = 'F' AND NOT (S6 IS NULL OR S7 IS NULL))
WITH CHECK OPTION !
 
Enter command:
 * NEXT CMD WAS INKORREKT WITH 2.4.07 CL 4 !
 
Enter command:
CREATE VIEW V_REIS1 AS SELECT S1 FROM T_REIS
WHERE
    (S3 = 'N' AND NOT (S4 IS NULL OR S5 IS NULL))
AND (S3 = 'F' AND NOT (S6 IS NULL OR S7 IS NULL))
AND  S2 = 'J'
WITH CHECK OPTION !
 
Enter command:
CREATE VIEW V_REIS2 AS SELECT S1 FROM T_REIS
WHERE
    S3 = 'N' AND NOT (S4 IS NULL OR S5 IS NULL)
AND S3 = 'F' AND NOT (S6 IS NULL OR S7 IS NULL)
AND   S2 = 'J'
WITH CHECK OPTION !
 
Enter command:
CREATE VIEW V_REIS3 AS SELECT S1 FROM T_REIS
WHERE
    S3 = 'N' AND S4 IS NOT NULL AND S5 IS NOT NULL
AND S3 = 'F' AND S6 IS NOT NULL AND S7 IS NOT NULL
AND   S2 = 'J'
WITH CHECK OPTION !
 
Enter command:
DROP TABLE T_REIS !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE N99A30 !
 
Enter command:
FILE CONNECT ( KERN TEST!
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
SELECT * FROM DUAL WHERE DUMMY = ((('Hallo''Welt')))!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL WHERE DUMMY IN ('Hallo''Welt')!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 'Hallo''Welt' "Halli""Galli" FROM DUAL!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
Halli"Galli
-----------
Hallo'Welt
 
resultcount :                     1
 
Enter command:
 
CREATE TABLE TT ("Hallo""Welt" CHAR (20))!
 
Enter command:
INSERT INTO TT ("Hallo""Welt") VALUES ('Halli''Hallo')!
 
Enter command:
SELECT "Hallo""Welt" "Halli""Galli" FROM TT!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
Halli"Galli
--------------------
Halli'Hallo
 
resultcount :                     1
 
Enter command:
ROLLBACK WORK!
 
Enter command:
 
 
SELECT * FROM DUAL WHERE DUMMY = ((('Hallo''Du''Welt')))!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM DUAL WHERE DUMMY IN ('Hallo''Du''Welt')!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT 'Hallo''Du''Welt' "Halli""Galli""Walli" FROM DUAL!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
Halli"Galli"Walli
-----------------
Hallo'Du'Welt
 
resultcount :                     1
 
Enter command:
 
CREATE TABLE TT ("Hallo""Du""Welt" CHAR (20))!
 
Enter command:
INSERT INTO TT ("Hallo""Du""Welt") VALUES ('Halli''Hallo''Hollo')!
 
Enter command:
SELECT "Hallo""Du""Welt" "Halli""Galli""Walli" FROM TT!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
Halli"Galli"Walli
--------------------
Halli'Hallo'Hollo
 
resultcount :                     1
 
Enter command:
 
ROLLBACK RELEASE!
 
Enter command:
FILE N99A31 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE OBJ
(OBJTYPE        CHAR(18) ASCII KEY,
 "OWNER"        CHAR(64) ASCII KEY DEFAULT USER,
 NAME1          CHAR(64) ASCII KEY DEFAULT ' ',
 NAME2          CHAR(64) ASCII KEY DEFAULT ' ',
 NAME3          CHAR(18) ASCII KEY DEFAULT ' ',
 SUBTYPE        CHAR(12) ASCII KEY DEFAULT ' ',
 "VERSION"      CHAR(4)  ASCII KEY DEFAULT ' ',
 DATE_1         DATE DEFAULT DATE,
 DATE_2         DATE DEFAULT DATE,
 DATE_3         DATE DEFAULT DATE,
 TIME_1         TIME DEFAULT TIME,
 TIME_2         TIME DEFAULT TIME,
 TIME_3         TIME DEFAULT TIME,
 FIXED3_1       FIXED(3),
 FIXED3_2       FIXED(3),
 FIXED3_3       FIXED(3),
 FIXED3_4       FIXED(3),
 FIXED3_5       FIXED(3),
 FIXED18_1      FIXED(18),
 FIXED18_2      FIXED(18),
 CHAR1_1        CHAR(1) ASCII,
 CHAR1_2        CHAR(1) ASCII,
 CHAR2_1        CHAR(2) ASCII,
 CHAR3_1        CHAR(3) ASCII,
 CHAR3_2        CHAR(3) ASCII,
 CHAR6_1        CHAR(6) ASCII,
 CHAR6_2        CHAR(6) ASCII,
 CHAR8_1        CHAR(8) ASCII,
 CHAR8_2        CHAR(8) ASCII,
 CHAR10_1       CHAR(10) ASCII,
 CHAR10_2       CHAR(10) ASCII,
 CHAR10_3       CHAR(10) ASCII,
 CHAR10_4       CHAR(10) ASCII,
 CHAR10_5       CHAR(10) ASCII,
 CHAR12_1       CHAR(12) ASCII,
 CHAR18_1       CHAR(18) ASCII,
 CHAR40_1       CHAR(40) ASCII,
 CHAR64_1       CHAR(64) ASCII,
 CHAR80_1       CHAR(80) ASCII,
 CHAR80_2       CHAR(80) ASCII,
 CHAR254_1      CHAR(254) ASCII,
 CHAR254_2      CHAR(254) ASCII,
 STRING_1       LONG ASCII,
 STRING_2       LONG ASCII,
 STRING_3       LONG ASCII)!
 
Enter command:
CREATE VIEW OBJ_COLUMN
  (OBJTYPE, "OWNER", TABLENAME, COLUMNNAME, NAME3, SUBTYPE, "VERSION",
  LONGNAME, FRAC, "LENGTH", "MODE", DATATYPE, CODETYPE,
   "DEFAULT", "RANGE", CREATEDATE, CREATETIME, UPDDATE, UPDTIME)
AS SELECT
   OBJTYPE, "OWNER", NAME1, NAME2, NAME3, SUBTYPE, "VERSION",
   CHAR40_1, FIXED3_1, FIXED3_2, CHAR3_1, CHAR10_1, CHAR6_2,
   CHAR254_1, CHAR254_2, DATE_1, TIME_1, DATE_2, TIME_2
FROM OBJ
WHERE OBJTYPE = 'COLUMN'
WITH CHECK OPTION!
 
Enter command:
ALTER TABLE OBJ ADD (XXX CHAR (10), CCC CHAR (20),
XXXXXX CHAR (1))!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
INSERT OBJ_COLUMN
     SET
     OBJTYPE ='COLUMN', OWNER =:AUTHID, TABLENAME =:NAME,
     COLUMNNAME =:CNAME(I), NAME3  =' ', VERSION =' ',
     FRAC =:DEC(I), LENGTH =:LEN(I), MODE =:CMOD(I),
     DATATYPE =:DATATYPE(I), CODETYPE =:CODETYPE(I),
     DEFAULT =:DBDEFAULT(I), RANGE =:DBRANGE(I)!
 
c 64 'elke' c 64 'test' c 64 'firstcol' n 3 0
n 3 8 c 3 'opt' c 10 'char' c 6 'ascii '
c 254
c 254
 
Enter command:
NODATA !
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ALTER TABLE OBJ ADD (NEWCOL CHAR (8), NEWFIXED FIXED (12))!
 
Enter command:
SELECT * FROM OBJ !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
OBJTYPE           :  COLUMN
OWNER             :  elke
NAME1             :  test
NAME2             :  firstcol
NAME3             :
SUBTYPE           :
VERSION           :
DATE_1            :  DATEXXXX
DATE_2            :  DATEXXXX
DATE_3            :  DATEXXXX
TIME_1            :  TIMEYYYY
TIME_2            :  TIMEYYYY
TIME_3            :  TIMEYYYY
FIXED3_1          :     0
FIXED3_2          :     8
FIXED3_3          :  ????
FIXED3_4          :  ????
FIXED3_5          :  ????
FIXED18_1         :  ???????????????????
FIXED18_2         :  ???????????????????
CHAR1_1           :  ?????
CHAR1_2           :  ?????
CHAR2_1           :  ?????
CHAR3_1           :  opt
CHAR3_2           :  ?????
CHAR6_1           :  ?????
CHAR6_2           :  ascii
CHAR8_1           :  ?????
CHAR8_2           :  ?????
CHAR10_1          :  char
CHAR10_2          :  ?????
CHAR10_3          :  ?????
CHAR10_4          :  ?????
CHAR10_5          :  ?????
CHAR12_1          :  ?????
CHAR18_1          :  ?????
CHAR40_1          :  ?????
CHAR64_1          :  ?????
CHAR80_1          :  ?????
CHAR80_2          :  ?????
CHAR254_1         :  ?????
CHAR254_2         :  ?????
STRING_1          :  ?????
STRING_2          :  ?????
STRING_3          :  ?????
XXX               :  ?????
CCC               :  ?????
XXXXXX            :  ?????
NEWCOL            :  ?????
NEWFIXED          :  ?????????????
 
resultcount :                     1
 
Enter command:
DROP TABLE OBJ !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
