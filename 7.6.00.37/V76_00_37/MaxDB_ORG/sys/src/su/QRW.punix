QRW.vdnts
 
Enter command:
FILE XINITDBK!
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
 
 
CREATE TABLE DT1 (A INT, B CHAR(10))!
 
Enter command:
CREATE TABLE DT2 (A INT, C CHAR(10))!
 
Enter command:
 
INSERT INTO DT1 VALUES (1, 'AAA')!
 
Enter command:
INSERT INTO DT1 VALUES (2, 'AAA')!
 
Enter command:
INSERT INTO DT1 VALUES (3, 'AAA')!
 
Enter command:
INSERT INTO DT1 VALUES (1, 'ABC')!
 
Enter command:
INSERT INTO DT1 VALUES (5, 'ABC')!
 
Enter command:
INSERT INTO DT1 VALUES (7, 'ABC')!
 
Enter command:
 
INSERT INTO DT2 VALUES (1, 'BBB')!
 
Enter command:
INSERT INTO DT2 VALUES (1, 'AAA')!
 
Enter command:
INSERT INTO DT2 VALUES (4, 'CCC')!
 
Enter command:
 
 
SELECT /*+QUERYREWRITE_OP*/
       A AS X
       FROM DT1
       ORDER BY B, X DESC !
 
resultcount :                     6
 
Enter command:
FETCH!
 
X
-----------
          3
          2
          1
          7
          5
          1
 
resultcount :                     6
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/
       SUM(A) AS X, B AS Y
       FROM DT1
       WHERE A <> 2
       GROUP BY
B
       HAVING MAX(A) < 4 !
 
resultcount :                     1
 
Enter command:
FETCH!
 
X                                            | Y
---------------------------------------------+-----------
 4.0000000000000000000000000000000000000E+00 | AAA
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/
       MIN(X) AS Z, Y
       FROM (SELECT
                     MAX(B) AS X, SUM(A) AS Y, *
                     FROM DT1
                     WHERE A <> 7
                     GROUP BY A, B)
       WHERE B = 'AAA' !
 
***ERROR  -8017 Column must be group column:Y                              0042
 
Enter command:
FETCH!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/
       A,B FROM DT1
UNION
SELECT
       A,C FROM DT2 !
 
resultcount :                     8
 
Enter command:
FETCH!
 
A           | B
------------+-----------
          1 | AAA
          1 | BBB
          1 | ABC
          2 | AAA
          3 | AAA
          4 | CCC
          5 | ABC
          7 | ABC
 
resultcount :                     8
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/
       A, MAX(C) FROM (SELECT A, MIN(B) AS C FROM DT1 GROUP BY A) GROUP BY A
UNION
SELECT
       A,C FROM DT2
ORDER BY 2 !
 
resultcount :                     7
 
Enter command:
FETCH!
 
A           | EXPRESSION1
------------+------------
          1 | AAA
          2 | AAA
          3 | AAA
          5 | ABC
          7 | ABC
          1 | BBB
          4 | CCC
 
resultcount :                     7
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/
       *
       FROM DT1, DT2
       WHERE DT1.A=DT2.A AND DT1.B<>DT2.C !
 
resultcount :                     3
 
Enter command:
FETCH!
 
A           | B          | A           | C
------------+------------+-------------+-----------
          1 | AAA        |           1 | BBB
          1 | ABC        |           1 | BBB
          1 | ABC        |           1 | AAA
 
resultcount :                     3
 
Enter command:
 
CREATE VIEW VDUAL (A,B) AS SELECT * FROM DUAL, DUAL D2 !
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM (SELECT * FROM DUAL) Y
    WHERE EXISTS (SELECT * FROM DUAL WHERE DUMMY=Y.DUMMY) !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM VDUAL Y
    WHERE EXISTS (SELECT * FROM DUAL WHERE DUMMY=Y.A) !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
 
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM DUAL
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :               unknown
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :               unknown
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM DUAL
    UNION
    SELECT * FROM DUAL
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM (SELECT * FROM DUAL)
UNION
SELECT * FROM DUAL!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
UNION
SELECT * FROM (SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)
UNION
SELECT * FROM DUAL!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
UNION
SELECT * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)
UNION ALL
SELECT * FROM DUAL!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
UNION ALL
SELECT * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 EXISTS (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 EXISTS (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 EXISTS ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY IN (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY IN (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY IN ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ANY (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ANY (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ANY ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ALL (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ALL (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ALL ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM ( SELECT 1 AS A FROM DUAL ) ORDER BY A!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :               unknown
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM ( SELECT 1 AS A FROM DUAL ) GROUP BY A!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :               unknown
 
Enter command:
 
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
  ( SELECT (SELECT DUMMY FROM DUAL) AS Z FROM DUAL ) ORDER BY Z!
 
resultcount :                     1
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
  ( SELECT (SELECT DUMMY FROM DUAL) AS Z FROM DUAL ) GROUP BY Z!
 
resultcount :                     1
 
Enter command:
 
CREATE TABLE DT3 ( A INT )!
 
Enter command:
INSERT INTO DT3 VALUES (7)!
 
Enter command:
INSERT INTO DT3 VALUES (1)!
 
Enter command:
INSERT INTO DT3 VALUES (4)!
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
  ( SELECT (SELECT A FROM DT3 WHERE A=X.A) AS Z FROM DT3 X ) ORDER BY Z!
 
resultcount :                     3
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ * FROM
  ( SELECT (SELECT A FROM DT3 WHERE A=X.A) AS Z FROM DT3 X ) GROUP BY Z!
 
resultcount :                     3
 
Enter command:
 
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM DUAL
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :               unknown
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :               unknown
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM DUAL
    UNION
    SELECT * FROM DUAL
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM (SELECT * FROM DUAL)
UNION
SELECT * FROM DUAL!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
UNION
SELECT * FROM (SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)
UNION
SELECT * FROM DUAL!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
UNION
SELECT * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)
UNION ALL
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
UNION ALL
SELECT * FROM
(
    SELECT * FROM (SELECT * FROM DUAL)
    UNION
    SELECT * FROM (SELECT * FROM DUAL)
)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     2
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 EXISTS (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 EXISTS (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 EXISTS ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY IN (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY IN (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY IN ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ANY (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ANY (SELECT * FROM (SELECT * FROM DUAL UNION SELECT * FROM DUAL))!
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ANY ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ALL (SELECT * FROM (SELECT * FROM DUAL))!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ALL ((SELECT * FROM (SELECT * FROM DUAL)) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
DECLARE C CURSOR FOR
SELECT /*+QUERYREWRITE_OP*/ * FROM DUAL
 WHERE
 DUMMY = ALL (SELECT * FROM (SELECT * FROM DUAL) UNION SELECT * FROM DUAL)!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
 
DROP TABLE DT2!
 
Enter command:
 
CREATE TABLE DT2 ( A INT, B INT )!
 
Enter command:
 
INSERT INTO DT2 VALUES ( 7, 13 )!
 
Enter command:
 
 
DROP TABLE XYZ!
 
***ERROR  -4004 Unknown table name:XYZ                                     0012
 
Enter command:
CREATE TABLE XYZ AS
   SELECT /*+QUERYREWRITE_OP*/ X, 2*Y FROM ( SELECT 2*A X, A Y FROM DT2 )!
 
Enter command:
SELECT * FROM XYZ!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
X            | EXPRESSION1
-------------+-------------
          14 |           14
 
resultcount :                     1
 
Enter command:
 
DROP TABLE XYZ!
 
Enter command:
CREATE TABLE XYZ LIKE DT2!
 
Enter command:
INSERT INTO XYZ
    SELECT /*+QUERYREWRITE_OP*/ X, 2*Y FROM ( SELECT 2*A X, A Y FROM DT2 )!
 
Enter command:
SELECT * FROM XYZ!
 
resultcount :               unknown
 
Enter command:
FETCH!
 
A           | B
------------+------------
         14 |          14
 
resultcount :                     1
 
Enter command:
 
 
DROP TABLE XYZ!
 
Enter command:
CREATE TABLE XYZ AS
   SELECT /*+QUERYREWRITE_NO*/ * FROM DOMAIN.TABLES!
 
Enter command:
 
DROP TABLE XYZ!
 
Enter command:
CREATE TABLE XYZ AS
   SELECT /*+QUERYREWRITE_OP*/ * FROM DOMAIN.TABLES!
 
Enter command:
 
 
DROP TABLE XYZ!
 
Enter command:
CREATE TABLE XYZ LIKE DOMAIN.TABLES!
 
Enter command:
INSERT INTO XYZ SELECT /*+QUERYREWRITE_NO*/ * FROM DOMAIN.TABLES!
 
***ERROR  -8006 Data types must be compatible:COMMENT                      0001
 
Enter command:
 
DROP TABLE XYZ!
 
Enter command:
CREATE TABLE XYZ LIKE DOMAIN.TABLES!
 
Enter command:
INSERT INTO XYZ SELECT /*+QUERYREWRITE_OP*/ * FROM DOMAIN.TABLES!
 
***ERROR  -8006 Data types must be compatible:COMMENT                      0001
 
Enter command:
 
 
CREATE TABLE T1 ( T1XC1 CHAR(20),
                  T1XC2 FIXED(10),
                  T1XC3 CHAR(10) ASCII,
                  T1XC4 FIXED(10,5),
                  T1XC5 FLOAT(10),
                  T1XC6 FIXED(18) )!
 
Enter command:
 
CREATE TABLE T2 ( T2XC1 FIXED(5) KEY,
                  T2XC2 CHAR(10) ASCII,
                  T2XC3 CHAR(15) ASCII,
                  T2XC4 FLOAT(5),
                  T2XC5 FIXED(5) )!
 
Enter command:
 
CREATE VIEW VX AS
SELECT SUM ( T1XC4 ), AVG ( T1XC4), COUNT(T1XC1)
    FROM T1,T2!
 
Enter command:
 
SELECT /*+QUERYREWRITE_OP*/ EXPRESSION1, EXPRESSION2, EXPRESSION3 + 1
   FROM VX!
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
resultcount :                     1
 
Enter command:
 
CREATE TABLE T3 AS
SELECT /*+QUERYREWRITE_OP*/ EXPRESSION1, EXPRESSION2, EXPRESSION3 + 1
   FROM VX!
 
***ERROR  -6001 Duplicate column name                                      0001
 
Enter command:
 
CREATE TABLE T3 LIKE VX!
 
Enter command:
 
INSERT INTO T3
   SELECT /*+QUERYREWRITE_NO*/ EXPRESSION1, EXPRESSION2, EXPRESSION3 + 1
      FROM VX!
 
Enter command:
INSERT INTO T3
   SELECT /*+QUERYREWRITE_OP*/ EXPRESSION1, EXPRESSION2, EXPRESSION3 + 1
      FROM VX!
 
Enter command:
 
INSERT INTO T3 VALUES
   ((SELECT /*+QUERYREWRITE_OP*/ EXPRESSION1, EXPRESSION2, EXPRESSION3 + 1
      FROM VX))!
 
***ERROR  -2013 Select column list too long                                0066
 
Enter command:
 
SELECT COUNT(*) FROM T3!
 
resultcount :                     1
 
Enter command:
 
 
DROP VIEW VDUAL!
 
Enter command:
DROP VIEW VX!
 
Enter command:
DROP TABLE DT1!
 
Enter command:
DROP TABLE DT2!
 
Enter command:
DROP TABLE DT3!
 
Enter command:
DROP TABLE XYZ!
 
Enter command:
DROP TABLE T1!
 
Enter command:
DROP TABLE T2!
 
Enter command:
DROP TABLE T3!
 
Enter command:
 
 
COMMIT WORK RELEASE!
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
