#! python
#
#    ========== licence begin  GPL
#    Copyright (c) 2000-2005 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end

import sys
pdiff = sys.argv [1]

from undiffLib import Undiffer, addition, change

def SYSDD80undiff (undiffer):

    undiffer.removeAll (change + """
< PROCESSORTYPE     :  .+
< ADDRESSINGMODE    :   32
---
> PROCESSORTYPE     :  .+
> ADDRESSINGMODE    :   64""")

    undiffer.removeAll (change + """
< PROCESSORTYPE     :  .+
---
> PROCESSORTYPE     :  .+""")

    undiffer.removeAll (change + """
< ADDRESSINGMODE    :   32
---
> ADDRESSINGMODE    :   64""")

    undiffer.removeAll (change + """
< ACCESSCOUNT       :  .+
---
> ACCESSCOUNT       :  .+""")

    undiffer.removeAll (change + """
< SUCCESSFULACCES\.\.\.:  .+
---
> SUCCESSFULACCES\.\.\.:  .+""")

    undiffer.removeAll (change + """
< UNSUCCESSFULACC\.\.\.:  .+
---
> UNSUCCESSFULACC\.\.\.:  .+""")

    undiffer.removeAll (change + """
< USEDSIZENOTONVO...:                   .+
< USEDPERMANENTSIZE :                   .+
---
> USEDSIZENOTONVO...:                   .+
> USEDPERMANENTSIZE :                   .+""")

    undiffer.removeAll (change + """
< USEDSIZENOTONVO...:                   .+
---
> USEDSIZENOTONVO...:                   .+""")

    undiffer.removeAll (change + """
< USEDSIZE          :  .+
< USEDSIZEPERCENTAGE:  .+
< MAXUSEDSIZE       :  .+
---
> USEDSIZE          :  .+
> USEDSIZEPERCENTAGE:  .+
> MAXUSEDSIZE       :  .+""")

    undiffer.removeAll (change + """
< USEDSIZE          :  .+
< USEDSIZEPERCENTAGE:  .+
---
> USEDSIZE          :  .+
> USEDSIZEPERCENTAGE:  .+""")

    undiffer.removeAll (change + """
< USEDSIZE          :  .+
< MAXUSEDSIZE       :  .+
---
> USEDSIZE          :  .+
> MAXUSEDSIZE       :  .+""")

    undiffer.removeAll (change + """
< USEDSIZE          :  .+
---
> USEDSIZE          :  .+""")

    undiffer.removeAll (change + """
< MAXUSEDSIZE       :                   \d+
---
> MAXUSEDSIZE       :                   \d+""")

    undiffer.removeAll (change + """
< USEDSIZEONVOLUMES :  .+
---
> USEDSIZEONVOLUMES :  .+""")

    undiffer.removeAll (change + """
< USEDSIZENOTONVO\.\.\.:                   \s+\d+
---
> USEDSIZENOTONVO\.\.\.:                   \s+\d+""")

    undiffer.removeAll (change + """
< USEDPERMANENTSIZE :  .+
---
> USEDPERMANENTSIZE :  .+""")

    undiffer.removeAll (change + """
< MAXUSEDSIZEPERC\.\.\.:  .+
---
> MAXUSEDSIZEPERC\.\.\.:  .+""")

    undiffer.removeAll (change + """
< MAXUSEDPERMANEN\.\.\.:  .+
---
> MAXUSEDPERMANEN\.\.\.:  .+""")

    undiffer.removeAll (change + """
< PLANSIZE          :  .+
---
> PLANSIZE          :  .+""")

    undiffer.removeAll (change + """
<      4    \|      2            \|        3711        \|        5638
---
>      \d    \|      \d            \|    \s+\d+        \|    \s+\d+""")

    undiffer.removeAll (change + """
<      4    \|      2            \|        3711        \|        5638
---
>      \d    \| \?\?\?\?\?\?            \|    \s+\d+        \|    \s+\d+""")

    undiffer.removeAll (change + """
< PROCESSUSEDSYST\.\.\.:            0
---
> PROCESSUSEDSYST\.\.\.:            1""")

    undiffer.removeAll (change + """
< CATALOGCACHEUSE\.\.\.:          160
---
> CATALOGCACHEUSE\.\.\.:          128""")

    undiffer.removeAll (change + """
< CATALOGCACHEUSE\.\.\.:          128
---
> CATALOGCACHEUSE\.\.\.:          160""")

    undiffer.removeAll (change + """
< DATABASEIDENTIFIER:  .+
---
> DATABASEIDENTIFIER:  .+""")

    undiffer.removeAll (change + """
< THREADID          :  .+
---
> THREADID          :  .+""")

    undiffer.removeAll (change + """
< READERWRITERLOC\.\.\.:  .+
---
> READERWRITERLOC\.\.\.:  .+""")

    undiffer.removeAll (change + """
< INVALIDHANDLECOUNT:            .
---
> INVALIDHANDLECOUNT:            .""")

    undiffer.removeAll (change + """
< TRANSACTIONID     :       \s+\d+
---
> TRANSACTIONID     :       \s+\d+""")

    undiffer.removeAll (change + """
< TRANSACTIONCOUNT  :       \s+\d+
---
> TRANSACTIONCOUNT  :       \s+\d+""")

    undiffer.removeAll (change + """
< SPINLOCKCOLLISI\.\.\.:                      .
---
> SPINLOCKCOLLISI\.\.\.:                      .""")

    undiffer.removeAll (change + """
< MAXCOLLISIONCOUNT :                      .
< MINCOLLISIONCOUNT :                      .
< AVGCOLLISIONCOUNT :                      .
---
> MAXCOLLISIONCOUNT :                      .
> MINCOLLISIONCOUNT :                      .
> AVGCOLLISIONCOUNT :                      .""")

    undiffer.removeAll (change + """
< MAXUSEDTRANSACT\.\.\.:               ...
---
> MAXUSEDTRANSACT\.\.\.:               ...""")

    undiffer.removeAll (change + """
< WRITETRANSACTIO\.\.\.:           ..
---
> WRITETRANSACTIO\.\.\.:           ..""")

    undiffer.removeAll (change + """
< WRITETRANSACTIONID:               ...
---
> WRITETRANSACTIONID:               ...""")

    undiffer.removeAll (change + """
< IDLETIME          :            \s+\d+
---
> IDLETIME          :            \s+\d+""")

    undiffer.removeAll (change + """
< IOWAITTIME        :            \s+\d+
---
> IOWAITTIME        :            \s+\d+""")

    undiffer.removeAll (change + """
< IDLETIME          :            \s+\d+
< IOWAITCOUNT       :            \s+\d+
< IOWAITTIME        :            \s+\d+
---
> IDLETIME          :            \s+\d+
> IOWAITCOUNT       :            \s+\d+
> IOWAITTIME        :            \s+\d+""")

    undiffer.removeAll (change + """
< USEDSYSTEMTIME    :            \s+\d+
---
> USEDSYSTEMTIME    :            \s+\d+""")

    undiffer.removeAll (change + """
< IOWAITTIME        :            \s+\d+
< USEDSYSTEMTIME    :            \s+\d+
---
> IOWAITTIME        :            \s+\d+
> USEDSYSTEMTIME    :            \s+\d+""")

    undiffer.removeAll (change + """
< USEDUSERTIME      :            \s+\d+
---
> USEDUSERTIME      :            \s+\d+""")

    undiffer.removeAll (change + """
< USEDSYSTEMTIME    :            \s+\d+
< USEDUSERTIME      :            \s+\d+
---
> USEDSYSTEMTIME    :            \s+\d+
> USEDUSERTIME      :            \s+\d+""")

    undiffer.removeAll (change + """
< USEDSYSTEMTIME    :            \s+\d+
< USEDUSERTIME      :            \s+\d+
---
> USEDSYSTEMTIME    :  \?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?
> USEDUSERTIME      :  \?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?""")

    undiffer.removeAll (change + """
< IDLETIME          :            \s+\d+
< IOWAITCOUNT       :            \s+\d+
< IOWAITTIME        :            \s+\d+
< USEDSYSTEMTIME    :            \s+\d+
< USEDUSERTIME      :            \s+\d+
---
> IDLETIME          :            \s+\d+
> IOWAITCOUNT       :            \s+\d+
> IOWAITTIME        :            \s+\d+
> USEDSYSTEMTIME    :  \?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?
> USEDUSERTIME      :  \?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?""")

    undiffer.removeAll (change + """
< IOWAITTIME        :            \s+\d+
< USEDSYSTEMTIME    :            \s+\d+
< USEDUSERTIME      :            \s+\d+
---
> IOWAITTIME        :            \s+\d+
> USEDSYSTEMTIME    :  \?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?
> USEDUSERTIME      :  \?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?\?""")

    undiffer.removeAll (change + """
< IOWAITTIME        :            \s+\d+
< USEDSYSTEMTIME    :            \s+\d+
< USEDUSERTIME      :            \s+\d+
---
> IOWAITTIME        :            \s+\d+
> USEDSYSTEMTIME    :            \s+\d+
> USEDUSERTIME      :            \s+\d+""")

    undiffer.removeAll (change + """
< IDLETIME          :            \s+\d+
< IOWAITCOUNT       :            \s+\d+
< IOWAITTIME        :            \s+\d+
< USEDSYSTEMTIME    :            \s+\d+
---
> IDLETIME          :            \s+\d+
> IOWAITCOUNT       :            \s+\d+
> IOWAITTIME        :            \s+\d+
> USEDSYSTEMTIME    :            \s+\d+""")

    undiffer.removeAll (change + """
< IDLETIME          :            \s+\d+
< IOWAITCOUNT       :            \s+\d+
< IOWAITTIME        :            \s+\d+
< USEDSYSTEMTIME    :            \s+\d+
< USEDUSERTIME      :            \s+\d+
---
> IDLETIME          :            \s+\d+
> IOWAITCOUNT       :            \s+\d+
> IOWAITTIME        :            \s+\d+
> USEDSYSTEMTIME    :            \s+\d+
> USEDUSERTIME      :            \s+\d+""")

    undiffer.removeAll (change + """
< IOPAGECOUNT       :                    2..
---
> IOPAGECOUNT       :                    2..""")

    undiffer.removeAll (change + """
< IOPAGECOUNT       :                    3..
---
> IOPAGECOUNT       :                    3..""")

    undiffer.removeAll (change + """
< IOCOUNT           :                     \d\d
< IOPAGECOUNT       :                    \d\d\d
---
> IOCOUNT           :                     \d\d
> IOPAGECOUNT       :                    \d\d\d""")

    undiffer.removeAll (change + """
< ENTERLRU          :                  \s+\d+
< REMOVELRU         :                  \s+\d+
---
> ENTERLRU          :                  \s+\d+
> REMOVELRU         :                  \s+\d+""")

    undiffer.removeAll (change + """
< CHANGEDDATASIZE   :                  \s+\d+
---
> CHANGEDDATASIZE   :                  \s+\d+""")

    undiffer.removeAll (change + """
< READCOUNT         :                  \s+\d+
< READPAGECOUNT     :                  \s+\d+
---
> READCOUNT         :                  \s+\d+
> READPAGECOUNT     :                  \s+\d+""")

    undiffer.removeAll (change + """
< QUEUEINSERTCOUNT  :                     \d\d
---
> QUEUEINSERTCOUNT  :                     \d\d""")

    undiffer.removeAll (change + """
< USABLESIZE        :                   5...
---
> USABLESIZE        :                   5...""")

    undiffer.removeAll (change + """
< USABLESIZE        :                   5...
< USEDSIZE          :                   1...
< MAXUSEDSIZE       :                   1...
---
> USABLESIZE        :                   5...
> USEDSIZE          :                   1...
> MAXUSEDSIZE       :                   1...""")

    undiffer.removeAll (change + """
< DATACACHEUSEDSIZE :                   5...
---
> DATACACHEUSEDSIZE :                   5...""")

    undiffer.removeAll (change + """
< BLOCKALLOCATORU\.\.\.:                    ...
---
> BLOCKALLOCATORU\.\.\.:                    ...""")

    undiffer.removeAll (change + """
< MAXPENDINGIOCOUNT :       .
---
> MAXPENDINGIOCOUNT :       .""")

    undiffer.removeAll (change + """
< WRITECOUNT        :                  \s+\d+
< WRITEPAGECOUNT    :                  \s+\d+
---
> WRITECOUNT        :                  \s+\d+
> WRITEPAGECOUNT    :                  \s+\d+""")

    undiffer.removeAll (change + """
< WRITEPAGECOUNT    :                  \s+\d+
---
> WRITEPAGECOUNT    :                  \s+\d+""")

    undiffer.removeAll (change + """
< WRITECOUNT        :                  \s+\d+
---
> WRITECOUNT        :                  \s+\d+""")

    undiffer.removeAll (change + """
< MAXPENDINGIOCOUNT :       .
---
> MAXPENDINGIOCOUNT :       .""")

    undiffer.removeAll (change + """
< NONEXCLUSIVEACC\.\.\.:                  \s+\d+
---
> NONEXCLUSIVEACC\.\.\.:                  \s+\d+""")

    undiffer.removeAll (change + """
< MAXLOCKCOUNT      :                  \s+\d+
< MINLOCKCOUNT      :                  \s+\d+
< AVGLOCKCOUNT      :                  \s+\d+
---
> MAXLOCKCOUNT      :                  \s+\d+
> MINLOCKCOUNT      :                  \s+\d+
> AVGLOCKCOUNT      :                  \s+\d+""")

    undiffer.removeAll (change + """
< MAXLOCKCOUNT      :                   20..
< MINLOCKCOUNT      :                   20..
< AVGLOCKCOUNT      :                   20..
< MAXCOLLISIONCOUNT :                      0
< MINCOLLISIONCOUNT :                      0
< AVGCOLLISIONCOUNT :                      0
---
> MAXLOCKCOUNT      :                   20..
> MINLOCKCOUNT      :                   20..
> AVGLOCKCOUNT      :                   20..
> MAXCOLLISIONCOUNT :                      1
> MINCOLLISIONCOUNT :                      1
> AVGCOLLISIONCOUNT :                      1""")

    undiffer.removeAll (change + """
< MAXUSEDRUNQUEUE\.\.\.: +\d+
---
> MAXUSEDRUNQUEUE\.\.\.: +\d+""")

    undiffer.removeAll (change + """
< HISTORYDATASIZE   :                  \s+\d+
---
> HISTORYDATASIZE   :                  \s+\d+""")

    undiffer.removeAll (change + """
< HISTORYROOT       :            1
< HISTORYLAST       :            1
---
> HISTORYROOT       :            3
> HISTORYLAST       :            3""")

    undiffer.removeAll (change + """
< HISTORYROOT       :           1\d
< HISTORYLAST       :           1\d
---
> HISTORYROOT       :           1\d
> HISTORYLAST       :           2\d""")

    undiffer.removeAll (change + """
<          .. \| YES        \| YES        \| SAVEPOINT COORDINATOR
---
>          .. \| YES        \| YES        \| SAVEPOINT COORDINATOR""")

    undiffer.removeAll (change + """
< HITRATE           :   100
---
> HITRATE           :    99""")

    undiffer.removeAll (change + """
< HITRATE           :    99
---
> HITRATE           :   100""")

    undiffer.removeAll (change + """
< HITRATE           :    6.
---
> HITRATE           :    6.""")

    undiffer.removeAll (change + """
< HITRATE           :    6.
---
> HITRATE           :    7.""")

    undiffer.removeAll (change + """
< QUEUEMAXUSED      :      32
---
> QUEUEMAXUSED      :      24""")

    undiffer.removeAll (change + """
< WAITCOUNT         :                      0
---
> WAITCOUNT         :                     ..""")

    undiffer.removeAll (change + """
< COLLISIONRATE     :            0
---
> COLLISIONRATE     :           ..""")

    undiffer.removeAll (change + """
< KERNELPROCESSID   :                    PID    
---
> KERNELPROCESSID   :               ........""")

    undiffer.removeAll (change + """
< \*\*\*ERROR    100 Row not found                                              0001
---
> resultcount :                     1""")

    undiffer.removeAll (change + """
< \*\*\*ERROR    100 Row not found                                              0001
---
> RESETDATE         :  TIMESTAMPXXXXXXXXXXX
> VOLUMEID          :            .
> READCOUNT         :                     ..
> READPAGECOUNT     :                     ..
> READTIME          :                     ..
> READTIMEMEASUREMENTCOUNT
> READTIMEMEASURE...:                      .
> WRITECOUNT        :                     ..
> WRITEPAGECOUNT    :                     ..
> WRITETIME         :                      .
> WRITETIMEMEASUREMENTCOUNT
> WRITETIMEMEASUR...:                      .
> PENDINGIOCOUNT    :       .
> MAXPENDINGIOCOUNT :       .
> PATH              :  DATADEV
>
> resultcount :                     1
>  """)

    undiffer.removeAll (change + """
< \*\*\*ERROR    100 Row not found                                              0001
---
> VOLUMEID          :            .
> READCOUNT         :                     ..
> READPAGECOUNT     :                     ..
> READTIME          :                     ..
> READTIMEMEASUREMENTCOUNT
> READTIMEMEASURE...:                      .
> WRITECOUNT        :                     ..
> WRITEPAGECOUNT    :                     ..
> WRITETIME         :                      .
> WRITETIMEMEASUREMENTCOUNT
> WRITETIMEMEASUR...:                      .
> PENDINGIOCOUNT    :       .
> MAXPENDINGIOCOUNT :       .
> PATH              :  DATADEV
>
> resultcount :                     1
>  """)

    undiffer.removeAll (change + """
< \*\*\*ERROR    100 Row not found                                              0001
---
> RESETDATE         :  TIMESTAMPXXXXXXXXXXX
> VOLUMEID          :            .
> READCOUNT         :                     ..
> READPAGECOUNT     :                     ..
> READTIME          :                     ..
> READTIMEMEASUREMENTCOUNT
> READTIMEMEASURE...:                      .
> WRITECOUNT        :                     ..
> WRITEPAGECOUNT    :                     ..
> WRITETIME         :                      .
> WRITETIMEMEASUREMENTCOUNT
> WRITETIMEMEASUR...:                      .
> PENDINGIOCOUNT    :       .
> MAXPENDINGIOCOUNT :       .
> PATH              :  DATADEV""")

    undiffer.removeAll (addition + """
> resultcount :                     1
>  """)

    undiffer.removeAll (change + """
< \*\*\*ERROR    100 Row not found                                              0001
---
> VOLUMEID          :            .
> READCOUNT         :                     ..
> READPAGECOUNT     :                     ..
> READTIME          :                     ..
> READTIMEMEASUREMENTCOUNT
> READTIMEMEASURE...:                      .
> WRITECOUNT        :                     ..
> WRITEPAGECOUNT    :                     ..
> WRITETIME         :                      .
> WRITETIMEMEASUREMENTCOUNT
> WRITETIMEMEASUR...:                      .
> PENDINGIOCOUNT    :       .
> MAXPENDINGIOCOUNT :       .
> PATH              :  DATADEV""")

    undiffer.removeAll (addition + """
> resultcount :                     1
>  """)

    undiffer.removeAll (change + """
< QUEUEMAXUSED      :      24
---
> QUEUEMAXUSED      :      16""")

    undiffer.write ()

Undiffer (pdiff).runSafe (SYSDD80undiff)


