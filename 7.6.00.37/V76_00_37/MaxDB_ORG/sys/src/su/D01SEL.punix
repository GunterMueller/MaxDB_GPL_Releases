D01SEL.vdnts
 
Enter command:
FILE XINITDBK!
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT (KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TAB ( S1 FIXED(5), S2 FIXED(3),S3 FIXED(3),S4 CHAR(5))!
 
Enter command:
INSERT INTO TAB VALUES (5,1,5,'bla')!
 
Enter command:
INSERT INTO TAB VALUES (0,2,5,'arg')!
 
Enter command:
INSERT INTO TAB VALUES (3,3,5,'ist')!
 
Enter command:
INSERT INTO TAB VALUES (4,4,5,'soll')!
 
Enter command:
INSERT INTO TAB VALUES (2,5,5,'wer')!
 
Enter command:
INSERT INTO TAB VALUES (1,6,5,'mein')!
 
Enter command:
CREATE TABLE TAB1 (S1 FIXED (5),S2 CHAR(5))!
 
Enter command:
INSERT INTO TAB1 VALUES (5,'ente')!
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE D01MODE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
INSERT TAB1 VALUES (-7, 'zaz') !
 
Enter command:
INSERT TAB1 VALUES (1, 'aza') !
 
Enter command:
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S1     | S2
-------+------
     5 | ente
    -7 | zaz
     1 | aza
 
resultcount :                     3
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01MODE1 ( ANSI !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ANSI !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ANSI ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
    -7 | zaz
     1 | aza
     5 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S2 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S1 + 5 !
 
*SQLSTATE 42000 Invalid keyword or missing delimiter                       0053
 
Enter command:
FETCH C INTO :A, :B !
 
*SQLSTATE 24000 Unknown result table                                       0001
 
Enter command:
CLOSE C !
 
*SQLSTATE 24000 Unknown result table                                       0007
 
Enter command:
DECLARE C CURSOR FOR SELECT S1 + 5 R, S2 FROM TAB1 ORDER BY R !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
R       | S2
--------+------
     -2 | zaz
      6 | aza
     10 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01MODE1 ( DB2 !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE DB2 !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE DB2 ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
    -7 | zaz
     1 | aza
     5 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S2 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S1 + 5 !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0053
 
Enter command:
FETCH C INTO :A, :B !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
CLOSE C !
 
***ERROR  -4000 Unknown result table                                       0007
 
Enter command:
DECLARE C CURSOR FOR SELECT S1 + 5 R, S2 FROM TAB1 ORDER BY R !
 
***ERROR  -5015 Missing keyword:FROM                                       0036
 
Enter command:
FETCH C INTO :A, :B !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
CLOSE C !
 
***ERROR  -4000 Unknown result table                                       0007
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01MODE1 ( ORACLE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
    -7 | zaz
     1 | aza
     5 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S2 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S1 + 5 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
    -7 | zaz
     1 | aza
     5 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT S1 + 5 R, S2 FROM TAB1 ORDER BY R !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
R       | S2
--------+------
     -2 | zaz
      6 | aza
     10 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01MODE1 ( INTERNAL !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE INTERNAL !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE INTERNAL ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
    -7 | zaz
     1 | aza
     5 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S2 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S1 + 5 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
    -7 | zaz
     1 | aza
     5 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT S1 + 5 R, S2 FROM TAB1 ORDER BY R !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
R       | S2
--------+------
     -2 | zaz
      6 | aza
     10 | ente
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 * NUR FUER SQL-DB UND ORACLE FUNKTIONIERT 'ORDER BY <expr>'!
 
Enter command:
FILE D01MODE2 ( ORACLE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S1 * -1 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     5 | ente
     1 | aza
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
 * ... BY  2 SORTIERT NACH SPALTE 2 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 2 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
 * ... BY  '2' (NICHT SPALTE 2) IST SINNLOS; ES WIRD NICHT SORTIERT !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1+1 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     5 | ente
    -7 | zaz
     1 | aza
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
 * ... SORTIEREN NUR NACH DER 2.SPALTE !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1+1, 2 !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY SUBSTR(S2, 2, 1) DESC !
 
resultcount :                     0
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01MODE2 ( INTERNAL !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE INTERNAL !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE INTERNAL ISOLATION LEVEL 1 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY S1 * -1 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     5 | ente
     1 | aza
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
 * ... BY  2 SORTIERT NACH SPALTE 2 !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 2 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
 * ... BY  '2' (NICHT SPALTE 2) IST SINNLOS; ES WIRD NICHT SORTIERT !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1+1 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     5 | ente
    -7 | zaz
     1 | aza
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
 * ... SORTIEREN NUR NACH DER 2.SPALTE !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY 1+1, 2 !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
DECLARE C CURSOR FOR SELECT * FROM TAB1 ORDER BY SUBSTR(S2, 2, 1) DESC !
 
resultcount :                     3
 
Enter command:
FETCH C INTO :A, :B !
 
S1     | S2
-------+------
     1 | aza
     5 | ente
    -7 | zaz
 
resultcount :                     3
 
Enter command:
CLOSE C !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT  ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
DELETE FROM TAB1 WHERE S1 <> 5 !
 
resultcount :                     2
 
Enter command:
SELECT * FROM TAB1 !
 
resultcount :               unknown
 
Enter command:
FETCH !
 
S1     | S2
-------+------
     5 | ente
 
resultcount :                     1
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01ORDER !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM TAB ORDER BY S1!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     0 |    2 |    5 | arg
     1 |    6 |    5 | mein
     2 |    5 |    5 | wer
     3 |    3 |    5 | ist
     4 |    4 |    5 | soll
     5 |    1 |    5 | bla
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB ORDER BY S1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     5 |    1 |    5 | bla
     4 |    4 |    5 | soll
     3 |    3 |    5 | ist
     2 |    5 |    5 | wer
     1 |    6 |    5 | mein
     0 |    2 |    5 | arg
 
resultcount :                     6
 
Enter command:
SELECT S2 FROM TAB ORDER BY S1!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S2
----
   2
   6
   5
   3
   4
   1
 
resultcount :                     6
 
Enter command:
SELECT S2 FROM TAB ORDER BY S1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S2
----
   1
   4
   3
   5
   6
   2
 
resultcount :                     6
 
Enter command:
SELECT *,S1*S2 FROM TAB ORDER BY S1*S2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | EXPRESSION1
-------+------+------+-------+------------
     0 |    2 |    5 | arg   |         0
     5 |    1 |    5 | bla   |         5
     1 |    6 |    5 | mein  |         6
     3 |    3 |    5 | ist   |         9
     2 |    5 |    5 | wer   |        10
     4 |    4 |    5 | soll  |        16
 
resultcount :                     6
 
Enter command:
SELECT *,S1*S2 FROM TAB ORDER BY S1*S2 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | EXPRESSION1
-------+------+------+-------+------------
     4 |    4 |    5 | soll  |        16
     2 |    5 |    5 | wer   |        10
     3 |    3 |    5 | ist   |         9
     1 |    6 |    5 | mein  |         6
     5 |    1 |    5 | bla   |         5
     0 |    2 |    5 | arg   |         0
 
resultcount :                     6
 
Enter command:
SELECT S4 FROM TAB ORDER BY SUBSTR(S4,2,2)!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S4
-----
mein
wer
bla
soll
arg
ist
 
resultcount :                     6
 
Enter command:
SELECT S4 FROM TAB ORDER BY SUBSTR(S4,2,2) DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S4
-----
ist
arg
soll
bla
wer
mein
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB ORDER BY 1!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     0 |    2 |    5 | arg
     1 |    6 |    5 | mein
     2 |    5 |    5 | wer
     3 |    3 |    5 | ist
     4 |    4 |    5 | soll
     5 |    1 |    5 | bla
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB ORDER BY 1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     5 |    1 |    5 | bla
     4 |    4 |    5 | soll
     3 |    3 |    5 | ist
     2 |    5 |    5 | wer
     1 |    6 |    5 | mein
     0 |    2 |    5 | arg
 
resultcount :                     6
 
Enter command:
SELECT S2 FROM TAB ORDER BY S1 MOD S3!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S2
----
   1
   2
   6
   5
   3
   4
 
resultcount :                     6
 
Enter command:
SELECT S2 FROM TAB ORDER BY S1 MOD S3 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S2
----
   4
   3
   5
   6
   1
   2
 
resultcount :                     6
 
Enter command:
SELECT S1,S3,S1 MOD S2 FROM TAB ORDER BY POWER(S3,2),S1 MOD S2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S3   | EXPRESSION1
-------+------+------------
     5 |    5 |      0
     0 |    5 |      0
     3 |    5 |      0
     4 |    5 |      0
     1 |    5 |      1
     2 |    5 |      2
 
resultcount :                     6
 
Enter command:
SELECT S1,S3,S1 MOD S2 FROM TAB ORDER BY POWER(S3,2),S1 MOD S2 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S3   | EXPRESSION1
-------+------+------------
     2 |    5 |      2
     1 |    5 |      1
     5 |    5 |      0
     0 |    5 |      0
     3 |    5 |      0
     4 |    5 |      0
 
resultcount :                     6
 
Enter command:
SELECT S1*S2 R1 FROM TAB ORDER BY R1!
 
resultcount :                     6
 
Enter command:
FETCH !
 
R1
---------
        0
        5
        6
        9
       10
       16
 
resultcount :                     6
 
Enter command:
SELECT S1*S2 R1 FROM TAB ORDER BY R1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
R1
---------
       16
       10
        9
        6
        5
        0
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     5 |    1 |    5 | bla
     0 |    2 |    5 | arg
     3 |    3 |    5 | ist
     4 |    4 |    5 | soll
     2 |    5 |    5 | wer
     1 |    6 |    5 | mein
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1) ORDER BY S1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     0 |    2 |    5 | arg
     1 |    6 |    5 | mein
     2 |    5 |    5 | wer
     3 |    3 |    5 | ist
     4 |    4 |    5 | soll
     5 |    1 |    5 | bla
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1) ORDER BY S1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     5 |    1 |    5 | bla
     4 |    4 |    5 | soll
     3 |    3 |    5 | ist
     2 |    5 |    5 | wer
     1 |    6 |    5 | mein
     0 |    2 |    5 | arg
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1)
ORDER BY SUBSTR(S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     1 |    6 |    5 | mein
     2 |    5 |    5 | wer
     5 |    1 |    5 | bla
     4 |    4 |    5 | soll
     0 |    2 |    5 | arg
     3 |    3 |    5 | ist
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1)
ORDER BY SUBSTR(S4,2,2) DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     3 |    3 |    5 | ist
     0 |    2 |    5 | arg
     4 |    4 |    5 | soll
     5 |    1 |    5 | bla
     2 |    5 |    5 | wer
     1 |    6 |    5 | mein
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1 ORDER BY 1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     0 |    2 |    5 | arg   | ente
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     3 |    3 |    5 | ist   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY 1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     3 |    3 |    5 | ist   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
     0 |    2 |    5 | arg   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB.S1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     0 |    2 |    5 | arg   | ente
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     3 |    3 |    5 | ist   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB.S1 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     3 |    3 |    5 | ist   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
     0 |    2 |    5 | arg   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.S1,TAB.S4,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB1.S2 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S4    | S2
-------+-------+------
     5 | bla   | ente
     0 | arg   | ente
     3 | ist   | ente
     4 | soll  | ente
     2 | wer   | ente
     1 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.S1,TAB.S4,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY TAB1.S2 DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S4    | S2
-------+-------+------
     5 | bla   | ente
     0 | arg   | ente
     3 | ist   | ente
     4 | soll  | ente
     2 | wer   | ente
     1 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY SUBSTR(TAB.S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     1 |    6 |    5 | mein  | ente
     2 |    5 |    5 | wer   | ente
     5 |    1 |    5 | bla   | ente
     4 |    4 |    5 | soll  | ente
     0 |    2 |    5 | arg   | ente
     3 |    3 |    5 | ist   | ente
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
ORDER BY SUBSTR(TAB.S4,2,2) DESC!
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4    | S2
-------+------+------+-------+------
     3 |    3 |    5 | ist   | ente
     0 |    2 |    5 | arg   | ente
     4 |    4 |    5 | soll  | ente
     5 |    1 |    5 | bla   | ente
     2 |    5 |    5 | wer   | ente
     1 |    6 |    5 | mein  | ente
 
resultcount :                     6
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 ORDER BY 1, 2 !
 
resultcount :                     7
 
Enter command:
FETCH !
 
S1     | S4
-------+------
     0 | arg
     1 | mein
     2 | wer
     3 | ist
     4 | soll
     5 | bla
     5 | ente
 
resultcount :                     7
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 ORDER BY 1 DESC, 2 !
 
resultcount :                     7
 
Enter command:
FETCH !
 
S1     | S4
-------+------
     5 | bla
     5 | ente
     4 | soll
     3 | ist
     2 | wer
     1 | mein
     0 | arg
 
resultcount :                     7
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 ORDER BY S4 !
 
***ERROR  -8034 Order column must be number                                0057
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 ORDER BY S4 DESC!
 
***ERROR  -8034 Order column must be number                                0057
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 ORDER BY SUBSTR(S4,2,2) !
 
***ERROR  -8034 Order column must be number                                0057
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1
ORDER BY SUBSTR(S4,2,2) DESC!
 
***ERROR  -8034 Order column must be number                                0057
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE D01GROUP !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
SELECT * FROM TAB GROUP BY S1!
 
***ERROR  -8017 Column must be group column:S2                             0008
 
Enter command:
SELECT S2 FROM TAB GROUP BY S1!
 
***ERROR  -8017 Column must be group column:S2                             0008
 
Enter command:
SELECT COUNT(*),S1*S2 FROM TAB GROUP BY S1*S2!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2
------------+------------
          1 |         0
          1 |         5
          1 |         6
          1 |         9
          1 |        10
          1 |        16
 
resultcount :                     6
 
Enter command:
SELECT SUBSTR(S4,2,2) FROM TAB GROUP BY SUBSTR(S4,2,2)!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
ei
er
la
ol
rg
st
 
resultcount :                     6
 
Enter command:
SELECT SUBSTR(S4,2,2) FROM TAB GROUP BY S4!
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
rg
la
st
ei
ol
er
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB GROUP BY 1!
 
***ERROR  -8017 Column must be group column:S1                             0008
 
Enter command:
SELECT S2 FROM TAB GROUP BY 1!
 
***ERROR  -8017 Column must be group column:S2                             0008
 
Enter command:
SELECT SUM(S1),MIN(S3),S1 MOD S2 FROM TAB GROUP BY S1 MOD S2!
 
resultcount :                     3
 
Enter command:
FETCH !
 
EXPRESSION1                                  | EXPRESSION2 | EXPRESSION3
---------------------------------------------+-------------+------------
 1.2000000000000000000000000000000000000E+01 |    5        |      0
 1.0000000000000000000000000000000000000E+00 |    5        |      1
 2.0000000000000000000000000000000000000E+00 |    5        |      2
 
resultcount :                     3
 
Enter command:
SELECT S1*S2 R1 FROM TAB GROUP BY R1!
 
***ERROR  -8017 Column must be group column:S1                             0008
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1     | S2   | S3   | S4
-------+------+------+------
     5 |    1 |    5 | bla
     0 |    2 |    5 | arg
     3 |    3 |    5 | ist
     4 |    4 |    5 | soll
     2 |    5 |    5 | wer
     1 |    6 |    5 | mein
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1) GROUP BY S1 !
 
***ERROR  -8017 Column must be group column:S2                             0008
 
Enter command:
SELECT S1 FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1) GROUP BY S1 !
 
resultcount :                     6
 
Enter command:
FETCH !
 
S1
------
     0
     1
     2
     3
     4
     5
 
resultcount :                     6
 
Enter command:
SELECT * FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1)
GROUP BY SUBSTR(S4,2,2) !
 
***ERROR  -8017 Column must be group column:S1                             0008
 
Enter command:
SELECT SUBSTR(TAB.S4,2,2) FROM TAB WHERE S3 = ( SELECT S1 FROM TAB1)
GROUP BY SUBSTR(S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
ei
er
la
ol
rg
st
 
resultcount :                     6
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1 GROUP BY 1 !
 
***ERROR  -8017 Column must be group column:S1                             0008
 
Enter command:
SELECT TAB.*,TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY TAB.S1 !
 
***ERROR  -8017 Column must be group column:S2                             0008
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
SELECT MIN(TAB.S1),MAX(TAB.S4),TAB1.S2 FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY TAB1.S2 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2 | S2
------------+-------------+------
     0      | wer         | ente
 
resultcount :                     1
 
Enter command:
SELECT SUBSTR(TAB.S4,2,2),MIN(TAB1.S2) FROM TAB,TAB1 WHERE TAB.S3 = TAB1.S1
GROUP BY SUBSTR(TAB.S4,2,2) !
 
resultcount :                     6
 
Enter command:
FETCH !
 
EXPRESSION1 | EXPRESSION2
------------+------------
ei          | ente
er          | ente
la          | ente
ol          | ente
rg          | ente
st          | ente
 
resultcount :                     6
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 GROUP BY 1 !
 
***ERROR  -8017 Column must be group column:S1                             0036
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 GROUP BY S4 !
 
***ERROR  -8017 Column must be group column:S1                             0036
 
Enter command:
SELECT S1,S4 FROM TAB UNION SELECT * FROM TAB1 GROUP BY SUBSTR(S4,2,2) !
 
***ERROR  -8017 Column must be group column:S1                             0036
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT !
SESSION END
 
