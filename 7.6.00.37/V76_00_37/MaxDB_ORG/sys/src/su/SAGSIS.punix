SAGSIS.vdnts
 
Enter command:
FILE XINITDBK!
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
 * SAGSIS 125647 CORRECTED IN 3.1.3 1994-02-15
 * NOT IMPORTANT ENOUGH FOR 3.1.2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (C CHAR, D CHAR )!
 
Enter command:
SELECT C FROM T X GROUP BY C HAVING EXISTS
    (SELECT * FROM T WHERE X.C = D)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 * EXTENDED BY ELKE Z. !
 
Enter command:
SELECT C FROM T X GROUP BY C HAVING EXISTS
    (SELECT * FROM T)!
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
INSERT T VALUES ('a', 'a')!
 
Enter command:
SELECT C FROM T X GROUP BY C HAVING EXISTS
    (SELECT * FROM T WHERE X.C = D)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
C
-
a
 
resultcount :                     1
 
Enter command:
SELECT C FROM T X GROUP BY C HAVING MIN(D) =
    (SELECT C FROM T WHERE X.C = D)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
C
-
a
 
resultcount :                     1
 
Enter command:
SELECT C FROM T X GROUP BY C HAVING C =
    (SELECT C FROM T WHERE X.C = D)!
 
resultcount :                     1
 
Enter command:
FETCH!
 
C
-
a
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 125739 WAS CORRECTED EARLIER !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (I INT)!
 
Enter command:
INSERT INTO T VALUES (0)!
 
Enter command:
SELECT * FROM T X WHERE EXISTS
   (SELECT COUNT (*) FROM T WHERE X.I > I)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
I
-----------
          0
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 125754 CORRECTED IN 3.1.3 1994-02-10
 * NOT IMPORTANT ENOUGH FOR 3.1.2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT )!
 
Enter command:
SELECT 0 FROM T HAVING 0 = 0 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 * EXTENDED BY ELKE Z. !
 
Enter command:
INSERT INTO T VALUES (0) !
 
Enter command:
INSERT INTO T VALUES (1) !
 
Enter command:
INSERT INTO T VALUES (2) !
 
Enter command:
SELECT 0 FROM T HAVING 0 = 0 !
 
resultcount :                     1
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
 0
 
resultcount :                     1
 
Enter command:
 * END OF ENTEND !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 125756 CORRECTED IN 3.1.3 1994-02-08
 * NOT IMPORTANT ENOUGH FOR 3.1.2 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT) !
 
Enter command:
SELECT * FROM T X WHERE 1 = (SELECT COUNT (*) FROM T HAVING X.I = 0) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
 * EXTENDED BY ELKE Z. !
 
Enter command:
SELECT * FROM T X WHERE 1 = (SELECT COUNT (*) FROM T WHERE X.I = 0) !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
INSERT T SET I = 0 !
 
Enter command:
SELECT * FROM T X WHERE 1 = (SELECT COUNT (*) FROM T HAVING X.I = 0) !
 
resultcount :                     1
 
Enter command:
FETCH !
 
I
-----------
          0
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 125808 CORRECTED IN 3.1.2 CL 15 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( C CHAR)!
 
Enter command:
INSERT INTO T VALUES ('a')!
 
Enter command:
(SELECT C FROM T GROUP BY C) UNION (SELECT C FROM T           )!
 
resultcount :                     1
 
Enter command:
FETCH !
 
C
-
a
 
resultcount :                     1
 
Enter command:
(SELECT C FROM T           ) UNION (SELECT C FROM T GROUP BY C)!
 
resultcount :                     1
 
Enter command:
FETCH !
 
C
-
a
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 125823 CORRECTED IN 3.1.2 CL 15 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T (A INT, B INT) !
 
Enter command:
CREATE VIEW V AS SELECT DISTINCT * FROM T !
 
Enter command:
INSERT INTO T VALUES (0, 0)!
 
Enter command:
INSERT INTO T VALUES (0, 1)!
 
Enter command:
SELECT A FROM V !
 
resultcount :                     2
 
Enter command:
FETCH!
 
A
-----------
          0
          0
 
resultcount :                     2
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 126125 CORRECTED IN 3.1.2 CL 15 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT)!
 
Enter command:
SELECT COUNT (*) FROM T ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH INTO :A !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
SELECT COUNT (*) FROM T !
 
resultcount :                     1
 
Enter command:
FETCH INTO :A !
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 126129 CORRECTED IN 3.1.2 CL 15 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT )!
 
Enter command:
SELECT COUNT (*) FROM T WHERE I < 0
     UNION ALL
SELECT COUNT (*) FROM T WHERE I > 0 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
          0
 
resultcount :                     2
 
Enter command:
CREATE UNIQUE INDEX IIND ON T (I) !
 
Enter command:
SELECT COUNT (*) FROM T WHERE I < 0
     UNION ALL
SELECT COUNT (*) FROM T WHERE I > 0 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
          0
 
resultcount :                     2
 
Enter command:
INSERT INTO T VALUES (1) !
 
Enter command:
SELECT COUNT (*) FROM T WHERE I < 0
     UNION ALL
SELECT COUNT (*) FROM T WHERE I > 0 !
 
resultcount :                     2
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
          0
          1
 
resultcount :                     2
 
Enter command:
 * EXTENDED BY ELKE Z. !
 
Enter command:
INSERT T VALUES (2)!
 
Enter command:
SELECT SUM(I) FROM T
  UNION
SELECT I FROM T !
 
resultcount :                     3
 
Enter command:
FETCH!
 
EXPRESSION1
--------------------------------------------
 1.0000000000000000000000000000000000000E+00
 2.0000000000000000000000000000000000000E+00
 3.0000000000000000000000000000000000000E+00
 
resultcount :                     3
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 126131 CORRECTED IN 3.1.2 CL 15* !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT)!
 
Enter command:
INSERT INTO T VALUES (1) !
 
Enter command:
INSERT INTO T VALUES (2) !
 
Enter command:
SELECT COUNT (*) FROM T A
   WHERE EXISTS (SELECT * FROM T B WHERE A.I < B.I)
ORDER BY 1 !
 
resultcount :                     1
 
Enter command:
FETCH INTO :A !
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
SELECT COUNT (*) FROM T A
   WHERE EXISTS (SELECT * FROM T B WHERE A.I < B.I) !
 
resultcount :                     1
 
Enter command:
FETCH INTO :A !
 
EXPRESSION1
-----------
          1
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 126903 CORRECTED IN 3.1.2 CL 17 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT ))!
 
***ERROR  -3014 Invalid end of SQL statement                               0025
 
Enter command:
SELECT I FROM T ) UNION XXX !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0017
 
Enter command:
FETCH !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
DECLARE C CURSOR FOR SELECT I FROM T ) UNION XXX !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0038
 
Enter command:
FETCH C !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 126936 CORRECTED IN 3.1.2 CL 17 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8))!
 
Enter command:
SELECT 1, COUNT(*) INTO :A, :B FROM T !
 
EXPRESSION1       :   1
EXPRESSION2       :            0
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT 1, COUNT(*) INTO :A, :B FROM T !
 
EXPRESSION1       :   1
EXPRESSION2       :            0
 
Enter command:
PARS_EXECUTE !
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
SELECT 1, COUNT(*) INTO :A, :B FROM T !
 
EXPRESSION1       :   1
EXPRESSION2       :            1
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT 1, COUNT(*) INTO :A, :B FROM T !
 
EXPRESSION1       :   1
EXPRESSION2       :            1
 
Enter command:
PARS_EXECUTE !
 
Enter command:
SELECT 1, COUNT(*) INTO :A, :B FROM T WHERE 1 = 2!
 
EXPRESSION1       :   1
EXPRESSION2       :            0
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT 1, COUNT(*) INTO :A, :B FROM T WHERE 1 = 2!
 
EXPRESSION1       :   1
EXPRESSION2       :            0
 
Enter command:
PARS_EXECUTE !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 127132 CORRECTED IN 3.1.3 (NULL-VALUES IN EXPR/STRATEGY) !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT,
    CONSTRAINT C1_T UNIQUE(I), J INT)!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT A.I INTO :A
  FROM T A, T B
 WHERE A.I = :B
   AND A.I = B.J !
 
c 4
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE!
 
Enter command:
NODATA !
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 127134 CORRECTED IN 3.1.3 24.03.94 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT )!
 
Enter command:
CREATE VIEW V AS
       SELECT I
         FROM T
     GROUP BY I
       HAVING I IN
                (SELECT I FROM T )!
 
Enter command:
SELECT I INTO :A FROM V !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_THEN_EX !
 
Enter command:
SELECT I INTO :A FROM V !
 
*** SQLSTATEMENT HAS BEEN OPTIMIZED
 
***ERROR    100 Row not found                                              0001
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 127406 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT ) !
 
Enter command:
SELECT * FROM ( SELECT COUNT(*) FROM T UNION SELECT COUNT(*) FROM T) !
 
resultcount :                     1
 
Enter command:
SELECT * FROM ( SELECT COUNT(*) FROM T UNION SELECT COUNT(*) FROM T)
  UNION
SELECT * FROM ( SELECT COUNT(*) FROM T UNION SELECT COUNT(*) FROM T) !
 
resultcount :                     1
 
Enter command:
FETCH!
 
EXPRESSION1
-----------
          0
 
resultcount :                     1
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 128275 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT NOT NULL, J INT) !
 
Enter command:
CREATE VIEW U AS SELECT * FROM T !
 
Enter command:
INSERT INTO T VALUES (0, NULL)!
 
Enter command:
UPDATE U SET I = J !
 
***ERROR    300 Integrity violation:I,T,KERN                               0018
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 130841 CORRECTED 11.8.94 3.1.3 CL4/ 3.1.2 CL 24 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( I INT )!
 
Enter command:
SELECT * FROM T GROUP BY I HAVING MAX(I) = 1 !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
FETCH !
 
***ERROR    100 Row not found                                              0001
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS ?????? CORRECTED 27,1,95 6.1.1 CL12 !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE DB2 !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE DB2 ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8))!
 
Enter command:
PARSING !
 
Enter command:
SELECT * FROM T !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0010
 
Enter command:
PARSE SELECT * FROM T !
parsing idnr :       1
 
Enter command:
PARS_EXECUTE!
 
Enter command:
ROLLBACK RELEASE !
 
Enter command:
 * SAGSIS 154118 CORRECTED 7.6.96, 6.1.15.18 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE TABA
 ( FKEY CHAR(1),
   FELD1 CHAR(5),
   FELD2 CHAR(10)) !
 
Enter command:
CREATE TABLE TABB
( FKEY CHAR(1),
  FELD1 CHAR(5),
  FELD2 CHAR(10)) !
 
Enter command:
INSERT INTO TABA VALUES ('1','alt','zyxwvu') !
 
Enter command:
INSERT INTO TABB VALUES ('1','neu','abcdef') !
 
Enter command:
COMMIT !
 
Enter command:
UPDATE TABA
 SET
   FELD1 = (SELECT FELD1 FROM TABB WHERE TABA.FKEY = TABB.FKEY),
   FELD2 = (SELECT FELD2 FROM TABB WHERE TABA.FKEY = TABB.FKEY)  !
 
resultcount :                     1
 
Enter command:
SELECT * INTO :A, :B, :C FROM TABA !
 
FKEY              :  1
FELD1             :  neu
FELD2             :  abcdef
 
Enter command:
ROLLBACK!
 
Enter command:
UPDATE TABA
 SET
   FELD1 = (SELECT FELD1 FROM TABB WHERE TABA.FKEY = TABB.FKEY),
   FELD2 = (SELECT 7 FROM TABB WHERE TABA.FKEY = TABB.FKEY)    !
 
***ERROR  -8006 Data types must be compatible:FELD2                        0088
 
Enter command:
SELECT * INTO :A, :B, :C FROM TABA !
 
FKEY              :  1
FELD1             :  alt
FELD2             :  zyxwvu
 
Enter command:
ROLLBACK!
 
Enter command:
UPDATE TABA
 SET
   FELD1 = (SELECT 12 FROM TABB WHERE TABA.FKEY = TABB.FKEY),
   FELD2 = (SELECT FELD2 FROM TABB WHERE TABA.FKEY = TABB.FKEY)   !
 
***ERROR  -8006 Data types must be compatible:FELD1                        0026
 
Enter command:
SELECT * INTO :A, :B, :C FROM TABA !
 
FKEY              :  1
FELD1             :  alt
FELD2             :  zyxwvu
 
Enter command:
ROLLBACK!
 
Enter command:
UPDATE TABA SET
   FELD1 = (SELECT FELD1 FROM TABB WHERE TABA.FKEY = TABB.FKEY)!
 
resultcount :                     1
 
Enter command:
SELECT * INTO :A, :B, :C FROM TABA !
 
FKEY              :  1
FELD1             :  neu
FELD2             :  zyxwvu
 
Enter command:
ROLLBACK!
 
Enter command:
DROP TABLE TABA !
 
Enter command:
DROP TABLE TABB !
 
Enter command:
COMMIT RELEASE!
 
Enter command:
 * SAGSIS 149379 PTS 1660 CORRECTED IN 6.2.7.10 1997-01-06 !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE T ( A CHAR (8))!
 
Enter command:
INSERT T SET A = 'a'!
 
Enter command:
INSERT T SET A = 'aaa'!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT DECODE (A, 'a' , :A, :B) FROM T !
 
c 254 'x23456789012345678901234567890'
c 254 'y234567890y234567890y234567890'
 
resultcount :               unknown
 
Enter command:
NODATA !
 
Enter command:
FETCH INTO :A !
 
EXPRESSION1       :  x23456789012345678901234567890
--------------------------------------------------------------------------------
EXPRESSION1       :  y234567890y234567890y234567890
 
resultcount :                     2
 
Enter command:
PARSING!
 
Enter command:
NODATA!
 
Enter command:
PARAMETER !
 
Enter command:
SELECT DECODE (A, 'a' , :A, 3) FROM T !
 
n 8
parsing idnr :       1
 
Enter command:
EXECUTING !
 
Enter command:
DATA !
 
Enter command:
SELECT !
Parsing idnr :      1
 
n 8 6
 
resultcount :               unknown
 
Enter command:
PARS_THEN_EX !
 
Enter command:
NODATA !
 
Enter command:
NO_PARAMETER!
 
Enter command:
FETCH !
 
EXPRESSION1
-----------
        6
        3
 
resultcount :                     2
 
Enter command:
PARS_EXECUTE !
 
Enter command:
DROP TABLE T !
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE SHUTDWNK !
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT!
SESSION END
 
