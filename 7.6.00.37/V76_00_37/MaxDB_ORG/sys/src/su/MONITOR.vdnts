file xinitdbk!
file connect ( kern test !
monitor init !
create table t1 (s1 int, s2 int) !
insert t1 values (1,2) !
select * from t1 !
fetch !
commit !
update t1 set s1 = 3, s2 = 4 where s1 = 1 and s2 = 2 !
select * from t1 !
fetch !
rollback !
alter table t1 add s3 int !
select * from t1 !
fetch !
alter table t1 column s3 add default 0 !
select * from t1 !
fetch !
drop table t1 !
declare initshow cursor for 
 select description, 
        fixed(value,11,0) "VALUE"  
   from sysdba.monitor 
  where NOT (type in ('PAGES', 'CACHES')) !
fetch initshow into :a, :b !
monitor init !
declare sel_mon cursor for 
 select description, 
        fixed(value,11,0) "VALUE"  
   from sysdba.monitor 
  where NOT (type in ('PAGES', 'CACHES')) AND value <> 0 !
fetch sel_mon into :a, :b !
select initshow.* 
  from initshow, sel_mon
 where initshow.description = sel_mon.description
   and initshow.value = sel_mon.value !
fetch into :a,:b !
close sel_mon !
close initshow !
monitor init !
file sel_monitor ( CACHES !
monitor init !
file sel_monitor ( LOAD !
monitor init !
file sel_monitor ( LOCK !
monitor init !
file sel_monitor ( LOG !
monitor init !
file sel_monitor ( LONG !
monitor init !
file sel_monitor ( PAGES !
monitor init !
file sel_monitor ( REWRITE !
monitor init !
file sel_monitor ( ROW !
monitor init !
file sel_monitor ( TRANS !
select * from monitor_oms !
fetch !
commit release!
*
file connect ( kern test !
diagnose monitor selectivity 500 !
create table t1 (s1 int, s2 int) !
insert t1 values (1,1) !
insert t1 values (1,2) !
insert t1 values (1,3) !
insert t1 values (1,4) !
insert t1 values (1,5) !
insert t1 values (1,6) !
commit release !
file connect ( kern test !
select * from t1 !
fetch !
pars_then_ex !
declare res cursor for 
select * from t1 for reuse !
declare res cursor for 
select * from t1 for reuse !
declare res cursor for 
select * from t1 where s2 < 3 for reuse !
data !
declare res cursor for 
select * from t1 where s2 < :a for reuse !
n 10 3

nodata !
pars_execute !
commit release !
file connect ( kern test !
parsing !
select * from sysdba.running_commands!
executing!
select!
1
pars_then_ex !
fetch into :a, :b, :c, :d, :e, :f, :g!
select sql_statement from sysdba.running_commands !
fetch into :a, :b, :c, :d, :e, :f, :g!
create table xxx (s1 int) !
pars_execute !
select /*+ordered */ 
substr(sp.sql_statement, 1, 1000), sm.* 
from sysmonitor sm, sysparseid sp 
where sm.parseid = sp.parseid !
fetch !
select * from sysmondata !
fetch!
drop table t1 !
drop table xxx !
commit !
diagnose monitor off!
*
diagnose monitor read 1!
create table t ( a char (240) ascii key, b char (2) ascii key)!
insert t set a = 'aaaaaaa', b = ' 1'!
insert t set a = 'aaaaaaa', b = ' 2'!
insert t set a = 'aaaaaaa', b = ' 3'!
insert t set a = 'aaaaaaa', b = ' 4'!
insert t set a = 'aaaaaaa', b = ' 5'!
insert t set a = 'aaaaaaa', b = ' 6'!
insert t set a = 'aaaaaaa', b = ' 7'!
insert t set a = 'aaaaaaa', b = ' 8'!
insert t set a = 'aaaaaaa', b = ' 9'!
insert t set a = 'aaaaaaa', b = '11'!
insert t set a = 'aaaaaaa', b = '12'!
insert t set a = 'aaaaaaa', b = '13'!
insert t set a = 'aaaaaaa', b = '14'!
insert t set a = 'aaaaaaa', b = '15'!
insert t set a = 'aaaaaaa', b = '16'!
insert t set a = 'bbbbbbb', b = ' 1'!
insert t set a = 'bbbbbbb', b = ' 2'!
insert t set a = 'bbbbbbb', b = ' 3'!
insert t set a = 'bbbbbbb', b = ' 4'!
insert t set a = 'bbbbbbb', b = ' 5'!
insert t set a = 'bbbbbbb', b = ' 6'!
insert t set a = 'bbbbbbb', b = ' 7'!
insert t set a = 'bbbbbbb', b = ' 8'!
insert t set a = 'bbbbbbb', b = ' 9'!
insert t set a = 'bbbbbbb', b = '11'!
insert t set a = 'bbbbbbb', b = '12'!
insert t set a = 'bbbbbbb', b = '13'!
insert t set a = 'bbbbbbb', b = '14'!
insert t set a = 'bbbbbbb', b = '15'!
insert t set a = 'bbbbbbb', b = '16'!
insert t set a = 'ccccccc', b = ' 1'!
insert t set a = 'ccccccc', b = ' 2'!
insert t set a = 'ccccccc', b = ' 3'!
insert t set a = 'ccccccc', b = ' 4'!
insert t set a = 'ccccccc', b = ' 5'!
insert t set a = 'ccccccc', b = ' 6'!
insert t set a = 'ccccccc', b = ' 7'!
insert t set a = 'ccccccc', b = ' 8'!
insert t set a = 'ccccccc', b = ' 9'!
insert t set a = 'ccccccc', b = '11'!
insert t set a = 'ccccccc', b = '12'!
insert t set a = 'ccccccc', b = '13'!
insert t set a = 'ccccccc', b = '14'!
insert t set a = 'ccccccc', b = '15'!
insert t set a = 'ccccccc', b = '16'!
insert t set a = 'ddddddd', b = ' 1'!
pars_then_ex !
 * von dem SELECT wird nur echt das SELECT gezaehlt, weil das
 * implizite DROP PARSEID die Kette zwischen dem SELECT und
 * dem FETCH zerreisst !
select * from t where b = ' 1'!
fetch into :a, :b !
pars_execute!
commit release !
file connect ( kern test !
parsing !
select * from t where b = ' 1'!
executing !
select !
1
parsing noinit !
fetch into :a, :b !
executing !
fetch into :a, :b !
2
fetch into :a, :b !
2
fetch into :a, :b !
2
fetch into :a, :b !
2
fetch into :a, :b !
2
select !
1
fetch into :a, :b !
2
fetch into :a, :b !
2
fetch into :a, :b !
2
fetch into :a, :b !
2
pars_then_ex !
insert into t set a = 'x', b = 'd'!
pars_execute !
drop table t !
diagnose monitor off!
commit release !
file connect ( kern test !
select /*+ordered */ 
substr(sp.sql_statement, 1, 1000), sm.* 
from sysmonitor sm, sysparseid sp 
where sm.parseid = sp.parseid !
fetch !
select * from sysmondata !
fetch!
commit release !

* PTS 1103430 !
FILE CONNECT ( SUT SUT !

DIAGNOSE MONITOR READ 0 !
commit release !
file connect ( kern test !
CREATE TABLE J1 (K1 INT key, I1 INT) !
INSERT J1 VALUES (1,1) !
INSERT J1 VALUES (2,2) !
INSERT J1 VALUES (3,3) !
INSERT J1 VALUES (4,4) !
INSERT J1 VALUES (5,5) !
INSERT J1 VALUES (6,6) !
UPDATE STAT J1 !
 
CREATE TABLE J2 (K2 INT key, I2 INT) !
INSERT J2 VALUES (1,1) !
INSERT J2 VALUES (2,2) !
INSERT J2 VALUES (3,3) !
INSERT J2 VALUES (4,4) !
INSERT J2 VALUES (5,5) !
INSERT J2 VALUES (6,6) !
UPDATE STAT J2 !
 
CREATE TABLE J3 (K3 INT, I3 INT) !
INSERT J3 VALUES (1,1) !
INSERT J3 VALUES (2,2) !
INSERT J3 VALUES (3,3) !
INSERT J3 VALUES (4,4) !
INSERT J3 VALUES (5,5) !
INSERT J3 VALUES (6,6) !
create index "j3.k3"
	on j3( k3 ) !
UPDATE STAT J3 !
 
CREATE TABLE J4 (K4 INT key, I4 INT) !
INSERT J4 VALUES (1,1) !
INSERT J4 VALUES (2,2) !
INSERT J4 VALUES (3,3) !
INSERT J4 VALUES (4,4) !
INSERT J4 VALUES (5,5) !
INSERT J4 VALUES (6,6) !
UPDATE STAT J4 !

CREATE TABLE J5 (K5 INT key, I5 INT) !
INSERT J5 VALUES (1,1) !
INSERT J5 VALUES (2,2) !
INSERT J5 VALUES (3,3) !
INSERT J5 VALUES (4,4) !
INSERT J5 VALUES (5,5) !
INSERT J5 VALUES (6,6) !
UPDATE STAT J5 !

CREATE TABLE J6 (K6 INT, I6 INT) !
INSERT J6 VALUES (1,1) !
INSERT J6 VALUES (2,2) !
INSERT J6 VALUES (3,3) !
INSERT J6 VALUES (4,4) !
INSERT J6 VALUES (5,5) !
INSERT J6 VALUES (6,6) !
create index "j6.k6"
	on j6( k6 ) !
UPDATE STAT J6 !

CREATE TABLE J7 (K7 INT, I7 INT) !
INSERT J7 VALUES (1,1) !
INSERT J7 VALUES (2,2) !
INSERT J7 VALUES (3,3) !
INSERT J7 VALUES (4,4) !
INSERT J7 VALUES (5,5) !
INSERT J7 VALUES (6,6) !
create index "j7.k7"
	on j7( k7 ) !
UPDATE STAT J7 !
commit release !
file connect ( sut sut !
SELECT * FROM SYSDD.ROOTS
WHERE TABLENAME in ('J1','J2','J3','J4','J5','J6','J7') 
order by tablename, type desc !
FETCH !
 
COMMIT RELEASE !
 
FILE CONNECT ( kern test !

explain SELECT  /*+ordered */ K1, K2, k3, k4, k5, k6, k7  
FROM J1, j2, j3, j4, j5, j6, j7
WHERE  J1.K1 = 1
AND    J1.K1 = J2.K2 
AND    J1.K1 = J3.K3 
AND    J1.K1 = J4.K4 
AND    J1.K1 = J5.K5 
AND    J1.K1 = J6.K6 
AND    J1.K1 = J7.K7 !


PARS_THEN_EX !

SELECT /*+ordered */ K1, K2, k3, k4, k5, k6, k7  
FROM J1, j2, j3, j4, j5, j6, j7
WHERE  J1.K1 = 1
AND    J1.K1 = J2.K2 
AND    J1.K1 = J3.K3 
AND    J1.K1 = J4.K4 
AND    J1.K1 = J5.K5 
AND    J1.K1 = J6.K6 
AND    J1.K1 = J7.K7 !

select * from dual!

PARS_EXECUTE !



commit !

DIAGNOSE MONITOR OFF !

select /*+ordered */ 
substr(sp.sql_statement, 1, 1000), sm.* 
from sysmonitor sm, sysparseid sp 
where sm.parseid = sp.parseid !
fetch !

COMMIT RELEASE !


file moni_analyze !

file shutdwnk !
vdnexit !
