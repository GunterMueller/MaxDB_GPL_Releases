FOKUS98.vdnts
 
Enter command:
FILE XINITDBK!
 
Enter command:
FILE XRESTORE !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUPERDBA,COLDUSER!
OK
 
BACKUP_RESTORE XINITDB DATA!
OK
Returncode           0
Date                 DATEXXXX
Time                 TIMEYYYY
Server               <servernode>
Database             <serverdb>
Kernel Version       KERNEL    vv.vv.vv Build bbb-bbb-bbb-bbb
Pages Transferred    000
Pages Left           0
Volumes              1
Medianame            xinitdb
Location             xinitdb.sav
Errortext
Label                <label>
Is Consistent        true
First LOG Page       000
Last LOG Page
DB Stamp 1 Date      DATEXXXX
DB Stamp 1 Time      TIMEYYYY
DB Stamp 2 Date
DB Stamp 2 Time
Page Count           000
Devices Used         1
Database ID          <servernode>:<serverdb>_DATEXXXX_<timestamp>
Max Used Data Page  000
Converter Page Count 8
 
UTIL_EXECUTE CLEAR LOG!
OK
 
DB_ONLINE!
OK
 
UTIL_RELEASE!
OK
 
UTIL_CONNECT SUT,SUT!
OK
 
UTIL_RELEASE!
OK
 
BYE!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT!
 
Enter command:
CREATE USER KERN PASSWORD TEST DBA NOT EXCLUSIVE !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE STEUERKLASSE (
KLASSE       INTEGER CONSTRAINT STEUERKLASSE_PK PRIMARY KEY,
BESCHREIBUNG VARCHAR (30))!
 
Enter command:
INSERT INTO STEUERKLASSE VALUES (1, 'Alleinstehend')!
 
Enter command:
INSERT INTO STEUERKLASSE VALUES (2, 'Alleinerziehend')!
 
Enter command:
INSERT INTO STEUERKLASSE VALUES (3, 'Verheiratet')!
 
Enter command:
COMMIT WORK!
 
Enter command:
CREATE TABLE EINKOMMEN (
NAME   VARCHAR (10) CONSTRAINT EINKOMMEN_PK PRIMARY KEY,
KLASSE INTEGER NOT NULL
         CONSTRAINT EIN_KLASSE_FK REFERENCES STEUERKLASSE,
BETRAG DECIMAL NOT NULL)!
 
Enter command:
INSERT INTO EINKOMMEN VALUES ('Mayer',   1, 32123)!
 
Enter command:
INSERT INTO EINKOMMEN VALUES ('Schmidt', 2, 33333)!
 
Enter command:
INSERT INTO EINKOMMEN VALUES ('Franz',   3, 34567)!
 
Enter command:
INSERT INTO EINKOMMEN VALUES ('Fredl',   2, 39876)!
 
Enter command:
COMMIT WORK !
 
Enter command:
CREATE TABLE STEUER (
KLASSE        INTEGER NOT NULL
              CONSTRAINT STEUER_KLASSE_FK REFERENCES STEUERKLASSE,
OBER_GRENZE   DECIMAL NOT NULL
              CONSTRAINT ST_OBER_CHECK CHECK (OBER_GRENZE > 0),
STEUER_BETRAG DECIMAL NOT NULL
              CONSTRAINT ST_BETRAG_CHECK CHECK (STEUER_BETRAG >= 0))!
 
Enter command:
INSERT INTO STEUER VALUES (1,31000, 7610)!
 
Enter command:
INSERT INTO STEUER VALUES (1,32000, 8240)!
 
Enter command:
INSERT INTO STEUER VALUES (1,33000, 8890)!
 
Enter command:
INSERT INTO STEUER VALUES (1,34000, 9560)!
 
Enter command:
INSERT INTO STEUER VALUES (1,35000,10250)!
 
Enter command:
INSERT INTO STEUER VALUES (1,36000,10960)!
 
Enter command:
INSERT INTO STEUER VALUES (1,37000,11690)!
 
Enter command:
INSERT INTO STEUER VALUES (1,38000,12440)!
 
Enter command:
INSERT INTO STEUER VALUES (1,39000,13210)!
 
Enter command:
INSERT INTO STEUER VALUES (1,40000,14000)!
 
Enter command:
INSERT INTO STEUER VALUES (2,31000, 6370)!
 
Enter command:
INSERT INTO STEUER VALUES (2,32000, 6960)!
 
Enter command:
INSERT INTO STEUER VALUES (2,33000, 7570)!
 
Enter command:
INSERT INTO STEUER VALUES (2,34000, 8200)!
 
Enter command:
INSERT INTO STEUER VALUES (2,35000, 8850)!
 
Enter command:
INSERT INTO STEUER VALUES (2,36000, 9520)!
 
Enter command:
INSERT INTO STEUER VALUES (2,37000,10210)!
 
Enter command:
INSERT INTO STEUER VALUES (2,38000,10920)!
 
Enter command:
INSERT INTO STEUER VALUES (2,39000,11650)!
 
Enter command:
INSERT INTO STEUER VALUES (2,40000,12400)!
 
Enter command:
INSERT INTO STEUER VALUES (3,31000, 5715)!
 
Enter command:
INSERT INTO STEUER VALUES (3,32000, 6210)!
 
Enter command:
INSERT INTO STEUER VALUES (3,33000, 6735)!
 
Enter command:
INSERT INTO STEUER VALUES (3,34000, 7290)!
 
Enter command:
INSERT INTO STEUER VALUES (3,35000, 7875)!
 
Enter command:
INSERT INTO STEUER VALUES (3,36000, 8490)!
 
Enter command:
INSERT INTO STEUER VALUES (3,37000, 9135)!
 
Enter command:
INSERT INTO STEUER VALUES (3,38000, 9810)!
 
Enter command:
INSERT INTO STEUER VALUES (3,39000,10515)!
 
Enter command:
INSERT INTO STEUER VALUES (3,40000,11250)!
 
Enter command:
COMMIT WORK !
 
Enter command:
SELECT E.NAME, TO_CHAR(E.KLASSE, '9'), TO_CHAR(E.BETRAG,'99999'),
       TO_CHAR(ST1.STEUER_BETRAG, '99999') STEUER_MIN,
       TO_CHAR(ST2.STEUER_BETRAG, '99999') STEUER_MAX,
       TO_CHAR(ROUND(
       ST1.STEUER_BETRAG +
       ((E.BETRAG - ST1.OBER_GRENZE) *
        (ST2.STEUER_BETRAG - ST1.STEUER_BETRAG)) /
       ( ST2.OBER_GRENZE - ST1.OBER_GRENZE), 2), '99999.99') STEUER
  FROM EINKOMMEN E,
       STEUER ST1,
       STEUER ST2
 WHERE E.KLASSE = ST1.KLASSE
   AND E.KLASSE = ST2.KLASSE
   AND ST1.OBER_GRENZE = (SELECT MAX(OBER_GRENZE)
                            FROM STEUER SX
                           WHERE E.BETRAG > SX.OBER_GRENZE
                             AND E.KLASSE = SX.KLASSE
                         )
   AND ST2.OBER_GRENZE = (SELECT MIN(OBER_GRENZE)
                            FROM STEUER SY
                           WHERE E.BETRAG < SY.OBER_GRENZE
                             AND E.KLASSE = SY.KLASSE
                         ) !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E, :F !
 
NAME       | EXPRESSION1 | EXPRESSION2 | STEUER_MIN | STEUER_MAX | STEUER
-----------+-------------+-------------+------------+------------+----------
Mayer      |  1          |  32123      |   8240     |   8890     |   8319.95
Schmidt    |  2          |  33333      |   7570     |   8200     |   7779.79
Franz      |  3          |  34567      |   7290     |   7875     |   7621.70
Fredl      |  2          |  39876      |  11650     |  12400     |  12307.00
 
resultcount :                     4
 
Enter command:
SELECT E.NAME, TO_CHAR(E.KLASSE, '9'), TO_CHAR(E.BETRAG,'99999'),
       TO_CHAR (MAX (S2.STEUER_BETRAG), '99999') STEUER_MIN,
       TO_CHAR (MIN (S1.STEUER_BETRAG), '99999') STEUER_MAX,
       TO_CHAR (ROUND (
       MAX (S2.STEUER_BETRAG) +
       (MIN (S1.STEUER_BETRAG) - MAX (S2.STEUER_BETRAG)) /
       (MIN (S1.OBER_GRENZE) - MAX (S2.OBER_GRENZE)) *
       (E.BETRAG - MAX (S2.OBER_GRENZE)), 2), '99999.99') STEUER
  FROM EINKOMMEN E, STEUER S1, STEUER S2
 WHERE E.KLASSE = S1.KLASSE
   AND E.BETRAG <= S1.OBER_GRENZE
   AND E.KLASSE = S2.KLASSE
   AND E.BETRAG >= S2.OBER_GRENZE
GROUP BY E.NAME, E.KLASSE, E.BETRAG !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E, :F !
 
NAME       | EXPRESSION1 | EXPRESSION2 | STEUER_MIN | STEUER_MAX | STEUER
-----------+-------------+-------------+------------+------------+----------
Franz      |  3          |  34567      |   7290     |   7875     |   7621.70
Fredl      |  2          |  39876      |  11650     |  12400     |  12307.00
Mayer      |  1          |  32123      |   8240     |   8890     |   8319.95
Schmidt    |  2          |  33333      |   7570     |   8200     |   7779.79
 
resultcount :                     4
 
Enter command:
DROP TABLE STEUERKLASSE!
 
Enter command:
DROP TABLE EINKOMMEN !
 
Enter command:
DROP TABLE STEUER !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE PERSONEN (
P_ID    INTEGER CONSTRAINT PERSONEN_PK PRIMARY KEY,
NAME    CHAR (10) NOT NULL,
GEB_DAT DATE NOT NULL)!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 6, 'Albrecht ', '11-APR_67')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 8, 'Baader   ', '20-JUN_55')!
 
Enter command:
INSERT INTO PERSONEN VALUES (12, 'Hessen   ', '11-JAN_71')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 1, 'Jansen   ', '01-JAN_65')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 2, 'Johannsen', '02-FEB_66')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 3, 'Lenze    ', '05-AUG_60')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 7, 'Linke    ', '30-JUL_49')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 9, 'Orterer  ', '18-JAN_70')!
 
Enter command:
INSERT INTO PERSONEN VALUES (11, 'Pape     ', '20-JUN_55')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 4, 'Raupp    ', '09-SEP_58')!
 
Enter command:
INSERT INTO PERSONEN VALUES (10, 'Smith    ', '19-FEB_66')!
 
Enter command:
INSERT INTO PERSONEN VALUES ( 5, 'Weiss    ', '22-MAR_51')!
 
Enter command:
PARS_THEN_EX !
 
Enter command:
DATA !
 
Enter command:
SELECT TO_CHAR(P1.P_ID, '99') P_ID,
       P1.NAME, P1.GEB_DAT
       (SELECT COUNT(*)
          FROM PERSONEN P3
         WHERE P3.GEB_DAT < P.GEB_DAT
            OR (P3.GEB_DAT < P.GEB_DAT AND
                P3.P_ID <= P1.P_ID) NUMMER,
        TRUNC (:ANZAHL_GRUPPEN *
                (( SELECT COUNT(*)
                     FROM PERSONEN P3
                    WHERE P3.GEB_DAT < P.GEB_DAT
                       OR (P3.GEB_DAT < P.GEB_DAT AND
                           P3.P_ID <= P1.P_ID) - 1) /
                  (SELECT COUNT(*)
                     FROM PERSONEN P2) + 1) GRUPPE
  FROM PERSONEN
ORDER BY P1.GEB_DAT, P1.P_ID !
 
***ERROR  -7056 Subquery not allowed                                       0058
 
Enter command:
SELECT TO_CHAR(P1.P_ID, '99') P_ID,
       P1.NAME,
       P1.GEB_DAT,
       COUNT(*) NUMMER,
       TO_CHAR (TRUNC (:ANZAHL_GRUPPEN * (COUNT(*) - 1) /
                 P_ANZ.ANZAHL) + 1, '99') GRUPPE
  FROM PERSONEN P1, PERSONEN P2,
       (SELECT COUNT(*) ANZAHL FROM PERSONEN) P_ANZ
 WHERE P2.GEB_DAT < P1.GEB_DAT
    OR (P2.GEB_DAT = P1.GEB_DAT AND
        P2.P_ID <= P1.P_ID)
GROUP BY P1.GEB_DAT, P1.P_ID, P1.NAME, P_ANZ.ANZAHL !
 
n 38 4
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E !
 
P_ID | NAME       | GEB_DAT                    | NUMMER      | GRUPPE
-----+------------+----------------------------+-------------+-------
  7  | Linke      | 30-JUL-49                  |           1 |   1
  5  | Weiss      | 22-MAR-51                  |           2 |   1
  8  | Baader     | 20-JUN-55                  |           3 |   1
 11  | Pape       | 20-JUN-55                  |           4 |   2
  4  | Raupp      | 09-SEP-58                  |           5 |   2
  3  | Lenze      | 05-AUG-60                  |           6 |   2
  1  | Jansen     | 01-JAN-65                  |           7 |   3
  2  | Johannsen  | 02-FEB-66                  |           8 |   3
 10  | Smith      | 19-FEB-66                  |           9 |   3
  6  | Albrecht   | 11-APR-67                  |          10 |   4
  9  | Orterer    | 18-JAN-70                  |          11 |   4
 12  | Hessen     | 11-JAN-71                  |          12 |   4
 
resultcount :                    12
 
Enter command:
SELECT TO_CHAR(P1.P_ID, '99') P_ID,
       P1.NAME,
       P1.GEB_DAT,
       COUNT(DISTINCT P2.P_ID) NUMMER,
       TO_CHAR (TRUNC ((COUNT (DISTINCT P2.P_ID) - 1) /
                (COUNT (DISTINCT P3.P_ID) /
                :ANZAHL_GRUPPEN)) + 1, '99') GRUPPE
  FROM PERSONEN P1, PERSONEN P2, PERSONEN P3
 WHERE P2.GEB_DAT < P1.GEB_DAT
    OR (P2.GEB_DAT = P1.GEB_DAT AND
        P2.P_ID <= P1.P_ID)
GROUP BY P1.P_ID, P1.NAME, P1.GEB_DAT
ORDER BY P1.GEB_DAT !
 
n 38 5
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D, :E !
 
P_ID | NAME       | GEB_DAT                    | NUMMER      | GRUPPE
-----+------------+----------------------------+-------------+-------
  7  | Linke      | 30-JUL-49                  |           1 |   1
  5  | Weiss      | 22-MAR-51                  |           2 |   1
  8  | Baader     | 20-JUN-55                  |           3 |   1
 11  | Pape       | 20-JUN-55                  |           4 |   2
  4  | Raupp      | 09-SEP-58                  |           5 |   2
  3  | Lenze      | 05-AUG-60                  |           6 |   3
  1  | Jansen     | 01-JAN-65                  |           7 |   3
  2  | Johannsen  | 02-FEB-66                  |           8 |   3
 10  | Smith      | 19-FEB-66                  |           9 |   4
  6  | Albrecht   | 11-APR-67                  |          10 |   4
  9  | Orterer    | 18-JAN-70                  |          11 |   5
 12  | Hessen     | 11-JAN-71                  |          12 |   5
 
resultcount :                    12
 
Enter command:
PARS_EXECUTE!
 
Enter command:
NODATA!
 
Enter command:
DROP TABLE PERSONEN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE ERGEBNISSE (
NAME   VARCHAR (10) NOT NULL,
ORT    VARCHAR (10) NOT NULL,
ANTEIL DECIMAL (3,1))!
 
Enter command:
INSERT INTO ERGEBNISSE VALUES ('Sagad    ', 'Verschwand', 34)!
 
Enter command:
INSERT INTO ERGEBNISSE VALUES ('Obergram ', 'Unterach  ', 92)!
 
Enter command:
INSERT INTO ERGEBNISSE VALUES ('Lakitz   ', 'Klamau    ', 67)!
 
Enter command:
INSERT INTO ERGEBNISSE VALUES ('Fitzken  ', 'Borkenbach', 55)!
 
Enter command:
INSERT INTO ERGEBNISSE VALUES ('Aberhoff ', 'Klegil    ', 84)!
 
Enter command:
INSERT INTO ERGEBNISSE VALUES ('Klabutz  ', 'Borstberg ', 23)!
 
Enter command:
SELECT N.NAME, O.ORT
FROM
  (SELECT E1.NAME, COUNT(*) NTEIL
    FROM ERGEBNISSE E1, ERGEBNISSE E2
   WHERE E1.ANTEIL >= E2.ANTEIL
   GROUP BY E1.NAME) N,
  (SELECT E1.ORT, COUNT(*) OTEIL
    FROM ERGEBNISSE E1, ERGEBNISSE E2
   WHERE E1.ANTEIL <= E2.ANTEIL
   GROUP BY E1.ORT) O
WHERE N.NTEIL = O.OTEIL
ORDER BY N.NTEIL DESC!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B!
 
NAME       | ORT
-----------+-----------
Obergram   | Borstberg
Aberhoff   | Verschwand
Lakitz     | Borkenbach
Fitzken    | Klamau
Sagad      | Klegil
Klabutz    | Unterach
 
resultcount :                     6
 
Enter command:
SELECT E1.NAME, E2.ORT
  FROM ERGEBNISSE E1, ERGEBNISSE E2
 WHERE NOT EXISTS
     (SELECT COUNT(*)
        FROM ERGEBNISSE E3
       WHERE E3.ANTEIL < E1.ANTEIL
      MINUS
      SELECT COUNT(*)
        FROM ERGEBNISSE E4
       WHERE E4.ANTEIL > E2.ANTEIL) !
 
***ERROR  -7011 Correlated subquery not allowed                            0129
 
Enter command:
FETCH INTO :A, :B!
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
DROP TABLE ERGEBNISSE !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE LOGIN_VERSUCH (
MASCHINE VARCHAR (10),
LOGIN_NO INTEGER,
ZEIT     TIMESTAMP NOT NULL,
TERMINAL VARCHAR (10) NOT NULL,
USERNAME VARCHAR (10) NOT NULL,
CONSTRAINT LV_PK PRIMARY KEY (MASCHINE, LOGIN_NO))!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  2, '19970220131111000000', 'MODEM1', 'HINZ')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  3, '19970220131123000000', 'MODEM2', 'HINZ')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  4, '19970220131137000000', 'MODEM3', 'HINZ')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  5, '19970220142200000000', 'PC1', 'KUNZ')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  6, '19970220142311000000', 'PC1', 'KUNZ')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  7, '19970220142510000000', 'PC1', 'KUNZ')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1',  9, '19970220150001000000', 'MODEM1', 'ROOT')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1', 10, '19970220150005000000', 'MODEM1', 'ADMIN')!
 
Enter command:
INSERT INTO LOGIN_VERSUCH VALUES
  ('UX1', 11, '19970220150011000000', 'MODEM1', 'SYS')!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
SELECT L1.LOGIN_NO L1, L1.ZEIT Z1,
       L2.LOGIN_NO L2, L2.ZEIT Z2
  FROM LOGIN_VERSUCH L1, LOGIN_VERSUCH L2
 WHERE (L1.LOGIN_NO, L1.ZEIT, L2.LOGIN_NO, L2.ZEIT) = ANY
  (SELECT LV1.LOGIN_NO L1, LV1.ZEIT Z1,
       LV2.LOGIN_NO L2, LV2.ZEIT Z2
  FROM LOGIN_VERSUCH LV1, LOGIN_VERSUCH LV2
 WHERE LV1.ZEIT BETWEEN LV2.ZEIT AND LV2.ZEIT + 2)
!
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
L1                :            2
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            3
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            3
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            4
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            4
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            4
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            5
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            5
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            5
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            5
Z1                :  20-FEB-97
L2                :            5
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            6
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            6
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            6
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            6
Z1                :  20-FEB-97
L2                :            5
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            6
Z1                :  20-FEB-97
L2                :            6
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            7
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            7
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            7
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            7
Z1                :  20-FEB-97
L2                :            5
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            7
Z1                :  20-FEB-97
L2                :            6
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            7
Z1                :  20-FEB-97
L2                :            7
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            5
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            6
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            7
Z2                :  20-FEB-97
-----------------------------------------------
L1                :            9
Z1                :  20-FEB-97
L2                :            9
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            5
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            6
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            7
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :            9
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           10
Z1                :  20-FEB-97
L2                :           10
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            2
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            3
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            4
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            5
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            6
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            7
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :            9
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :           10
Z2                :  20-FEB-97
-----------------------------------------------
L1                :           11
Z1                :  20-FEB-97
L2                :           11
Z2                :  20-FEB-97
 
resultcount :                    45
 
Enter command:
SELECT LV3.MASCHINE, LV3.ZEIT, LV3.TERMINAL, LV3.USERNAME
  FROM LOGIN_VERSUCH LV1, LOGIN_VERSUCH LV3
 WHERE LV1.MASCHINE = LV3.MASCHINE
   AND LV1.USERNAME = LV3.USERNAME
   AND LV3.ZEIT BETWEEN
       LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60
   AND 3 <= (SELECT COUNT (*)
               FROM LOGIN_VERSUCH LV2
              WHERE LV1.MASCHINE = LV2.MASCHINE
                AND LV1.USERNAME = LV2.USERNAME
                AND LV2.ZEIT BETWEEN
                    LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60)
UNION
SELECT LV3.MASCHINE, TO_CHAR(LV3.ZEIT,'DD MM YYYY HH24 MI SS'),
       LV3.TERMINAL, LV3.USERNAME
  FROM LOGIN_VERSUCH LV1, LOGIN_VERSUCH LV3
 WHERE LV1.MASCHINE = LV3.MASCHINE
   AND LV1.TERMINAL = LV3.TERMINAL
   AND LV3.ZEIT BETWEEN
       LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60
   AND 3 <= (SELECT COUNT (*)
               FROM LOGIN_VERSUCH LV2
              WHERE LV1.MASCHINE = LV2.MASCHINE
                AND LV1.TERMINAL = LV2.TERMINAL
                AND LV2.ZEIT BETWEEN
                    LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60)
ORDER BY 2 !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
MASCHINE   | ZEIT                       | TERMINAL   | USERNAME
-----------+----------------------------+------------+-----------
UX1        | 20 02 1997 15 00 01        | MODEM1     | ROOT
UX1        | 20 02 1997 15 00 05        | MODEM1     | ADMIN
UX1        | 20 02 1997 15 00 11        | MODEM1     | SYS
UX1        | 20-FEB-97                  | MODEM1     | HINZ
UX1        | 20-FEB-97                  | MODEM2     | HINZ
UX1        | 20-FEB-97                  | MODEM3     | HINZ
 
resultcount :                     6
 
Enter command:
SELECT LV3.MASCHINE, TO_CHAR(LV3.ZEIT,'DD MM YYYY HH24 MI SS'),
       LV3.TERMINAL, LV3.USERNAME
  FROM LOGIN_VERSUCH LV1, LOGIN_VERSUCH LV3
 WHERE LV1.MASCHINE = LV3.MASCHINE
   AND LV1.USERNAME = LV3.USERNAME
   AND LV3.ZEIT BETWEEN
       LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60
   AND 3 <= (SELECT COUNT (*)
               FROM LOGIN_VERSUCH LV2
              WHERE LV1.MASCHINE = LV2.MASCHINE
                AND LV1.USERNAME = LV2.USERNAME
                AND LV2.ZEIT BETWEEN
                    LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60)
UNION
SELECT LV3.MASCHINE, TO_CHAR(LV3.ZEIT,'DD MM YYYY HH24 MI SS'),
       LV3.TERMINAL, LV3.USERNAME
  FROM LOGIN_VERSUCH LV1, LOGIN_VERSUCH LV3
 WHERE LV1.MASCHINE = LV3.MASCHINE
   AND LV1.TERMINAL = LV3.TERMINAL
   AND LV3.ZEIT BETWEEN
       LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60
   AND 3 <= (SELECT COUNT (*)
               FROM LOGIN_VERSUCH LV2
              WHERE LV1.MASCHINE = LV2.MASCHINE
                AND LV1.TERMINAL = LV2.TERMINAL
                AND LV2.ZEIT BETWEEN
                    LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60)
ORDER BY 2 !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
MASCHINE   | EXPRESSION1         | TERMINAL   | USERNAME
-----------+---------------------+------------+-----------
UX1        | 20 02 1997 13 11 11 | MODEM1     | HINZ
UX1        | 20 02 1997 13 11 23 | MODEM2     | HINZ
UX1        | 20 02 1997 13 11 37 | MODEM3     | HINZ
UX1        | 20 02 1997 15 00 01 | MODEM1     | ROOT
UX1        | 20 02 1997 15 00 05 | MODEM1     | ADMIN
UX1        | 20 02 1997 15 00 11 | MODEM1     | SYS
 
resultcount :                     6
 
Enter command:
SELECT LV3.MASCHINE, TO_CHAR(LV3.ZEIT,'DD MM YYYY HH24 MI SS'),
       LV3.TERMINAL, LV3.USERNAME
  FROM LOGIN_VERSUCH LV1, LOGIN_VERSUCH LV3
 WHERE LV1.MASCHINE = LV3.MASCHINE
   AND (LV1.TERMINAL = LV3.TERMINAL OR LV1.USERNAME = LV3.USERNAME)
   AND LV3.ZEIT BETWEEN
       LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60
   AND 3 <= (SELECT COUNT (*)
               FROM LOGIN_VERSUCH LV2
              WHERE LV1.MASCHINE = LV2.MASCHINE
                AND (LV1.TERMINAL = LV3.TERMINAL OR
                     LV1.USERNAME = LV3.USERNAME)
                AND LV2.ZEIT BETWEEN
                    LV1.ZEIT AND LV1.ZEIT + 1 / 24 / 60)
ORDER BY 2 !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
MASCHINE   | EXPRESSION1         | TERMINAL   | USERNAME
-----------+---------------------+------------+-----------
UX1        | 20 02 1997 13 11 11 | MODEM1     | HINZ
UX1        | 20 02 1997 13 11 23 | MODEM2     | HINZ
UX1        | 20 02 1997 13 11 37 | MODEM3     | HINZ
UX1        | 20 02 1997 15 00 01 | MODEM1     | ROOT
UX1        | 20 02 1997 15 00 05 | MODEM1     | ADMIN
UX1        | 20 02 1997 15 00 11 | MODEM1     | SYS
 
resultcount :                     6
 
Enter command:
SELECT A.MASCHINE, TO_CHAR(A.ZEIT,'DD MM YYYY HH24 MI SS'),
       A.TERMINAL, A.USERNAME
  FROM LOGIN_VERSUCH A, LOGIN_VERSUCH B
 WHERE B.MASCHINE = A.MASCHINE
   AND (B.TERMINAL = A.TERMINAL OR
        B.USERNAME = A.USERNAME)
   AND B.ZEIT BETWEEN A.ZEIT - 1 / 24 / 60
                  AND A.ZEIT + 1 / 24 / 60
   AND A.LOGIN_NO != B.LOGIN_NO
GROUP BY A.MASCHINE, A.ZEIT, A.TERMINAL, A.USERNAME
HAVING COUNT (*) > 1
ORDER BY 2 !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C, :D !
 
MASCHINE   | EXPRESSION1         | TERMINAL   | USERNAME
-----------+---------------------+------------+-----------
UX1        | 20 02 1997 13 11 11 | MODEM1     | HINZ
UX1        | 20 02 1997 13 11 23 | MODEM2     | HINZ
UX1        | 20 02 1997 13 11 37 | MODEM3     | HINZ
UX1        | 20 02 1997 15 00 01 | MODEM1     | ROOT
UX1        | 20 02 1997 15 00 05 | MODEM1     | ADMIN
UX1        | 20 02 1997 15 00 11 | MODEM1     | SYS
 
resultcount :                     6
 
Enter command:
DROP TABLE LOGIN_VERSUCH !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE MESSWERT (
MESSPUNKT VARCHAR (10),
ZEITPUNKT TIMESTAMP,
MESSWERT  FIXED (5,2) NOT NULL,
CONSTRAINT MESSWERT_PK PRIMARY KEY (MESSPUNKT, ZEITPUNKT))!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415090000000000', 110.03)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415090000000000',  33.23)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415100000000000',  89.78)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415110000000000',  11.99)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415110000000000',  53.03)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415120000000000',  44.98)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415120000000000',  23.22)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415130000000000', 122.13)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415130000000000',  12.55)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415140000000000', 163.59)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415140000000000',  15.25)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415150000000000', 111.11)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415150000000000',  28.33)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415160000000000', 222.22)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415160000000000',  19.56)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980415170000000000', 333.33)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980415170000000000',  99.99)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980416090000000000', 221.21)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416090000000000', 101.01)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980416110000000000', 324.22)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416110000000000', 112.13)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416120000000000',  99.09)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416130000000000',  89.97)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416140000000000',  79.25)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980416150000000000',  10.01)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416150000000000',  94.23)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G1','19980416170000000000',  11.12)!
 
Enter command:
INSERT INTO MESSWERT VALUES ('G2','19980416170000000000',  91.56)!
 
Enter command:
SELECT MESSPUNKT, DATE(ZEITPUNKT), MESSWERT
  FROM MESSWERT
ORDER BY 1,2,3 !
 
resultcount :                    28
 
Enter command:
FETCH INTO :A, :B, :C !
 
MESSPUNKT  | EXPRESSION1 | MESSWERT
-----------+-------------+---------
G1         | 19980415    |   11.99
G1         | 19980415    |   44.98
G1         | 19980415    |   89.78
G1         | 19980415    |  110.03
G1         | 19980415    |  111.11
G1         | 19980415    |  122.13
G1         | 19980415    |  163.59
G1         | 19980415    |  222.22
G1         | 19980415    |  333.33
G1         | 19980416    |   10.01
G1         | 19980416    |   11.12
G1         | 19980416    |  221.21
G1         | 19980416    |  324.22
G2         | 19980415    |   12.55
G2         | 19980415    |   15.25
G2         | 19980415    |   19.56
G2         | 19980415    |   23.22
 
MESSPUNKT  | EXPRESSION1 | MESSWERT
-----------+-------------+---------
G2         | 19980415    |   28.33
G2         | 19980415    |   33.23
G2         | 19980415    |   53.03
G2         | 19980415    |   99.99
G2         | 19980416    |   79.25
G2         | 19980416    |   89.97
G2         | 19980416    |   91.56
G2         | 19980416    |   94.23
G2         | 19980416    |   99.09
G2         | 19980416    |  101.01
G2         | 19980416    |  112.13
 
resultcount :                    28
 
Enter command:
SELECT MESSPUNKT,
       DATE(ZEITPUNKT) TAG,
       MESSWERT
  FROM MESSWERT M1
 WHERE 2 <=
           (SELECT COUNT(*)
              FROM MESSWERT M2
             WHERE M1.MESSPUNKT       = M2.MESSPUNKT
               AND DATE(M1.ZEITPUNKT) = DATE(M2.ZEITPUNKT)
               AND M1.MESSWERT        < M2.MESSWERT
           )
   AND 2 <=
           (SELECT COUNT(*)
              FROM MESSWERT M2
             WHERE M1.MESSPUNKT       = M2.MESSPUNKT
               AND DATE(M1.ZEITPUNKT) = DATE(M2.ZEITPUNKT)
               AND M1.MESSWERT        > M2.MESSWERT
           )
ORDER BY 1,2,3 !
 
resultcount :                    12
 
Enter command:
FETCH INTO :A, :B, :C !
 
MESSPUNKT  | TAG        | MESSWERT
-----------+------------+---------
G1         | 19980415   |   89.78
G1         | 19980415   |  110.03
G1         | 19980415   |  111.11
G1         | 19980415   |  122.13
G1         | 19980415   |  163.59
G2         | 19980415   |   19.56
G2         | 19980415   |   23.22
G2         | 19980415   |   28.33
G2         | 19980415   |   33.23
G2         | 19980416   |   91.56
G2         | 19980416   |   94.23
G2         | 19980416   |   99.09
 
resultcount :                    12
 
Enter command:
SELECT MESSPUNKT,
       DATE(ZEITPUNKT) TAG,
       FIXED(AVG(MESSWERT), 5,2) DURCHSCHNITT
  FROM MESSWERT M1
 WHERE 2 <=
           (SELECT COUNT(*)
              FROM MESSWERT M2
             WHERE M1.MESSPUNKT       = M2.MESSPUNKT
               AND DATE(M1.ZEITPUNKT) = DATE(M2.ZEITPUNKT)
               AND M1.MESSWERT        < M2.MESSWERT
           )
   AND 2 <=
           (SELECT COUNT(*)
              FROM MESSWERT M2
             WHERE M1.MESSPUNKT       = M2.MESSPUNKT
               AND DATE(M1.ZEITPUNKT) = DATE(M2.ZEITPUNKT)
               AND M1.MESSWERT        > M2.MESSWERT
           )
GROUP BY MESSPUNKT, DATE(ZEITPUNKT)
!
 
resultcount :                     3
 
Enter command:
FETCH INTO :A, :B, :C !
 
MESSPUNKT  | TAG        | DURCHSCHNITT
-----------+------------+-------------
G1         | 19980415   |  119.33
G2         | 19980415   |   26.09
G2         | 19980416   |   94.96
 
resultcount :                     3
 
Enter command:
COMMIT RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
SELECT MESSPUNKT, TRUNC (ZEITPUNKT) TAG,
       ROUND (AVG (MESSWERT), 2) DURCHSCHNITT
  FROM MESSWERT
 WHERE (MESSPUNKT, MESSWERT) NOT IN
       (SELECT MESSPUNKT, MAX(MESSWERT)
          FROM MESSWERT
         GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT))
   AND (MESSPUNKT, MESSWERT) NOT IN
       (SELECT MESSPUNKT, MIN(MESSWERT)
          FROM MESSWERT
         GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT))
   AND (MESSPUNKT, MESSWERT) NOT IN
       (SELECT MESSPUNKT, MAX(MESSWERT)
          FROM MESSWERT
         WHERE (MESSPUNKT, MESSWERT) NOT IN
               (SELECT MESSPUNKT, MAX(MESSWERT)
                  FROM MESSWERT
                 GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT))
         GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT))
   AND (MESSPUNKT, MESSWERT) NOT IN
       (SELECT MESSPUNKT, MIN(MESSWERT)
          FROM MESSWERT
         WHERE (MESSPUNKT, MESSWERT) NOT IN
               (SELECT MESSPUNKT, MIN(MESSWERT)
                  FROM MESSWERT
                 GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT))
         GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT))
GROUP BY MESSPUNKT, TRUNC(ZEITPUNKT) !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C !
 
MESSPUNKT         :  G1
TAG               :  15-APR-98
DURCHSCHNITT      :   1.1933000000000000000000000000000000000E+02
-----------------------------------------------------------------
MESSPUNKT         :  G2
TAG               :  15-APR-98
DURCHSCHNITT      :   2.6090000000000000000000000000000000000E+01
-----------------------------------------------------------------
MESSPUNKT         :  G2
TAG               :  16-APR-98
DURCHSCHNITT      :   9.4960000000000000000000000000000000000E+01
 
resultcount :                     3
 
Enter command:
DROP TABLE MESSWERT !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST   ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE MITARBEITER (
MA_NO FIXED(4) PRIMARY KEY,
NAME  VARCHAR (10) NOT NULL)!
 
Enter command:
INSERT INTO MITARBEITER VALUES (1, 'Schmidt')!
 
Enter command:
INSERT INTO MITARBEITER VALUES (2, 'Paulus')!
 
Enter command:
CREATE TABLE STEMPELKARTEN (
MA_NO      FIXED (4) REFERENCES MITARBEITER,
PROJEKT    VARCHAR (10) NOT NULL,
STARTDATUM DATE NOT NULL,
ENDDATUM   DATE NOT NULL,
PRIMARY KEY (MA_NO, PROJEKT, STARTDATUM))!
 
Enter command:
SET FORMAT EUR !
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P1','01.01.1998','03.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P2','02.01.1998','04.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P1','02.01.1998','03.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P2','02.01.1998','04.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P3','03.01.1998','05.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P3','04.01.1998','05.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P4','06.01.1998','09.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P4','06.01.1998','09.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P5','09.01.1998','09.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P6','09.01.1998','09.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P6','09.01.1998','10.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P5','09.01.1998','09.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P7','12.01.1998','15.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P7','12.01.1998','15.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P8','13.01.1998','14.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P8','13.01.1998','14.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P9','14.01.1998','14.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P9','14.01.1998','14.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(1,'P10','17.01.1998','17.01.1998')!
 
Enter command:
INSERT INTO STEMPELKARTEN VALUES(2,'P10','17.01.1998','18.01.1998')!
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
SELECT M.NAME, T1.STARTDATUM, MIN(T2.ENDDATUM) ENDDATUM
  FROM STEMPELKARTEN T1, STEMPELKARTEN T2, MITARBEITER M
 WHERE T1.ENDDATUM <= T2.ENDDATUM
   AND T1.MA_NO = T2.MA_NO
   AND NOT EXISTS
          (SELECT *
             FROM STEMPELKARTEN T3
            WHERE T1.MA_NO = T3.MA_NO
              AND T1.STARTDATUM > T3.STARTDATUM
              AND T1.STARTDATUM <= T3.ENDDATUM)
   AND NOT EXISTS
          (SELECT *
             FROM STEMPELKARTEN T3
            WHERE T1.MA_NO = T3.MA_NO
              AND T2.ENDDATUM >= T3.STARTDATUM
              AND T2.ENDDATUM < T3.ENDDATUM)
   AND T1.MA_NO = M.MA_NO
 GROUP BY M.NAME, T1.STARTDATUM !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C !
 
NAME       | STARTDATUM | ENDDATUM
-----------+------------+-----------
Paulus     | 19980102   | 19980105
Paulus     | 19980106   | 19980110
Paulus     | 19980112   | 19980115
Paulus     | 19980117   | 19980118
Schmidt    | 19980101   | 19980105
Schmidt    | 19980106   | 19980109
Schmidt    | 19980112   | 19980115
Schmidt    | 19980117   | 19980117
 
resultcount :                     8
 
Enter command:
SELECT M.NAME, T1.STARTDATUM, MIN(T2.ENDDATUM) ENDDATUM
  FROM STEMPELKARTEN T1, STEMPELKARTEN T2, MITARBEITER M
 WHERE T1.ENDDATUM <= T2.ENDDATUM
   AND T1.MA_NO = T2.MA_NO
   AND NOT EXISTS
          (SELECT *
             FROM STEMPELKARTEN T3
            WHERE T1.MA_NO = T3.MA_NO
              AND ((T1.STARTDATUM > T3.STARTDATUM
              AND   T1.STARTDATUM <= T3.ENDDATUM)
               OR  (T2.ENDDATUM >= T3.STARTDATUM
              AND   T2.ENDDATUM < T3.ENDDATUM)))
   AND T1.MA_NO = M.MA_NO
 GROUP BY M.NAME, T1.STARTDATUM !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B, :C !
 
NAME       | STARTDATUM | ENDDATUM
-----------+------------+-----------
Paulus     | 19980102   | 19980105
Paulus     | 19980106   | 19980110
Paulus     | 19980112   | 19980115
Paulus     | 19980117   | 19980118
Schmidt    | 19980101   | 19980105
Schmidt    | 19980106   | 19980109
Schmidt    | 19980112   | 19980115
Schmidt    | 19980117   | 19980117
 
resultcount :                     8
 
Enter command:
DROP TABLE MITARBEITER !
 
Enter command:
DROP TABLE STEMPELKARTEN !
 
Enter command:
COMMIT WORK RELEASE!
 
Enter command:
FILE CONNECT ( KERN TEST SQLMODE ORACLE !
 
Enter command:
CONNECT KERN IDENTIFIED BY TEST SQLMODE ORACLE ISOLATION LEVEL 1 !
 
Enter command:
CREATE TABLE AUFTRAG_KOPF (
AUFTRAG_ID INTEGER CONSTRAINT AUFTRAG_KOPF_PK PRIMARY KEY,
BESTELLER  VARCHAR(15) NOT NULL) !
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (1, 'Hansen')!
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (2, 'Paulsen')!
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (3, 'Petersen')!
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (4, 'Klausen')!
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (5, 'Feddersen')!
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (6, 'Feddersen')!
 
Enter command:
INSERT INTO AUFTRAG_KOPF VALUES (7, 'Feddersen')!
 
Enter command:
COMMIT!
 
Enter command:
CREATE TABLE ARTIKEL (
ARTIKEL_ID  INTEGER CONSTRAINT ARTIKEL_PK PRIMARY KEY,
BEZEICHNUNG VARCHAR(15) NOT NULL)!
 
Enter command:
INSERT INTO ARTIKEL VALUES (1, 'Hammer')!
 
Enter command:
INSERT INTO ARTIKEL VALUES (2, 'Zange')!
 
Enter command:
INSERT INTO ARTIKEL VALUES (3, 'Feder')!
 
Enter command:
INSERT INTO ARTIKEL VALUES (4, 'Zollstock')!
 
Enter command:
INSERT INTO ARTIKEL VALUES (5, 'Schluessel')!
 
Enter command:
COMMIT!
 
Enter command:
CREATE TABLE AUFTRAG_POSITION (
AUFTRAG_ID INTEGER CONSTRAINT AP_AUF_FK REFERENCES AUFTRAG_KOPF,
POS_ID     INTEGER,
ARTIKEL_ID INTEGER CONSTRAINT AP_ART_FK REFERENCES ARTIKEL,
MENGE      INTEGER NOT NULL,
CONSTRAINT AUFTRAG_POSITION_PK PRIMARY KEY (AUFTRAG_ID, POS_ID),
CONSTRAINT AUFTRAG_POSITION_UK UNIQUE (AUFTRAG_ID, ARTIKEL_ID))!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (1,1,1,1)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (1,2,2,2)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (1,3,3,3)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (1,4,4,4)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (1,5,5,5)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (2,1,2,1)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (2,2,1,2)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (3,1,1,2)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (3,2,2,1)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (4,1,3,3)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (4,2,4,4)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (4,3,5,5)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (5,1,3,3)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (5,2,4,4)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (5,3,5,5)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (6,1,3,3)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (6,2,4,3)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (6,3,5,5)!
 
Enter command:
INSERT INTO AUFTRAG_POSITION VALUES (7,1,1,1)!
 
Enter command:
COMMIT!
 
Enter command:
SELECT AK1.AUFTRAG_ID, COUNT(*) ANZAHL
  FROM AUFTRAG_KOPF AK1, AUFTRAG_KOPF AK11
 WHERE AK1.AUFTRAG_ID =
      (SELECT MIN (AK2.AUFTRAG_ID)
         FROM AUFTRAG_KOPF AK2
        WHERE AK1.AUFTRAG_ID >= AK2.AUFTRAG_ID
          AND NOT EXISTS
             ((SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK1.AUFTRAG_ID
               MINUS
               SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK2.AUFTRAG_ID)
               UNION ALL
              (SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK2.AUFTRAG_ID
               MINUS
               SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK1.AUFTRAG_ID)))
   AND AK1.AUFTRAG_ID <= AK11.AUFTRAG_ID
   AND NOT EXISTS
((SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK1.AUFTRAG_ID
               MINUS
               SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK11.AUFTRAG_ID)
               UNION ALL
              (SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK11.AUFTRAG_ID
               MINUS
               SELECT AP.ARTIKEL_ID, AP.MENGE
                 FROM AUFTRAG_POSITION AP
                WHERE AP.AUFTRAG_ID = AK1.AUFTRAG_ID))
 GROUP BY AK1.AUFTRAG_ID !
 
***ERROR  -8010 Table name must be in from list                            0289
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
SELECT K2.AUFTRAG_ID, COUNT(*)
  FROM AUFTRAG_KOPF K1, AUFTRAG_KOPF K2
 WHERE (K1.AUFTRAG_ID, K2.AUFTRAG_ID) IN
       (SELECT P6.AUFTRAG_ID, MIN(P5.AUFTRAG_ID)
          FROM AUFTRAG_KOPF P5, AUFTRAG_KOPF P6
         WHERE P5.AUFTRAG_ID <= P6.AUFTRAG_ID
           AND NOT EXISTS
              (SELECT *
                 FROM AUFTRAG_POSITION P1,
                      AUFTRAG_POSITION P2
                WHERE P6.AUFTRAG_ID = P2.AUFTRAG_ID
                  AND P5.AUFTRAG_ID = P1.AUFTRAG_ID
                  AND P1.AUFTRAG_ID <= P2.AUFTRAG_ID
                  AND ((P1.ARTIKEL_ID = P2.ARTIKEL_ID
                        AND
                        P1.MENGE <> P2.MENGE)
                     OR NOT EXISTS
                       (SELECT ARTIKEL_ID
                          FROM AUFTRAG_POSITION P3
                         WHERE P3.AUFTRAG_ID = P2.AUFTRAG_ID
                           AND P3.ARTIKEL_ID = P1.ARTIKEL_ID)
                     OR NOT EXISTS
                       (SELECT *
                          FROM AUFTRAG_POSITION P4
                         WHERE P4.AUFTRAG_ID = P1.AUFTRAG_ID
                           AND P4.ARTIKEL_ID = P2.ARTIKEL_ID)
                       )
              )
           GROUP BY P6.AUFTRAG_ID)
GROUP BY K2.AUFTRAG_ID !
 
resultcount :                     0
 
Enter command:
FETCH INTO :A, :B !
 
AUFTRAG_ID            | EXPRESSION1
----------------------+------------
                    1 |           1
                    2 |           2
                    4 |           2
                    6 |           1
                    7 |           1
 
resultcount :                     5
 
Enter command:
SELECT K2.AUFTRAG_ID, COUNT(*)
  FROM AUFTRAG_KOPF K1, AUFTRAG_KOPF K2
 WHERE (K1.AUFTRAG_ID, K2.AUFTRAG_ID) IN
       (SELECT P6.AUFTRAG_ID, MIN(P5.AUFTRAG_ID)
          FROM AUFTRAG_KOPF P5, AUFTRAG_KOPF P6
         WHERE P5.AUFTRAG_ID = P6.AUFTRAG_ID
            OR (P5.AUFTRAG_ID < P6.AUFTRAG_ID
            AND EXISTS
               (SELECT *
                  FROM AUFTRAG_POSITION P1,
                       AUFTRAG_POSITION P2
                 WHERE P6.AUFTRAG_ID = P2.AUFTRAG_ID
                   AND P5.AUFTRAG_ID = P1.AUFTRAG_ID
                   AND P1.ARTIKEL_ID = P2.ARTIKEL_ID
                   AND P1.MENGE      = P2.MENGE
                HAVING 2 * COUNT(*) =
                       (SELECT COUNT(*)
                         FROM AUFTRAG_POSITION P3
                        WHERE P3.AUFTRAG_ID IN
                           (P5.AUFTRAG_ID, P6.AUFTRAG_ID)
                       )
              ))
           GROUP BY P6.AUFTRAG_ID
GROUP BY K2.AUFTRAG_ID !
 
***ERROR  -3008 Invalid keyword or missing delimiter                       0460
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
SELECT K2.AUFTRAG_ID, COUNT(*)
  FROM AUFTRAG_KOPF K1, AUFTRAG_KOPF K2
 WHERE (K1.AUFTRAG_ID, K2.AUFTRAG_ID) IN
       (SELECT P6.AUFTRAG_ID, MIN(P5.AUFTRAG_ID)
          FROM AUFTRAG_KOPF P5, AUFTRAG_KOPF P6
         WHERE (P5.AUFTRAG_ID = P6.AUFTRAG_ID
            OR  P5.AUFTRAG_ID <= P6.AUFTRAG_ID
            AND NOT EXISTS
               (SELECT *
                  FROM AUFTRAG_POSITION P1,
                       AUFTRAG_POSITION P2
                 WHERE P6.AUFTRAG_ID = P2.AUFTRAG_ID (+)
                   AND P5.AUFTRAG_ID = P1.AUFTRAG_ID
                   AND P1.ARTIKEL_ID = P2.ARTIKEL_ID (+)
                   AND P1.MENGE      = P2.MENGE (+)
                   AND P2.AUFTRAG_ID IS NULL
                UNION ALL
                SELECT *
                  FROM AUFTRAG_POSITION P1,
                       AUFTRAG_POSITION P2
                 WHERE P6.AUFTRAG_ID     = P2.AUFTRAG_ID
                   AND P5.AUFTRAG_ID     = P1.AUFTRAG_ID (+)
                   AND P1.ARTIKEL_ID (+) = P2.ARTIKEL_ID
                   AND P1.MENGE (+)      = P2.MENGE
                   AND P1.AUFTRAG_ID IS NULL
              ))
           GROUP BY P6.AUFTRAG_ID)
GROUP BY K2.AUFTRAG_ID !
 
***ERROR  -7011 Correlated subquery not allowed                            0342
 
Enter command:
FETCH INTO :A, :B !
 
***ERROR  -4000 Unknown result table                                       0001
 
Enter command:
DROP TABLE AUFTRAG_KOPF !
 
Enter command:
DROP TABLE ARTIKEL !
 
Enter command:
DROP TABLE AUFTRAG_POSITION !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDWNK!
 
Enter command:
CONNECT SUT IDENTIFIED BY SUT !
 
Enter command:
DROP USER KERN !
 
Enter command:
COMMIT WORK RELEASE !
 
Enter command:
FILE SHUTDOWN !
 
Enter command:
DBMCLI SUPERDBA,COLDUSER!
UTIL_CONNECT SUT,SUT!
OK
 
DB_OFFLINE!
OK
 
BYE!
 
Enter command:
VDNEXIT!
SESSION END
 
