*   *ID* TABLEAS  VDNTEST  changed on 1992-09-28-13.28.23 by ADMIN     *
file xinitdbk !
file connect ( kern test !
create table t1 (s1 int, s2 char (10), s3 long) !
    insert t1 values (1, 'Hallo', 'long value') !
    insert t1 values (1, 'BYE BYE', NULL) !
file sel_cols_tab ( T1 !
    select * from t1 !
    fetch !
    commit !
create table t2 
  as select * from t1 !
file sel_cols_tab ( T2 !
    select * from t2 !
    fetch !
    rollback !
create table t2 (s1, s2)
  as select s1, s2 from t1 !
file sel_cols_tab ( T2 !
    select * from t2 !
    fetch !
    rollback !
create table temp.t2 ignore rollback
  as select s1, s2 from t1 !
    commit !
file sel_cols_1tab ( TEMP T2 !
    select * from temp.t2 !
    fetch !
create table t3
  as select * from temp.t2 !
file sel_cols_tab ( T3 !
    select * from t3 !
    fetch !
    rollback !
    drop table temp.t2 !
    commit !
create table kern.t2 (a1, a2, a3, primary key(a2))
  as select * from t1 !
create table t3
  as select * from t2 where t2.a1 in (select s1 from t1) !
file sel_cols_tab ( T3 !
    select * from t3 !
    fetch !
    rollback !
create table t2 (primary key(s2))
  as select * from t1 !
create table t3 (foreign key link1 (s2) references t2 on delete cascade)
  as select * from t1 !
file sel_cols_tab ( T3 !
    select * from t3 !
    fetch !
    rollback !
create table t2 (constraint c1_t2 unique(s4, s2))
  as select *, syskey s4 from t1 !
drop table t2 !
create table t2 (constraint c1_t2 unique(s3, s2))
  as select s1, s2, syskey s3 from t1 !
file sel_cols_tab ( T2 !
    select * from t2 !
    fetch !
    rollback !
create table t2
  as select (s1 - 1) s1, s2 from t1 !
create view v1
  as select * from t1 where t1.s1 not in (select s1 from t2) !
create table t3
  as select s1, s2 from v1 !
file sel_cols_tab ( T3 !
    select * from t3 !
    fetch !
    rollback !
create table t2
  as select sum(s1), s2 from t1 group by s2!
file sel_cols_tab ( T2 !
    select * from t2 !
    fetch !
    rollback !
create table t2 (primary key (s1))
  as select * from t1 !
    select * from t2 !
    fetch !
    rollback !
create table t2 (primary key (s1))
  as select * from t1 ignore duplicates !
    select * from t2 !
    fetch !
    rollback !
create table t2 (primary key (s1))
  as select * from t1 reject duplicates!
    select * from t2 !
    fetch !
    rollback !
create table t2 (primary key (s1))
  as select * from t1 update duplicates!
    select * from t2 !
    fetch !
    rollback !
parsing !
create table t2
  as select * from t1 !
    executing !
    create !
    1
    executing !
    create !
    1
    pars_execute !
drop table t2 !
executing !
create !
1
pars_execute !
    select * from t2 !
    fetch !
    rollback !
alter table t1 add (s4 integer) !
executing !
create !
1

pars_execute !
rollback !
parsing !
parse create table t2 as select * from t1 !
executing !
create !
1

pars_execute !
select * from t2 !
fetch !
rollback !
executing !
parsing !
parse create table t2 as select * from t1 !
pars_execute !
alter table t1 add (s4 integer) !
executing !
create !
1

pars_execute !
rollback !
pars_then_ex !
data !
create table t2 as select * from t1 where s2 = :a or s2 = :b !
c 10 'Hallo'
c 10 'BYE BYE'

pars_execute !
select * from t2 !
fetch !
rollback !
 * --------------------------------------------------------------
 * incorrect creates --------------------------------------------
 * --------------------------------------------------------------!
create table t2
  as select s1, s2 from t1 order by s2!
*
file sel_table !
*
create table x ( a date , b char (8))!
insert x values (date, 'abcdefgh')!
create table x1 as select * from x !
insert x1 values ('19940603', 'zyxwvuts')!
select * from x1 !
fetch!
CREATE TABLE T ( A FIXED(12,2))!
INSERT T SET A =3.45!
CREATE TABLE Tneu AS SELECT * FROM T !
file sel_cols_tab ( T !
file sel_cols_tab ( TNEU !
SELECT * FROM T  !
FETCH!
SELECT * FROM Tneu !
FETCH!
* check, if correct error positions are returned 
errormsg long !
create     table      tnew      as     select   *   from T where b = 1 !
create     table      tnew  (constraint x   check  b   >  0)    
        as     select   *   from T !
* check, if constraints are compactified correctly
create     table      tnew  (constraint x   check  a   >  0)    
        as     select   *   from T !
select * from sysdd.constraints where tablename = 'TNEW' !
fetch !
commit release !
* PTS 1120890-1 !
CONNECT kern test!
CREATE TABLE L ( A LONG, B CHAR (25))!
INSERT L VALUES ('das ist der long', 'xxx')!
* long was in resulttable !
declare curs cursor for select * from l for reuse!
create table l2 as select * from curs !
select * from l2 !
fetch!
* long comes directly from systemtable --> error !
create table xyz as select * from domain.tables!
select * from xyz !
fetch1 !
* long comes from systemview, but is NULL !
declare cu cursor for select * from domain.tables 
where owner = 'KERN' for reuse!
fetch1 cu!
create table xyz1 as select * from cu !
select * from xyz1!
fetch1!
* long comes from systemview, is <> NULL --> error !
declare cu cursor for select * from domain.tables 
where owner = 'DOMAIN' and tablename = 'COLUMNS' for reuse!
create table xyz2 as select * from cu !
select * from xyz2!
fetch1!
drop table l !
drop table l2!
drop table xyz !
drop table xyz1!
drop table xyz2!
commit release !
* PTS 1133536/7 !
file connect ( kern test !
CREATE TABLE test1 (
  id1 INTEGER)!
insert test1 values (1)!
CREATE TABLE test2 (
  id2 INTEGER)!
insert test2 values (1)!
CREATE TABLE test4
AS
SELECT * FROM test1 t1,
(SELECT * FROM test2) t2
WHERE t1.id1=t2.id2!
select * from test4 !
fetch!
rollback release !
file shutdwnk !
vdnexit !
