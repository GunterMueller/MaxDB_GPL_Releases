file xinitdbk!
file connect ( kern test !
create table abc (
a   int not null,
b   int not null,
c   int )!
create table emp (
eno   int      not null,
ename char(10) not null,
sal   int )!
insert emp values (1, 'Adams',    100) !
insert emp values (2, 'Brooks',   200) !
insert emp values (3, 'Crispin',  200) !
insert emp values (4, 'Drew',     300) !
insert emp values (5, 'Endicott', 400) !
insert emp values (6, 'Fogarty',  400) !
insert emp values (7, 'Goddard',  200) !
select count(*) from abc group by a!
select a, count(*)
  from abc
  group by a !
select a, count(a)
  from abc
  group by a !
select count(*)
  from abc
  group by a !
select count(distinct a)
  from abc
  group by a !
select count(a)
  from abc
  group by a !
select count(*)
  from abc !
fetch!
select count(distinct a)
  from abc !
fetch!
select count(a)
  from abc !
fetch!
select sum(a)
  from abc !
fetch!
select sum(c)
  from abc !
fetch!
select sum(a)
  from abc
  group by a !
select * from emp where sal >
         all(select count(*) from abc group by a)!
select * from emp where sal >
         all(select count(*) from abc)!
select * from emp where sal >
         all(select sum(a) from abc group by a)!
select * from emp where sal >
         (select count(*) from abc group by a)!
select * from emp where sal >
         (select count(*) from abc)!
select * from emp where sal >
         (select count(*) from abc group by a )!
select * from emp where sal >
         (select sum(a) from abc group by a)!
rollback release !
file connect ( kern test !
create table statistik (kdnr   decimal not null,
                        monat  decimal not null,
                        umsatz decimal not null)!
insert statistik values (1, 1, 100)!
insert statistik values (3, 1, 200)!
insert statistik values (1, 3, 500)!
insert statistik values (2, 4, 100)!
insert statistik values (3, 4, 300)!
insert statistik values (1, 7, 800)!
insert statistik values (2, 7, 900)!
insert statistik values (3,10, 200)!
insert statistik values (2,11,1000)!
insert statistik values (1,12, 200)!
insert statistik values (3,12, 500)!
select a.kdnr, a.monat, a.umsatz,
       sum (b.umsatz) kumumsatz
from statistik a, statistik b
where a.kdnr = b.kdnr
  and a.monat >= b.monat
group by a.kdnr, a.monat, a.umsatz
order by a.kdnr, a.monat !
fetch!
rollback release !
file connect ( kern test !
create table personen (pers_nr decimal (6),
                       name    char   (30))!
insert into personen values (1, 'Schmitz,Peter')!
insert into personen values (2, 'Hofer,Anette')!
insert into personen values (3, 'Moericke,Michael')!
create table sprache (pers_nr decimal (6),
                      sprache char (12))!
insert into sprache values (1, 'Englisch')!
insert into sprache values (1, 'Tuerkisch')!
insert into sprache values (1, 'Arabisch')!
insert into sprache values (2, 'Englisch')!
insert into sprache values (2, 'Franzoesisch')!
insert into sprache values (3, 'Englisch')!
insert into sprache values (3, 'Spanisch')!
insert into sprache values (3, 'Russisch')!
create table anforderung (sprache char (12))!
insert into anforderung values ('Arabisch')!
insert into anforderung values ('Englisch')!
select pers_nr, name
  from personen p
 where not exists
       (select *
         from anforderung a
         where not exists
               (select * from sprache s
                 where s.pers_nr = p.pers_nr
                   and s.sprache = a.sprache))!
fetch !
select pers_nr, name
  from personen p, (select count(*) cnt from anforderung) acnt
 where acnt.cnt = (select count (*) 
                     from anforderung a, sprache s
                    where s.sprache = a.sprache
                      and s.pers_nr = p.pers_nr) ! 
fetch !
select p.name
  from personen p
 where p.pers_nr in
       (select s.pers_nr
          from sprache s, anforderung a
         where s.sprache = a.sprache
         group by s.pers_nr
         having count (*) =
                (select count (*) from anforderung)) !
fetch!
select p.pers_nr, p.name
  from personen p
 where not exists
       (select a.sprache
          from anforderung a
        except
        select s.sprache
          from sprache s
         where p.pers_nr = s.pers_nr) !
fetch!
select pers_nr, name
  from personen p
 where not exists
       (select *
          from sprache s, anforderung a
         where s.sprache(+) = a.sprache
           and s.pers_nr(+) = p.pers_nr
           and s.sprache is null) !
fetch!
select pers_nr, name
  from personen p
 where not exists
       (select *
          from sprache s, anforderung a
         where s.sprache(+) = a.sprache
           and s.pers_nr(+) = p.pers_nr)!
fetch!
rollback release !
file connect ( sut sut !
create user sag password sag dba !
commit release !
file connect ( sag sag!
* Das UPDATE lief bis 6.1.15.7 8.2.96 nicht. in vak59 war 
* beim a54_in_buf-Aufruf nur v1len statt 40 + v1len benutzt worden. !
* Die Joinview 
CREATE TABLE "SAG           "."PLATFORM          " (
"HW_OS" FIXED     (4,0) ,
"OPSYS" CHAR      (18) ASCII    ,
"OS_VERS" CHAR      (30) ASCII    ,
"VENDOR" CHAR      (30) ASCII    ,
"TECHNICAL_ID" CHAR      (30) ASCII    ,
"OS_GROUP" CHAR      (30) ASCII    ,
"DEV_PLATF" CHAR      (5) ASCII    ,
"OPEN_SYS" CHAR      (5) ASCII    ,
"MAIN_DATE" DATE      ,
"COMPATIBLE_TO" CHAR      (10) ASCII    ,
"EXPIRATION" DATE      ,
"CD_ROM" CHAR      (12) ASCII    ,
"LEVEL" CHAR      (10) ASCII    ,
"ADD_INFO" CHAR      (250) ASCII    ,
"MOD_DATE" DATE      ,
"HARDWARE" CHAR      (30) ASCII    ,
"BETRIEBSSYSTEM" CHAR      (10) ASCII    ,
"MAIN_STOP" DATE
, PRIMARY KEY ("HW_OS"
))
!
CREATE TABLE "SAG           "."PRODUCT_ID        " (
"PRODUCT_CODE" CHAR      (10) ASCII    ,
"PRODUCT_NAME" CHAR      (60) ASCII    NOT NULL,
"MAIN_PROD" CHAR      (2) ASCII    ,
"STAT" CHAR      (10) ASCII    ,
"ADD_INFO" CHAR      (250) ASCII    ,
"UNIT" CHAR      (20) ASCII    ,
"GROUP_NO" CHAR      (4) ASCII    ,
"PROD_FAMILY" CHAR      (30) ASCII    ,
"SW_TYP" FIXED     (2,0) ,
"VERT" CHAR      (2) ASCII    ,
"DOKU" CHAR      (2) ASCII    ,
"RETIRED_DATE" DATE      ,
"RETIRED_USER" CHAR      (10) ASCII    ,
"NEW_DATE" DATE      ,
"NEW_USER" CHAR      (10) ASCII
, PRIMARY KEY ("PRODUCT_CODE"))
!
CREATE TABLE "SAG           "."PRODUCT           " (
"CODE" CHAR      (10) ASCII    ,
"VERS" CHAR      (6) ASCII    ,
"HW_OS" FIXED     (4,0) ,
"PP" CHAR      (10) ASCII    ,
"SPL" CHAR      (6) ASCII    ,
"PL" CHAR      (6) ASCII    ,
"STATUS" CHAR      (8) ASCII    ,
"PHASE" CHAR      (8) ASCII    ,
"DEV_END_FIRST" DATE      ,
"DEV_END_ACT" DATE      ,
"BETA_ST_FIRST" DATE      ,
"BETA_ST_ACT" DATE      ,
"GR_PLAN_FIRST" DATE      ,
"GR_PLAN_ACT" DATE      ,
"NEW_DATE" DATE      ,
"NEW_USER" CHAR      (6) ASCII    ,
"MOD_DATE" DATE      ,
"MOD_USER" CHAR      (6) ASCII    ,
"CANCEL_DATE" DATE      ,
"CANCEL_USER" CHAR      (6) ASCII    ,
"DEV_COMMENTS" CHAR      (254) ASCII    ,
"PUBLIC_COMMENTS" CHAR      (200) ASCII    ,
"DEV_END_LAST" DATE      ,
"GR_PLAN_LAST" DATE      ,
"COMMIT_ACT" DATE      ,
"COMMIT_LAST" DATE      ,
"CONFIDENCE_FACTOR" CHAR      (10) ASCII    ,
"FEATURES" CHAR      (250) ASCII    ,
"ADD_FEATURES" CHAR      (250) ASCII    ,
"PROJECT_NO" CHAR      (10) ASCII    ,
"COMMIT_FIRST" DATE      ,
"DEV_START" DATE      ,
"MP_PLAN" FIXED     (10,2) ,
"PROJ_TYP" CHAR      (5) ASCII
, PRIMARY KEY ("CODE", "VERS", "HW_OS" ))
!
ALTER TABLE "SAG           "."PRODUCT           " FOREIGN KEY
"PRODUCT_ID_PRODUCT"
("CODE              " ) REFERENCES "SAG           "."PRODUCT_ID        "
("PRODUCT_CODE      " ) ON DELETE RESTRICT
 !
ALTER TABLE "SAG           "."PRODUCT           " FOREIGN KEY
"PLAT_HWOS_PRODUCT "
("HW_OS             " ) REFERENCES "SAG           "."PLATFORM          "
("HW_OS             " ) ON DELETE RESTRICT
 !
 CREATE VIEW SPL AS SELECT CODE, VERS, OPSYS, PRODUCT_NAME, STATUS, PHASE,
      SPL, PL, PP, DEV_START, DEV_END_FIRST, DEV_END_ACT, BETA_ST_FIRST,
      BETA_ST_ACT, GR_PLAN_FIRST, GR_PLAN_ACT, COMMIT_FIRST, COMMIT_ACT
      , DEV_COMMENTS, PUBLIC_COMMENTS, PROJ_TYP, PROJECT_NO, MP_PLAN,
      PRODUCT.HW_OS, VENDOR
 FROM SAG.PRODUCT, SAG.PLATFORM, SAG.PRODUCT_ID
 WHERE PRODUCT.CODE = PRODUCT_ID.PRODUCT_CODE AND
       PRODUCT.HW_OS = PLATFORM.HW_OS AND (PRODUCT.STATUS = 'work'
           OR PRODUCT.STATUS = 'wait'
           OR PRODUCT.STATUS = 'hold')
           WITH CHECK OPTION !
insert into platform (hw_os) values (1049) !
insert into product_id (product_code, product_name) 
   values ('ADA', 'INTERNAL')!
insert into product (code, status, vers, hw_os)
             values ('ADA', 'work', '2.2.1', 1049)!
UPDATE OF "SPL" SET "GR_PLAN_FIRST" = '19960331'
  WHERE ("CODE" =  'ADA') AND ("VERS" =  '2.2.1') AND ("HW_OS" = 1049)!
rollback release!
file connect ( sut sut !
drop user sag !
commit release !
file shutdwnk !
vdnexit !
