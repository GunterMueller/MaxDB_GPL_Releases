*   *ID* UNIORACL VDNTEST  changed on 1992-09-28-13.28.50 by ADMIN     *
FILE XINITDBK !
file CONNECT ( KERN TEST !
CREATE TABLE T1 ( A FIXED(5) )!
INSERT T1 SET A = 1 !
INSERT T1 SET A = 2 !
INSERT T1 SET A = 3 !
INSERT T1 SET A = 4 !
INSERT T1 SET A = 5 !
INSERT T1 SET A = 2 !
INSERT T1 SET A = 3 !
INSERT T1 SET A = 4 !
CREATE TABLE T2 ( B FIXED(5) )!
INSERT T2 SET B = 3 !
INSERT T2 SET B = 4 !
INSERT T2 SET B = 5 !
INSERT T2 SET B = 6 !
INSERT T2 SET B = 7 !
INSERT T2 SET B = 4 !
INSERT T2 SET B = 5 !
INSERT T2 SET B = 6 !
COMMIT WORK RELEASE !
file CONNECT ( KERN TEST SQLMODE ORACLE !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
SELECT * FROM T2 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
SELECT * FROM T2 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
COMMIT WORK RELEASE !
file CONNECT ( KERN TEST SQLMODE ORACLE !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION
SELECT * FROM T2)
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
(SELECT * FROM T2
UNION
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION
SELECT * FROM T2)
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
(SELECT * FROM T2
INTERSECT
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION
SELECT * FROM T2)
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
(SELECT * FROM T2
MINUS
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT
SELECT * FROM T2)
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
(SELECT * FROM T2
UNION
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT
SELECT * FROM T2)
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
(SELECT * FROM T2
INTERSECT
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT
SELECT * FROM T2)
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
(SELECT * FROM T2
MINUS
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS
SELECT * FROM T2)
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
(SELECT * FROM T2
UNION
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS
SELECT * FROM T2)
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
(SELECT * FROM T2
INTERSECT
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS
SELECT * FROM T2)
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
(SELECT * FROM T2
MINUS
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
COMMIT WORK RELEASE !
file CONNECT ( KERN TEST SQLMODE ORACLE !
SELECT * FROM T1
UNION ALL
SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION ALL
SELECT * FROM T2)
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
(SELECT * FROM T2
UNION
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION ALL
SELECT * FROM T2)
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
(SELECT * FROM T2
INTERSECT
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION ALL
SELECT * FROM T2)
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
(SELECT * FROM T2
MINUS
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2)
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
(SELECT * FROM T2
UNION
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2)
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
(SELECT * FROM T2
INTERSECT
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2)
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
(SELECT * FROM T2
MINUS
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS ALL
SELECT * FROM T2)
UNION
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
(SELECT * FROM T2
UNION
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS ALL
SELECT * FROM T2)
INTERSECT
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
(SELECT * FROM T2
INTERSECT
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS ALL
SELECT * FROM T2)
MINUS
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
(SELECT * FROM T2
MINUS
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
COMMIT WORK RELEASE !
file CONNECT ( KERN TEST SQLMODE ORACLE !
SELECT * FROM T1
UNION ALL
SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION ALL
SELECT * FROM T2)
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
(SELECT * FROM T2
UNION ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION ALL
SELECT * FROM T2)
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
(SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION ALL
SELECT * FROM T2)
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION ALL
(SELECT * FROM T2
MINUS ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2)
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
(SELECT * FROM T2
UNION ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2)
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
(SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT ALL
SELECT * FROM T2)
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT ALL
(SELECT * FROM T2
MINUS ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS ALL
SELECT * FROM T2)
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
(SELECT * FROM T2
UNION ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS ALL
SELECT * FROM T2)
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
(SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS ALL
SELECT * FROM T2)
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS ALL
(SELECT * FROM T2
MINUS ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
COMMIT WORK RELEASE !
file CONNECT ( KERN TEST SQLMODE ORACLE !
SELECT * FROM T1
UNION
SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION
SELECT * FROM T2)
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
(SELECT * FROM T2
UNION ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION
SELECT * FROM T2)
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
(SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
UNION
SELECT * FROM T2)
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
UNION
(SELECT * FROM T2
MINUS ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT
SELECT * FROM T2)
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
(SELECT * FROM T2
UNION ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT
SELECT * FROM T2)
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
(SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
INTERSECT
SELECT * FROM T2)
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
INTERSECT
(SELECT * FROM T2
MINUS ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS
SELECT * FROM T2)
UNION ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
(SELECT * FROM T2
UNION ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS
SELECT * FROM T2)
INTERSECT ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
(SELECT * FROM T2
INTERSECT ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
SELECT * FROM T2
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR (SELECT * FROM T1
MINUS
SELECT * FROM T2)
MINUS ALL
SELECT * FROM T1 !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
MINUS
(SELECT * FROM T2
MINUS ALL
SELECT * FROM T1) !
FETCH C INTO :A !
CLOSE C !
DECLARE C CURSOR FOR SELECT * FROM T1
EXCEPT
SELECT * FROM T2
EXCEPT ALL
SELECT * FROM T1 !
COMMIT WORK RELEASE !
* ADIS 1001130 !
file connect ( kern test !
create table t (
ch char (8),
fi fixed (12),
fl float (7)) !
insert into t values ('aaaa', 123456789012, 5e17)!
insert into t values ('a8a8a8a8', 3e11, 87654.32)!
select ch from t union select fi from t!
select ch from t union select fl from t!
select fi from t union select ch from t!
select fl from t union select ch from t!
commit release !
file connect ( kern test sqlmode oracle !
create table c as select ch from t union select fi from t!
select * from c !
fetch into :a !
file sel_cols_tab ( C !
drop table c !
create table c as select ch from t union select fl from t!
select * from c !
fetch into :a !
file sel_cols_tab ( C !
drop table c !
create table c as select fi from t union select ch from t!
select * from c !
fetch into :a !
file sel_cols_tab ( C !
drop table c !
create table c as select fl from t union select ch from t!
select * from c !
fetch into :a !
file sel_cols_tab ( C !
drop table c !
drop table t !
commit work release !
file shutdwnk !
vdnexit !
