file xinitdbk!
file connect ( kern test!

create table Tab1(
uk1 char(10) ascii,
uk2 integer,
u1  float(18),
u2  char (1000),
u3  fixed(18,9),
u4  int,
u5  char (20) not null,
primary key(uk1, uk2))!

insert Tab1 values ('a', 0, null, null, null, null, 'AAA') !
insert Tab1 values ('a', 1, 11.111, 'zz', 1.11111, 111, 'BBB') !
insert Tab1 values ('a', 2, 11.111, 'zz', null   , 111, 'CCC') !
insert Tab1 values ('a', 3, 11.111, null, null   , 222, 'DDD') !
insert Tab1 values ('a', 4, null  , null, null   , 222, 'EEE') !
insert Tab1 values ('a1',1, 22.222, 'yy', 2.22222, 333, 'FFF') !
insert Tab1 values ('a1',2, null  , 'yy', 2.22222, 333, 'GGG') !
insert Tab1 values ('a1',3, null  , 'yy', null   , 444, 'HHH') !
insert Tab1 values ('a1',4, null  , null, null   , 444, 'III') !
insert Tab1 values ('a2',1, 33.333, 'xx', 3.33333, 555, 'JJJ') !
insert Tab1 values ('a2',2, 33.333, 'xx', 3.33333, 555, 'KKK') !
insert Tab1 values ('a2',3, null  , null, 3.33333, 666, 'LLL') !
insert Tab1 values ('a2',4, null  , null, null   , 666, 'MMM') !
commit!
create index "Tab1.u2"
	on Tab1( u2 ) !
create index "Tab1.u1"
	on Tab1( u1 ) !
update stat kern.Tab1 !

parsing!
insert tab1 set uk1=:uk1, uk2=:uk2, u2=:u2, u5=:u5!
executing!
* 61002020202020202020 muss im SELECT gefunden werden
* da 'a' < x'6100' HINWEIS a == x'61'
data!
insert!
1
b 10 61002020202020202020
n 10 1
c 1000 'yy'
c 20 'AAAAAAAAAABBBBBBBBBB'

nodata!

pars_execute!
* test for correct start/stopkey contruction with '<' and '>'
explain select uk1, uk2, u2 from tab1 
where uk1>'a' and uk2>=1 and u2 > 'y'!

select uk1, uk2, u2 from tab1 
where uk1 > 'a' and uk2 >= 1 and u2 > 'y'
for reuse !
fetch!
select uk1, uk2, u2 from tab1 
where uk1 >= 'a' and uk2 >= 1 and u2 > 'y'
for reuse !
fetch!

explain select uk1, uk2, u2 from Tab1
where uk1 > 'a' and uk2 >= 1 and u2 in ('y', 'yy', 'zz')!
select uk1, uk2, u2 from Tab1
where uk1 > 'a' and uk2 >= 1 and u2 in ('y', 'yy', 'zz')!
fetch!

commit release !

* fehler -9211 durch more qualification

file connect ( kern test !

CREATE TABLE "ticket" (
  OWNER_DUDE_ID INTEGER NOT NULL DEFAULT NULL,
  ARRIVED INTEGER NOT NULL DEFAULT 0,
  TICKET_TYPE_ID INTEGER NOT NULL DEFAULT NULL,
  TICKET_ID VARCHAR(29) NOT NULL DEFAULT NULL,
  SEATER_DUDE_ID INTEGER DEFAULT NULL,
  ORDER_ID INTEGER DEFAULT NULL,
  UPDATED INTEGER NOT NULL DEFAULT NULL,
  CREATED INTEGER NOT NULL DEFAULT NULL,
  SEAT_ID INTEGER DEFAULT NULL,
  USER_DUDE_ID INTEGER DEFAULT NULL,
  PRIMARY KEY(TICKET_ID)
)!

insert into "ticket" values (
43963, 43963, 43963, '43963', 43963, 43963, 
43963, 43963, 43963, 43963)!

explain SELECT *
FROM "ticket"
WHERE 43963 IN 
(owner_dude_id, seater_dude_id, user_dude_id)
ORDER BY ticket_type_id!

SELECT *
FROM "ticket"
WHERE 43963 IN 
(owner_dude_id, seater_dude_id, user_dude_id)
ORDER BY ticket_type_id!

CREATE INDEX "fk_SEATER_DUDE_ID" 
ON "ticket" (SEATER_DUDE_ID)!
CREATE INDEX "fk_ORDER_ID" 
ON "ticket" (ORDER_ID)!
CREATE INDEX "fk_TICKET_TYPE_ID" 
ON "ticket" (TICKET_TYPE_ID)!
CREATE INDEX "fk_USER_DUDE_ID" 
ON "ticket" (USER_DUDE_ID)!
CREATE INDEX "fk_OWNER_DUDE_ID" 
ON "ticket" (OWNER_DUDE_ID)!
CREATE UNIQUE INDEX "SEAT_ID" 
ON "ticket" (SEAT_ID)!

EXPLAIN SELECT ticket_type_id
FROM "ticket"
WHERE 43963 IN 
(owner_dude_id, seater_dude_id, user_dude_id)
ORDER BY ticket_type_id!


SELECT ticket_type_id
FROM "ticket"
WHERE 43963 IN 
(owner_dude_id, seater_dude_id, user_dude_id)
ORDER BY ticket_type_id!

commit work release!
file shutdwnk!
vdnexit!
