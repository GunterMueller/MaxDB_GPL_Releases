*   *ID* SETFUNC  VDNTEST  changed on 1992-09-28-13.28.05 by ADMIN     *
file xinitdbk !
file connect ( kern test !
CREATE TABLE T1 ( A CHAR (4),  B FIXED (3))!
INSERT T1 VALUES ('aaa', 1)!
INSERT T1 VALUES ('bbb', 1)!
SELECT A, AVG(B) FROM T1 GROUP BY A !
MFETCH !
3
SELECT DISTINCT A, AVG(B) FROM T1 GROUP BY A !
MFETCH !
3
SELECT A, AVG(B) FROM T1 GROUP BY A ORDER BY A!
MFETCH !
3
SELECT A, AVG(B) FROM T1 GROUP BY A HAVING A < 'z'!
MFETCH !
3
SELECT A, AVG(B) FROM T1 GROUP BY A HAVING AVG(B) < 1000!
MFETCH !
3
SELECT A, AVG(B) FROM T1 GROUP BY A HAVING A < 'z' ORDER BY A!
MFETCH !
3
CREATE TABLE T2 (A2 FIXED (5))!
INSERT T2 SET A2 = 45!
SELECT AVG(B) FROM T1, T2 !
MFETCH !
3
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 ORDER BY A2 !
MFETCH !
3
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 HAVING A < 'z'!
MFETCH !
3
SELECT A, A2, AVG(B) FROM T1, T2 GROUP BY A, A2 HAVING AVG(B) < 1000!
MFETCH !
3
ROLLBACK !
create table t ( a char (4) , b fixed(3))!
insert t values ('qqq', 4)!
insert t values ('aaa', 3)!
insert t values ('xxx', 1)!
insert t values ('ccc', 3)!
select b, a, count(a) from t where a > 'bb' group by a, b
     having count(a) < 10 and b > 2 order by 2!
fetch !
select b, a, count(a) from t where a > 'bb' group by a, b
                                    order by 2 desc !
mfetch !
5
select b, a, count(a) from t                group by a, b
     having count(a) < 10 and b > 2 order by 2!
fetch !
select b, a, count(a) from t where a > 'bb' group by a, b
     having count(a) < 10 and b > 2!
fetch !
select b, count(a) from t                group by  b
     having b > 3 !
fetch !
select b, a, count(a) from t where a > 'bb'
     having count(a) < 10 and b > 2 order by 2!
fetch !
select count(a) from t where a > 'bb'
     having count(a) < 10 and b > 2 order by 1!
fetch !
select count(a) from t where a > 'bb'
     having count(a) < 10 order by 1!
fetch !
pars_then_ex!
select b, a, count(a) from t where a > 'bb' group by a, b!
mfetch into :a, :b, :c!
2
mfetch into :a, :b, :c!
1
select b, a, count(a) from t where a > 'bb' group by a, b
     having count(a) < 10 and b > 2 order by 2!
fetch into :a, :b, :c!
pars_execute !
rollback !
create table t ( a char (4), b fixed (5))!
insert t values ('aaa', 3)!
select * from t!
fetch!
pars_then_ex!
data !
select b*:b, count(a) from t where a < :a group by b having b*:b > 0!
n 38 4
c 4 'rrr'
n 38 7

nodata !
fetch into :a, :b !
data !
select b*:b, count(a) from t where a < :a group by b having b*:b > 0!
n 38 4
c 4 'rrr'
n 38 7

nodata!
fetch into :A, :B !
pars_execute !
select * from t!
fetch!
pars_then_ex!
data !
select b*:b, count(a) from t where a < :a group by b having b*:b > 0!
n 38 4
c 4 'a'
n 38 7

nodata!
fetch into :a, :b !
data !
select b*:b, count(a) from t where a < :a group by b having b*:b > 0!
n 38 4
c 4 'rrr'
n 38 7

nodata!
fetch into :a, :b !
pars_execute !
rollback !
create table t ( a char (4), b fixed (3) )!
create table t1 (a1 char (4) )!
insert t set a = 'aaa', b = 4 !
insert t set a = 'ccc', b = 4 !
insert t set a = 'a11', b = 4 !
insert t1 set a1 = 'a11'!
insert t1 set a1 = 'yy'!
pars_then_ex !
data !
select a, a1, b*:a, count (a) from t, t1
group by a, b, a1!
n 38 3

nodata !
fetch into :a, :b, :c, :d !
data !
select b*:a, count (a) from t, t1
group by b!
n 38 3

nodata !
fetch into :a, :b !
data !
select a, a1, b*:a, count (a) from t, t1
where a <> a1
group by a, b, a1 !
n 38 3

nodata !
fetch into :a, :b, :c, :d !
data !
select a, a1, b*:a, count (a) from t, t1
                  where a <> a1 and a < 'fff' and b div 5 < 10
group by a !
nodata !
fetch into :a, :b, :c, :d !
data !
select a, b*:a, count (a) from t, t1
                  where a <> a1 and a < 'fff' and b div 5 < 10
group by a , b!
n 38 3

nodata !
mfetch into :a, :b, :c !
5
data !
select a, b*:a, count (a) from t, t1
                  where a <> a1 and a < 'fff' and b div 5 < 10
group by a, b
having count (*) > 1!
n 38 3

nodata !
fetch into :a, :b, :c!
data !
select a, b*:a, count (a) from t, t1
                  where a <> a1 and a < 'fff' and b div 5 < 10
group by a, b
having count (*) > 1 order by 3!
n 38 3

nodata !
fetch into :a, :b, :c !
data !
select a, a1, b*:a, count (a) from t, t1
                  where a <> a1 and a < 'fff' and b div 5 < 10
group by a, b, a1
having count (*) > 0 order by a1!
n 38 3

nodata !
fetch into :a, :b, :c, :d !
pars_execute!
rollback !
create table t ( a char (4), b fixed (3) )!
create table t1 (a1 char (4), b1 float (4))!
insert t set a = 'aaa', b = 4 !
insert t set a = 'ccc', b = 4 !
insert t set a = 'a11', b = 4 !
insert t1 set a1 = 'a11', b1 = 7!
insert t1 set a1 = 'yy', b1 = 12!
pars_then_ex !
data !
select a & a1, b*b1+:a from t, t1 !
n 38 3

nodata !
mfetch into :a,:b !
8
select length(a & a1), index (a & a1, 'cy'), count(*) from t, t1!
fetch into :a, :b, :c !
select length(a & a1), index (a & a1, 'cy'), count(*) from t, t1
group by a, a1!
fetch into :a, :b , :c !
select index ('aaa' & a,a1), 'aaa' & a, a1,
       index (a & a1, 'cy'), count(*) from t, t1
group by a, a1!
fetch into :a,:b,:c,:d,:e,:f !
pars_execute !
select b*b1+b1, count (a & a1) from t, t1 group by b,a,a1,b1
having b < 10 !
fetch !
select a, a1, min(b1) from t, t1 where a & a1 > 'ggg' group by a, a1!
fetch!
select a, a1, min(b1) from t, t1 group by a, a1 having a & a1 > 'ggg'!
fetch!
rollback !
create table kern.sysmsg (component char (12) ascii key,
language char(3) ascii key,
msgno fixed (5,0) key,
msgtext char (160) ascii )!
insert kern.sysmsg values ('easy', 'GER', 2000, 'blabal')!
insert kern.sysmsg values ('easy', 'eng', 2000, 'blabal')!
insert kern.sysmsg values ('quer', 'GER', 143, 'kkkkkl')!
insert kern.sysmsg values ('easy', 'GER', 2   , 'pppppp')!
insert kern.sysmsg values ('easy', 'GER', 5, 'tegeal')!
select distinct msgno, language, count(language) from kern.sysmsg
group by msgno, language
order by msgno, language !
mfetch!
9
select component, sum(msgno), avg(msgno) from kern.sysmsg
group by component having sum(msgno) > 100!
fetch!
mfetch first !
3
select avg (msgno), component from kern.sysmsg
group by component having sum (msgno) > 100 !
fetch!
pars_then_ex !
select distinct msgno, language, count(language) from kern.sysmsg
group by msgno, language
order by msgno, language !
mfetch into :a, :b, :c!
9
select component, sum(msgno), avg(msgno) from kern.sysmsg
group by component having sum(msgno) > 100!
fetch into :a, :b, :c!
select avg (msgno), component from kern.sysmsg
group by component having sum (msgno) > 100 !
fetch into :a, :b!
commit release !
pars_execute !
file setf1 !
file shutdwnk !
vdnexit !
