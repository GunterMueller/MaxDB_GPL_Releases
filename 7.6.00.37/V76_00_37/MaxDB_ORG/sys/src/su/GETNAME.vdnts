file xinitdbk!
file connect ( kern test !
create table timest ( t time, d date)!
insert timest values (time,date)!
grant select on timest to public !
commit release !
file connect ( sut sut !
create table suttab1 ( a char (8))!
grant all on suttab1 to public !
create table suttab2 ( a char (8))!
* will those tables 'behind' sut.<tabname> be seen ? !
create table kerntab1 ( a char (8))!
grant all on kerntab1 to public !
create table kerntab2 ( a char (8))!
grant all on kerntab2 to public !
create view sutv1 as select * from suttab2 !
grant all on sutv1 to public !
commit release !

file connect ( kern test !
create table kerntab1 ( a char (8))!
create table kerntab2 ( a char (8))!
create table kerntab3 ( a char (8))!
create user elke password elke resource !
grant all on kerntab1 to elke !
grant insert on kerntab3 to elke !
create synonym kernsyn3 for kerntab3 !
create public synonym kernpubsyn3 for kerntab3 !
create sequence kernseq1 !
grant select on kernseq1 to public !
create sequence kernseq2 !
create domain kerndom char (8) !
noscript !
CREATE DBPROC kernproc (IN aval CHAR(8)) AS
TRY
  INSERT kern.kerntab1 values (:aval);
CATCH
  IF $rc <> 200 THEN STOP ($rc, 'Unexpected error')
  ELSE STOP (200, 'duplicate value');
!
script !
commit release !

file connect ( elke elke !
create table elketab (a char (8))!
create synonym elkesyn for elketab !
create sequence elkeseq !
select owner,tablename,type 
  from sysdd.tables, kern.timest
 where tablename <> 'TIMEST'
   and 
       (("DATE" = d and "TIME" >= t) 
    or "DATE" > d) !
fetch! 
select get_schema ('elketab',       table) into :a from dual !
select get_schema ('kerntab1',      table) into :a from dual !
select get_schema ('kerntab2',      table) into :a from dual !
select get_schema ('kerntab3',      table) into :a from dual !
select get_schema ('suttab1',       table) into :a from dual !
select get_schema ('suttab2',       table) into :a from dual !
select get_schema ('"suttab1"',     table) into :a from dual !
select get_schema ('"SUTTAB1"',     table) into :a from dual !
select get_schema ('sut.suttab1',   table) into :a from dual !
select get_schema ('sysdba.suttab1',table) into :a from dual !
select get_schema ('kern.suttab1',  table) into :a from dual !
select get_schema ('sutv1',         table) into :a from dual !
select get_schema ('elkesyn',       table) into :a from dual !
select get_schema ('elkeseq',       table) into :a from dual !

select get_schema ('elketab',       view) into :a from dual !
select get_schema ('sutv1',         view) into :a from dual !
select get_schema ('sut.sutv1',     view) into :a from dual !
select get_schema ('elkesyn',       view) into :a from dual !

select get_schema ('elketab',       synonym) into :a from dual !
select get_schema ('sutv1',         synonym) into :a from dual !
select get_schema ('elkesyn',       synonym) into :a from dual !
select get_schema ('kernsyn3',      synonym) into :a from dual !
select get_schema ('kernpubsyn3',   synonym) into :a from dual !

select get_schema ('elkeseq',       sequence) into :a from dual !
select get_schema ('kernseq1',      sequence) into :a from dual !
select get_schema ('kernseq2',      sequence) into :a from dual !

select get_schema ('kerndom',         domain) into :a from dual !
select get_schema ('"KERN"."KERNDOM"',domain) into :a from dual !

select get_schema ('kernproc',      dbprocedure) into :a from dual !
select get_schema ('KERN.KERNPROC', dbproc)      into :a from dual !

select get_objectname ('elketab',       table) into :a from dual !
select get_objectname ('sut.suttab1',   table) into :a from dual !
select get_objectname ('elketab',       view) into :a from dual !
select get_objectname ('sut.sutv1',     view) into :a from dual !
select get_objectname ('elkesyn',       synonym) into :a from dual !
select get_objectname ('elke.elkesyn',  synonym) into :a from dual !
select get_objectname ('elkeseq',       sequence) into :a from dual !
select get_objectname ('elke.elkeseq',  sequence) into :a from dual !
select get_objectname ('kerndom',         domain) into :a from dual !
select get_objectname ('"KERN"."KERNDOM"',domain) into :a from dual !
select get_objectname ('kernproc',      dbprocedure) into :a from dual !
select get_objectname ('KERN.KERNPROC', dbproc)      into :a from dual !

select get_schema ('kerntab1',      table),
       get_objectname ('kerntab1',      table)
  into :a, :b from dual !

pars_then_ex !
data !
select get_schema (:a, table) into :a from dual !
c 74 'elketab'

select get_objectname (:a,  sequence) into :a from dual !
c 74 'elke.elkeseq'

select get_schema (:a, table),
       get_schema (:a, table) 
  into :a, :b from dual !
c 74 'elketab'
c 74 'elketab'

pars_execute !
nodata !

* to show which table will be used !
insert kerntab1 values ('aaa')!
insert kern.kerntab1 values ('aaa')!
insert sut.kerntab1 values ('aaa')!
select * from kerntab1 !
fetch!
select * from kern.kerntab1 !
fetch!
select * from sut.kerntab1 !
fetch!

insert kerntab2 values ('aaa')!
insert kern.kerntab2 values ('aaa')!
insert sut.kerntab2 values ('aaa')!
select * from kerntab2 !
fetch!
select * from kern.kerntab2 !
fetch!
select * from sut.kerntab2 !
fetch!

insert kerntab3 values ('aaa')!
insert kern.kerntab3 values ('aaa')!
insert sut.kerntab3 values ('aaa')!
select * from kerntab3 !
fetch!
select * from kern.kerntab3 !
fetch!
select * from sut.kerntab3 !
fetch!

commit release !
file connect ( kern test !
drop table elke !
commit release !
* PTS 1141186-8!
file connect ( kern test !
drop table elke !
commit release !
file connect (sut sut !
create table t ( a char (8))!
insert t values ('abc')!
create view v1 as select a, upper(a) a_upp from t !
grant all on v1 to kern !
commit release !
file connect ( kern test !
select * from v1 !
fetch!
select a_upp from v1 !
select SCHEMANAME,OWNER,TABLENAME,TABLEID,DYNAMIC
from tables
where tablename = 'V1' and
schemaname = GET_SCHEMA ('V1', view) !
fetch!
select SCHEMANAME,OWNER,TABLENAME,
COLUMNNAME,DATATYPE,LEN,MODE
from columns where tablename = 'V1' and
schemaname = GET_SCHEMA ('V1', view) !
fetch!
* own view !
create table my_t ( i int)!
insert my_t values (1)!
create view v1 as select * from my_t !
select a_upp from v1 !
select * from views where viewname = 'V1' and
schemaname = GET_SCHEMA ('V1', view) !
fetch!
select * from viewdefs where viewname = 'V1' and
schemaname = GET_SCHEMA ('V1', view) !
fetch!
 select * from tables where tablename = 'V1' and
schemaname = GET_SCHEMA ('V1', view) !
fetch!
 select * from columns where tablename = 'V1' and
schemaname = GET_SCHEMA ('V1', view) !
fetch!
rollback release !
file connect ( sut sut !
drop table t !
commit release !
file shutdwnk!
vdnexit!