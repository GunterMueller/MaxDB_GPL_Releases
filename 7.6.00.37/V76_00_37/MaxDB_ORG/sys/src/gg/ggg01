.nf
 
 .nf

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
.fo

 
.fo
*****************************************************
Copyright (c) 2000-2005 SAP AG
SAP Database Technology
 
Release :      Date : 2000-11-28
*****************************************************
modname : GGG01
changed : 2001-04-17
module  : GG_OMS_kernel_constants_and_types
 
Author  :
created : 2003-02-13
*****************************************************
 
Define  :
 
.CM *-END-* define --------------------------------------
 
Use     :
 
.CM *-END-* use -----------------------------------------
 
Synonym :
 
.CM *-END-* synonym -------------------------------------
 
Specification:
 
.CM *-END-* specification -------------------------------
 
Description:
 
CR 1000053 UH
 
.CM *-END-* description ---------------------------------
 
Structure:
 
.CM *-END-* structure -----------------------------------
 
**********************************************************
 
.CM -lll-
Code    :
 
 
CONST

      MAX_STREAM_DESC_gg01 = 16;
      
      (*- begin C++ SQL-RTE errors (basis error      = SQLCode) -*)
      (*-      Range from -27000 to -28999                 -*)
      e_unknown_error                =  -27000;
      e_inp_null_not_allowed         =  -27001;
      e_inp_number_invalid           =  -27002;
      e_inp_number_overflow          =  -27003;
      e_param_list_too_long          =  -27004;
      e_param_list_too_short         =  -27005;
      e_incompatible_datatype        =  -27006;
      e_too_many_hostvar             =  -27007;
      e_missing_variable_addr        =  -27008;
      e_cmd_too_long                 =  -27009;
      e_copyop_not_allowed           =  -27010;
      e_inp_string_truncated         =  -27011;
      e_use_callstm                  =  -27012;
      e_cmd_not_available            =  -27013;
      (* error codes -27014 to -27018 defined for externally used SQL class gco519CErrorHandling.h *)
      e_uni_to_ascii_conv_failed     =  -27019; (* PTS 1116580 FF 2002-07-22 *)
      e_no_sqldbc_connection         =  -27020; (* PTS 1128823 *)
      e_new_failed                   =  -28000;
      e_nil_pointer                  =  -28001;
      e_invalid_oid                  =  -28002;
      e_unknown_guid                 =  -28003;
      e_duplicate_object             =  -28005;
      e_object_not_locked            =  -28006;
      e_incompatible_oid             =  -28007;
      e_var_obj_overwritten          =  -28008;
      e_oms_istream_error            =  -28501;
      e_oms_ostream_error            =  -28502;
      e_com_object_crashed           =  -28503;
      e_no_coclass_obj_found         =  -28505;
      e_unsupported_param_type       =  -28508;
      e_progid_not_found             =  -28509;
      e_inprocserver_not_found       =  -28511;
      e_localserver_not_found        =  -28512;
      e_method_not_found             =  -28513;
      e_unknown_version              =  -28514; (* ADIS 1001807, T.A. 15.12.1998 *)
      e_version_already_open         =  -28515;
      e_transaction_end_required     =  -28516;
      e_already_in_critical_section  =  -28517; (* ADIS CR 1000225, T.A. 16.02.1998 *)
      e_not_in_critical_section      =  -28518; (*                                  *)
      e_already_in_version           =  -28521;
      e_missing_before_image         =  -28522;
      e_unknown_schema               =  -28523;
      e_duplicate_schema             =  -28524;
      e_proc_address_not_found       =  -28525;
      e_directory_not_found          =  -28527;
      e_lib_not_released             =  -28528;
      e_buffer_too_small             =  -28529;
      e_terminate                    =  -28530;
      e_oms_read_only                =  -28531; (* PTS 1112358 *)
      e_version_bound_by_trans       =  -28532; (* PTS 1115023 *)
      e_packed_out_of_range          =  -28533; (* PTS 1115372, T.A. *)
      e_package_out_of_date          =  -28534;
      e_longpacked_out_of_range      =  -28535; (* PTS 1122649 *)
      e_no_keyed_object              =  -28537; (* PTS 1124070 *)
      e_wrong_key                    =  -28538; (* PTS 1124070 *)
      e_invalid_rowsize              =  -28539; (* PTS 1125169 *)
      e_invalid_csid                 =  -28540; (* PTS 1125169 *)
      e_param_check                  =  -28541;
      e_unexpected_abap_type         =  -28542; (* PTS 1130281 *)
      e_reset_istream_not_supported  =  -28543; (* PTS 1131114, PG *)
      e_reset_ostream_not_supported  =  -28544; (* PTS 1131114, PG *)
      e_container_already_exists     =  -28545; (* PTS 1135739, T.A. *)
      e_internal_stream_error        =  -28546; (* PTS 1135058, PG *)
      e_wrong_class_entry_ptr        =  -28547; (* PTS 1137922, MS *)
      e_internal_obj_link_corruption =  -28548; (* PTS 1140189, RS *)
      (*      ProcServer errors, range -28600 to -28699 *)
      e_dbproc_invalid_packet        =  -28600;
      e_dbproc_no_packet             =  -28601;
      e_dbproc_packet_size           =  -28602;
      e_dbproc_packet_too_big        =  -28603;
      e_dbproc_too_many_packets      =  -28604;
      e_dbproc_invalid_operation     =  -28605;
      e_dbproc_comm_error            =  -28606;
      e_dbproc_packet_missing        =  -28607;
      e_dbproc_invalid_reply         =  -28608;
      e_dbproc_proc_not_found        =  -28609;
      (*      C++ object kernel errors  Range from -28800 to -28899 *)
      e_wrong_class_id               =  -28801;
      e_wrong_object_version         =  -28802;
      e_wrong_object_state           =  -28803;
      e_too_old_oid                  =  -28804;
      e_nil_page_pointer             =  -28806;
      e_no_next_object               =  -28807;
      e_hash_not_found               =  -28808;
      e_invalid_obj_col_desc         =  -28809;
      e_duplicate_hash_key           =  -28810;
      e_hash_key_not_found           =  -28811;
      e_invalid_iterator             =  -28812;
      e_unknown_consist_vers         =  -28813;
      e_object_not_found             =  -28814;
      e_obj_history_not_found        =  -28815;
      e_hash_memory_exceeded         =  -28816;
      e_illegal_object_length        =  -28817;
      e_illegal_object_pos           =  -28818;
      e_object_dirty                 =  -28819;
      e_hash_key_in_use              =  -28820;
      e_wrong_obj_file_id            =  -28822;
      e_page_no_in_use               =  -28823;
      e_wrong_all_page_count         =  -28826;
      e_inconsistent_drop_info       =  -28828;
      e_illegal_cont_obj             =  -28830; (* internal use, see vbd04.cpp *)
      e_wrong_obj_count              =  -28831;
      e_container_dropped            =  -28832; (* PTS 1119647 internal use, see vbd04.cpp *)
      e_consview_cancelled           =  -28833; 
      e_primkey_does_not_match       =  -28834; (* PTS 1131963 internal use, see vbd22.cpp *)
      e_key_still_visible            =  -28835; (* PTS 1126812 ff 2004-01-09 internal use, mapped by liboms *)
      e_recreate_index_failed        =  -28836; (* PTS 1134856 FF *)
      e_case_not_found               =  -28901;
      e_too_many_catch_levels        =  -28902;
      e_missing_return               =  -28903;
      e_dbfunc_with_sql_not_allowed  =  -28904;
      e_dbfunc_index_error           =  -28905;
      e_dbfunc_code_not_found        =  -28906;
      e_dbfunc_stop_msg              =  -28907;
      e_function_not_deterministic   =  -28908;
      e_stop_0                       =  -28910;
      e_missing_object_flush         =  -28950;
      e_invalid_deallocate           =  -28951;
      e_requested_dbperror           =  -28999; (* PTS 1112358 *) 

TYPE

      tgg01_ContainerId = tgg00_FileId;
 
      tgg01_OmsVersionContext = RECORD
            ovc_tree          : tgg00_FileId;
            ovc_index_tree    : tgg00_FileId;
            ovc_key           : tsp00_Int4;
            ovc_trans_version : tgg91_TransNo;
      END;
 
 
      tgg01_OmsLockInfo = RECORD (* PTS 1110315 *)
            oli_handle      : tsp00_C8;
            oli_lockmode    : tsp00_C18;
            oli_requestmode : tsp00_C18;
            oli_taskid      : tsp00_TaskId;
            oli_timeout     : tsp00_Int4;
      END;
 
      tgg01_COMMonEnum = (
            cmiRunTime,
            cmiRunTimeMin, (* PTS 1000230, T.A. 1999-07-08 *)
            cmiRunTimeMax,
            cmiOmsRead,
            cmiLCRead,
            cmiLCKeyRead,
            cmiOmsStore,
            cmiLCStore,
            cmiOmsDelete,
            cmiLCDelete,
            cmiLCLock,
            cmiLCIter,     (* PTS 1107819 T.A 2000-09-13 *)
            cmiLogHop,
            cmiLogHopIter, (* PTS 1107819 T.A 2000-09-13 *)
            cmiExceptions,
            cmiOutOfDate,
            cmiTimeout,
            cmiOutOfMemory, (* PTS 1108772 T.A. 2000-12-13 *)
            cmiSubtransRollback,
            cmiSubtransCommit,
            cmiMaxSubtransLevel,
            cmiLoadVarObj,
            cmiStoreVarObj,
            cmiSumVarObjSize,
            cmiCntVarObj,
            cmiCreateVersion, (* PTS 1000247, T.A. 1999-07-08 *)
            cmiOpenVersion,
            cmiCloseVersion,
            cmiDropVersion,
            cmiStoreInVersion,
            cmiDeleteInVersion,
            cmiLCReadInVersion,
            cmiLCKeyReadInVersion,
            cmiDeleteVarObject,
            cmiMaxWaitNewConsView,
            cmiMinWaitNewConsView,
            cmiSumWaitNewConsView,
            cmiCntWaitNewConsView,
            cmiMallocMin,
            cmiMallocMax,
            cmiMallocSum,
            cmiMallocCnt,
            cmiFreeMin,
            cmiFreeMax,
            cmiFreeSum,
            cmiFreeCnt,
            cmiDeltaMin,
            cmiDeltaMax,
            cmiDeltaAvg,
            cmiOmsTerminate, (* PTS 1112796, T.A. *)
            cmiMinReadApplCallbacks,
            cmiMaxReadApplCallbacks,
            cmiSumReadApplCallbacks,
            cmiMinStreamRowsRead,
            cmiMaxStreamRowsRead,
            cmiSumStreamRowsRead,
            cmiMinWriteApplCallbacks,
            cmiMaxWriteApplCallbacks,
            cmiSumWriteApplCallbacks,
            cmiMinStreamRowsWrite,
            cmiMaxStreamRowsWrite,
            cmiSumStreamRowsWrite,
            cmiOmsReadCacheHit,     (* PTS 1117571 *)
            cmiOmsReadCacheMiss,    (* PTS 1117571 *)
            cmiOmsReadVersion,      (* PTS 1117571 *)
            cmiOmsMaxHashChainLen,  (* PTS 1118855 *)
            cmiOmsRehash,           (* PTS 1118855 *)
            cmiCntWaitOmsLockObj,
            cmiWaitOmsLockObjSecs,
            cmiHashSumChainAccessed, (* PTS 1133314 *)
            cmiHashDerefCount,       (* PTS 1133314 *)
            cmiOmsReleaseCalled,     (* PTS 1133314 *)
            cmiOmsReleaseDone,       (* PTS 1133314 *) 
            cmiCacheSize);
 
      tgg01_COMMonitorInfo = RECORD
            cmiMethodName_gg00  : tsp00_KnlIdentifier;
            cmiCallCnt_gg00     : tsp00_8ByteCounter;
            cmiCounters_gg00    : ARRAY[tgg01_COMMonEnum] OF tsp00_8ByteCounter;
      END;
 
 
      tgg01_COMMonitorTransferBuf = RECORD
            ctbMessType_gg00 : tgg00_MessType;
            ctbDispId_gg00   : tsp00_Int4;
            ctbMonInfo_gg00  : tgg01_COMMonitorInfo;
      END;
      
      tgg01_OneStreamDescriptor = RECORD
            osdHandle             : tgg00_VoidPtr;
            osdBufPtr             : tgg00_VoidPtr;
            osdHiddenDesc         : tgg00_VoidPtr;
            osdStreamId           : tsp00_Int4;
            osdRowCount           : tsp00_Int4;
            osdRowSize            : tsp00_Int4;
            osdBufSize            : tsp00_Int4;
            osdHiddenDescSize     : tsp00_Int4;
            osdEndOfStream        : boolean;
            osdResetStream        : boolean; (* PTS 1131114, PG *)
            osdDefaultCompression : boolean; (* PTS 1135058, PG *)
      end;
      
      tgg01_StreamDescriptor = RECORD
            sdCount                  : tsp00_Int4;
            sdFiller0                : boolean; (* PTS 1135058, PG *)
            sdFiller1                : boolean;
            sdFiller2                : tsp00_Int2;
            sdDesc                   : ARRAY[1..MAX_STREAM_DESC_gg01] OF tgg01_OneStreamDescriptor;
      end;
       
 
.CM *-END-* code ----------------------------------------
.SP 2 
***********************************************************
.PA 
