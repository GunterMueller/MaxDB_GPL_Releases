/*!******************************************************************************

  @file         hkb641.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2001-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HKB641_H
#define HKB641_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x9e\xed\x9b\x26\x81\x77\xf5\x33\xa1\x12\xcb\x16\xe1\x9b\x79\x25'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void kb641BeginLoad (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  fileid,
    tgg00_Lkey            VAR_VALUE_REF  lastkey);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641ChangeFileType (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  FileId,
    const tgg00_FiletypeSet  VAR_ARRAY_REF  NewFiletypeSet);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641CreateFile (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  FileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641CreateIndex (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  PrimFileId,
    tgg00_FileId          VAR_VALUE_REF  InvFileId,
    const tgg00_StackDesc  VAR_VALUE_REF  StackDesc,
    tgg00_IndexCounter    VAR_VALUE_REF  IndexCounter);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641CreateIndexFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  tableFileId,
    tgg00_FileId          VAR_VALUE_REF  indexFileId,
    tsp00_Int2                           indexId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641CreateTable (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  FileId,
    tgg00_ExtendedFiletypeSet  VAR_ARRAY_REF  eFileTypeset,
    tsp00_Int2                           StrColCnt,
    tsp00_Int2                           VarColCntOff);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641CreateShortColumnFile (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  shortColId,
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641MarkFileAsDeleted (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  fileid);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641RenameLobFile (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_Surrogate       VAR_ARRAY_REF  TableId,
    tgg00_FileId          VAR_VALUE_REF  OldFileId,
    tgg00_FileId          VAR_VALUE_REF  NewFileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641SuccFileVersion (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  FileId,
    const tgg91_FileVersion  VAR_VALUE_REF  NewFileVersion,
    tsp00_Int4                           OldLongCnt,
    tsp00_Int4                           NewLongCnt);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb641UpdFileStatistic (
    tgg00_TransContext    VAR_VALUE_REF  TransContext,
    tgg00_FileId          VAR_VALUE_REF  FileId,
    tsp00_Int4                           OldLeafNodes);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

