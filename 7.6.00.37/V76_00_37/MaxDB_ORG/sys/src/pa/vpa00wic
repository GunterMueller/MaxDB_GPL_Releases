.ad 8
.bm 8
.fm 4
.bt $Copyright (c) 2000-2005 SAP AG$$Page %$
.tm 12
.hm 6
.hs 3
.tt 1 $SQL$Project Distributed Database System$VPA00WIC$
.tt 2 $$$
.tt 3 $BurkhardD$NON WINDOWS MODE WINDOWS HEADER$2000-08-09$
***********************************************************
.nf

.nf

.nf

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
.fo


.fo


.fo
Module  :
=========
.sp
Purpose :
.CM *-END-* purpose -------------------------------------
Define  :
.CM *-END-* define --------------------------------------
Use     :
.CM *-END-* use -----------------------------------------
Synonym :
.CM *-END-* synonym -------------------------------------
.sp;.cp 3
Author  : BurkhardD
.sp
.cp 3
Created : 08-31-1993
.sp
.cp 3
Version : 1994-04-25
.sp
.cp 3
Release :      Date : 2000-08-09
.sp
Specification:
.CM *-END-* specification -------------------------------
.sp 2
***********************************************************
.sp
.cp 10
.fo
.oc _/1
Description:
.CM *-END-* description ---------------------------------
.sp 2
***********************************************************
.sp
.cp 10
.nf
.oc _/1
Structure:
.CM *-END-* structure -----------------------------------
.sp 2
**********************************************************
.sp
.cp 10
.nf
.CM -lll-
Code    :
&ifdef DEBUG
&else
#ifndef DEBUG
#line 67 "vpa00wic"
#endif
&endif
#ifndef APWIN                     /* don't reinclude    */
#define APWIN
&if $OSSPEC in [OSF1]
#ifndef OSF1
#define OSF1
#endif
&elif $OSSPEC in [HPUX]
#ifndef HPUX
#define HPUX
#endif
&elif $OSSPEC in [AIX]
#ifndef AIX
#define AIX
#endif
&elif $OSSPEC in [SOLARIS]
#ifndef SOLARIS
#define SOLARIS
#endif
&  if $MACH == SPARC
#ifndef SPARC
#define SPARC
#endif
&  elif $MACH == X86_64
#ifndef X86_64
#define X86_64
#endif
&  elif $MACH == I386
#ifndef I386
#define I386
#endif
&  else
#error "Unknown processor architecture for Solaris OS."
&  endif
&elif $OSSPEC in [SVR4] && $MACH in [I386]
#ifndef SVR4
#define SVR4
#endif
#ifndef I386
#define I386
#endif
&endif
&ifdef DEBUG
&else
#ifndef DEBUG
#line 88 "vpa00wic"
#endif
&endif

#ifdef WININC
#  include <windows.h>              /* normal windows.h    */
#  ifdef WIN32
#    include <windowsx.h>         /* windows extensions  */
#    define GetCurrentTask	(HTASK)GetCurrentProcess
#    define GetDOSEnvironment	GetEnvironmentStrings
#    define PCALL
#  else
#    define PCALL PASCAL
#  endif
#else                             /* not windows         */
/******* Common definitions and typedefs **********************/

#ifndef VOID
#  define VOID                void
#endif

#ifdef WIN
#  define LONG long
#endif

#ifndef _DWORD
#  define _DWORD
/*   typedef unsigned long       DWORD;  PTS 1119281 WORDs have 2 bytes */
   typedef unsigned int       DWORD;
#endif

#ifndef _UINT
#  define _UINT
   typedef unsigned int        UINT;
#endif

#ifdef PC
#  define FAR                 _far
#  define NEAR                _near
#  define PASCAL              _pascal
#  define CDECL               _cdecl
#ifndef WINAPI
#  define WINAPI              _far _pascal
#endif
#  define CALLBACK            _far _pascal
#  define EXPORT	      _export
#else
#  define FAR
#  define NEAR
#  define PASCAL
#  define CDECL
#ifndef WINAPI
#  define WINAPI
#endif
#  define CALLBACK
#  define EXPORT
#endif
#define PCALL PASCAL

/****** Simple types & common helper macros ********************/

typedef int                 BOOL;
#ifndef FALSE
#define FALSE               0
#endif
#ifndef TRUE
#define TRUE                1
#endif

typedef unsigned char       BYTE;
typedef unsigned short      WORD;

#define LOBYTE(w)           ((BYTE)(w))
#define HIBYTE(w)           ((BYTE)(((UINT)(w) >> 8) & 0xFF))

#define LOWORD(l)           ((WORD)(DWORD)(l))
#define HIWORD(l)           ((WORD)((((DWORD)(l)) >> 16) & 0xFFFF))

#define MAKELONG(low, high) ((LONG)(((WORD)(low)) |\
			    (((DWORD)((WORD)(high))) << 16)))

#define max(a,b)           (((a) > (b)) ? (a) : (b))
#define min(a,b)            (((a) < (b)) ? (a) : (b))

/****** Common pointer types **********************************/

#ifndef NULL
#define NULL                0
#endif

/****** Common handle types *************************************/

#ifndef __HANDLE_T__
#define __HANDLE_T__ __HANDLE_T__
typedef void *               HANDLE;
#endif
typedef UINT                    HWND;
#include <wchar.h>
#ifndef _WCHAR
#define _WCHAR
typedef wchar_t WCHAR;
#endif
typedef const WCHAR FAR *   LPCWSTR;

#endif /* ifdef not WIN */

#endif /* ifdef APWIN */

/* end of apwin.h */
.CM *-END-* code ----------------------------------------
.SP 2 
***********************************************************
