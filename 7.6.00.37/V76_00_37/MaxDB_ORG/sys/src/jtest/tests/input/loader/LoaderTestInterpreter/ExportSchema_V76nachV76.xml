<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Tests SYSTEM "TestCases.dtd">
<Tests>
<Test ErrorType="syntax" Exclude="" Number="1" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: test if a user can export his schema and import it as another user.

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t1t</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t1 password t1 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t1 t1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t1table
( tid int primary key,
  tname char(10)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t1t</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schemamap t1map</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schemamap t1map map schema t1 to t1t</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t1 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t1.catalog'</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t1t</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t1</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="2" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: test if a user can import one of his schemas under another name (schemaname &lt;&gt; username)

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t2 password t2 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t2 t2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t2schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t2schema1.t2table
(   tid int primary key,
    tname char(30)
)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t2schema1
catalog outstream '&lt;infile_path&gt;eSchemaV76_t2.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="3" Responsible="Ileana Somesan" TestType="negative">
<Comment>Loading a schema beeing its owner in records format</Comment>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER DBA DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER FRITZ PASSWORD FRITZ DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER MONA PASSWORD MONA DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER PUCK PASSWORD PUCK DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER TANZA PASSWORD TANZA STANDARD</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER MORITZ PASSWORD MORITZ RESOURCE</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER FRITZ FRITZ</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE SCHEMA BIBLIOTHEK</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>GRANT CREATEIN ON BIBLIOTHEK TO MORITZ</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA Bibliothek
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test1.catalog'
DATA INSTREAM '&lt;infile_path&gt;eSchemaV76_test1.data' RECORDS</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER PUCK PUCK</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA Puck
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test3.catalog'
DATA INSTREAM '&lt;infile_path&gt;eSchemaV76_test3.data' RECORDS</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE SCHEMA FILM</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>GRANT CREATEIN ON FILM TO TANZA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA Film
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test7.catalog'
DATA INSTREAM '&lt;infile_path&gt;eSchemaV76_test7.data' RECORDS</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER MORITZ MORITZ</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA Moritz
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test5.catalog'
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER MONA MONA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE SCHEMA HOTEL</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA HOTEL
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test11.catalog'
DATA INSTREAM '&lt;infile_path&gt;eSchemaV76_test5.data11' RECORDS</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER TANZA TANZA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA TANZA
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test9.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="4" Responsible="" TestType="negative">
<Comment>Loading a schema beeing its owner in page format</Comment>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER DBA DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER FRITZ PASSWORD FRITZ DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER MONA PASSWORD MONA DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER PUCK PASSWORD PUCK DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER TANZA PASSWORD TANZA STANDARD</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER MORITZ PASSWORD MORITZ RESOURCE</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER FRITZ FRITZ</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE SCHEMA BIBLIOTHEK</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>IMPORT SCHEMA Bibliothek
CATALOG INSTREAM '&lt;infile_path&gt;eSchemaV76_test2.catalog'
DATA INSTREAM '&lt;infile_path&gt;eSchemaV76_test2.data'</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>DROP USER FRITZ</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>DROP USER MONA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>DROP USER PUCK</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>DROP USER TANZA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>DROP USER MORITZ</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="5" Responsible="Ileana Somesan" TestType="negative">
<Comment>EXPORT: chema contains synonyms for tables. Synonyms seem to be excepted from export/import. 

False.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>remark "EXPORTSCHEMA_V76nachV76[5]"</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER DBA DBA</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t5</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER T5 PASSWORD T5 DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER T5 T5</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE t5.t5table (tid fixed(4) primary key, tname char(10))</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE PUBLIC SYNONYM t5synonym for t5table</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>EXPORT SCHEMA T5
CATALOG OUTSTREAM '&lt;infile_path&gt;eSchemaV76_t5.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="6" Responsible="" TestType="negative">
<Comment>Schemamapping:  schema contains synonyms

False.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t6</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user  t6 password t6 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t6 t6</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t6.t6table
( tid int primary key,
   tname char(10)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create public synonym t6synonym for t6table</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t6 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t6.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="7" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Grants on tables

Correct
</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER DBA DBA</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t7eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t7zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER t7eins PASSWORD t7eins DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER t7zwei PASSWORD t7zwei DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER t7eins t7eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE SCHEMA  t7schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE t7schema.t7table 
(tid fixed(7) primary key,
tname char (20),
tvorname char(20)
)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>GRANT all on t7schema.t7table to t7zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>EXPORT SCHEMA t7schema catalog outstream '&lt;infile_path&gt;eSchemaV76_t7.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="8" Responsible="Ileana Somesan" TestType="negative">
<Comment>SCHEMAMAPPING: Grants on tables

False - Corrected
</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t8eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t8zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t8eins password t8eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t8zwei password t8zwei dba </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t8eins t8eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t8schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE t8schema1.t8table
(tid fixed(7) primary key,
tname char (20),
tvorname char(20)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>GRANT all on t8schema1.t8table to t8zwei</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>EXPORT SCHEMA t8schema1 catalog outstream '&lt;infile_path&gt;eSchemaV76_t8.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="9" Responsible="Ileana Somesan" TestType="negative">
<Comment>SCHEMAMAPPING. foreign keys (test if changing the name of a schema affects referential constraints of tables from other schemas)

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t9</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t9 password t9 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t9 t9</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t9schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t9schema1.table1
(   id fixed(4) primary key,
     fname char(50),
     lname char(50)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t9schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t9schema2.table2
(   id fixed(4) primary key,
    titel char(50),
    autor fixed(4),
    foreign key F_T1 (autor) references t9schema1.table1  (id)
)
   </CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t9schema1
catalog outstream '&lt;infile_path&gt;eSchemaV76_t9.catalog'
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema  t9schema2 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t9bis.catalog'
</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="10" Responsible="Ileana Somesan" TestType="negative">
<Comment>EXPORT: foreign keys (schema containing tables referencing tables from another schema function correctly. Both schemas belong to the same user)

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t10</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t10 password t10 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t10 t10</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t10schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t10schema1.table1
(   id fixed(4) primary key,
     fname char(50),
     lname char(50)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t10schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t10schema2.table2
(   id fixed(4) primary key,
    titel char(50),
    autor fixed(4),
    foreign key f_T1 (autor) references t10schema1.table1  (id)
)
   </CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t10schema1 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t10.catalog'</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema  t10schema2 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t10bis.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="11" Responsible="" TestType="negative">
<Comment>EXPORT: sequences. The Schema contains only a sequence. It's definition is not written in the export catalog.

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user  t11</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t11 password t11 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t11 t11</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t11schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create sequence t11schema.t11sequence increment by 1 start with 10</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t11schema
catalog outstream '&lt;infile_path&gt;eSchemaV76_t11.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="12" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Grants on Columns

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t12erster</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t12z</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t12erster password t12erster dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t12z password t12z dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t12erster t12erster</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t12schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t12schema.t12table
(    tid int primary key,
     tname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant select (tname) on t12schema.t12table to t12z with grant option</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t12schema 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t12.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="13" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Grants on Columns

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t13erster</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t13z</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t13erster password t13erster dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t13z password t13z dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t13erster t13erster</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t13schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t13schema1.t13table
(    tid int primary key,
     tname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant select (tname) on t13schema1.t13table to t13z with grant option</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t13schema1 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t13.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="14" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Grant on Schema

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t14eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t14zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t14eins password t14eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t14zwei password t14zwei dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t14eins t14eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t14schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant createin on t14schema to t14zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t14zwei  t14zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t14schema.t14table
( tid int primary key,
   tname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t14eins t14eins</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t14schema 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t14.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="15" Responsible="Ileana Somesan" TestType="negative">
<Comment>SCHEMAMAPPING: Grants on Schema False
     </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t15eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t15zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t15eins password t15eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t15zwei password t15zwei dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t15eins t15eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t15schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant createin on t15schema1 to t15zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t15zwei t15zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t15schema1.t15table 
                        ( tid int primary key,
                          tname char(32) )
          </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t15eins t15eins</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t15schema1 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t15.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="16" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Views based on tables of  the same schema.
     </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba </CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t16</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t16 password t16 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t16 t16</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t16schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t16schema1.t16table1
(  tid int primary key,
    tname char(30),
    tvorname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t16schema1.t16table2
                        (  tno    int primary key,
                           ttitel char(30),
                           tautor int,
                           foreign key f_table2 (tautor) references t16schema1.t16table1 (tid))
         </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t16schema1.t16view as 
                        select tno,ttitel,tname 
                        from   t16schema1.t16table1, t16schema1.t16table2
                        where  t16table2.tautor    = t16table1.tid</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t16schema1
                       catalog outstream '&lt;infile_path&gt;eSchemaV76_t16.catalog'
          </CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="17" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Views based on tables of  more than one schema.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t17 password t17 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t17 t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema1.t17table1
                       (  tid int primary key,
                          tname char(30),
                          tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema2.t17table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
          </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t17schema1.t17view as select tno,ttitel,tname 
                        from   t17schema1.t17table1, t17schema2.t17table2
                        where  t17table2.tautor = t17table1.tid</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema1.t17table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema2.t17table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17bis.catalog'  
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17bis_generated.data' </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17_generated.data' </CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="18" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Views based on tables of  more than one schemaFalse
     </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t18</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t18 password t18 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t18 t18</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t18schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t18schema1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t18schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t18schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t18schema1.t18table1
(  tid int primary key,
    tname char(30),
    tvorname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t18schema2.t18table2
(  tno int primary key,
    ttitel char(30),
    tautor int 
) </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t18schema1.t18view as select tno,ttitel,tname 
from t18schema1.t18table1, t18schema2.t18table2
  where t18table2.tautor = t18table1.tid</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t18schema1.t18table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t18schema2.t18table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t18schema1
  catalog outstream '&lt;infile_path&gt;eSchemaV76_t18.catalog' data outstream '&lt;infile_path&gt;eSchemaV76_t18_generated.data' records</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t18schema2 
 catalog outstream '&lt;infile_path&gt;eSchemaV76_t18bis.catalog' 
 data outstream '&lt;infile_path&gt;eSchemaV76_t18bis_generated.data' records</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="19" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Grants on views

true</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t19eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t19zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t19eins password t19eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t19zwei password t19zwei dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t19eins t19eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t19schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t19schema.t19table1
(
    tid int primary key,
    tname char(30),
    tvorname char(30)
)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t19schema.t19table2
(  tno int primary key,
    ttitel char(30),
    tautor int,
    foreign key f_table2 (tautor) references t19schema.t19table1 (tid)
) 
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t19schema.t19view as select tno,ttitel,tname 
from t19schema.t19table1, t19schema.t19table2
where t19table2.tautor = t19table1.tid
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant select on t19schema.t19view to t19zwei
</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t19schema 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t19.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="20" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Grants on views based on the same schema

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t20eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t20zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t20eins password t20eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t20zwei password t20zwei dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t20eins t20eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t20schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t20schema1.t20table1
(
    tid int primary key,
    tname char(30),
    tvorname char(30)
)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t20schema1.t20table2
(  tno int primary key,
    ttitel char(30),
    tautor int,
    foreign key f_table2 (tautor) references t20schema1.t20table1 (tid)
) 
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t20schema1.t20view as select tno,ttitel,tname 
from t20schema1.t20table1, t20schema1.t20table2
where t20table2.tautor = t20table1.tid
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant select on t20schema1.t20view to t20zwei
</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t20schema1 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t20.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="21" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Trigger

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t21</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t21 password t21 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t21 t21</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t21schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t21schema.t21table
(
     tid int primary key,
     tname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t21schema.t21savetable
(
         sid int,
         sname char(32),
         sdatum date,
         suser char(32)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create trigger t21trigger for t21schema.t21table
after delete execute
(  insert into t21schema.t21savetable 
  set sid=:OLD.tid, sname=:OLD. tname, suser=USER, sdatum=DATE;
)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t21schema
catalog outstream '&lt;infile_path&gt;eSchemaV76_t21.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="22" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Trigger

Correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t22</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t22 password t22 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t22 t22</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t22schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t22schema1.t22table
(
     tid int primary key,
     tname char(30)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t22schema1.t22savetable
(
         sid int,
         sname char(32),
         sdatum date,
         suser char(32)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create trigger t22trigger for t22schema1.t22table
after delete execute
(  insert into t22schema1.t22savetable 
  set sid=:OLD.tid, sname=:OLD. tname, suser=USER, sdatum=DATE;
)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t22schema1
catalog outstream '&lt;infile_path&gt;eSchemaV76_t22.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="23" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export. DBPROCEDURE

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t23</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t23 password t23 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t23 t23</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t23schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t23schema.t23table 
(
     tid int primary key,
     tname char(30),
     tzip fixed(6),
     tprice int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create dbproc t23schema.t23proc (IN zip fixed(6), OUT durchschnittspreis int) as
    var s int; preis int; nr int;
    try
       set s=0; nr=0;
       declare gethotels cursor for select tprice from t23schema.t23table where tzip=:zip;
       while $rc=0 do
            begin
                fetch gethotels into :preis;
                set nr=nr+1;
                set s=s+preis;
           end;
     catch
          if $rc&lt;&gt;100 then stop ($rc, 'unexpected error');
     close gethotels;
     if nr&gt;0 then set durchschnittspreis=s/nr
                 else stop (100,'ERROR');</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t23schema
catalog outstream '&lt;infile_path&gt;eSchemaV76_t23.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="24" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: DBPROCEDURE

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t24</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t24 password t24 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t24 t24</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t24schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t24schema1.t24table 
(
     tid int primary key,
     tname char(30),
     tzip fixed(6),
     tprice int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create dbproc t24schema1.t24proc (IN zip fixed(6), OUT durchschnittspreis int) as
    var s int; preis int; nr int;
    try
       set s=0; nr=0;
       declare gethotels cursor for select tprice from t24schema1.t24table where tzip=:zip;
       while $rc=0 do
            begin
                fetch gethotels into :preis;
                set nr=nr+1;
                set s=s+preis;
           end;
     catch
          if $rc&lt;&gt;100 then stop ($rc, 'unexpected error');
     close gethotels;
     if nr&gt;0 then set durchschnittspreis=s/nr
                  else stop (100,'ERROR');</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t24schema1
catalog outstream '&lt;infile_path&gt;eSchemaV76_t24.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="25" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export. FUNCTION</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t25</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t25 password t25 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t25 t25</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t25schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t25schema.t25table 
(
     tid int primary key,
     tname char(30),
     tzip fixed(6),
     tprice int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create function t25schema.t25function (zip fixed(6)) returns int as
    var s int; preis int; nr int;
    try
       set s=0; nr=0;
       declare gethotels cursor for select tprice from t25schema.t25table where tzip=:zip;
       while $rc=0 do
            begin
                fetch gethotels into :preis;
                set nr=nr+1;
                set s=s+preis;
           end;
     catch
          if $rc&lt;&gt;100 then stop ($rc, 'unexpected error');
     close gethotels;
     if nr&gt;0 then return s/nr
                  else return NULL;</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t25schema
catalog outstream '&lt;infile_path&gt;eSchemaV76_t25.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="26" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping FUNCTION

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t26</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t26 password t26 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t26 t26</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t26schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t26schema1.t26table 
(
     tid int primary key,
     tname char(30),
     tzip fixed(6),
     tprice int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create function t26schema1.t26function (zip fixed(6)) returns int as
    var s int; preis int; nr int;
    try
       set s=0; nr=0;
       declare gethotels cursor for select tprice from t26schema1.t26table where tzip=:zip;
       while $rc=0 do
            begin
                fetch gethotels into :preis;
                set nr=nr+1;
                set s=s+preis;
           end;
     catch
          if $rc&lt;&gt;100 then stop ($rc, 'unexpected error');
     close gethotels;
     if nr&gt;0 then return s/nr
                  else return NULL;</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t26schema1
catalog outstream '&lt;infile_path&gt;eSchemaV76_t26.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="27" Responsible="Ileana Somesan" TestType="negative">
<Comment>Grant Execute DBPROCEDURE

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t27eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t27zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t27eins password t27eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t27zwei password t27zwei dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t27eins t27eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t27schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t27schema.t27table 
(
     tid int primary key,
     tname char(30),
     tzip fixed(6),
     tprice int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create dbproc t27schema.t27proc (IN zip fixed(6), OUT durchschnittspreis int) as
    var s int; preis int; nr int;
    try
       set s=0; nr=0;
       declare gethotels cursor for select tprice from t27schema.t27table where tzip=:zip;
       while $rc=0 do
            begin
                fetch gethotels into :preis;
                set nr=nr+1;
                set s=s+preis;
           end;
     catch
          if $rc&lt;&gt;100 then stop ($rc, 'unexpected error');
     close gethotels;
     if nr&gt;0 then set durchschnittspreis=s/nr
                  else stop (100,'ERROR') ;  </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant execute on t27schema.t27proc to t27zwei</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t27schema  
catalog outstream '&lt;infile_path&gt;eSchemaV76_t27.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="28" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Grant execute DBPROCEDURE

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t28eins</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t28zwei</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t28eins password t28eins dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t28zwei password t28zwei dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t28eins t28eins</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t28schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t28schema1.t28table 
(
     tid int primary key,
     tname char(30),
     tzip fixed(6),
     tprice int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create dbproc t28schema1.t28proc (IN zip fixed(6), OUT durchschnittspreis int) as
    var s int; preis int; nr int;
    try
       set s=0; nr=0;
       declare gethotels cursor for select tprice from t28schema1.t28table where tzip=:zip;
       while $rc=0 do
            begin
                fetch gethotels into :preis;
                set nr=nr+1;
                set s=s+preis;
           end;
     catch
          if $rc&lt;&gt;100 then stop ($rc, 'unexpected error');
     close gethotels;
     if nr&gt;0 then  set durchschnittspreis=s/nr
                  else stop (100,'ERROR');</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>grant execute on t28schema1.t28proc to t28zwei</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t28schema1
catalog outstream '&lt;infile_path&gt;eSchemaV76_t28.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="29" Responsible="Ileana Somesan" TestType="negative">
<Comment>SCHEMAMAPPING: Sequences. The schema contains just the sequence.

False</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t29</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t29 password t29 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t29 t29</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t29schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create sequence t29schema1.t29sequence increment by 1 start with 10</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t29schema1 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t29.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="30" Responsible="" TestType="negative">
<Comment>EXPORT: schema contains both sequences and tables

Correct
</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user  t30</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t30 password t30 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t30 t30</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t30schema</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create sequence t30schema.t30sequence increment by 1 start with 10</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t30schema.t30table
                        (   tid int primary key,
                            tname char(30)
                        )
          </CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t30schema
                       catalog outstream '&lt;infile_path&gt;eSchemaV76_t30.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="31" Responsible="Ileana Somesan" TestType="negative">
<Comment>SCHEMAMAPPING: Schema contains both sequences and tables correct</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t31</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t31 password t31 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t31 t31</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t31schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create sequence t31schema1.t31sequence increment by 1 start with 10</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t31schema1.t31table (
                        tid int primary key,
                        tname char(30))
           </CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t31schema1 
                       catalog outstream '&lt;infile_path&gt;eSchemaV76_t31.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="32" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Views based on tables of  more than one schema 
     </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t32</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t32 password t32 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t32 t32</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t32schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t32schema1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t32schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t32schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t32schema1.t32table1
                        (  tid int primary key,
                           tname char(30),
                           tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t32schema2.t32table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t32schema1.t32view as 
                        select tno,ttitel,tname 
                        from   t32schema1.t32table1, t32schema2.t32table2
                        where  t32table2.tautor = t32table1.tid
            </CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t32schema1.t32table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t32schema2.t32table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema    t32schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t32.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t32_generated.data' records</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema    t32schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t32bis.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t32bis_generated.data' records</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="33" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Views based on tables of  more than one schema 
     </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t33</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t33 password t33 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t33 t33</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t33schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t33schema1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t33schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t33schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t33schema1.t33table1
                        (  tid int primary key,
                           tname char(30),
                           tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t33schema2.t33table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t33schema1.t33view as 
                        select tno,ttitel,tname 
                        from t33schema1.t33table1, t33schema2.t33table2
                        where t33table2.tautor = t33table1.tid
            </CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t33schema1.t33table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t33schema2.t33table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema    t33schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t33.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t33_generated.data' pages</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema    t33schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t33bis.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t33bis_generated.data' pages</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="34" Responsible="Ileana Somesan" TestType="negative">
<Comment>Schemamapping: Views based on tables of  more than one schema 
     </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t34</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t34 password t34 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t34 t34</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t34schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t34schema1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop schema t34schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t34schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t34schema1.t34table1
                        (  tid int primary key,
                           tname char(30),
                           tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t34schema2.t34table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t34schema1.t34view as 
                        select tno,ttitel,tname 
                        from  t34schema1.t34table1, t34schema2.t34table2
                        where t34table2.tautor = t34table1.tid
            </CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t34schema1.t34table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t34schema2.t34table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema    t34schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t34.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t34_generated.data' pages</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema    t34schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t34bis.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t34bis_generated.data' pages</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="50" Responsible="Ileana Somesan" TestType="negative">
<Comment>EXPORT: chema contains synonyms for tables. Synonyms seem to be excepted from export/import. 

False.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>remark "EXPORTSCHEMA_V76nachV76[5]"</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER DBA DBA</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t5</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER T5 PASSWORD T5 DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER T5 T5</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE t5.t5table (tid fixed(4) primary key, tname char(10))</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE PUBLIC SYNONYM t5synonym for t5table</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>EXPORT SCHEMA T5
CATALOG OUTSTREAM '&lt;infile_path&gt;eSchemaV76_t5.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="60" Responsible="" TestType="negative">
<Comment>Schemamapping:  schema contains synonyms

False.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t6</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user  t6 password t6 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t6 t6</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t6.t6table
( tid int primary key,
   tname char(10)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create public synonym t6synonym for t6table</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t6 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t6.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="170" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Views based on tables of  more than one schema.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t17 password t17 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t17 t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema1.t17table1
                       (  tid int primary key,
                          tname char(30),
                          tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema2.t17table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
          </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t17schema1.t17view as select tno,ttitel,tname 
                        from   t17schema1.t17table1, t17schema2.t17table2
                        where  t17table2.tautor = t17table1.tid</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema1.t17table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema2.t17table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17bis.catalog'  
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17bis_generated.data' </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17_generated.data' </CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="500" Responsible="Ileana Somesan" TestType="negative">
<Comment>EXPORT: chema contains synonyms for tables. Synonyms seem to be excepted from export/import. 

False.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>remark "EXPORTSCHEMA_V76nachV76[5]"</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER DBA DBA</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t5</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE USER T5 PASSWORD T5 DBA</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>USE USER T5 T5</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE t5.t5table (tid fixed(4) primary key, tname char(10))</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE PUBLIC SYNONYM t5synonym for t5table</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>EXPORT SCHEMA T5
CATALOG OUTSTREAM '&lt;infile_path&gt;eSchemaV76_t5.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="600" Responsible="" TestType="negative">
<Comment>Schemamapping:  schema contains synonyms

False.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t6</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user  t6 password t6 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t6 t6</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t6.t6table
( tid int primary key,
   tname char(10)
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create public synonym t6synonym for t6table</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export schema t6 
catalog outstream '&lt;infile_path&gt;eSchemaV76_t6.catalog'</CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="700" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Views based on tables of  more than one schema.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t17 password t17 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t17 t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema1.t17table1
                       (  tid int primary key,
                          tname char(30),
                          tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema2.t17table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
          </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t17schema1.t17view as select tno,ttitel,tname 
                        from   t17schema1.t17table1, t17schema2.t17table2
                        where  t17table2.tautor = t17table1.tid</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema1.t17table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema2.t17table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17bis.catalog'  
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17bis_generated.data' </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17_generated.data' </CallString>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="" Number="7000" Responsible="Ileana Somesan" TestType="negative">
<Comment>Export: Views based on tables of  more than one schema.</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user dba dba</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop user t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create user t17 password t17 dba</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>use user t17 t17</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema1</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema1.t17table1
                       (  tid int primary key,
                          tname char(30),
                          tvorname char(30) )
           </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create schema t17schema2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table t17schema2.t17table2
                        (  tno int primary key,
                           ttitel char(30),
                           tautor int )
          </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>create view t17schema1.t17view as select tno,ttitel,tname 
                        from   t17schema1.t17table1, t17schema2.t17table2
                        where  t17table2.tautor = t17table1.tid</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema1.t17table1 values (1,'Cehov','Anton')</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>insert into t17schema2.t17table2 values (1,'Der Kirschgarten',1)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema2 
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17bis.catalog'  
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17bis_generated.data' </CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>export  schema t17schema1
                        catalog outstream '&lt;infile_path&gt;eSchemaV76_t17.catalog' 
                        data    outstream '&lt;infile_path&gt;eSchemaV76_t17_generated.data' </CallString>
</Statement>
</Run>
</Test>
</Tests>
