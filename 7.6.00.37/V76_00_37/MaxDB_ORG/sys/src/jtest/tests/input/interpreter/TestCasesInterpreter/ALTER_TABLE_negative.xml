<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Tests SYSTEM "TestCases.dtd">
<Tests>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="1" Responsible="Oleg Luzginov" TestType="negative">
<Comment>double NULL declaration; see COL9</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB1 (
					COL1 VARCHAR(25) NULL,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL2 FLOAT(10) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL3 VARCHAR2(4000) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL4 INT NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL5 DATE NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL6 FLOAT(29) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL7 VARCHAR2(4000) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL8 CHAR(1918) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB1 ADD ( COL9 RAW(2970) NULL NULL )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB1
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="2" Responsible="Oleg Luzginov" TestType="negative">
<Comment>mistake in NULL keyword; see COL5</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB2 (
					COL1 RAW(43) NULL,
					COL2 DATE NULL,
					COL3 VARCHAR2(11) NULL,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB2 ADD (
					COL4 INTEGER NULL,
					COL5 INTEGER NULLL )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB2
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="3" Responsible="Oleg Luzginov" TestType="negative">
<Comment>default definition after constraint NULL; see COL9</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB3 (
					COL1 RAW(53) NULL,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL2 CHARACTER(3045) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL3 INT NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL4 NUMBER(19) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL5 DATE NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL6 DATE NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL7 ROWID NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL8 CHARACTER(2756) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB3 ADD ( COL9 CHARACTER(5611) NULL DEFAULT 'jkhsdjfkhs')
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB3
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="4" Responsible="Oleg Luzginov" TestType="negative">
<Comment>DEFAULT NOT NULL NULL; see COL5</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB4 (
					COL1 INT NULL,
					COL2 NUMBER(57) NULL,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB4 ADD (
					COL3 ROWID NULL,
					COL4 FLOAT(30) NULL,
					COL5 DATE DEFAULT NOT NULL NULL,
					COL6 CHAR(7994) NULL,
					COL7 ROWID NULL,
					COL8 DATE NULL )
				</CallString>
<Error>
<ErrorCode>-5004</ErrorCode>
<ErrorMessage>Missing constant</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB4
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="5" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unnecessary comma after NULL constraint; see COL9</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB5 (
					COL1 CHAR(39) NULL,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL2 CHARACTER(2978) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL3 NUMBER(37, 9) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL4 VARCHAR2(2563) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL5 NUMBER(35, 14) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL6 NUMBER(36) NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL7 DATE NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL8 INTEGER NULL )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB5 ADD ( COL9 FLOAT(2) NULL, )
				</CallString>
<Error>
<ErrorCode>-5006</ErrorCode>
<ErrorMessage>Missing identifier</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB5
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="6" Responsible="Oleg Luzginov" TestType="negative">
<Comment>double UNIQUE; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB6 (
					COL1 CHAR(4),
					COL2 CHAR(54),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB6 ADD ( COL3 INT CONSTRAINT COL3_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB6 ADD ( COL4 INT CONSTRAINT COL4_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB6 ADD ( COL5 VARCHAR2(23) CONSTRAINT COL5_CONSTR UNIQUE UNIQUE )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB6
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="7" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing blank; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB7 (
					COL1 CHARACTER(3),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB7 ADD (
					COL2 INTEGER CONSTRAINT COL2_CONSTR UNIQUE,
					COL3 CHARACTER(31) CONSTRAINT COL3_CONSTR UNIQUE,
					COL4 RAW(9) CONSTRAINT COL4_CONSTR UNIQUE,
					COL5 DATE CONSTRAINT COL5_CONSTR UNIQUENOT NULL )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB7
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="8" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unique for LONG column; see COL4_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB8 (
					COL1 VARCHAR(9),
					COL2 NUMBER(53),
					COL3 NUMBER(31),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB8 ADD ( COL4 LONG CONSTRAINT COL4_CONSTR UNIQUE )
				</CallString>
<Error>
<ErrorCode>-7032</ErrorCode>
<ErrorMessage>SQL statement not allowed for column of data type LONG</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB8
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="9" Responsible="Oleg Luzginov" TestType="negative">
<Comment>mistake into the UNIQUE keyword; see COL4_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB9 (
					COL1 FLOAT(25),
					COL2 INTEGER,
					COL3 NUMBER(41, 31),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB9 ADD (
					COL4 RAW(36) CONSTRAINT COL4_CONSTR UNIUE )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB9
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="10" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing blank; see COL4_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB10 (
					COL1 VARCHAR(20),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB10 ADD ( COL2 VARCHAR2(54) CONSTRAINT COL2_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB10 ADD ( COL3 CHARACTER(25) CONSTRAINT COL3_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB10 ADD ( COL4 FLOAT(36) CONSTRAINT COL4_CONSTR NULLUNIQUE )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB10
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="11" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing ) after column unique constraint; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB11 (
					COL1 RAW(44),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB11 ADD (
					COL2 CHARACTER(49) CONSTRAINT COL2_CONSTR UNIQUE,
					COL3 DATE CONSTRAINT COL3_CONSTR UNIQUE,
					COL4 FLOAT(36) CONSTRAINT COL4_CONSTR UNIQUE,
					COL5 NUMBER(51, 24) CONSTRAINT COL5_CONSTR UNIQUE
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB11
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="12" Responsible="Oleg Luzginov" TestType="negative">
<Comment>too long unique column; see  COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB12 (
					COL1 RAW(51),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB12 ADD ( COL2 CHARACTER(34) CONSTRAINT COL2_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB12 ADD ( COL3 NUMBER(62, 4) CONSTRAINT COL3_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB12 ADD ( COL4 VARCHAR2(34) CONSTRAINT COL4_CONSTR UNIQUE )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB12 ADD ( COL5 CHAR(1024) CONSTRAINT COL5_CONSTR UNIQUE )
				</CallString>
<Error>
<ErrorCode>-2001</ErrorCode>
<ErrorMessage>Key too long</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB12
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(7.4-;;)(;;internal)" Number="13" Responsible="Oleg Luzginov" TestType="negative">
<Comment>PRIMARY KEY constraint for LONG column; see COL9_CONSTR

** for DB &gt;= 7.4 error-code has changed
   see ALTER_TABLE_negative.xml[1013]</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB13 (
					COL1 RAW(8),
					COL2 CHARACTER(48),
					COL3 VARCHAR2(17),
					COL4 FLOAT(13),
					COL5 FLOAT(22),
					COL6 VARCHAR2(63),
					COL7 DATE,
					COL8 VARCHAR(33) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB13 ADD ( COL9 LONG CONSTRAINT COL9_CONSTR PRIMARY KEY )
				</CallString>
<Error>
<ErrorCode>-7032</ErrorCode>
<ErrorMessage>SQL statement not allowed for column of data type LONG</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB13
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="14" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing IS in NULL condition; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB14 (
					COL1 CHARACTER(42),
					COL2 RAW(57),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB14 ADD ( COL3 FLOAT(32) CONSTRAINT COL3_CONSTR CHECK ( COL3 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB14 ADD ( COL4 DATE CONSTRAINT COL4_CONSTR CHECK ( COL4 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB14 ADD ( COL5 INT CONSTRAINT COL5_CONSTR CHECK ( COL5 NOT NULL ) )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB14
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="15" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing IN in membership condition; see COL8_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB15 (
					COL1 VARCHAR2(61),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB15 ADD (
					COL2 ROWID CONSTRAINT COL2_CONSTR CHECK ( COL2 IS NOT NULL ),
					COL3 ROWID CONSTRAINT COL3_CONSTR CHECK ( COL3 IS NOT NULL ),
					COL4 DATE,
					COL5 DATE DEFAULT SYSDATE,
					COL6 VARCHAR2(3091) CONSTRAINT COL6_CONSTR CHECK ( COL6 IS NOT NULL ),
					COL7 VARCHAR(7277) CONSTRAINT COL7_CONSTR CHECK ( COL7 IS NOT NULL ),
					COL8 NUMBER(32, 14) CONSTRAINT COL8_CONSTR CHECK ( COL8 NOT (1.3E-10, 4.5657E12 ) ) )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB15
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="16" Responsible="Oleg Luzginov" TestType="negative">
<Comment>incompatible type of constant in comparison condition; see COL4_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB16 (
					COL1 CHAR(53),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB16 ADD ( COL2 FLOAT(27) CONSTRAINT COL2_CONSTR CHECK ( COL2 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB16 ADD ( COL3 INT CONSTRAINT COL3_CONSTR CHECK ( COL3 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB16 ADD ( COL4 RAW(5029) CONSTRAINT COL4_CONSTR CHECK ( COL4 &gt; 120 ) )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
<Error>
<ErrorCode>-8004</ErrorCode>
<ErrorMessage>Constant must be compatible with column type and length</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB16
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="17" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing value in LIKE condition; see COL9_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB17 (
					COL1 INTEGER,
					COL2 VARCHAR2(10),
					COL3 NUMBER(21, 4),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB17 ADD (
					COL4 INTEGER CONSTRAINT COL4_CONSTR CHECK ( COL4 IS NOT NULL ),
					COL5 INTEGER CONSTRAINT COL5_CONSTR CHECK ( COL5 IS NOT NULL ),
					COL6 FLOAT(25) CONSTRAINT COL6_CONSTR CHECK ( COL6 IS NOT NULL ),
					COL7 FLOAT(9) CONSTRAINT COL7_CONSTR CHECK ( COL7 IS NOT NULL ),
					COL8 DATE CONSTRAINT COL8_CONSTR CHECK ( COL8 IS NOT NULL ),
					COL9 VARCHAR(3881) CONSTRAINT COL9_CONSTR CHECK ( COL9 LIKE  ) )
				</CallString>
<Error>
<ErrorCode>-5010</ErrorCode>
<ErrorMessage>Missing value specification</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB17
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test Exclude="(;;internal)" Number="18" Responsible="Daub, Jan Michael" TestType="positive">
<Comment>missing escape character in LIKE condition; see COL8_CONSTR

it seems to be false but even ORACLE-DB doesn't give back any error message</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB18 (
					COL1 INTEGER,
					COL2 CHAR,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB18 ADD ( COL3 CHARACTER(4000) CONSTRAINT COL3_CONSTR CHECK ( COL3 LIKE 'sjkdhfsdf' ESCAPE ',') )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB18 ADD ( COL4 ROWID CONSTRAINT COL4_CONSTR CHECK ( COL4 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB18 ADD ( COL5 DATE CONSTRAINT COL5_CONSTR CHECK ( COL5 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB18 ADD ( COL6 VARCHAR(1515) CONSTRAINT COL6_CONSTR CHECK ( COL6 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB18 ADD ( COL7 INT CONSTRAINT COL7_CONSTR CHECK ( COL7 &gt; 100 OR COL7 IS NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB18 ADD ( COL8 DATE CONSTRAINT COL8_CONSTR CHECK ( COL8 LIKE '10-MAY-1980'  ESCAPE '') )
				</CallString>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB18
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="19" Responsible="Oleg Luzginov" TestType="negative">
<Comment>illegal operator in compound condition; see COL8_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB19 (
					COL1 VARCHAR2(50),
					COL2 INTEGER,
					COL3 VARCHAR2(26),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB19 ADD (
					COL4 CHARACTER(2475) CONSTRAINT COL4_CONSTR CHECK ( COL4 IS NOT NULL ),
					COL5 VARCHAR(6020) CONSTRAINT COL5_CONSTR CHECK ( COL5 IS NOT NULL ),
					COL6 VARCHAR2(5610) CONSTRAINT COL6_CONSTR CHECK ( COL6 LIKE 'sjkdhf' ),
					COL7 VARCHAR2(7426) CONSTRAINT COL7_CONSTR CHECK ( COL7 IS NOT NULL ),
					COL8 VARCHAR2(2494) CONSTRAINT COL8_CONSTR CHECK ( ( COL8 = 'ok' ) || ( COL8 IS NULL ) ) )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB19
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="20" Responsible="Oleg Luzginov" TestType="negative">
<Comment>DEFAULT after check constraint; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB20 (
					COL1 CHARACTER(11),
					COL2 CHARACTER(29),
					COL3 RAW(30),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB20 ADD ( COL4 CHARACTER(1619) CONSTRAINT COL4_CONSTR CHECK ( COL4 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB20 ADD ( COL5 DATE CONSTRAINT COL5_CONSTR CHECK ( COL5 IS NOT NULL ) DEFAULT SYSDATE )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB20
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="21" Responsible="Oleg Luzginov" TestType="negative">
<Comment>duplicate names of check constraints with different conditions; see COL6_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB21 (
					COL1 INT,
					COL2 CHARACTER(22),
					COL3 INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB21 ADD (
					COL4 CHARACTER(1389) CONSTRAINT COL4_CONSTR CHECK ( COL4 IS NOT NULL ),
					COL5 INTEGER CONSTRAINT COL5_CONSTR CHECK ( COL5 IS NOT NULL ),
					COL6 CHARACTER(4000) CONSTRAINT COL6_CONSTR CHECK ( COL6 LIKE 'sjkldhf' ),
					COL7 DATE CONSTRAINT COL6_CONSTR CHECK ( COL7 IS NOT NULL ) )
				</CallString>
<Error>
<ErrorCode>-955</ErrorCode>
<ErrorMessage>Duplicate name</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB21
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="22" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing CHECK keyword; see COL4_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB22 (
					COL1 VARCHAR(24),
					COL2 INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB22 ADD ( COL3 VARCHAR(4000) CONSTRAINT COL3_CONSTR CHECK ( COL3 IS NOT NULL ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB22 ADD ( COL4 DATE CONSTRAINT COL4_CONSTR  ( COL4 IS NOT NULL ) )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB22
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="23" Responsible="Oleg Luzginov" TestType="negative">
<Comment>the referenced table does not exist; see constraint fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE23 (
					COL1_BASE FLOAT(5),
					COL2_BASE NUMBER(53),
					COL3_BASE VARCHAR(4000),
					COL4_BASE FLOAT(27),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB23 (
					COL1 CHARACTER(30),
					COL2 CHARACTER(61),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB23 ADD (
					COL3 FLOAT CONSTRAINT fk_good REFERENCES TAB_BASE23,
					COL4 ROWID,
					COL5 VARCHAR(19),
					COL6 DATE CONSTRAINT fk_bad REFERENCES TAB_BASE23_BAD,
					COL7 INTEGER,
					COL8 CHARACTER(4000),
					COL9 CHAR(3185),
					COL10 VARCHAR(4000),
					COL11 RAW(4000) )
				</CallString>
<Error>
<ErrorCode>-942</ErrorCode>
<ErrorMessage>Unknown table name:TAB_BASE23_BAD</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB23
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE23
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="24" Responsible="Oleg Luzginov" TestType="negative">
<Comment>the referenced table does not have key and has no index; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE24 (
					COL1_BASE CHAR(43),
					COL2_BASE NUMBER(15) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB24 (
					COL1 INTEGER,
					COL2 DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB24 ADD (
					COL3 CHAR(43) CONSTRAINT fk_bad REFERENCES TAB_BASE24(COL1_BASE) )
				</CallString>
<Error>
<ErrorCode>-8030</ErrorCode>
<ErrorMessage>Column must be indexed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB24
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE24
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="25" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key with too many columns as explicitly specified; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE25 (
					COL1_BASE VARCHAR(23),
					COL2_BASE NUMBER(62),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE, COL2_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB25 (
					COL1 FLOAT(22),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB25 ADD (
					COL2 VARCHAR(23) CONSTRAINT fk_bad REFERENCES TAB_BASE25(COL1_BASE, COL2_BASE),
					COL3 INT,
					COL4 DATE,
					COL5 FLOAT(22),
					COL6 INTEGER )
				</CallString>
<Error>
<ErrorCode>-1201</ErrorCode>
<ErrorMessage>Too few columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB25
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE25
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="" Number="26" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key with too many columns as implicitly specified; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE26 (
					COL1_BASE DATE,
					COL2_BASE DATE,
					COL3_BASE CHARACTER(4000),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE, COL2_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB26 (
					COL1 INTEGER,
					COL2 CHAR(31),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB26 ADD (
					COL3 DATE CONSTRAINT fk_bad REFERENCES TAB_BASE26 )
				</CallString>
<Error>
<ErrorCode>-1201</ErrorCode>
<ErrorMessage>Too few columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB26
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE26
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="27" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key with column whose datatypes differ to referencing columns; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE27 (
					COL1_BASE CHAR(9),
					COL2_BASE ROWID,
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB27 (
					COL1 VARCHAR(30),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB27 ADD (
					COL2 DATE,
					COL3 CHAR(9) CONSTRAINT fk_good REFERENCES TAB_BASE27,
					COL4 INT CONSTRAINT fk_bad REFERENCES TAB_BASE27,
					COL5 VARCHAR(4000),
					COL6 VARCHAR2(2712) )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB27
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE27
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="28" Responsible="Oleg Luzginov" TestType="negative">
<Comment>referenced key column length differs to referencing column (too small); see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE28 (
					COL1_BASE NUMBER(32),
					COL2_BASE NUMBER(63),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB28 (
					COL1 CHARACTER(52),
					COL2 VARCHAR2(1),
					COL3 INT,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB28 ADD (
					COL4 NUMBER(32) CONSTRAINT fk_good REFERENCES TAB_BASE28,
					COL5 NUMBER(33) CONSTRAINT fk_bad REFERENCES TAB_BASE28,
					COL6 CHARACTER(4000),
					COL7 NUMBER(57, 17),
					COL8 ROWID )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB28
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE28
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="29" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key column length differs to referencing column (too big); see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE29 (
					COL1_BASE CHARACTER(64),
					COL2_BASE CHARACTER(4000),
					COL3_BASE DATE,
					COL4_BASE DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB29 (
					COL1 DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB29 ADD (
					COL2 INT,
					COL3 INTEGER,
					COL4 ROWID,
					COL5 DATE,
					COL6 ROWID,
					COL7 CHARACTER(64) CONSTRAINT fk_good REFERENCES TAB_BASE29,
					COL8 CHAR(63) CONSTRAINT fk_bad REFERENCES TAB_BASE29,
					COL9 NUMBER(55, 1) )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB29
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE29
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="30" Responsible="Oleg Luzginov" TestType="negative">
<Comment>it is a NON-unique index with fitting columns; see CONSTRAINT fk</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE30 (
					COL1_BASE CHARACTER(46),
					COL2_BASE DATE,
					COL3_BASE CHARACTER(4000) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE INDEX IND_BASE30_bad
                                ON TAB_BASE30(COL1_BASE)
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE UNIQUE INDEX IND_BASE30_good
                                ON TAB_BASE30(COL2_BASE)
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB30 (
					COL1 INT,
					COL2 RAW(23),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB30 ADD (
					COL3 INT,
					COL4 CHAR(46) CONSTRAINT fk_bad REFERENCES TAB_BASE30(COL1_BASE),
					COL5 DATE CONSTRAINT fk_good REFERENCES TAB_BASE30(COL2_BASE),
					COL6 NUMBER(60) )
				</CallString>
<Error>
<ErrorCode>-8030</ErrorCode>
<ErrorMessage>Column must be indexed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB30
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE30
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="31" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unique index with too many columns; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE31 (
					COL1_BASE VARCHAR2(40),
					COL2_BASE DATE,
					COL3_BASE CHAR(4000),
					COL4_BASE NUMBER(21, 2),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE UNIQUE INDEX IND_BASE31_good
                                ON TAB_BASE31(COL1_BASE, COL2_BASE)
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB31 (
					COL1 DATE,
					COL2 INT,
					COL3 RAW(62),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB31 ADD (
					COL4 VARCHAR2(40) CONSTRAINT fk_bad REFERENCES TAB_BASE31(COL1_BASE, COL2_BASE) )
				</CallString>
<Error>
<ErrorCode>-1201</ErrorCode>
<ErrorMessage>Too few columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB31
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE31
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="32" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unique index with column whose datatypes differ to referencing columns; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE32 (
					COL1_BASE FLOAT(24) UNIQUE,
					COL2_BASE INTEGER )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB32 (
					COL1 NUMBER(22),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB32 ADD (
					COL2 NUMBER(52, 2),
					COL3 ROWID,
					COL4 INTEGER CONSTRAINT fk_bad REFERENCES TAB_BASE32(COL1_BASE),
					COL5 RAW(1396),
					COL6 FLOAT(3) CONSTRAINT fk_good REFERENCES TAB_BASE32(COL1_BASE),
					COL7 VARCHAR(3651),
					COL8 VARCHAR2(4000),
					COL9 DATE,
					COL10 DATE )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB32
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE32
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="33" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unique index column length differs to referencing column; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE33 (
					COL1_BASE CHAR(59) UNIQUE,
					COL2_BASE CHARACTER(1186),
					COL3_BASE RAW(4208) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB33 (
					COL1 RAW(55),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB33 ADD (
					COL2 CHAR(59) CONSTRAINT fk_good REFERENCES TAB_BASE33(COL1_BASE),
					COL3 CHAR(58) CONSTRAINT fk_bad REFERENCES TAB_BASE33(COL1_BASE),
					COL4 FLOAT(1),
					COL5 DATE,
					COL6 CHAR(4000),
					COL7 DATE )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB33
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE33
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="34" Responsible="Oleg Luzginov" TestType="negative">
<Comment>a base table has no column which explicitly specified; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE34 (
					COL1_BASE NUMBER(60, 25),
					COL2_BASE VARCHAR2(4000),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB34 (
					COL1 CHARACTER(61),
					COL2 VARCHAR2(7),
					COL3 VARCHAR2(58),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB34 ADD (
					COL4 NUMBER(60, 25) CONSTRAINT fk_bad REFERENCES TAB_BASE34(COL_BASE))
				</CallString>
<Error>
<ErrorCode>-4005</ErrorCode>
<ErrorMessage>Unknown column name</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB34
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE34
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="" Number="35" Responsible="Oleg Luzginov" TestType="negative">
<Comment>default value after constraint definition; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE35 (
					COL1_BASE CHAR(4),
					COL2_BASE CHAR(228),
					COL3_BASE VARCHAR(3000),
					COL4_BASE INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB35 (
					COL1 CHARACTER(15),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB35 ADD (
					COL2 CHAR(4) CONSTRAINT fk_bad REFERENCES TAB_BASE35 DEFAULT 'sdfjksdf',
					COL4 FLOAT(34) )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB35
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE35
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="36" Responsible="Oleg Luzginov" TestType="negative">
<Comment>mistake in the REFERENCE keyword; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE36 (
					COL1_BASE INTEGER,
					COL2_BASE CHARACTER(1405),
					COL3_BASE DATE,
					COL4_BASE RAW(2269),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB36 (
					COL1 INTEGER,
					COL2 CHARACTER(1),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB36 ADD (
					COL3 VARCHAR2(6030),
					COL4 CHAR(6895),
					COL5 INT CONSTRAINT fk_bad REFERENCS TAB_BASE36,
					COL6 ROWID,
					COL7 VARCHAR2(4191) )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB36
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE36
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="37" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unnecessary FOREIGN  KEY declaration; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE37 (
					COL1_BASE VARCHAR2(24),
					COL2_BASE NUMBER(7, 5),
					COL3_BASE ROWID,
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB37 (
					COL1 INTEGER,
					COL2 VARCHAR2(47),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB37 ADD (
					COL3 VARCHAR2(24)
                                        CONSTRAINT fk_bad FOREIGN KEY (COL3) REFERENCES TAB_BASE37 )
				</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB37
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE37
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="38" Responsible="Oleg Luzginov" TestType="negative">
<Comment>CASCADE DELETE instead of DELETE CASCADE; see COL3_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB38_BASE (
					COL1_BASE VARCHAR(11),
					COL2_BASE CHARACTER(4000),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB38 (
					COL1 INT,
					COL2 NUMBER(3),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB38 ADD (
					COL3 VARCHAR(11)
                                                CONSTRAINT COL3_CONSTR REFERENCES TAB38_BASE ON CASCADE DELETE,
					COL4 DATE,
					COL5 INTEGER )
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:DELETE</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB38
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB38_BASE
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="39" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing CASCADE; see COL3_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB39_BASE (
					COL1_BASE VARCHAR2(27),
					COL2_BASE DATE,
					COL3_BASE VARCHAR2(3160),
					COL4_BASE RAW(2854),
					COL5_BASE RAW(7143),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB39 (
					COL1 INTEGER,
					COL2 CHARACTER(53),
					        CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB39 ADD (
					COL3 VARCHAR2(27)
                                                CONSTRAINT COL3_CONSTR REFERENCES TAB39_BASE ON DELETE ,
					COL4 INTEGER,
					COL5 NUMBER(13, 0) )
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:CASCADE,SET</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB39
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB39_BASE
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="40" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing ON; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB40_BASE (
					COL1_BASE DATE,
					COL2_BASE RAW(4012),
					COL3_BASE NUMBER(61),
					COL4_BASE NUMBER(21, 16),
					COL5_BASE NUMBER(58),
					COL6_BASE DATE,
					COL7_BASE VARCHAR(4000),
					COL8_BASE FLOAT(12),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB40 (
					COL1 INTEGER,
					COL2 NUMBER(41, 29),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB40 ADD (
					COL3 VARCHAR(5798),
					COL4 CHARACTER(6070),
					COL5 INTEGER
                                                CONSTRAINT COL5_CONSTR REFERENCES TAB40_BASE  DELETE CASCADE,
					COL6 INTEGER )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB40
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB40_BASE
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="41" Responsible="Oleg Luzginov" TestType="negative">
<Comment>duplicate added column name; see COL2</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB41 (
					COL1 VARCHAR(31),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB41 ADD (
					COL2 CHAR(2989),
					COL2 ROWID,
					COL4 DATE,
					COL5 VARCHAR2(4000),
					COL6 CHAR(2154),
					COL7 INTEGER,
					COL8 INT )
				</CallString>
<Error>
<ErrorCode>-6001</ErrorCode>
<ErrorMessage>Duplicate column name:COL2</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB41
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="42" Responsible="Oleg Luzginov" TestType="negative">
<Comment>an unnecessary COLUMN word </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE TAB42 (
					COL1 CHARACTER(63),
					COL2 RAW(42),
					COL3 CHARACTER(16),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>ALTER TABLE TAB42 ADD COLUMN (
					COL4 NUMBER(40),
					COL5 CHARACTER(3964),
					COL6 NUMBER(53),
					COL7 RAW(5042),
					COL8 DATE,
					COL9 CHAR(7666),
					COL10 RAW(1107),
					COL11 INT )</CallString>
<Error>
<ErrorCode>-7006</ErrorCode>
<ErrorMessage>Reserved identifier not allowed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>DROP TABLE TAB42</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="43" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing ) at the end of alter statement</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB43 (
					COL1 VARCHAR2(40),
					COL2 VARCHAR2(11),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB43 ADD (
					COL3 INT,
					COL4 CHAR(1386),
					COL5 INT,
					COL6 NUMBER(21),
					COL7 CHAR(958),
					COL8 CHARACTER(506),
					COL9 INTEGER
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB43
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="44" Responsible="Oleg Luzginov" TestType="negative">
<Comment>alter for a non-existent table</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB44 (
					COL1 RAW(55),
					COL2 VARCHAR2(39),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE Non_existent_TAB44 ADD (
					COL3 INT,
					COL4 CHAR(1386),
					COL5 INT )
				</CallString>
<Error>
<ErrorCode>-942</ErrorCode>
<ErrorMessage>Unknown table name:NON_EXISTENT_TAB44</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB44
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="" Number="45" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing ADD keyword</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB45 (
					COL1 INT,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB45  (
					COL2 NUMERIC(48) )
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:MODIFY,COLUMN,ADD,DROP,NOT,SAMPLE,FOREIGN,FACT,DYNAMIC,DIMENSION,BWHIERARCHY,ALTER</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB45
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="46" Responsible="Oleg Luzginov" TestType="negative">
<Comment>addition unique table constraint to the LONG column; see CNSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB46 (
					COL1 CHARACTER(54),
					COL2 NUMBER(32, 2),
					COL3 DATE,
					COL4 LONG,
					COL5 RAW(485),
					COL6 CHARACTER(675),
					COL7 DATE,
					COL8 ROWID,
					COL9 LONG,
					COL10 INTEGER,
					COL11 VARCHAR2(2950),
					COL12 DATE,
					COL13 DATE,
					COL14 VARCHAR(4000),
					COL15 RAW(2460),
					COL16 VARCHAR(4000),
					COL17 INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB46 ADD ( CONSTRAINT CONSTR1 UNIQUE ( COL4 ) )
				</CallString>
<Error>
<ErrorCode>-7032</ErrorCode>
<ErrorMessage>SQL statement not allowed for column of data type LONG</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB46
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="47" Responsible="Oleg Luzginov" TestType="negative">
<Comment>; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB47 (
					COL1 DATE,
					COL2 NUMBER(36),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB47 ADD ( CONSTRAINT CONSTR1 UNIQUE ( COL1, COL2 ) )
				</CallString>
<Error>
<ErrorCode>-7055</ErrorCode>
<ErrorMessage>Column(s) already indexed:CONSTR1</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB47
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="48" Responsible="Oleg Luzginov" TestType="negative">
<Comment>column of table unique constraint does not exist in the table; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB48 (
					COL1 INTEGER,
					COL2 NUMBER(51),
					COL3 RAW(12),
					COL4 INT,
					COL5 DATE,
					COL6 INT,
					COL7 DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3, COL4, COL5 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB48 ADD ( CONSTRAINT CONSTR1 UNIQUE ( COL8 ) )
				</CallString>
<Error>
<ErrorCode>-4005</ErrorCode>
<ErrorMessage>Unknown column name:COL8</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB48
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="49" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing "," between the columns into the unique table constraint; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB49 (
					COL1 INT,
					COL2 RAW(36),
					COL3 RAW(46),
					COL4 VARCHAR(54),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB49 ADD ( CONSTRAINT CONSTR1 UNIQUE ( COL3 COL4 ) )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB49
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="50" Responsible="Oleg Luzginov" TestType="negative">
<Comment>duplicate column in the table unique constraint; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB50 (
					COL1 CHAR(44),
					COL2 CHARACTER(29),
					COL3 DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB50 ADD ( CONSTRAINT CONSTR1 UNIQUE ( COL3, COL3 ) )
				</CallString>
<Error>
<ErrorCode>-6001</ErrorCode>
<ErrorMessage>Duplicate column name</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB50
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="51" Responsible="Oleg Luzginov" TestType="negative">
<Comment>critical number of columns in the composite unique key = 17 instead of 33 in Oracle</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB51 (
					COL1 INT,
					COL2 FLOAT(5),
					COL3 VARCHAR2(4),
					COL4 INTEGER,
					COL5 CHAR(21),
					COL6 INTEGER,
					COL7 CHAR(19),
					COL8 CHAR(57),
					COL9 VARCHAR(25),
					COL10 INTEGER,
					COL11 FLOAT(51),
					COL12 RAW(30),
					COL13 DATE,
					COL14 RAW(15),
					COL15 VARCHAR2(42),
					COL16 DATE,
					COL17 NUMBER(28),
					COL18 ROWID)
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB51 ADD (  CONSTRAINT CONSTR1 UNIQUE (
						COL1, COL2, COL3, COL4, COL5, COL6, COL7,
						COL8, COL9, COL10, COL11, COL12, COL13, COL14, COL15,
						COL16, COL17 )  )
				</CallString>
<Error>
<ErrorCode>-1002</ErrorCode>
<ErrorMessage>Too many columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB51
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="52" Responsible="Oleg Luzginov" TestType="negative">
<Comment>too long primary key; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB52 (
					COL1 VARCHAR2(17),
					COL2 RAW(38),
					COL3 FLOAT(29),
					COL4 RAW(50),
					COL5 DATE,
					COL6 DATE,
					COL7 VARCHAR(21),
					COL8 INT,
					COL9 FLOAT(15),
					COL10 FLOAT(4),
					COL11 FLOAT(14),
					COL12 VARCHAR2(50),
					COL13 RAW(63),
					COL14 CHAR(20),
					COL15 CHAR(60),
					COL16 NUMBER(9, 6),
					COL17 INT,
					COL18 INT,
					COL19 FLOAT(21),
					COL20 DATE,
					COL21 VARCHAR(43),
					COL22 DATE,
					COL23 VARCHAR2(32),
					COL24 FLOAT(2),
					COL25 VARCHAR(55),
					COL26 VARCHAR2(57),
					COL27 INTEGER,
					COL28 INT,
					COL29 NUMBER(19, 13),
					COL30 VARCHAR(62),
					COL31 RAW(55),
					COL32 RAW(5),
					COL33 INT,
					COL34 CHAR(22),
					COL35 VARCHAR2(54),
					COL36 CHARACTER(55),
					COL37 VARCHAR2(9),
					COL38 NUMBER(31, 3),
					COL39 RAW(31),
					COL40 VARCHAR2(40),
					COL41 DATE )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB52 ADD (  CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3, COL4, COL5, COL6, COL7,
						COL8, COL9, COL10, COL11, COL12, COL13, COL14, COL15,
						COL16, COL17, COL18, COL19, COL20, COL21, COL22, COL23,
						COL24, COL25, COL26, COL27, COL28, COL29, COL30, COL31,
						COL32, COL33, COL34, COL35, COL36, COL37, COL38, COL39,
						COL40, COL41 ) )
				</CallString>
<Error>
<ErrorCode>-2001</ErrorCode>
<ErrorMessage>Key too long</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB52
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="53" Responsible="Oleg Luzginov" TestType="negative">
<Comment>duplicate column name in the primary key constraint; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB53 (
					COL1 DATE,
					COL2 NUMBER(30),
					COL3 VARCHAR(4000),
					COL4 DATE,
					COL5 NUMBER(4),
					COL6 VARCHAR2(4000),
					COL7 VARCHAR2(2035) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB53 ADD (	CONSTRAINT CONSTR1 PRIMARY KEY (
                                        COL1, COL1 ) )
				</CallString>
<Error>
<ErrorCode>-6001</ErrorCode>
<ErrorMessage>Duplicate column name</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB53
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="54" Responsible="Oleg Luzginov" TestType="negative">
<Comment>LONG column as a primary key; see CONSTR1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB54 (
					COL1 LONG,
					COL2 CHAR,
					COL3 VARCHAR,
					COL4 VARCHAR,
					COL5 CHARACTER,
					COL6 NUMBER(38, 0),
					COL7 CHARACTER(4000),
					COL8 CHARACTER(4000) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB54 ADD (	CONSTRAINT CONSTR1 PRIMARY KEY (
                                        COL1 ) )
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>KEY not allowed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB54
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="55" Responsible="Oleg Luzginov" TestType="negative">
<Comment>create the second primary key for the table; see CONSTR2</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB55 (
					COL1 VARCHAR,
					COL2 INTEGER,
					COL3 FLOAT(32),
					COL4 FLOAT(29) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB55 ADD (	CONSTRAINT CONSTR1 PRIMARY KEY (
                                        COL1 ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB55 ADD (	CONSTRAINT CONSTR2 PRIMARY KEY (
                                        COL2 ) )
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>KEY not allowed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB55
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="56" Responsible="Oleg Luzginov" TestType="negative">
<Comment>duplicate primary key; see CONSTR2</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB56 (
					COL1 INT,
					COL2 NUMBER(52),
					COL3 VARCHAR,
					COL4 NUMBER(40),
					COL5 VARCHAR2(1563),
					COL6 LONG )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB56 ADD (	CONSTRAINT CONSTR1 PRIMARY KEY (
                                        COL1 ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB56 ADD (	CONSTRAINT CONSTR2 PRIMARY KEY (
                                        COL1 ) )
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>KEY not allowed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB56
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="57" Responsible="Oleg Luzginov" TestType="negative">
<Comment>try to insert null values into the primary key column</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB57 (
					COL1 CHARACTER,
					COL2 CHARACTER,
					COL3 FLOAT(4),
					COL4 INTEGER,
					COL5 INT,
					COL6 INT,
					COL7 INT,
					COL8 INT )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB57 ADD (	CONSTRAINT CONSTR1 PRIMARY KEY (
                                        COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				INSERT INTO TAB57(COL1) VALUES ( NULL )
				</CallString>
<Error>
<ErrorCode>-7009</ErrorCode>
<ErrorMessage>NULL value in key column not allowed:COL1</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB57
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="" Number="58" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>using SYSDATE in check constraint; 
ORACLE does not allow to use SYSDATE for comparison in a CHECK-statement; 
see CONSTR5;</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB58 (
					COL1 FLOAT(12),
					COL2 VARCHAR(48),
					COL3 VARCHAR2(7),
					COL4 FLOAT(10),
					COL5 DATE,
					COL6 NUMBER(14),
					COL7 VARCHAR(7084),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB58 ADD (
                                CONSTRAINT CONSTR5 CHECK ( COL5 &gt; SYSDATE ) )
				</CallString>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB58
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="59" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>comparison of a value given like [" ... "] and a column defined for CHAR; see CONSTR5
["..."] is not allowed here because it has been reserved for column names </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB59 (


					COL1 NUMBER(63),
					COL2 VARCHAR2(1911),
					COL3 VARCHAR(4000),
					COL4 VARCHAR(1068),
					COL5 CHARACTER(370),
					COL6 NUMBER(44),
					COL7 VARCHAR2(1503),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB59 ADD (
                                CONSTRAINT CONSTR5 CHECK ( COL5 &gt; "215364" ) )
				</CallString>
<Error>
<ErrorCode>-4005</ErrorCode>
<ErrorMessage>[-4005] (at 96): Unknown column name:215364</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB59
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="60" Responsible="Oleg Luzginov" TestType="negative">
<Comment>using non-existent column; see CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB60 (
					COL1 INT,
					COL2 RAW(16),
					COL3 LONG,
					COL4 VARCHAR2(1873),
					COL5 FLOAT(27),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB60 ADD (
                                CONSTRAINT CONSTR CHECK ( COL &gt; 5.5e34 ) )
				</CallString>
<Error>
<ErrorCode>-4005</ErrorCode>
<ErrorMessage>Unknown column name:COL</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB60
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="61" Responsible="Oleg Luzginov" TestType="negative">
<Comment>illegal logical operator; see CONSTR4</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB61 (
					COL1 RAW(55),
					COL2 VARCHAR(38),
					COL3 CHARACTER(26),
					COL4 INTEGER,
					COL5 INTEGER,
					COL6 INTEGER,
					COL7 VARCHAR(1900),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB61 ADD (
                                CONSTRAINT CONSTR4 CHECK ( COL4 =&gt; 5 ) )
				</CallString>
<Error>
<ErrorCode>-5010</ErrorCode>
<ErrorMessage>Missing value specification</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB61
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="62" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing comparison operator; see CONSTR3</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB62 (
					COL1 INTEGER,
					COL2 CHARACTER(1933),
					COL3 FLOAT(3),
					COL4 NUMBER(16, 15),
					COL5 VARCHAR(3645),
					COL6 FLOAT(34),
					COL7 CHARACTER(3438),
					COL8 LONG,
					COL9 LONG,
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB62 ADD (
                                CONSTRAINT CONSTR3 CHECK ( COL3 ANY (6.4e3, 5.67e-6) ) )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB62
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="63" Responsible="Oleg Luzginov" TestType="negative">
<Comment>illegal expression in the check table constraint; see CONSTR3</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB63 (
					COL1 DATE,
					COL2 FLOAT(18),
					COL3 CHAR,
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB63 ADD (
                                CONSTRAINT CONSTR3 CHECK ( COL3 + COL1 &gt; COL2 ) )
				</CallString>
<Error>
<ErrorCode>-7029</ErrorCode>
<ErrorMessage>Function not allowed for this data type</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB63
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test Exclude="" Number="64" Responsible="Daub, Jan Michael" TestType="positive">
<Comment>result of expression and constant have different datatypes; see CONSTR5

['...'] is allowed here!</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB64 (
					COL1 VARCHAR(48),
					COL2 DATE,
					COL3 ROWID,
					COL4 LONG,
					COL5 FLOAT(20),
					COL6 INTEGER,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB64 ADD (
                                CONSTRAINT CONSTR5 CHECK ( COL5*100 &gt; '1000' ) )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB64
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="66" Responsible="Oleg Luzginov" TestType="negative">
<Comment>CASCADE DELETE instead of DELETE CASCADE, addition a table constraint; see COL3_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB66_BASE (
					COL1_BASE VARCHAR(11),
					COL2_BASE CHARACTER(4000),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB66 (
					COL1 INT,
					COL2 NUMBER(3),
					COL3 VARCHAR(11),
					COL4 DATE,
					COL5 INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB66 ADD (
                                        CONSTRAINT COL3_CONSTR FOREIGN KEY (COL3) REFERENCES TAB66_BASE ON CASCADE DELETE )
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:DELETE</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB66
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB66_BASE
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="67" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing CASCADE, addition a table constraint; see COL3_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB67_BASE (
					COL1_BASE VARCHAR2(27),
					COL2_BASE DATE,
					COL3_BASE VARCHAR2(3160),
					COL4_BASE RAW(2854),
					COL5_BASE RAW(7143),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB67 (
					COL1 INTEGER,
					COL2 CHARACTER(53),
       					COL3 VARCHAR2(27),
					        CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB67 ADD (
                                        CONSTRAINT COL3_CONSTR  FOREIGN KEY (COL3) REFERENCES TAB67_BASE ON DELETE )
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:CASCADE,SET</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB67
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB67_BASE
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="68" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing ON, addition a table constraint; see COL5_CONSTR</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB68_BASE (
					COL1_BASE DATE,
					COL2_BASE RAW(4000),
					COL3_BASE NUMBER(61),
					COL4_BASE NUMBER(21, 16),
					COL5_BASE NUMBER(58),
					COL6_BASE DATE,
					COL7_BASE VARCHAR(4000),
					COL8_BASE FLOAT(12),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB68 (
					COL1 INTEGER,
					COL2 NUMBER(41, 29),
					COL3 VARCHAR(4000),
					COL4 CHARACTER(4000),
					COL5 INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB68 ADD (
                                        CONSTRAINT COL5_CONSTR  FOREIGN KEY (COL3) REFERENCES TAB68_BASE  DELETE CASCADE )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB68
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB68_BASE
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="69" Responsible="Oleg Luzginov" TestType="negative">
<Comment>the referenced table does not exist; see constraint fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB69 (
					COL1 CHARACTER(30),
					COL2 CHARACTER(61),
                                        COL3 DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB69 ADD (
					CONSTRAINT fk_bad
                                        FOREIGN KEY (COL3) REFERENCES TAB_BASE69_BAD )
				</CallString>
<Error>
<ErrorCode>-942</ErrorCode>
<ErrorMessage>Unknown table name:TAB_BASE69_BAD</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB69
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="70" Responsible="Oleg Luzginov" TestType="negative">
<Comment>the referenced table does not have key and has no index; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE70 (
					COL1_BASE CHAR(43),
					COL2_BASE NUMBER(15) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB70 (
					COL1 INTEGER,
					COL2 DATE,
                                        COL3 CHAR(43),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB70 ADD (
					CONSTRAINT fk_bad
                                        FOREIGN KEY (COL3) REFERENCES TAB_BASE70(COL1_BASE) )
				</CallString>
<Error>
<ErrorCode>-8030</ErrorCode>
<ErrorMessage>Column must be indexed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB70
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE70
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="71" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key with too many columns as explicitly specified; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE71 (
					COL1_BASE VARCHAR(23),
					COL2_BASE NUMBER(62),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE, COL2_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB71 (
					COL1 FLOAT(22),
                                        COL2 VARCHAR(23),
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB71 ADD (
					CONSTRAINT fk_bad
                                        FOREIGN KEY (COL2) REFERENCES TAB_BASE71(COL1_BASE, COL2_BASE) )
				</CallString>
<Error>
<ErrorCode>-1201</ErrorCode>
<ErrorMessage>Too few columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB71
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE71
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="72" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key with too many columns as implicitly specified; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE72 (
					COL1_BASE DATE,
					COL2_BASE DATE,
					COL3_BASE CHARACTER(4000),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE, COL2_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB72 (
					COL1 INTEGER,
					COL2 CHAR(31),
                                        COL3 DATE,
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB72 ADD (
					CONSTRAINT fk_bad
                                        FOREIGN KEY (COL3) REFERENCES TAB_BASE72 )
				</CallString>
<Error>
<ErrorCode>-1201</ErrorCode>
<ErrorMessage>Too few columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB72
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE72
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="73" Responsible="Oleg Luzginov" TestType="negative">
<Comment>key with column whose datatypes differ to referencing columns; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE73 (
					COL1_BASE CHAR(9),
					COL2_BASE ROWID,
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB73 (
					COL1 VARCHAR(30),
                                        COL2 DATE,
					COL3 CHAR(9) CONSTRAINT fk_good REFERENCES TAB_BASE73,
					COL4 INT,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB73 ADD (
					CONSTRAINT fk_bad
                                        FOREIGN KEY (COL4) REFERENCES TAB_BASE73 )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB73
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE73
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="74" Responsible="Oleg Luzginov" TestType="negative">
<Comment>it is a NON-unique index with fitting columns; see CONSTRAINT fk</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE74 (
					COL1_BASE CHARACTER(46),
					COL2_BASE DATE,
					COL3_BASE CHARACTER(4000) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE INDEX IND_BASE74_bad
                                ON TAB_BASE74(COL1_BASE)
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB74 (
					COL1 INT,
					COL2 RAW(23),
					COL3 INT,
					COL4 CHAR(46),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB74 ADD (
                                        CONSTRAINT fk_bad
                                        FOREIGN KEY (COL4) REFERENCES TAB_BASE74(COL1_BASE) )
				</CallString>
<Error>
<ErrorCode>-8030</ErrorCode>
<ErrorMessage>Column must be indexed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB74
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE74
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="75" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unique index with too many columns; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE75 (
					COL1_BASE VARCHAR2(40),
					COL2_BASE DATE,
					COL3_BASE CHAR(4000),
					COL4_BASE NUMBER(21, 2),
					CONSTRAINT pk PRIMARY  KEY (
						COL1_BASE ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE UNIQUE INDEX IND_BASE75_good
                                ON TAB_BASE75(COL1_BASE, COL2_BASE)
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB75 (
					COL1 DATE,
					COL2 INT,
					COL3 RAW(62),
                                        COL4 VARCHAR2(40),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB75 ADD (
					CONSTRAINT fk_bad
                                        FOREIGN KEY (COL4) REFERENCES TAB_BASE75(COL1_BASE, COL2_BASE) )
				</CallString>
<Error>
<ErrorCode>-1201</ErrorCode>
<ErrorMessage>Too few columns</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB75
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE75
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="76" Responsible="Oleg Luzginov" TestType="negative">
<Comment>unique index with column whose datatypes differ to referencing columns; see CONSTRAINT fk_bad</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB_BASE76 (
					COL1_BASE FLOAT(24) UNIQUE,
					COL2_BASE INTEGER )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB76 (
					COL1 NUMBER(22),
                                        COL2 NUMBER(52, 2),
					COL3 ROWID,
					COL4 INTEGER,
					CONSTRAINT pk PRIMARY  KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB76 ADD (
                                        CONSTRAINT fk_bad
                                        FOREIGN KEY (COL1) REFERENCES TAB_BASE76(COL1_BASE) )
				</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB76
				</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB_BASE76
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="77" Responsible="Oleg Luzginov" TestType="negative">
<Comment>decrease column length of character columns, a table has too long values</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB77 (
					COL1 CHAR(10),
					COL2 CHAR(10),
					COL3 VARCHAR(2000),
                                        COL4 VARCHAR2(5),
                                        COL5 RAW(100),
                                        COL6 RAW(5),
                                        COL7 INT,
					COL8 LONG,
					COL9 DATE,
					COL10 FLOAT,
					COL11 NUMBER(38),
					COL12 NUMBER(38,38),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				INSERT INTO TAB77 (COL1, COL2, COL3, COL4)
                                VALUES ( '1',
                                        'qwerty',
                                        'stimmt so stimmt so',
                                        'noch' )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB77 MODIFY (
					COL3 CHAR(10) )
				</CallString>
<Error>
<ErrorCode>-2010</ErrorCode>
<ErrorMessage>Assignment impossible, char value too long</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB77 MODIFY (
					COL2 VARCHAR2(5) )
				</CallString>
<Error>
<ErrorCode>-2010</ErrorCode>
<ErrorMessage>Assignment impossible, char value too long</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB77
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="78" Responsible="Oleg Luzginov" TestType="negative">
<Comment>decrease column length of numeric columns, a table has too long values</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB78 (
					COL1 CHAR(10),
					COL2 INT,
					COL3 DATE,
                                        COL4 LONG,
                                        COL5 FLOAT,
					COL6 NUMBER(25),
					COL7 NUMBER(3,3),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				INSERT INTO TAB78 (COL1, COL2)
                                VALUES ( '1',
                                        1001001001001 )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB78 MODIFY (
					COL2 NUMBER(2) )
				</CallString>
<Error>
<ErrorCode>-3019</ErrorCode>
<ErrorMessage>Invalid exponent</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB78 MODIFY (
					COL2 NUMBER(3, 3) )
				</CallString>
<Error>
<ErrorCode>-3019</ErrorCode>
<ErrorMessage>Invalid exponent</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB78
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="79" Responsible="Oleg Luzginov" TestType="negative">
<Comment>change a datatype of the indexed column(too long)</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB79 (
					COL1 DATE,
					COL2 INT,
					COL3 RAW(18),
					COL4 LONG,
					COL5 VARCHAR(133),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB79 MODIFY (
					COL3 RAW(4000) )
				</CallString>
<Error>
<ErrorCode>-2001</ErrorCode>
<ErrorMessage>Key too long:COL3</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB79
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="80" Responsible="Oleg Luzginov" TestType="negative">
<Comment>change column datatype to the non-existent datatype</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB80 (
					COL1 CHAR(38),
					COL2 NUMBER(4),
					COL3 VARCHAR2(73),
					COL4 INT,
					COL5 VARCHAR2(1969),
					COL6 DATE,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB80 MODIFY (
					COL4 INT,
					COL5 VARCHAR2(1969),
					COL6 TIMESTAMP )
				</CallString>
<Error>
<ErrorCode>-3002</ErrorCode>
<ErrorMessage>Invalid datatype</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB80
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="81" Responsible="Oleg Luzginov" TestType="negative">
<Comment>change the non-existent column</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB81 (
					COL1 RAW(50),
					COL2 RAW(53),
					COL3 FLOAT(30),
					COL4 NUMBER(32),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB81 MODIFY (
					COL NUMBER(32) )
				</CallString>
<Error>
<ErrorCode>-4005</ErrorCode>
<ErrorMessage>Unknown column name:COL</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB81
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="82" Responsible="Oleg Luzginov" TestType="negative">
<Comment>change numeric column datatype to the datatype with illegal size</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB82 (
					COL1 FLOAT(15),
					COL2 CHARACTER(37),
					COL3 VARCHAR(4),
					COL4 DATE,
					COL5 ROWID,
					COL6 RAW(132),
					COL7 NUMBER(38),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB82 MODIFY (
					COL7 NUMBER(65) )
				</CallString>
<Error>
<ErrorCode>-3020</ErrorCode>
<ErrorMessage>Invalid length for this data type:COL7</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB82
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="83" Responsible="Oleg Luzginov" TestType="negative">
<Comment>change character column datatype to the datatype with illegal size</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB83 (
					COL1 RAW(59),
					COL2 FLOAT(3),
					COL3 VARCHAR(1923),
					COL4 FLOAT(21),
					COL5 FLOAT(5),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB83 MODIFY (
					COL3 VARCHAR(8001) )
				</CallString>
<Error>
<ErrorCode>-3020</ErrorCode>
<ErrorMessage>Invalid length for this data type:COL3</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB83
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="84" Responsible="Oleg Luzginov" TestType="negative">
<Comment>more than one default value; see COL7</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB84 (
					COL1 CHARACTER(34),
					COL2 INTEGER,
					COL3 ROWID,
					COL4 ROWID,
					COL5 DATE,
					COL6 FLOAT(24),
					COL7 VARCHAR(1992),
					COL8 ROWID,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB84 MODIFY (
					COL7 DEFAULT 123 123)
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB84
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="85" Responsible="Oleg Luzginov" TestType="negative">
<Comment>default with illegal numeric value numeric; see COL1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB85 (
					COL1 INT,
					COL2 RAW(6),
					COL3 VARCHAR2(10),
					COL4 VARCHAR2(1726),
					COL5 CHAR(753),
					COL6 RAW(1470),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB85 MODIFY (
					COL1 DEFAULT 'df123' )
				</CallString>
<Error>
<ErrorCode>-3016</ErrorCode>
<ErrorMessage>Invalid numeric constant</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB85
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="86" Responsible="Oleg Luzginov" TestType="negative">
<Comment>default with too long character value; see COL3</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB86 (
					COL1 CHARACTER(4),
					COL2 NUMBER(7, 0),
					COL3 VARCHAR2(4),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB86 MODIFY (
					COL3 DEFAULT 'skldjfk;ldjkasl;dkjfasdfk')
				</CallString>
<Error>
<ErrorCode>-8004</ErrorCode>
<ErrorMessage>Constant must be compatible with column type and length</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB86
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="87" Responsible="Oleg Luzginov" TestType="negative">
<Comment>default with too long numeric value; see COL2</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB87 (
					COL1 CHARACTER(30),
					COL2 INT,
					COL3 RAW(23),
					COL4 VARCHAR2(749),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB87 MODIFY (
					COL2 DEFAULT 123456789123456789123456789 )
				</CallString>
<Error>
<ErrorCode>-3019</ErrorCode>
<ErrorMessage>Invalid exponent:123456789123456789123456789</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB87
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="88" Responsible="Oleg Luzginov" TestType="negative">
<Comment>constraint before DEFAULT, see COL1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB88 (
					COL1 INT,
					COL2 FLOAT(21),
					COL3 CHAR(125),
					COL4 FLOAT(25),
					COL5 VARCHAR(1451),
					CONSTRAINT pk PRIMARY KEY (
						COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB88 MODIFY (
					COL1 NOT NULL DEFAULT 12 )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB88
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="89" Responsible="Oleg Luzginov" TestType="negative">
<Comment>addition NOT NULL constraint when the table has NULL values</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB89 (
					COL1 INT,
					COL2 INTEGER,
					COL3 NUMBER(*),
					COL4 DATE,
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				INSERT INTO TAB89 (COL1)
                                VALUES ( 1 )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB89 MODIFY (
					COL4 NOT NULL )
				</CallString>
<Error>
<ErrorCode>-7024</ErrorCode>
<ErrorMessage>Alter column not allowed, constraint violation</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB89
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="90" Responsible="Oleg Luzginov" TestType="negative">
<Comment>addition UNIQUE constraint</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB90 (
					COL1 NUMBER(36),
					COL2 DATE,
					COL3 CHAR,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB90 MODIFY (
					COL3 UNIQUE )
				</CallString>
<Error>
<ErrorCode>-3002</ErrorCode>
<ErrorMessage>Invalid datatype</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB90
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="91" Responsible="Oleg Luzginov" TestType="negative">
<Comment>addition PRIMARY KEY constraint</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB91 (
					COL1 CHAR(7),
					COL2 INTEGER,
					COL3 VARCHAR2(26),
					COL4 INTEGER,
					COL5 ROWID,
					COL6 DATE,
					COL7 ROWID,
					COL8 INTEGER,
					COL9 NUMBER(6) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB91 MODIFY (
					COL1 PRIMARY KEY )
				</CallString>
<Error>
<ErrorCode>-3002</ErrorCode>
<ErrorMessage>Invalid datatype</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB91
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="92" Responsible="Oleg Luzginov" TestType="negative">
<Comment>addition CHECK constraint</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB92 (
					COL1 VARCHAR2(15),
					COL2 RAW(25),
					COL3 DATE,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB92 MODIFY (
					COL3 CHECK (COL2 IS NOT NULL) )
				</CallString>
<Error>
<ErrorCode>-3002</ErrorCode>
<ErrorMessage>Invalid datatype</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB92
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="93" Responsible="Oleg Luzginov" TestType="negative">
<Comment>addition a referential integrity constraint</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB93 (
					COL1 INT UNIQUE,
					COL2 INTEGER,
					COL3 INT )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB93 MODIFY (
					COL3 REFERENCES TAB93(COL1)  )
				</CallString>
<Error>
<ErrorCode>-3002</ErrorCode>
<ErrorMessage>Invalid datatype</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB93
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="94" Responsible="Oleg Luzginov" TestType="negative">
<Comment>drop a PRIMARY KEY constraint that is part of
                a referential integrity constraint</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB94 (
					COL1 CHARACTER(33),
					COL2 LONG,
					COL3 VARCHAR2(621),
					COL4 CHARACTER(33) REFERENCES TAB94,
					COL5 VARCHAR(1616),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB94 DROP PRiMARY KEY
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>KEY not allowed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB94
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="95" Responsible="Oleg Luzginov" TestType="negative">
<Comment>drop a non-existent primary key</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB95 (
					COL1 FLOAT(13),
					COL2 FLOAT(16),
					COL3 NUMBER(5) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB95 DROP PRiMARY KEY
				</CallString>
<Error>
<ErrorCode>-8040</ErrorCode>
<ErrorMessage>Key does not exist</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB95
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="96" Responsible="Oleg Luzginov" TestType="negative">
<Comment>drop unique constraint with DROP PRiMARY KEY</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB96 (
					COL1 RAW(32),
					COL2 FLOAT(34),
					COL3 VARCHAR2(1918),
					COL4 INT,
					COL5 DATE,
					COL6 ROWID,
					CONSTRAINT un UNIQUE (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB96 DROP PRiMARY KEY
				</CallString>
<Error>
<ErrorCode>-8040</ErrorCode>
<ErrorMessage>Key does not exist</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB96
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="97" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing PRIMARY keyword in drop clause</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB97 (
					COL1 CHARACTER(32),
					COL2 VARCHAR(7),
					COL3 DATE,
					COL4 FLOAT(34),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB97 DROP  KEY
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:PRIMARY,CONSTRAINT,COLUMN</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB97
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="98" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing space between the PRIMARY KEY keywords in drop clause</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB98 (
					COL1 INT,
					COL2 VARCHAR2(911),
					COL3 INT,
					COL4 FLOAT(26),
					COL5 RAW(878),
					COL6 RAW(1024),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB98 DROP PRiMARYKEY
				</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>Missing keyword:CONSTRAINT,COLUMN,PRIMARY</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB98
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="99" Responsible="Oleg Luzginov" TestType="negative">
<Comment>delete non-existent constraint</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB99 (
					COL1 VARCHAR(31),
					COL2 NUMBER(10),
					COL3 DATE,
					COL4 VARCHAR(1553),
					COL5 INT CONSTRAINT CONSTR1_ CHECK (COL5 IS NOT NULL),
					COL6 CHAR(726),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB99 DROP CONSTRAINT CONSTR1
				</CallString>
<Error>
<ErrorCode>-4017</ErrorCode>
<ErrorMessage>Unknown constraint</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB99
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="100" Responsible="Oleg Luzginov" TestType="negative">
<Comment>missing a constraint name</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB100 (
					COL1 RAW(45),
					COL2 CHARACTER(1057),
					COL3 ROWID,
					COL4 INT,
					COL5 LONG,
					COL6 VARCHAR(535),
					COL7 INT,
					COL8 VARCHAR(457),
					COL9 RAW(239),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ),
                                        CONSTRAINT CONSTR1 CHECK (COL4 &gt; 6767) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB100 DROP CONSTRAINT
				</CallString>
<Error>
<ErrorCode>-3014</ErrorCode>
<ErrorMessage>Invalid end of SQL statement</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB100
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="101" Responsible="Oleg Luzginov" TestType="negative">
<Comment>delete a constraint when a table has no constraints</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB101 (
					COL1 VARCHAR2(124),
					COL2 CHAR(1323),
					COL3 INTEGER )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB101 DROP CONSTRAINT CONSTR1
				</CallString>
<Error>
<ErrorCode>-4017</ErrorCode>
<ErrorMessage>Unknown constraint</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB101
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="102" Responsible="Oleg Luzginov" TestType="negative">
<Comment>delete all primary key columns</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB102 (
					COL1 DATE,
					COL2 NUMBER(31, 30),
					COL3 INTEGER,
					COL4 DATE,
					COL5 RAW(758),
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB102 DROP (COL1, COL2, COL3 )
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>KEY not allowed:COL1</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB102
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="103" Responsible="Oleg Luzginov" TestType="negative">
<Comment>delete one of primary key columns</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB103 (
					COL1 RAW(6),
					COL2 INTEGER,
					COL3 RAW(24),
					COL4 LONG,
					COL5 VARCHAR2(1970),
					COL6 INTEGER,
					COL7 RAW(1762),
					COL8 INT,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB103 DROP COLUMN COL1
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>KEY not allowed:COL1</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB103
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="105" Responsible="Oleg Luzginov" TestType="negative">
<Comment>duplicate deleted columns
</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB105 (
					COL1 INTEGER,
					COL2 INTEGER,
					COL3 ROWID,
					COL4 INT,
					COL5 RAW(1087),
					COL6 LONG,
					COL7 RAW(1743),
					COL8 LONG,
					COL9 INTEGER CHECK ( COL9 &gt; COL2 ),
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB105 DROP ( COL9, COL9 )
				</CallString>
<Error>
<ErrorCode>-6001</ErrorCode>
<ErrorMessage>[-6001] (at 38): Duplicate column name:COL9</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB105
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="106" Responsible="Oleg Luzginov" TestType="negative">
<Comment>delete some columns with DROP COLUMN</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB106 (
					COL1 INTEGER,
					COL2 CHAR(34),
					COL3 DATE CHECK (COL5 IS NOT NULL),
					COL4 ROWID,
					COL5 FLOAT(5),
					COL6 ROWID,
					CONSTRAINT pk PRIMARY KEY (
						COL1, COL2 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB106 DROP COLUMN ( COL5, COL6 )
				</CallString>
<Error>
<ErrorCode>-5006</ErrorCode>
<ErrorMessage>Missing identifier</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB106
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="" Number="304" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>ALTER-Statements do not contain all required keywords</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>	
	CREATE TABLE TAB304N_1 ( 
			     COL1 INT unique, 
		   	     COL2 CHAR(32),
		             COL3 LONG,
		   	     COL4 LONG,
			     COL5 VARCHAR unique,
			     COL6 CHAR,
                             COL7 INT,
			     PRIMARY KEY (COL1, COL7))</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB304N_2 ( 
			     COL1 CHAR, 
		   	     COL2 CHAR(32),
		             COL3 LONG,
		   	     COL4 LONG,
			     COL5 CHAR
			     )</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	ALTER TAB304N_2 ADD (COL6 CHAR 
			     CONSTRAINT CONSTR29P_2 REFERENCES TAB304N_1 (COL5) 
			     ON DELETE SET)
                             </CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>[-5015] (at 9): Missing keyword:TABLE,USER,TRIGGER,INDEX,DBPROCEDURE,DBPROC,SESSION</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	ALTER TABLE TAB304N_2 ADD (COL7 CHAR 
				   CONSTRAINT CONSTR29P_3 REFERENCES TAB304N_1 (COL5) ON DELETE )
                             </CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>[-5015] (at 108): Missing keyword:CASCADE,SET</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString> 
	ALTER TABLE TAB304N_2 ADD (COL8 CHAR CONSTRAINT CONSTR29P_4 
			   REFERENCES TAB304N_1 (COL5) ON )</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>[-5015] (at 101): Missing keyword:DELETE</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	ALTER TABLE TAB304N_2 ADD ( COL9 CHAR CONSTRAINT CONSTR29P_5 
				    REFERENCES TAB304N_1 (COL5) CASCADE )</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>[-5016] (at 101): Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>

	DROP TABLE TAB304N_1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>

	DROP TABLE TAB304N_2</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="305" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>datatypes of referenced and referencing columns do not match</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB305N_1 ( 
			     COL1 INT unique, 
		   	     COL2 CHAR(32),
		             COL3 LONG,
		   	     COL4 LONG,
			     COL5 VARCHAR unique,
			     COL6 CHAR,
                             COL7 INT )	</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB305N_2 ( 
			     COL1 INT, 
		   	     COL2 CHAR(32),
		             COL3 NUMBER,
		   	     COL4 LONG,
			     COL5 DATE,
			     COL6 CHAR,
                             COL7 INT,
			     PRIMARY KEY (COL3))</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	ALTER TABLE TAB305N_2 ADD (  COL8 DATE CONSTRAINT CONSTR305N REFERENCES TAB305N_2 )</CallString>
<Error>
<ErrorCode>-8006</ErrorCode>
<ErrorMessage>[-8006] (at 32): Data types must be compatible</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
	DROP TABLE TAB305N_1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
	DROP TABLE TAB305N_2</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="306" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>trying to delete a value that is referenced, 
if it does not work the CONSTRAINT seems to be added correctly</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB306N_1 ( 
			     COL1 INT unique, 
		   	     COL2 CHAR(32),
		             COL3 LONG,
		   	     COL4 LONG,
			     COL5 VARCHAR unique,
			     COL6 CHAR,
                             COL7 INT )
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB306N_2 ( 
			     COL1 INT, 
		   	     COL2 CHAR(32),
		             COL3 NUMBER,
		   	     COL4 LONG,
			     COL5 DATE,
			     COL6 CHAR,
                             COL7 INT,
			     PRIMARY KEY (COL3))
</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	alter table tab306n_2 add (col8 int constraint constr306n_2 
			references tab306n_1 (col1))
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	insert into tab306n_1 (col1, col2)  values (1, 'car')
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	insert into tab306n_1 (col1, col2)  values (2, 'river')
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	insert into tab306n_1 (col1, col2)  values (3, 'lawn')
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	insert into tab306n_2 (col3, col8)  values (45, 1)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	DELETE FROM TAB306N_1 WHERE COL1 = 1
</CallString>
<Error>
<ErrorCode>-35</ErrorCode>
<ErrorMessage>[-35]: Referential integrity violated:CONSTR306N_2,USR1,TAB306N_2</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	SELECT COL1, COL2, COL3 FROM TAB306N_1</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>COL1</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COL2</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COL3</ColumnName>
<ColumnType>LONG</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'car'</Value>
<Value>NULL</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'river'</Value>
<Value>NULL</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'lawn'</Value>
<Value>NULL</Value>
</Row>
</ResultSet>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
	DROP TABLE TAB306N_1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>
	DROP TABLE TAB306N_2</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="307" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>trying to rename a table by using invalid or incomplete table_names

(e.g. name is too long, name starts with _ or a number) </Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>

				CREATE TABLE TAB307N(
					COL1 CHAR(18),
					COL2 CHAR(4),
					COL3 CHARACTER(19),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB307N TO QQQQQIIIIIQQQQQIIIIIQQQQQIIIIIQII</CallString>
<Error>
<ErrorCode>-2014</ErrorCode>
<ErrorMessage>[-2014] (at 22): Identifier too long</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB307N TO 1QQQQIIIIIQQQQQIIIIIQQQQQIIIII</CallString>
<Error>
<ErrorCode>-3009</ErrorCode>
<ErrorMessage>[-3009] (at 22): Invalid table name</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB307N TO _QQQQIIIIIQQQQQIIIIIQQQQQIIIII</CallString>
<Error>
<ErrorCode>-3009</ErrorCode>
<ErrorMessage>[-3009] (at 24): Invalid table name</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB307N TO 'QQQQIIIIIQQQQQIIIIIQQQQQIIIII</CallString>
<Error>
<ErrorCode>-3014</ErrorCode>
<ErrorMessage>[-3014] (at 23): Invalid end of SQL statement</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB307N TO Q-I</CallString>
<Error>
<ErrorCode>-3014</ErrorCode>
<ErrorMessage>[-3014] (at 23): Invalid end of SQL statement</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="false" verify="true">
<CallString>

	DROP TABLE TAB307N</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(;;internal)" Number="308" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>trying to RENAME a table with a used (and as a result occupied) table_name</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>		
		CREATE TABLE TAB308N_1 ( 
			     COL1 CHAR(32), 
		   	     COL2 CHAR(32),
		             COL3 LONG,
		   	     COL4 LONG,
			     COL5 VARCHAR,
			     COL6 VARCHAR,
			     PRIMARY KEY (COL1))</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	CREATE TABLE TAB308N_2 ( COL1 NUMBER, 
		   	     COL2 NUMBER,
		             COL3 FLOAT,
		   	     COL4 FLOAT,
			     COL5 INT,
			     COL6 INT,
			     PRIMARY KEY (COL2))
</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB308N_1 TO "TAB308N_2"</CallString>
<Error>
<ErrorCode>-955</ErrorCode>
<ErrorMessage>[-955] (at 25): Duplicate name:TAB308N_2</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>

	SELECT tablename, columnname, datatype FROM COLUMNS WHERE tablename IN ('TAB308N_1', 'TAB308N_2')</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>TABLENAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COLUMNNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DATATYPE</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>'TAB308N_1'</Value>
<Value>'COL1'</Value>
<Value>'CHAR'</Value>
</Row>
<Row>
<Value>'TAB308N_1'</Value>
<Value>'COL2'</Value>
<Value>'CHAR'</Value>
</Row>
<Row>
<Value>'TAB308N_1'</Value>
<Value>'COL3'</Value>
<Value>'LONG'</Value>
</Row>
<Row>
<Value>'TAB308N_1'</Value>
<Value>'COL4'</Value>
<Value>'LONG'</Value>
</Row>
<Row>
<Value>'TAB308N_1'</Value>
<Value>'COL5'</Value>
<Value>'VARCHAR'</Value>
</Row>
<Row>
<Value>'TAB308N_1'</Value>
<Value>'COL6'</Value>
<Value>'VARCHAR'</Value>
</Row>
<Row>
<Value>'TAB308N_2'</Value>
<Value>'COL1'</Value>
<Value>'FLOAT'</Value>
</Row>
<Row>
<Value>'TAB308N_2'</Value>
<Value>'COL2'</Value>
<Value>'FLOAT'</Value>
</Row>
<Row>
<Value>'TAB308N_2'</Value>
<Value>'COL3'</Value>
<Value>'FLOAT'</Value>
</Row>
<Row>
<Value>'TAB308N_2'</Value>
<Value>'COL4'</Value>
<Value>'FLOAT'</Value>
</Row>
<Row>
<Value>'TAB308N_2'</Value>
<Value>'COL5'</Value>
<Value>'NUMBER'</Value>
</Row>
<Row>
<Value>'TAB308N_2'</Value>
<Value>'COL6'</Value>
<Value>'NUMBER'</Value>
</Row>
</ResultSet>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>

	DROP TABLE TAB308N_1</CallString>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>

	DROP TABLE TAB308N_2</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(-7.4.3.99;;)(7.4-;;internal)" Number="309" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>trying to use reserved keywords for tablenames when renaming them

&lt;SAPDB problem&gt; ** 7.3, 7.4.3 
via RENAME it is possible to name a table "TABLE"
PLANNED, SAP DB development
</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	
				CREATE TABLE TAB309N (
					COL1 CHAR(18),
					COL2 CHAR(4),
					COL3 CHARACTER(19),
					CONSTRAINT pk PRIMARY  KEY (
						COL1, COL2, COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	RENAME TAB309N TO TABLE</CallString>
<Error>
<ErrorCode>-7006</ErrorCode>
<ErrorMessage>[-7006] (at 22): Reserved identifier not allowed:TABLE</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="false" verify="false">
<CallString>

	DROP TABLE TABLE</CallString>
<Error>
<ErrorCode>-7006</ErrorCode>
<ErrorMessage>[-7006] (at 15): Reserved identifier not allowed:TABLE</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop table tab309n</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="357" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>setting a primary key - constraint to NULL

-- test due to a known and fixed bug
"alter table tab357 modify (col1 null)"
did not bring up an error message,
but didn´t even set col1_constraint to null</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE TAB357 (
					COL1 INT,
					COL2 INTEGER,
					COL3 NUMBER(*),
					COL4 DATE,
					CONSTRAINT pk PRIMARY KEY (
						COL1 ) )</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>INSERT INTO TAB357 (COL1)
                                VALUES ( 1 )</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>ALTER TABLE TAB357 MODIFY (COL1 NULL )</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>[-7002] (at 28): KEY not allowed:COL1</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>DROP TABLE TAB357</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="" Number="413" Responsible="" TestType="negative">
<Comment/>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString/>
</Statement>
</Run>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="437" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>incomplete CONSTRAINT
test has been created due to a known bug (incomplete constraints were accepted)</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE TAB437 (
					COL1 VARCHAR,
					COL2 INTEGER,
					COL3 FLOAT(32),
					COL4 FLOAT(29) )</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>ALTER TABLE TAB437 ADD (COL5 INT CONSTRAINT CONSTR1 )</CallString>
<Error>
<ErrorCode>-3008</ErrorCode>
<ErrorMessage>[-3008] (at 53): Invalid keyword or missing delimiter</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>DROP TABLE TAB437</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="737" Responsible="Oleg Luzginov" TestType="negative">
<Comment>constraint before DEFAULT, see COL1</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB88 (
					COL1 INT,
					COL2 FLOAT(21),
					COL3 CHAR(125),
					COL4 FLOAT(25),
					COL5 VARCHAR(1451),
					CONSTRAINT pk PRIMARY KEY (
						COL3 ) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB88 MODIFY (
					COL1 NOT NULL DEFAULT 12 )
				</CallString>
<Error>
<ErrorCode>-5016</ErrorCode>
<ErrorMessage>Missing delimiter: )</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB88
				</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;internal)" Number="990" Responsible="Daub, Jan Michael" TestType="negative">
<Comment>missing keyword SET;
duplicate "SET" and missing "NULL";</Comment>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB990N_1
                                ( COL1  VARCHAR(100) PRIMARY KEY,
                                COL2  CHAR(11),
                                COL3 NUMBER(2)  NOT NULL,
                                COL4 VARCHAR(100),
                                COL5 VARCHAR,
                                COL6 RAW(2000),
                                COL7 INTEGER,
                                COL8 NUMBER(38),
                                COL9 DATE,
                                COL10 LONG
                                )</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB990N_2
                                ( COL1 CHAR(100) PRIMARY KEY,
                                COL2  CHAR(11),
                                COL3 LONG NOT NULL,
                                COL4 NUMBER(38),
                                COL5 VARCHAR(100) REFERENCES TAB990N_1 ON DELETE NULL,
                                COL6 RAW(2000),
                                COL7 INTEGER,
                                COL8 VARCHAR(100),
                                COL9 DATE,
                                COL10 NUMBER(2)
                                )</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>[-5015] (at 318): Missing keyword:SET,CASCADE</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>
	CREATE TABLE TAB990N_3
                                ( COL1 CHAR(100) PRIMARY KEY,
                                COL2  CHAR(11),
                                COL3 LONG NOT NULL,
                                COL4 NUMBER(38),
                                COL5 VARCHAR(100) REFERENCES TAB990N_1 ON DELETE SET SET NULL,
                                COL6 RAW(2000),
                                COL7 INTEGER,
                                COL8 VARCHAR(100),
                                COL9 DATE,
                                COL10 NUMBER(2)
                                )</CallString>
<Error>
<ErrorCode>-5015</ErrorCode>
<ErrorMessage>[-5015] (at 322): Missing keyword:NULL</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>
	SELECT * FROM TABLE TAB990N_2</CallString>
<Error>
<ErrorCode>-942</ErrorCode>
<ErrorMessage>[-942] (at 17): Unknown table name:TABLE</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>
	SELECT COUNT(*) FROM COLUMNS WHERE tablename='TAB990N_3'</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<Row>
<Value>0</Value>
</Row>
</ResultSet>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>

	DROP TABLE TAB990N_1</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="semantic" Exclude="(-7.3.99.999;;)(7.4-;;internal)" Number="1013" Responsible="Oleg Luzginov; Jan Michael Daub" TestType="negative">
<Comment>PRIMARY KEY constraint for LONG column - in a single statement; see COL9_CONSTR

** for DB &lt; 7.4 there is another error-code
   see ALTER_TABLE_negative.xml[13]</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				CREATE TABLE TAB13 (
					COL1 RAW(8),
					COL2 CHARACTER(48),
					COL3 VARCHAR2(17),
					COL4 FLOAT(13),
					COL5 FLOAT(22),
					COL6 VARCHAR2(63),
					COL7 DATE,
					COL8 VARCHAR(33) )
				</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>
				ALTER TABLE TAB13 ADD ( COL9 LONG CONSTRAINT COL9_CONSTR PRIMARY KEY )
				</CallString>
<Error>
<ErrorCode>-7002</ErrorCode>
<ErrorMessage>[-7002] (at 75): KEY not allowed</ErrorMessage>
</Error>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>
				DROP TABLE TAB13
				</CallString>
</Statement>
</CleanUp>
</Test>
</Tests>
