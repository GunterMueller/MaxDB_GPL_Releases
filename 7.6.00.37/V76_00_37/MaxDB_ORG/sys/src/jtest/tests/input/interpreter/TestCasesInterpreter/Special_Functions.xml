<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Tests SYSTEM "TestCases.dtd">
<Tests>
<Test Exclude="(;;internal)" Number="1" Responsible="Zabach, Elke" TestType="positive">
<Comment>This test checks the different ways of using CASE clauses in 
"select" statements and "create view" statements.
</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* Create a test table */
create table t (aint  int, 
                bchar char (8), 
                cchar char (32), 
                dint  int, 
                eint  int)

</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* Insert some values into table */
insert into t values (1, 'Max',      'Meier',    2, null)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert into t values (2, 'Lieschen', 'Mueller',   2, null)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert into t values (3, 'Theo',     'Ende',     5, 2)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert into t values (4, 'Erna',     'Franz',    5, 3)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert into t values (null, 'Kurt',  'Schwarz', 45, 4)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* Create an index for the first table */
create index i1 on t (dint)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* Create a second table */
create table t1 (name char (11), nr int)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* Also insert some values into the second table */
insert into t1 values ('Verkauf', 2)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert into t1 values ('Entwicklung', 5)
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert into t1 values ('Leitung', 45)
</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* decode-like case function */
select *, case dint 
              when 1 then 'eins'
              when 2 then 'zwei'
                     else 'weder 1 noch 2' end
from t
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>BCHAR</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>CCHAR</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'Max'</Value>
<Value>'Meier'</Value>
<Value>2</Value>
<Value>NULL</Value>
<Value>'zwei'</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Lieschen'</Value>
<Value>'Mueller'</Value>
<Value>2</Value>
<Value>NULL</Value>
<Value>'zwei'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Theo'</Value>
<Value>'Ende'</Value>
<Value>5</Value>
<Value>2</Value>
<Value>'weder 1 noch 2'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Erna'</Value>
<Value>'Franz'</Value>
<Value>5</Value>
<Value>3</Value>
<Value>'weder 1 noch 2'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Kurt'</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>4</Value>
<Value>'weder 1 noch 2'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* rowno is not allowed */
select CASE WHEN Sum(aint) is not null 
               THEN Sum(aint) ELSE rownum END
from t

</CallString>
<Error>
<ErrorCode>-7036</ErrorCode>
<ErrorMessage>[-7036] (at 103): ROWNO specification not allowed in this context</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* rowno is not allowed */
select CASE WHEN rownum &lt;= 7 
               THEN Sum(aint) ELSE dint END
from t

</CallString>
<Error>
<ErrorCode>-7036</ErrorCode>
<ErrorMessage>[-7036] (at 45): ROWNO specification not allowed in this context</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* case in select-list */
select aint, 
       case when cchar between 'F' and 'O' then 'Firma ' || cchar
            when cchar &gt; 'S' then cchar || ' AG'
            else bchar || ' ' || cchar  end
from t

</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'Firma Meier'</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Firma Mueller'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Theo Ende'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Firma Franz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz AG'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* case with set-function
   column used which is no group column */
select dint,
       case when count (dint) &gt; 1 then 'Leitung Abt. ' || name
       else 'Herrn/Frau ' || cchar end      
from t, t1 
where dint = nr 
group by dint, name
</CallString>
<Error>
<ErrorCode>-8017</ErrorCode>
<ErrorMessage>[-8017] (at 175): Column must be group column:CCHAR</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* ok, add this column, result is correct, but not the wanted one */
select dint,
       case when count (dint) &gt; 1 then 'Leitung Abt. ' || name
       else 'Herrn/Frau ' || cchar end      
from t, t1 
where dint = nr 
group by dint, name, cchar
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>2</Value>
<Value>'Herrn/Frau Meier'</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Herrn/Frau Mueller'</Value>
</Row>
<Row>
<Value>5</Value>
<Value>'Herrn/Frau Ende'</Value>
</Row>
<Row>
<Value>5</Value>
<Value>'Herrn/Frau Franz'</Value>
</Row>
<Row>
<Value>45</Value>
<Value>'Herrn/Frau Schwarz'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* now comes the correct and wanted result */
select dint,
       case when count (dint) &gt; 1 then 'Leitung Abt. ' || name
       else 'Herrn/Frau ' || min(cchar) end      
from t, t1 
where dint = nr 
group by dint, name
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>2</Value>
<Value>'Leitung Abt. Verkauf'</Value>
</Row>
<Row>
<Value>5</Value>
<Value>'Leitung Abt. Entwicklung'</Value>
</Row>
<Row>
<Value>45</Value>
<Value>'Herrn/Frau Schwarz'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* avg used (with the 'whole' for the implicit count-value) */
select dint,
       case when count (dint) &gt; avg(aint) then avg(aint)
       else min(aint) end      
from t, t1 
where dint = nr 
group by dint, name
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<Row>
<Value>2</Value>
<Value>1.50000000000000000000000000000000000000</Value>
</Row>
<Row>
<Value>5</Value>
<Value>3.00000000000000000000000000000000000000</Value>
</Row>
<Row>
<Value>45</Value>
<Value>NULL</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* set-function inset-function not allowed */
select dint,
       max (case when count (dint) &gt; avg(aint) then avg(aint)
            else min(aint) end)
from t, t1 
where dint = nr 
group by dint, name
</CallString>
<Error>
<ErrorCode>-3021</ErrorCode>
<ErrorMessage>[-3021] (at 82): Invalid mixture of functions and columns</ErrorMessage>
</Error>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* case in set-function */
select max( case when cchar between 'F' and 'O' then 'Firma ' || cchar
            when cchar &gt; 'S' then cchar || ' AG'
            else bchar || ' ' || cchar  end )
from t
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>'Theo Ende'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* case in where-clause */
select * 
from t
where case when dint = 1 then 'eins'
           when dint = 2 then 'zwei'
           else 'weder 1 noch 2'  end  = 'weder 1 noch 2'
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>BCHAR</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>CCHAR</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<Row>
<Value>3</Value>
<Value>'Theo'</Value>
<Value>'Ende'</Value>
<Value>5</Value>
<Value>2</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Erna'</Value>
<Value>'Franz'</Value>
<Value>5</Value>
<Value>3</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Kurt'</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>4</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* join without case (to see correct joinarr ... ) */
select t.aint, substr(t.cchar,1,7) c, t.dint,
       t1.*, substr(t2.cchar,1,7) nname
 from t, t1, t t2 
where t.dint &gt;= nr 
  and nr &gt;= 0 
  and t.dint &lt; 47
  and t.cchar = t2.cchar
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>C</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NR</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'Meier'</Value>
<Value>2</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Meier'</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Mueller'</Value>
<Value>2</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Mueller'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Ende'</Value>
<Value>5</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Ende'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Ende'</Value>
<Value>5</Value>
<Value>'Entwicklung'</Value>
<Value>5</Value>
<Value>'Ende'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Franz'</Value>
<Value>5</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Franz'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Franz'</Value>
<Value>5</Value>
<Value>'Entwicklung'</Value>
<Value>5</Value>
<Value>'Franz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Schwarz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>'Entwicklung'</Value>
<Value>5</Value>
<Value>'Schwarz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>'Leitung'</Value>
<Value>45</Value>
<Value>'Schwarz'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* same join with case */
select t.aint, substr(t.cchar,1,7) c, t.dint,
       t1.*, substr(t2.cchar,1,7) nname
 from t, t1, t t2 
where t.dint &gt;= nr 
  and case when t.dint = nr then 'equal ' 
                            else 'greater ' 
      end &lt;&gt; 'nie'
  and nr &gt;= 0 
  and t.dint &lt; 47
  and t.cchar = t2.cchar
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>C</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NR</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'Meier'</Value>
<Value>2</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Meier'</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Mueller'</Value>
<Value>2</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Mueller'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Ende'</Value>
<Value>5</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Ende'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Ende'</Value>
<Value>5</Value>
<Value>'Entwicklung'</Value>
<Value>5</Value>
<Value>'Ende'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Franz'</Value>
<Value>5</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Franz'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Franz'</Value>
<Value>5</Value>
<Value>'Entwicklung'</Value>
<Value>5</Value>
<Value>'Franz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>'Verkauf'</Value>
<Value>2</Value>
<Value>'Schwarz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>'Entwicklung'</Value>
<Value>5</Value>
<Value>'Schwarz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz'</Value>
<Value>45</Value>
<Value>'Leitung'</Value>
<Value>45</Value>
<Value>'Schwarz'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* case in join which need not be handled two_phase-like */
select aint, 
       case when cchar between 'F' and 'O' then 'Firma ' || cchar
            when cchar &gt; 'S' then cchar || ' AG'
            else bchar || ' ' || cchar  end,
       dint, nr
  from t, t1
 where dint = nr
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>NR</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'Firma Meier'</Value>
<Value>2</Value>
<Value>2</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Firma Mueller'</Value>
<Value>2</Value>
<Value>2</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Theo Ende'</Value>
<Value>5</Value>
<Value>5</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Firma Franz'</Value>
<Value>5</Value>
<Value>5</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz AG'</Value>
<Value>45</Value>
<Value>45</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* more than one predicate in one when-part */
select aint, 
       case when cchar between 'F' and 'O' 
             and cchar not like '*er'
            then 'Firma ' || cchar
            when cchar between 'F' and 'O' 
             and cchar like 'M*'
            then 'M''-Firma ' || cchar
            when cchar &gt; 'S' then cchar || ' AG'
            else bchar || ' ' || cchar  end
from t
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>AINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>EXPRESSION1</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'Firma Meier'</Value>
</Row>
<Row>
<Value>2</Value>
<Value>'Firma Mueller'</Value>
</Row>
<Row>
<Value>3</Value>
<Value>'Theo Ende'</Value>
</Row>
<Row>
<Value>4</Value>
<Value>'Firma Franz'</Value>
</Row>
<Row>
<Value>NULL</Value>
<Value>'Schwarz AG'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* set-function plus additional things on top */
SELECT  dint, 
        CASE WHEN Sum(aint) is not null 
               THEN Sum(aint) ELSE 0 END firstval,
        CASE WHEN Sum(eint) is not null 
               THEN Sum(eint) ELSE 0 END secondval,
        CASE WHEN Sum(aint) is not null 
               THEN Sum(aint) ELSE 0 END -
        CASE WHEN Sum(eint) is not null 
               THEN Sum(eint) ELSE 0 END AS Saldo
FROM    t
GROUP BY dint
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>FIRSTVAL</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>SECONDVAL</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>SALDO</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<Row>
<Value>2</Value>
<Value>3.00000000000000000000000000000000000000</Value>
<Value>0.00000000000000000000000000000000000000</Value>
<Value>3.00000000000000000000000000000000000000</Value>
</Row>
<Row>
<Value>5</Value>
<Value>7.00000000000000000000000000000000000000</Value>
<Value>5.00000000000000000000000000000000000000</Value>
<Value>2.00000000000000000000000000000000000000</Value>
</Row>
<Row>
<Value>45</Value>
<Value>0.00000000000000000000000000000000000000</Value>
<Value>4.00000000000000000000000000000000000000</Value>
<Value>-4.00000000000000000000000000000000000000</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* Create a view using cases */
CREATE VIEW myview
AS
SELECT  dint, 
        CASE WHEN Sum(aint) is not null 
               THEN Sum(aint) ELSE 0 END firstval,
        CASE WHEN Sum(eint) is not null 
               THEN Sum(eint) ELSE 0 END secondval,
        CASE WHEN Sum(aint) is not null 
               THEN Sum(aint) ELSE 0 END -
        CASE WHEN Sum(eint) is not null 
               THEN Sum(eint) ELSE 0 END AS Saldo
FROM    t
GROUP BY dint
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* check result on myview */
select * from myview
</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>DINT</ColumnName>
<ColumnType>INT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>FIRSTVAL</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>SECONDVAL</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>SALDO</ColumnName>
<ColumnType>FLOAT</ColumnType>
</ColumnDefinition>
<Row>
<Value>2</Value>
<Value>3.00000000000000000000000000000000000000</Value>
<Value>0.00000000000000000000000000000000000000</Value>
<Value>3.00000000000000000000000000000000000000</Value>
</Row>
<Row>
<Value>5</Value>
<Value>7.00000000000000000000000000000000000000</Value>
<Value>5.00000000000000000000000000000000000000</Value>
<Value>2.00000000000000000000000000000000000000</Value>
</Row>
<Row>
<Value>45</Value>
<Value>0.00000000000000000000000000000000000000</Value>
<Value>4.00000000000000000000000000000000000000</Value>
<Value>-4.00000000000000000000000000000000000000</Value>
</Row>
</ResultSet>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* drop used tables */
drop table t
</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>/* drop used tables */
drop table t1
</CallString>
</Statement>
</CleanUp>
</Test>
<Test Exclude="(;;oracle)(-7.3.99.999;;)" Number="2" Responsible="Daub, Jan Michael" TestType="positive">
<Comment>testing case_clause with columns of type timestamp</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table tab2 (id integer not null primary key, dt_hr_start timestamp null, dt_hr_end timestamp null, hr_interval timestamp null)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert tab2 values (1, '1999-04-15 14:30:38.431199', '1999-04-15 23:39:47.431199', null)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>declare c cursor for 
select id, timediff( dt_hr_start, dt_hr_end ) as total_hours from tab2</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>TOTAL_HOURS</ColumnName>
<ColumnType>TIME</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'09:09:09'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>close c</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>declare c cursor for 
select id,
   case
     when hr_interval is null
       then timediff( dt_hr_start, dt_hr_end )
     else
       timediff(timediff( dt_hr_start, dt_hr_end ), time(hr_interval))
   end as total_hours
   from tab2</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>TOTAL_HOURS</ColumnName>
<ColumnType>TIME</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'09:09:09'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="true" verify="false">
<CallString>close c</CallString>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop table tab2</CallString>
</Statement>
</CleanUp>
</Test>
<Test Exclude="(;;oracle)(7.3.99.999-;;)" Number="3" Responsible="Daub, Jan Michael" TestType="positive">
<Comment>testing case_clause with columns of type timestamp</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table tab2 (id integer not null primary key, dt_hr_start timestamp null, dt_hr_end timestamp null, hr_interval timestamp null)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert tab2 values (1, '1999-04-15 14:30:38.431199', '1999-04-15 23:39:47.431199', null)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>declare c cursor for 
select id, timediff( dt_hr_start, dt_hr_end ) as total_hours from tab2</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>TOTAL_HOURS</ColumnName>
<ColumnType>TIME</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'09:09:09'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>select tablename, columnname, datatype from columns where tablename = 'C'</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>TABLENAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COLUMNNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DATATYPE</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>'C'</Value>
<Value>'ID'</Value>
<Value>'INTEGER'</Value>
</Row>
<Row>
<Value>'C'</Value>
<Value>'TOTAL_HOURS'</Value>
<Value>'TIME'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>declare c cursor for 
select id,
   case
     when hr_interval is null
       then timediff( dt_hr_start, dt_hr_end )
     else
       timediff(timediff( dt_hr_start, dt_hr_end ), time(hr_interval))
   end as total_hours
   from tab2</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>TOTAL_HOURS</ColumnName>
<ColumnType>TIME</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'09:09:09'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>select tablename, columnname, datatype from columns where tablename = 'C'</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>TABLENAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COLUMNNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DATATYPE</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>'C'</Value>
<Value>'ID'</Value>
<Value>'INTEGER'</Value>
</Row>
<Row>
<Value>'C'</Value>
<Value>'TOTAL_HOURS'</Value>
<Value>'TIME'</Value>
</Row>
</ResultSet>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop table tab2</CallString>
</Statement>
</CleanUp>
</Test>
<Test ErrorType="syntax" Exclude="(;;ORACLE)" Number="456" Responsible="Märker, Olaf" TestType="negative">
<Comment>Test due to PTS 1126004-7</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>CREATE TABLE toc_tree (
	id serial primary key,
	lft int,
	rgt int
)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>INSERT INTO toc_tree (lft, rgt) VALUES (1, 2)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>UPDATE toc_tree 
SET 
lft = (CASE WHEN lft &gt; 2   THEN lft + 2  ELSE lft END),  
rgt = (CASE WHEN rgt &gt;= 2  THEN rgt + 2  ELSE rgt END)  
WHERE rgt &gt;= 2</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>select * from toc_tree</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>FIXED</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>LFT</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>RGT</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>1</Value>
<Value>4</Value>
</Row>
</ResultSet>
</Statement>
</Run>
</Test>
<Test Exclude="(;;oracle)" Number="815" Responsible="Daub, Jan Michael" TestType="positive">
<Comment>testing case_clause with columns of type timestamp</Comment>
<Prepare>
<Statement callable="false" ignore="false" verify="false">
<CallString>create table tab2 (id integer not null primary key, dt_hr_start timestamp null, dt_hr_end timestamp null, hr_interval timestamp null)</CallString>
</Statement>
</Prepare>
<Run>
<Statement callable="false" ignore="false" verify="false">
<CallString>insert tab2 values (1, '1999-04-15 14:30:38.431199', '1999-04-15 23:39:47.431199', null)</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>declare c cursor for 
select id, timediff( dt_hr_start, dt_hr_end ) as total_hours from tab2</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>TOTAL_HOURS</ColumnName>
<ColumnType>TIME</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'09:09:09'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>select tablename, columnname, datatype from columns where tablename = 'C'</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>TABLENAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COLUMNNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DATATYPE</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>'C'</Value>
<Value>'ID'</Value>
<Value>'INTEGER'</Value>
</Row>
<Row>
<Value>'C'</Value>
<Value>'TOTAL_HOURS'</Value>
<Value>'TIME'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>close c</CallString>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>declare c cursor for 
select id,
   case
     when hr_interval is null
       then timediff( dt_hr_start, dt_hr_end )
     else
       timediff(timediff( dt_hr_start, dt_hr_end ), time(hr_interval))
   end as total_hours
   from tab2</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>ID</ColumnName>
<ColumnType>INTEGER</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>TOTAL_HOURS</ColumnName>
<ColumnType>TIME</ColumnType>
</ColumnDefinition>
<Row>
<Value>1</Value>
<Value>'09:09:09'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="true">
<CallString>select tablename, columnname, datatype from columns where tablename = 'C'</CallString>
<ResultSet Verification="Complete">
<ColumnDefinition>
<ColumnName>TABLENAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>COLUMNNAME</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<ColumnDefinition>
<ColumnName>DATATYPE</ColumnName>
<ColumnType>CHAR</ColumnType>
</ColumnDefinition>
<Row>
<Value>'C'</Value>
<Value>'ID'</Value>
<Value>'INTEGER'</Value>
</Row>
<Row>
<Value>'C'</Value>
<Value>'TOTAL_HOURS'</Value>
<Value>'TIME'</Value>
</Row>
</ResultSet>
</Statement>
<Statement callable="false" ignore="false" verify="false">
<CallString>close c</CallString>
</Statement>
</Run>
<CleanUp>
<Statement callable="false" ignore="true" verify="false">
<CallString>drop table tab2</CallString>
</Statement>
</CleanUp>
</Test>
</Tests>
