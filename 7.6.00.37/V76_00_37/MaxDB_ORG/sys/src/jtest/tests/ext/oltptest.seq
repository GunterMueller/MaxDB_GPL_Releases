<?xml version="1.0"?>
<!DOCTYPE test-sequence SYSTEM "TestSequence.dtd">
<!-- All tests -->
<test-sequence>
<!-- environment -->
   <package>
	<package-name>com.sap.sapdb.oltptest.simple</package-name>
	<test>
		<test-name>TestEnvironment</test-name>
	</test>
   </package>
<!-- simple tests -->
   <package>
	<package-name>com.sap.sapdb.oltptest.simple</package-name>
	   <test>
		<test-name>Example1</test-name>
	   </test>
	   <test>
		<test-name>Example2</test-name>
	   </test>
	   <test>
		<test-name>Example3</test-name>
	   </test>
	   <test>
		<test-name>Example4</test-name>
	   </test>
	   <test>
		<test-name>Example5</test-name>
	   </test>
	   <test>
		<test-name>DDLTest01</test-name>
	   </test>
	   <test>
		<test-name>IndexTest1</test-name>
		<test-parameter-file>IndexTest1.par</test-parameter-file>
	   </test>

   </package>         
<!-- SQL aggregates -->
   <package>
	<package-name>com.sap.sapdb.oltptest.aggregates</package-name>
	<test>
		<test-name>SUM</test-name>
	</test>
   </package>         
   
<!-- SQL query optimizer -->
   <package>
	<package-name>com.sap.sapdb.oltptest.optimizer</package-name>
	<test>
		<test-name>GenerateEquiJoins</test-name>
	</test>

	<test>
		<test-name>OuterJoin3</test-name>
	</test>
   </package>
   
<!-- database locks -->
   <package>
	<package-name>com.sap.sapdb.oltptest.lock</package-name>
	<test>
		<test-name>LockList1</test-name>
		
	</test>
   </package>

  <!-- JDBCTest -->
  <package>
    <package-name>com.sap.dbtechtest.jtest</package-name>
    <test>
      <test-name>AllConnection</test-name>
      <!-- possible jdbc-test options -->
      <!-- <test-parameter KEY="trace"  VALUE=".\jdbctrace.prt" /> -->
      <!-- <test-parameter KEY="verbose"     VALUE="false" /> -->
      <!-- <test-parameter KEY="transport"   VALUE="socket" /> -->
      <!-- <test-parameter KEY="sqlmode"     VALUE="internal" /> -->
      <!-- <test-parameter KEY="unicode"     VALUE="no" /> -->
      <!-- <test-parameter KEY="DEBUG_JTEST" VALUE="true" /> -->
      <test-db-restart>false</test-db-restart>
    </test>
    <test>
      <test-name>AllTheRest</test-name>
      <test-db-restart>false</test-db-restart>
    </test>
    <test>
      <test-name>AllResultset</test-name>
      <test-db-restart>false</test-db-restart>
    </test>
    <test>
      <test-name>AllStatement</test-name>
      <test-db-restart>false</test-db-restart>
    </test>
    <test>
      <test-name>AllPrepared</test-name>
      <test-db-restart>false</test-db-restart>
    </test>
    <test>
      <test-name>AllTypes</test-name>
      <test-db-restart>false</test-db-restart>
    </test>
   </package>

 
  <!-- Alter Table Tests -->
   <package>
	<package-name>com.sap.sapdb.sqltest.interpreter</package-name>
	<test>
		<test-name>TestCasesInterpreter</test-name>
		<test-parameter-file>SQLManager.par</test-parameter-file>
	</test>
   </package>
   <package>
	<package-name>com.sap.sapdb.sqltest.ddl</package-name>
	<test>
		<test-name>AlterTableLong</test-name>
	</test>
   </package>

  <!-- DBPROC/Trigger Test -->
   <package>
	<package-name>com.sap.sapdb.sqltest.interpreter</package-name>
	<test>
		<test-name>TestCasesInterpreter</test-name>
		<test-parameter-file>dbproc.par</test-parameter-file>
	</test>
   </package>

  <!-- Migration Test -->
   <package>
	<package-name>com.sap.sapdb.oltptest.migration</package-name>
	<test>
		<test-name>CatalogToUnicode</test-name>
	</test>

   </package>

 <!-- SQL Test -->
   <package>
	<package-name>com.sap.sapdb.sqltest.interpreter</package-name>
	<test>
		<test-name>TestCasesInterpreter</test-name>
		<test-parameter-file>sqltest.par</test-parameter-file>
	</test>
   </package>
   <package>
	<package-name>com.sap.sapdb.sqltest.dynamic</package-name>
	<test>
		<test-name>DateTime</test-name>
	</test>
	<test>
		<test-name>DateTimeOracle</test-name>
	</test>
	<test>
		<test-name>Index</test-name>
	</test>
   </package>

<!-- Tests for SAPDBC -->
   <package>
    <package-name>com.sap.sapdb.sqldbctest</package-name>
	<test>
		<test-name>SQLDBCTest</test-name>
		<test-parameter-file>SQLDBCTest.par</test-parameter-file>
	</test>
   </package>

<!--
	Template for a test in a sequence
	
	define a package 
	<package> 
		<package-name>'name'</package-name> 
		
				this package can contain more than one test
			<test> 
					the testname / classname
				<test-name>'name'</test-name>
					A test can contian exactly one parameter-file. But it doesn't have to have one.
				<test-parameter-file>'name.par'</test-parameter-file>
					one can specify additional / extra parameters. These are added to the existing parameters in the parameterfile or they overwrite the former parameters. It is possible to give more than one of parameters
				<test-parameter KEY="'name'" VALUE="'worth'" />
					responible person for this test
				<test-responsible>insert_email_address_here</test-responsible>
					Shall the database be restarted before the test is executed? Yes -> TRUE; no -> false!
				<test-db-restart>'TRUE|FALSE'</test-db-restart>
			</test>
   	</package>
   	
   	an example:
	<package> 
		<package-name>com.sap.sapdb.oltptest.simple</package-name> 
						
			<test> 
				<test-name>Example1</test-name>
				<test-parameter-file>Example1_mini.par</test-parameter-file>
				<test-parameter KEY="Table_Row" VALUE="20" />
				<test-parameter KEY="loops" VALUE="12" />
				<test-responsible>joe@somecompany.com</test-responsible>
				<test-db-restart>FALSE</test-db-restart>
			</test>
			<test> 
				<test-name>Example2</test-name>
				<test-parameter KEY="Table" VALUE="testteam" />
				<test-responsible>jim@somecompany.com, joe@somecompany.com</test-responsible>
			</test>
			
   	</package>
-->

</test-sequence>
