/*!******************************************************************************

  @file         hbd73.h

  ------------------------------------------------------------------------------

  @author       JuergenP

  @brief        ref_statistic

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HBD73_H
#define HBD73_H


/*===========================================================================*
 *     RefType: C++                                                          *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\xce\x2c\x6e\x98\x33\xed\x2e\x6b\x4d\x1f\xa2\x68\xad\x12\xa6\x8d'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void b73cmd_count (
    tgg00_RefInfoIndex_Param     statement_kind);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void b73cmds_count (
    tgg00_RefInfoIndex_Param     statement_kind,
    tsp00_Int4               count);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void b73directory_ref_statistic (
    tgg00_DirectoryMonitorOp_Param     op_code);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void b73init_ref_statistic (
    tgg00_MonitorPart_Param     part);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd73DataIOStatisticForVirtualWrite (
    integer                  level,
    pasbool                  bIsPerm,
    pasbool                  bIsBlob,
    pasbool                  bIsCatalog);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd73DataIOStatisticForVirtualRead (
    integer                  level,
    pasbool                  bIsPerm,
    pasbool                  bIsBlob,
    pasbool                  bIsCatalog);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd73DataIOStatisticForPhysicalWrite (
    integer                  level,
    pasbool                  bIsPerm,
    pasbool                  bIsBlob,
    pasbool                  bIsCatalog);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd73DataIOStatisticForPhysicalRead (
    integer                  level,
    pasbool                  bIsPerm,
    pasbool                  bIsBlob,
    pasbool                  bIsCatalog);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd73LogIOStatistic (
    pasbool                  bForRead);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd73ConverterIOStatistic (
    pasbool                  bForRead);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void b73show_ref_statistic (
    tsp00_TaskId             TaskId,
    tgg00_ReferenceInfo   &  info);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

