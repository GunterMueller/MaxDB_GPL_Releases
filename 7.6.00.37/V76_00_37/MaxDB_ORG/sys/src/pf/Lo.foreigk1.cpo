====== BEGIN COMPACT PROT Lo.foreigk1.o;
 SQLAllocEnv retcode: 0
 SQLAllocConnect retcode: 0
 SQLConnect retcode: 0
 SQLAllocStmt retcode: 0
Create Stmt (Table1: CUSTOMER)= 'CREATE TABLE FR_CUSTOMER (CUSTOMER_ID INTEGER, CUST_NAME CHAR(30), 		ADRESS CHAR(60), PHONE CHAR(15), PRIMARY KEY (CUSTOMER_ID))'
 SQLExecDirect retcode: 0
Create Stmt (Table2: EMPLOYEE)= 'CREATE TABLE FR_EMPLOYEE (EMPLOYEE_ID INTEGER, NAME CHAR(30),AGE INTEGER, 				BIRTHDAY DATE, PRIMARY KEY (EMPLOYEE_ID)) '
 SQLExecDirect retcode: 0
Create Stmt (Table3: SALES_ORDER)= 'CREATE TABLE FR_SALES_ORDER (SALES_ID INTEGER, CUSTOMER_ID INTEGER, 			   EMPLOYEE_ID INTEGER, TOTAL_PRICE FIXED(6,2), PRIMARY KEY (SALES_ID), FOREIGN KEY (CUSTOMER_ID) REFERENCES FR_CUSTOMER 							(CUSTOMER_ID), FOREIGN KEY (EMPLOYEE_ID) REFERENCES FR_EMPLOYEE 							(EMPLOYEE_ID)) '
 SQLExecDirect retcode: 0
Create Stmt (Table4: SALES_LINE)= 'CREATE TABLE FR_SALES_LINE (SALES_ID INTEGER, LINE_NUMBER INTEGER, 		     PART_ID INTEGER, QUANTITY INTEGER, PRICE FIXED(6,2), FOREIGN KEY (SALES_ID) REFERENCES FR_SALES_ORDER 			(SALES_ID)) '
 SQLExecDirect retcode: 0
I.) SQLForeignKeys -> 			with primary key tablename: FR_SALES_ORDER'
 SQLForeignKeys retcode: 0
Columns->|PKTABLE_QUALIFIER|PKTABLE_OWNER|PKTABLE_NAME|PKCOLUMN_NAME|FKTABLE_QUALIFIER|FKTABLE_OWNER|FKTABLE_NAME|FKCOLUMN_NAME|KEY_SEQ|UPDATE_RULE|DELETE_RULE|FK_NAME|PK_NAME|
Column 1 : 			   '<NULL>','ODBC','FR_SALES_ORDER','SALES_ID','<NULL>','ODBC','FR_SALES_LINE','SALES_ID','1','SQL_SET_NULL',			   'SQL_RESTRICT','FR_SALES_ORDER_FR_SALES_LINE','<NULL>' 
 SQLFreeStmt retcode: 0
II.) SQLForeignKeys -> 			with foreign key tablename: FR_SALES_ORDER'
 SQLForeignKeys retcode: 0
Columns->|PKTABLE_QUALIFIER|PKTABLE_OWNER|PKTABLE_NAME|PKCOLUMN_NAME|FKTABLE_QUALIFIER|FKTABLE_OWNER|FKTABLE_NAME|FKCOLUMN_NAME|KEY_SEQ|UPDATE_RULE|DELETE_RULE|FK_NAME|PK_NAME|
Column 1 : 			   '<NULL>','ODBC','FR_CUSTOMER','CUSTOMER_ID','<NULL>','ODBC','FR_SALES_ORDER','CUSTOMER_ID','1','SQL_SET_NULL',			   'SQL_RESTRICT','FR_CUSTOMER_FR_SALES_ORDER','<NULL>' 
Column 2 : 			   '<NULL>','ODBC','FR_EMPLOYEE','EMPLOYEE_ID','<NULL>','ODBC','FR_SALES_ORDER','EMPLOYEE_ID','1','SQL_SET_NULL',			   'SQL_RESTRICT','FR_EMPLOYEE_FR_SALES_ORDER','<NULL>' 
 SQLFreeStmt retcode: 0
III.) SQLForeignKeys -> with primary key tablename:	  			'FR_SALES_ORDER' and foreign key tablename: 'FR_SALES_LINE'
 SQLForeignKeys retcode: 0
Columns->|PKTABLE_QUALIFIER|PKTABLE_OWNER|PKTABLE_NAME|PKCOLUMN_NAME|FKTABLE_QUALIFIER|FKTABLE_OWNER|FKTABLE_NAME|FKCOLUMN_NAME|KEY_SEQ|UPDATE_RULE|DELETE_RULE|FK_NAME|PK_NAME|
Column 1 : 			   '<NULL>','ODBC','FR_SALES_ORDER','SALES_ID','<NULL>','ODBC','FR_SALES_LINE','SALES_ID','1','SQL_SET_NULL',			   'SQL_RESTRICT','FR_SALES_ORDER_FR_SALES_LINE','<NULL>' 
 SQLFreeStmt retcode: 0
Drop Stmt (Table1:FR_CUSTOMER)= 'DROP TABLE FR_CUSTOMER'
 SQLExecDirect retcode: 0
Drop Stmt (Table2:FR_EMPLOYEE)= 'DROP TABLE FR_EMPLOYEE'
 SQLExecDirect retcode: 0
Drop Stmt (Table3:FR_SALES_ORDER)= 'DROP TABLE FR_SALES_ORDER'
 SQLExecDirect retcode: 0
Drop Stmt (Table4:FR_SALES_LINE)= 'DROP TABLE FR_SALES_LINE'
 SQLExecDirect retcode: 0
 SQLFreeStmt retcode: 0
 SQLDisconnect retcode: 0
 SQLFreeConnect retcode: 0
 SQLFreeEnv retcode: 0

 foreigk1 ending
====== END COMPACT PROT;
====== BEGIN COMPACT PROT Lo.foreigk1.t;

PRODUCT : SAP DB C-PreComp Runtime
VERSION : X.X.X
BUILD   : XXX-XXX-XXX

DATASOURCE:
SESSION   : 1;    
SQLMODE   : INTERN
SERVERDB  : 
SERVERNODE: 
CONNECT "ODBC              " IDENTIFIED BY :A   ISOLATION LEVEL 1
START:
END:

CREATE TABLE FR_CUSTOMER (CUSTOMER_ID INTEGER, CUST_NAME CHAR(30), 		ADRESS 
CHAR(60), PHONE CHAR(15), PRIMARY KEY (CUSTOMER_ID))
START:
END:

CREATE TABLE FR_EMPLOYEE (EMPLOYEE_ID INTEGER, NAME CHAR(30),AGE INTEGER, 
				BIRTHDAY DATE, PRIMARY KEY (EMPLOYEE_ID))
START:
END:

CREATE TABLE FR_SALES_ORDER (SALES_ID INTEGER, CUSTOMER_ID INTEGER, 			   
EMPLOYEE_ID INTEGER, TOTAL_PRICE FIXED(6,2), PRIMARY KEY (SALES_ID), FOREIGN 
KEY (CUSTOMER_ID) REFERENCES FR_CUSTOMER 							(CUSTOMER_ID), FOREIGN KEY 
(EMPLOYEE_ID) REFERENCES FR_EMPLOYEE 							(EMPLOYEE_ID))
START:
END:

CREATE TABLE FR_SALES_LINE (SALES_ID INTEGER, LINE_NUMBER INTEGER, 		     
PART_ID INTEGER, QUANTITY INTEGER, PRICE FIXED(6,2), FOREIGN KEY (SALES_ID) 
REFERENCES FR_SALES_ORDER 			(SALES_ID))
START:
END:

SELECT PKTABLE_QUALIFIER, PKTABLE_OWNER, PKTABLE_NAME, PKCOLUMN_NAME, 
FKTABLE_QUALIFIER, FKTABLE_OWNER, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, 
UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME FROM SYSDBA.SYSODBCFOREIGNKEYS WHERE 
PKTABLE_OWNER = 'ODBC' AND PKTABLE_NAME = 'FR_SALES_ORDER' ORDER BY 2, 3, 9
PARSE  : CMD   :  
mfIndex init      : 1
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT PKTABLE_QUALIFIER, PKTABLE_OWNER, PKTABLE_NAME, PKCOLUMN_NAME, 
FKTABLE_QUALIFIER, FKTABLE_OWNER, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, 
UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME FROM SYSDBA.SYSODBCFOREIGNKEYS WHERE 
PKTABLE_OWNER = 'ODBC' AND PKTABLE_NAME = 'FR_SALES_ORDER' ORDER BY 2, 3, 9
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    7     65          4     1           0        
2    7     33          2     32          0        
3    7     33          2     32          0        
4    7     33          2     32          0        
5    7     65          4     1           0        
6    7     33          2     32          0        
7    7     33          2     32          0        
8    7     33          2     32          0        
9    0     2           0     4           0        
10   0     2           4     1           0        
11   0     2           0     1           0        
12   7     33          2     32          0        
13   7     65          4     1           0        
OUTPUT :    1: PKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    2: PKTABLE_OWNER                   : ODBC
OUTPUT :    3: PKTABLE_NAME                    : FR_SALES_ORDER
OUTPUT :    4: PKCOLUMN_NAME                   : SALES_ID
OUTPUT :    5: FKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    6: FKTABLE_OWNER                   : ODBC
OUTPUT :    7: FKTABLE_NAME                    : FR_SALES_LINE
OUTPUT :    8: FKCOLUMN_NAME                   : SALES_ID
OUTPUT :    9: KEY_SEQ                         :                   1
OUTPUT :   10: UPDATE_RULE                     :  IS NULL
OUTPUT :   11: DELETE_RULE                     :                   1
OUTPUT :   12: FK_NAME                         : FR_SALES_ORDER_FR_SALES_LINE
OUTPUT :   13: PK_NAME                         :  IS NULL
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        Row not found
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

SELECT PKTABLE_QUALIFIER, PKTABLE_OWNER, PKTABLE_NAME, PKCOLUMN_NAME, 
FKTABLE_QUALIFIER, FKTABLE_OWNER, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, 
UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME FROM SYSDBA.SYSODBCFOREIGNKEYS WHERE 
FKTABLE_OWNER = 'ODBC' AND FKTABLE_NAME = 'FR_SALES_ORDER' ORDER BY 6, 7
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT PKTABLE_QUALIFIER, PKTABLE_OWNER, PKTABLE_NAME, PKCOLUMN_NAME, 
FKTABLE_QUALIFIER, FKTABLE_OWNER, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, 
UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME FROM SYSDBA.SYSODBCFOREIGNKEYS WHERE 
FKTABLE_OWNER = 'ODBC' AND FKTABLE_NAME = 'FR_SALES_ORDER' ORDER BY 6, 7
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : 2          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    7     65          4     1           0        
2    7     33          2     32          0        
3    7     33          2     32          0        
4    7     33          2     32          0        
5    7     65          4     1           0        
6    7     33          2     32          0        
7    7     33          2     32          0        
8    7     33          2     32          0        
9    0     2           0     4           0        
10   0     2           4     1           0        
11   0     2           0     1           0        
12   7     33          2     32          0        
13   7     65          4     1           0        
OUTPUT :    1: PKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    2: PKTABLE_OWNER                   : ODBC
OUTPUT :    3: PKTABLE_NAME                    : FR_CUSTOMER
OUTPUT :    4: PKCOLUMN_NAME                   : CUSTOMER_ID
OUTPUT :    5: FKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    6: FKTABLE_OWNER                   : ODBC
OUTPUT :    7: FKTABLE_NAME                    : FR_SALES_ORDER
OUTPUT :    8: FKCOLUMN_NAME                   : CUSTOMER_ID
OUTPUT :    9: KEY_SEQ                         :                   1
OUTPUT :   10: UPDATE_RULE                     :  IS NULL
OUTPUT :   11: DELETE_RULE                     :                   1
OUTPUT :   12: FK_NAME                         : FR_CUSTOMER_FR_SALES_ORDER
OUTPUT :   13: PK_NAME                         :  IS NULL
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    7     65          4     1           0        
2    7     33          2     32          0        
3    7     33          2     32          0        
4    7     33          2     32          0        
5    7     65          4     1           0        
6    7     33          2     32          0        
7    7     33          2     32          0        
8    7     33          2     32          0        
9    0     2           0     4           0        
10   0     2           4     1           0        
11   0     2           0     1           0        
12   7     33          2     32          0        
13   7     65          4     1           0        
OUTPUT :    1: PKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    2: PKTABLE_OWNER                   : ODBC
OUTPUT :    3: PKTABLE_NAME                    : FR_EMPLOYEE
OUTPUT :    4: PKCOLUMN_NAME                   : EMPLOYEE_ID
OUTPUT :    5: FKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    6: FKTABLE_OWNER                   : ODBC
OUTPUT :    7: FKTABLE_NAME                    : FR_SALES_ORDER
OUTPUT :    8: FKCOLUMN_NAME                   : EMPLOYEE_ID
OUTPUT :    9: KEY_SEQ                         :                   1
OUTPUT :   10: UPDATE_RULE                     :  IS NULL
OUTPUT :   11: DELETE_RULE                     :                   1
OUTPUT :   12: FK_NAME                         : FR_EMPLOYEE_FR_SALES_ORDER
OUTPUT :   13: PK_NAME                         :  IS NULL
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        Row not found
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

SELECT PKTABLE_QUALIFIER, PKTABLE_OWNER, PKTABLE_NAME, PKCOLUMN_NAME, 
FKTABLE_QUALIFIER, FKTABLE_OWNER, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, 
UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME FROM SYSDBA.SYSODBCFOREIGNKEYS WHERE 
PKTABLE_OWNER = 'ODBC' AND PKTABLE_NAME = 'FR_SALES_ORDER' AND FKTABLE_OWNER = 
'ODBC' AND FKTABLE_NAME = 'FR_SALES_LINE' ORDER BY 6, 7
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT PKTABLE_QUALIFIER, PKTABLE_OWNER, PKTABLE_NAME, PKCOLUMN_NAME, 
FKTABLE_QUALIFIER, FKTABLE_OWNER, FKTABLE_NAME, FKCOLUMN_NAME, KEY_SEQ, 
UPDATE_RULE, DELETE_RULE, FK_NAME, PK_NAME FROM SYSDBA.SYSODBCFOREIGNKEYS WHERE 
PKTABLE_OWNER = 'ODBC' AND PKTABLE_NAME = 'FR_SALES_ORDER' AND FKTABLE_OWNER = 
'ODBC' AND FKTABLE_NAME = 'FR_SALES_LINE' ORDER BY 6, 7
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    7     65          4     1           0        
2    7     33          2     32          0        
3    7     33          2     32          0        
4    7     33          2     32          0        
5    7     65          4     1           0        
6    7     33          2     32          0        
7    7     33          2     32          0        
8    7     33          2     32          0        
9    0     2           0     4           0        
10   0     2           4     1           0        
11   0     2           0     1           0        
12   7     33          2     32          0        
13   7     65          4     1           0        
OUTPUT :    1: PKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    2: PKTABLE_OWNER                   : ODBC
OUTPUT :    3: PKTABLE_NAME                    : FR_SALES_ORDER
OUTPUT :    4: PKCOLUMN_NAME                   : SALES_ID
OUTPUT :    5: FKTABLE_QUALIFIER               :  IS NULL
OUTPUT :    6: FKTABLE_OWNER                   : ODBC
OUTPUT :    7: FKTABLE_NAME                    : FR_SALES_LINE
OUTPUT :    8: FKCOLUMN_NAME                   : SALES_ID
OUTPUT :    9: KEY_SEQ                         :                   1
OUTPUT :   10: UPDATE_RULE                     :  IS NULL
OUTPUT :   11: DELETE_RULE                     :                   1
OUTPUT :   12: FK_NAME                         : FR_SALES_ORDER_FR_SALES_LINE
OUTPUT :   13: PK_NAME                         :  IS NULL
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        Row not found
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

DROP TABLE FR_CUSTOMER
START:
END:

DROP TABLE FR_EMPLOYEE
START:
END:

DROP TABLE FR_SALES_ORDER
START:
END:

DROP TABLE FR_SALES_LINE
START:
END:

S1: DISCONNECT 
 
SQCFINISH         
====== END COMPACT PROT;
