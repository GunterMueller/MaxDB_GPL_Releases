====== BEGIN COMPACT PROT Lo.execdsel.o;
execdsel running.
 SQLAllocEnv retcode: 0
 SQLAllocConnect retcode: 0
 SQLConnect retcode: 0
retcode = 0, driverver = "7.6.0 b0"
 SQLAllocStmt retcode: 0
DROP TABLE ATMP
 SQLExecDirect retcode: 0
 SQLNumResultCols (0) retcode: 0
 SQLNumParams (0) retcode: 0
 SQLFreeStmt (SQL_CLOSE) retcode: 0
create table atmp ( f1 int, c1 char (10))
 SQLExecDirect retcode: 0
 SQLNumResultCols (0) retcode: 0
 SQLNumParams (0) retcode: 0
 SQLFreeStmt (SQL_CLOSE) retcode: 0
insert atmp values ( 10, 'ABCDEFGHIJ')
 SQLExecDirect retcode: 0
 SQLNumResultCols (0) retcode: 0
 SQLNumParams (0) retcode: 0
 SQLFreeStmt (SQL_CLOSE) retcode: 0
select * from atmp
 SQLExecDirect retcode: 0
 SQLNumResultCols (2) retcode: 0
 SQLNumParams (0) retcode: 0
 SQLFetch retcode: '0'
 SQLFetch retcode: '100'
 sqlstate: 00000
 esq_sql_code: 0
 SQLFreeStmt (SQL_CLOSE) retcode: 0
 SQLSetParam (1) retcode: 0
 SQLSetParam (2) retcode: 0
insert atmp values ( ?, ?)
 SQLExecDirect retcode: 0
 SQLNumResultCols (0) retcode: 0
 SQLNumParams (2) retcode: 0
 SQLFreeStmt (SQL_CLOSE) retcode: 0
insert atmp values ( ?, ?)
 SQLPrepare retcode: 0
 SQLExecute retcode: 0
 SQLNumResultCols (0) retcode: 0
 SQLNumParams (2) retcode: 0
 SQLFreeStmt (SQL_CLOSE) retcode: 0
 SQLTransact retcode: 0
 SQLDisconnect retcode: 0
 SQLFreeConnect retcode: 0
 SQLFreeEnv retcode: 0
execdsel ending.
====== END COMPACT PROT;
====== BEGIN COMPACT PROT Lo.execdsel.t;

PRODUCT : SAP DB C-PreComp Runtime
VERSION : X.X.X
BUILD   : XXX-XXX-XXX

DATASOURCE:
SESSION   : 1;    
SQLMODE   : INTERN
SERVERDB  : 
SERVERNODE: 
CONNECT "ODBC              " IDENTIFIED BY :A   ISOLATION LEVEL 1
KERNEL FEATURES :
OPTIMIZED STREAMS
START:
END:

DROP TABLE ATMP
START:
END:

create table atmp ( f1 int, c1 char (10))
START:
END:

insert atmp values ( 10, 'ABCDEFGHIJ')
PARSE  : CMD   :  
mfIndex init      : 1
PARSEID: OUTPUT:
START:
END:

insert atmp values ( 10, 'ABCDEFGHIJ')
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLERRD(INDEX_3) : 1          
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

select * from atmp
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

select * from atmp
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
WARNING: W-------8------- 
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : -1         
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    1     4           30    10          0    
2    7     11          2     10          0    
OUTPUT :    1: F1                              :                  10
OUTPUT :    2: C1                              : ABCDEFGHIJ
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        ROW NOT FOUND
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

insert atmp values ( ?, ?)
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

insert atmp values ( ?, ?)
EXECUTE: CMD   :  
PARSEID: INPUT :
INPUT  :    1: COLUMN1                         :                  99
INPUT  :    2: COLUMN2                         : XXXX
SQLERRD(INDEX_3) : 1          
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

insert atmp values ( ?, ?)
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

insert atmp values ( ?, ?)
EXECUTE: CMD   :  
PARSEID: INPUT :
INPUT  :    1: COLUMN1                         :                1000
INPUT  :    2: COLUMN2                         : tausend
SQLERRD(INDEX_3) : 1          
START:
END:

S1: DISCONNECT 
 
SQCDROPPARSID     
PARSEID:       :
 
SQCFINISH         
====== END COMPACT PROT;
