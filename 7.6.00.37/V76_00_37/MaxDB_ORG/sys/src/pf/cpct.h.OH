/*!================================================================

  module      : cpct.h

  -------------------------------------------------------------------------

  responsible : D025086

  special area:
  description : header file for interface test helper library. 
        Contains useful functions (splib) for writing test programs for 
        the interfaces. 

  last changed: 2002-03-14  
  see also    :

  -------------------------------------------------------------------------


    ========== licence begin  GPL
    Copyright (c) 2002-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end




 ===================================================================*/

#if defined(__cplusplus)
#define externCGlobal extern "C"
#else
#define externCGlobal extern
#endif


typedef unsigned char  teo00_Byte;
typedef unsigned short teo00_Uint2;
typedef unsigned int   teo00_Uint4;

typedef char           tsp00_Char;
typedef teo00_Uint2    tsp00_Uint2;
typedef teo00_Uint4    tsp00_Uint4;
typedef teo00_Byte     tsp00_Byte;


#if !defined(__cplusplus)
typedef struct tsp77encoding  tsp77encoding;
#else
typedef void tsp77encoding;
# endif

externCGlobal const tsp77encoding * const sp77encodingAscii;
externCGlobal const tsp77encoding * const sp77encodingUCS2;
externCGlobal const tsp77encoding * const sp77encodingUCS2Swapped;
#if defined(WIN32) || (defined(LINUX) && !defined(S390X) && !defined(SDBonPPC64)) || defined(OSF1)
#define IsUCS2Swapped (1)
#define sp77encodingUCS2Native sp77encodingUCS2Swapped
#else
#define IsUCS2Swapped (0)
#define sp77encodingUCS2Native sp77encodingUCS2
#endif
externCGlobal const tsp77encoding * const sp77encodingUTF8;

typedef enum t_sp78ConversionResult
{
  sp78_Ok,              /* Conversion sucessfull */
  sp78_SourceExhausted, /* last character only partial in source buffer */
  sp78_SourceCorrupted, /* source contains invalid chars or char sequences */
  sp78_TargetExhausted, /* not enaugh room in target for conversion */
  sp78_TargetNotTerminated, /* failed to add zero termination bytes */
  sp78_BadSourceEncoding, /* unsupported source encoding */
  sp78_BadTargetEncoding, /* unsupported destination encoding */
  sp78_NullArgument       /* NULL pointer parsed */
} tsp78ConversionResult;

void  sp81UCS2FillString( void **buffer, unsigned int *buflen,
                          unsigned int padCount, tsp00_Char padChar,
                          int bufferSwapped);

#if defined(__cplusplus)
union tsp81_UCS2Char { tsp00_Uint2 s; tsp00_Byte c[2]; };
struct tsp81_UCS2Map { tsp00_Uint2 mapping[256]; };
#else
typedef union { tsp00_Uint2 s; tsp00_Byte c[2]; } tsp81_UCS2Char;
typedef struct t_sp81UCS2Map { tsp00_Uint2 mapping[256]; } tsp81_UCS2Map;
#endif
