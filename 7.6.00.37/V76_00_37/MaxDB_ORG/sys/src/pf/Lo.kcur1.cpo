====== BEGIN COMPACT PROT Lo.kcur1.o;
kcur1 running.
NumTestValues=8
 SQLAllocEnv retcode: 0
 SQLAllocConnect retcode: 0
 SQLConnect retcode: 0
 SQLAllocStmt retcode: 0
 SQLAllocStmt retcode: 0
drop table kcur1
create table kcur1(i integer, c char (20))
create unique index i1 on kcur1 (i)
 SQLFreeStmt (SQL_CLOSE) retcode: 0
insert into kcur1 values (?, ?)
 SQLPrepare retcode: 'SQL_SUCCESS'
 SQLDescribeParam retcode: 0
 SQLBindParameter retcode 'SQL_SUCCESS'
 SQLDescribeParam retcode: 0
 SQLBindParameter retcode 'SQL_SUCCESS'
 1 row inserted.
 SQLFreeStmt (SQL_DROP) retcode: 0
 SQLAllocStmt retcode: 0
 SQLSetStmtOption retcode: 0
 SQLSetStmtOption retcode: 0
 SQLSetStmtOption retcode: 0
 SQLSetStmtOption retcode: 0
 New Test with 1 rows and 'SQL_CURSOR_KEYSET_DRIVEN'
 SQLSetFreeStmt retcode: 0
select * from kcur1
 SQLExecDirect retcode: 0
 SQLExtendedFetch 'SQL_FETCH_ABSOLUTE' (1) retcode: 'SQL_SUCCESS'
s='SQL_ROW_SUCCESS', i=(4)0, c=(7)'Zeile 0'
delete from kcur1 DELETE retcode: 'SQL_SUCCESS'
 New Test with 1 rows and 'SQL_CURSOR_KEYSET_DRIVEN'
 SQLSetFreeStmt retcode: 0
select * from kcur1
 SQLExecDirect retcode: 0
 SQLExtendedFetch 'SQL_FETCH_ABSOLUTE' (1) retcode: 'SQL_NO_DATA_FOUND'
s='## INVALID ##', i=(4)0, c=(7)'Zeile 0'
 SQLExtendedFetch 'SQL_FETCH_ABSOLUTE' (2) retcode: 'SQL_NO_DATA_FOUND'
s='## INVALID ##', i=(4)0, c=(7)'Zeile 0'
 SQLExtendedFetch 'SQL_FETCH_NEXT' (0) retcode: 'SQL_NO_DATA_FOUND'
s='## INVALID ##', i=(4)0, c=(7)'Zeile 0'
 SQLExtendedFetch 'SQL_FETCH_NEXT' (0) retcode: 'SQL_NO_DATA_FOUND'
s='## INVALID ##', i=(4)0, c=(7)'Zeile 0'
 SQLTransact retcode: 0
 SQLDisconnect retcode: 0
 SQLFreeConnect retcode: 0
 SQLFreeEnv retcode: 0
kcur1 ending.
====== END COMPACT PROT;
====== BEGIN COMPACT PROT Lo.kcur1.t;
PRODUCT : liveCache C/C++ Precompiler Runtime
VERSION : 7.2.0
BUILD   :

DATASOURCE:
SESSION   : 1;    
SQLMODE   : INTERN
SERVERDB  : 
SERVERNODE:                                                                 
CONNECT "ODBC              " IDENTIFIED BY :A   ISOLATION LEVEL 1
START:
END:

drop table kcur1
START:
END:

COMMIT WORK
START:
END:

create table kcur1(i integer, c char (20))
START:
END:

COMMIT WORK

START:
END:

create unique index i1 on kcur1 (i)
START:
END:

COMMIT WORK
START:
END:

insert into kcur1 values (?, ?)
PARSE  : CMD   :  
mfIndex init      : 1
PARSEID: OUTPUT:
START:
END:

insert into kcur1 values (?, ?)
EXECUTE: CMD   :  
PARSEID: INPUT :
INPUT  :    1: COLUMN1                         :                   0
INPUT  :    2: COLUMN2                         : Zeile 0
SQLERRD(INDEX_3) : 1          
START:
END:

COMMIT WORK
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

select * from kcur1 FOR REUSE
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

select * from kcur1 FOR REUSE
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
WARNING: W-------8------- 
SQLRESULTNAME  :  SQL_CURSOR_0003 
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
 FETCH POS(?) "SQL_CURSOR_0003"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
 FETCH POS(?) "SQL_CURSOR_0003"
EXECUTE: CMD   :  
PARSEID: INPUT :
FETCH-PARAMETER   : 1
OUTPUT :    1: I                               :                   0
OUTPUT :    2: C                               : Zeile 0
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
 FETCH POS(?) "SQL_CURSOR_0003"
EXECUTE: CMD   :  
PARSEID: INPUT :
FETCH-PARAMETER   : 1
OUTPUT :    1: I                               :                   0
OUTPUT :    2: C                               : Zeile 0
SQLERRD(INDEX_3) : 1          
START:
END:

delete from kcur1
PARSE  : CMD   :  
WARNING: W---4----------- 
PARSEID: OUTPUT:
START:
END:

delete from kcur1
EXECUTE: CMD   :  
PARSEID: INPUT :
WARNING: W-------8------- 
SQLERRD(INDEX_3) : 1          
START:
END:

COMMIT WORK
START:
END:

CLOSE "SQL_CURSOR_0003"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0003"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:

COMMIT WORK
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
SQCDROPPARSID     
PARSEID:       :

select * from kcur1 FOR REUSE
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

select * from kcur1 FOR REUSE
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLCODE:  100        Row not found
START:
END:

S1: DISCONNECT 
mfIndex delete    : 2
 
SQCDROPPARSID     
PARSEID:       :
 
SQCDROPPARSID     
PARSEID:       :
 
SQCFINISH         
====== END COMPACT PROT;
