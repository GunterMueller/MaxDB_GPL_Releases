====== BEGIN COMPACT PROT Lo.dbproc.o;
SQLAllocHandle retcode: SQL_SUCCESS
SQLSetEnvAttr retcode: SQL_SUCCESS
SQLAllocHandle retcode: SQL_SUCCESS
SQLSetConnectAttr retcode: SQL_SUCCESS
 SQLConnect retcode: 0
SQLAllocHandle retcode: SQL_SUCCESS
SQLExecDirect retcode: SQL_SUCCESS
SQLExecDirect retcode: SQL_SUCCESS
SQLAllocHandle retcode: SQL_SUCCESS
SQLPrepare retcode: SQL_SUCCESS
SQLBindParameter retcode: SQL_SUCCESS
SQLBindParameter retcode: SQL_SUCCESS
SQLBindParameter retcode: SQL_SUCCESS
SQLExecute retcode: SQL_SUCCESS
SQLNumResultCols: 0 retcode: SQL_SUCCESS
a = 2   b = 4   s = 5
SQLFreeHandle retcode: SQL_SUCCESS
SQLAllocHandle retcode: SQL_SUCCESS
SQLPrepare retcode: SQL_SUCCESS
SQLExecute retcode: SQL_SUCCESS
SQLNumResultCols: 1 retcode: SQL_SUCCESS
SQLFetch retcode: SQL_SUCCESS
SQLGetData: <4165>(4) retcode: SQL_SUCCESS
SQLAllocHandle retcode: SQL_SUCCESS
SQLExecDirect retcode: SQL_SUCCESS
SQLExecDirect retcode: SQL_SUCCESS
SQLFreeHandle retcode: SQL_SUCCESS
Test OK
====== END COMPACT PROT;
====== BEGIN COMPACT PROT Lo.dbproc.t;

PRODUCT : SAP DB C-PreComp Runtime
VERSION : X.X.X
BUILD   : XXX-XXX-XXX

DATASOURCE:
SESSION   : 1;    
SQLMODE   : INTERN
SERVERDB  : 
SERVERNODE: 
CONNECT "ODBC              " IDENTIFIED BY :A   ISOLATION LEVEL 1
START:
END:

create dbproc test_proc (IN a int, INOUT b int, OUT s int) AS                   
     set s = a+b; set b=4;
PARSE  : CMD   :  
mfIndex init      : 1
PARSEID: OUTPUT:
START:
END:

create dbproc test_proc (IN a int, INOUT b int, OUT s int) AS                   
     set s = a+b; set b=4;
EXECUTE: CMD   :  
PARSEID: INPUT :
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

CREATE DBPROC test_proc_rs RETURNS CURSOR AS SET $CURSOR = 'abc';               
        DECLARE :$CURSOR CURSOR FOR SELECT '4165' FROM DOMAIN.USERS;
PARSE  : CMD   :  
mfIndex init      : 1
PARSEID: OUTPUT:
SQLRESULTNAME  : 
START:
END:

CREATE DBPROC test_proc_rs RETURNS CURSOR AS SET $CURSOR = 'abc';               
        DECLARE :$CURSOR CURSOR FOR SELECT '4165' FROM DOMAIN.USERS;
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 1
mfIndex init      : 1
START:
END:

{ CALL test_proc (?,?,?) }
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

{ CALL test_proc (?,?,?) }
EXECUTE: CMD   :  
PARSEID: INPUT :
INPUT  :    1: COLUMN1                         :                   2
INPUT  :    2: COLUMN2                         :                   3
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    7     13          0     10          0    
2    7     13          0     10          0    
3    7     13          0     10          0    
OUTPUT :    2: COLUMN2                         :                   4
OUTPUT :    3: COLUMN3                         :                   5
SQLERRD(INDEX_3) : 1          
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

CALL test_proc_rs
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CALL test_proc_rs
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLRESULTNAME  : abc
SQLERRD(INDEX_3) : 8          
START:
END:

 FETCH "abc                                                             "
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

 FETCH "abc                                                             "
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    7     5           2     4           0    
OUTPUT :    1: EXPRESSION1                     : 4165
SQLERRD(INDEX_3) : 1          
START:
END:

DROP DBPROC test_proc
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

DROP DBPROC test_proc
EXECUTE: CMD   :  
PARSEID: INPUT :
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

DROP DBPROC test_proc_rs
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

DROP DBPROC test_proc_rs
EXECUTE: CMD   :  
PARSEID: INPUT :
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
====== END COMPACT PROT;
