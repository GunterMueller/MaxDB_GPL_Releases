====== BEGIN COMPACT PROT Lo.speccolm.o;
 speccolm running.
 SQLAllocEnv retcode: 0
 SQLAllocConnect retcode: 0
 SQLConnect retcode: 0
 SQLAllocStmt retcode: 0
 Create Stmt 1.= 'CREATE TABLE TABSPECCOL1 ("MNR" INTEGER, "NAME" CHAR(30))'
 SQLExecDirect retcode: 0
 Create Stmt 2.= 'CREATE TABLE TABSPECCOL2 ("MNR" INTEGER KEY, "NAME" CHAR(30))'
 SQLExecDirect retcode: 0
 Create Stmt 3.= 'CREATE TABLE TABSPECCOL3 ("MNR" INTEGER, "NAME" CHAR(30), PRIMARY KEY (NAME))'
 SQLExecDirect retcode: 0

 1.List SpecialColumns Table -> TABSPECCOL1 
 	fColType -> SQL_BEST_ROWID, fScope -> SQL_SCOPE_CURROW 
 SQLSpecialColumns retcode: 0
Columns->|SCOPE|COLUMN_NAME|DATA_TYPE|TYPE_NAME|PRECISION|LENGTH|SCALE|PSEUDO_COLUMN|
 Column 1 : 'SQL_SCOPE_TRANSACTION','SYSKEY','-2','CHAR BYTE','8','8','<NULL>','SQL_PC_PSEUDO'
 SQLFreeStmt retcode: 0

 2.List SpecialColumns Table -> TABSPECCOL2 
 	fColType -> SQL_BEST_ROWID, fScope -> SQL_SCOPE_CURROW 
 SQLSpecialColumns retcode: 0
Columns->|SCOPE|COLUMN_NAME|DATA_TYPE|TYPE_NAME|PRECISION|LENGTH|SCALE|PSEUDO_COLUMN|
 Column 1 : 'SQL_SCOPE_TRANSACTION','MNR','4','INTEGER','10','4','0','SQL_PC_PSEUDO'
 SQLFreeStmt retcode: 0

 3.List SpecialColumns Table -> TABSPECCOL3 
 	fColType -> SQL_BEST_ROWID, fScope -> SQL_SCOPE_TRANSACTION 
 SQLSpecialColumns retcode: 0
Columns->|SCOPE|COLUMN_NAME|DATA_TYPE|TYPE_NAME|PRECISION|LENGTH|SCALE|PSEUDO_COLUMN|
 Column 1 : 'SQL_SCOPE_TRANSACTION','NAME','1','CHAR','30','30','<NULL>','SQL_PC_PSEUDO'
 SQLFreeStmt retcode: 0

 4.List SpecialColumns Table -> TABSPECCOL3 
 	fColType -> SQL_BEST_ROWID, fScope -> SQL_SCOPE_SESSION 
 SQLSpecialColumns retcode: 0
Columns->|SCOPE|COLUMN_NAME|DATA_TYPE|TYPE_NAME|PRECISION|LENGTH|SCALE|PSEUDO_COLUMN|
 SQLFreeStmt retcode: 0

 5.List SpecialColumns Table -> TABSPECCOL3 
 	fColType -> SQL_ROWVER, fScope -> SQL_SCOPE_CURROW 
 SQLSpecialColumns retcode: 0
Columns->|SCOPE|COLUMN_NAME|DATA_TYPE|TYPE_NAME|PRECISION|LENGTH|SCALE|PSEUDO_COLUMN|
 SQLFreeStmt retcode: 0
 Drop Stmt= 'DROP TABLE TABSPECCOL1'
 SQLExecDirect retcode: 0
 Drop Stmt= 'DROP TABLE TABSPECCOL2'
 SQLExecDirect retcode: 0
 Drop Stmt= 'DROP TABLE TABSPECCOL3'
 SQLExecDirect retcode: 0
 SQLFreeStmt retcode: 0
 SQLDisconnect retcode: 0
 SQLFreeConnect retcode: 0
 SQLFreeEnv retcode: 0

 speccolm ending
====== END COMPACT PROT;
====== BEGIN COMPACT PROT Lo.speccolm.t;

PRODUCT : SAP DB C-PreComp Runtime
VERSION : X.X.X
BUILD   : XXX-XXX-XXX

DATASOURCE:
SESSION   : 1;    
SQLMODE   : INTERN
SERVERDB  : 
SERVERNODE: 
CONNECT "ODBC              " IDENTIFIED BY :A   ISOLATION LEVEL 1
KERNEL FEATURES :
OPTIMIZED STREAMS
START:
END:

CREATE TABLE TABSPECCOL1 ("MNR" INTEGER, "NAME" CHAR(30))
START:
END:

CREATE TABLE TABSPECCOL2 ("MNR" INTEGER KEY, "NAME" CHAR(30))
START:
END:

CREATE TABLE TABSPECCOL3 ("MNR" INTEGER, "NAME" CHAR(30), PRIMARY KEY (NAME))
START:
END:

EXISTS TABLE "ODBC"."TABSPECCOL1"
START:
END:

SELECT NUM(1) SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, 
SCALE, NUM(2) PSEUDO_COLUMN, CODETYPE FROM SYSODBC.COLUMNS WHERE KEY_SEQ IS NOT 
NULL AND TABLE_OWNER = 'ODBC' AND TABLE_NAME = 'TABSPECCOL1'
PARSE  : CMD   :  
mfIndex init      : 1
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT NUM(1) SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, 
SCALE, NUM(2) PSEUDO_COLUMN, CODETYPE FROM SYSODBC.COLUMNS WHERE KEY_SEQ IS NOT 
NULL AND TABLE_OWNER = 'ODBC' AND TABLE_NAME = 'TABSPECCOL1'
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLCODE:  100        Row not found
SQLRESULTNAME  : SQL_CURSOR_0001
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

SELECT NUM(1) SCOPE, 'SYSKEY' COLUMN_NAME, 99 DATA_TYPE, 'CHAR' TYPE_NAME, 
NUM(8) PRECISION, NUM(8) "LENGTH", NULL SCALE, NUM(2) PSEUDO_COLUMN, 'BYTE' 
CODETYPE FROM SYSDBA.DUAL ORDER BY 1
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT NUM(1) SCOPE, 'SYSKEY' COLUMN_NAME, 99 DATA_TYPE, 'CHAR' TYPE_NAME, 
NUM(8) PRECISION, NUM(8) "LENGTH", NULL SCALE, NUM(2) PSEUDO_COLUMN, 'BYTE' 
CODETYPE FROM SYSDBA.DUAL ORDER BY 1
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
WARNING: W-------8------- 
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    0     2           0     1           0    
2    7     129         2     6           0    
3    0     2           0     2           0    
4    7     129         2     4           0    
5    1     4           0     1           0    
6    1     4           0     1           0    
7    0     2           4     1           0    
8    0     2           0     1           0    
9    7     5           2     4           0    
OUTPUT :    1: SCOPE                           :                   1
OUTPUT :    2: COLUMN_NAME                     : SYSKEY
OUTPUT :    3: DATA_TYPE                       :                  99
OUTPUT :    4: TYPE_NAME                       : CHAR
OUTPUT :    5: PRECISION                       :                   8
OUTPUT :    6: LENGTH                          :                   8
OUTPUT :    7: SCALE                           :  IS NULL
OUTPUT :    8: PSEUDO_COLUMN                   :                   2
OUTPUT :    9: CODETYPE                        : BYTE
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        Row not found
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

EXISTS TABLE "ODBC"."TABSPECCOL2"
START:
END:

SELECT NUM(1) SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, 
SCALE, NUM(2) PSEUDO_COLUMN, CODETYPE FROM SYSODBC.COLUMNS WHERE KEY_SEQ IS NOT 
NULL AND TABLE_OWNER = 'ODBC' AND TABLE_NAME = 'TABSPECCOL2'
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT NUM(1) SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, 
SCALE, NUM(2) PSEUDO_COLUMN, CODETYPE FROM SYSODBC.COLUMNS WHERE KEY_SEQ IS NOT 
NULL AND TABLE_OWNER = 'ODBC' AND TABLE_NAME = 'TABSPECCOL2'
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    0     2           0     1           0    
2    7     129         2     32          0    
3    0     2           0     2           0    
4    7     129         2     15          0    
5    1     4           0     4           0    
6    1     4           0     4           0    
7    0     2           0     3           0    
8    0     2           0     1           0    
9    7     9           2     8           0    
OUTPUT :    1: SCOPE                           :                   1
OUTPUT :    2: COLUMN_NAME                     : MNR
OUTPUT :    3: DATA_TYPE                       :                   4
OUTPUT :    4: TYPE_NAME                       : INTEGER
OUTPUT :    5: PRECISION                       :                  10
OUTPUT :    6: LENGTH                          :                   4
OUTPUT :    7: SCALE                           :                   0
OUTPUT :    8: PSEUDO_COLUMN                   :                   2
OUTPUT :    9: CODETYPE                        : 
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        Row not found
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

EXISTS TABLE "ODBC"."TABSPECCOL3"
START:
END:

SELECT NUM(1) SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, 
SCALE, NUM(2) PSEUDO_COLUMN, CODETYPE FROM SYSODBC.COLUMNS WHERE KEY_SEQ IS NOT 
NULL AND TABLE_OWNER = 'ODBC' AND TABLE_NAME = 'TABSPECCOL3'
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT NUM(1) SCOPE, COLUMN_NAME, DATA_TYPE, TYPE_NAME, PRECISION, LENGTH, 
SCALE, NUM(2) PSEUDO_COLUMN, CODETYPE FROM SYSODBC.COLUMNS WHERE KEY_SEQ IS NOT 
NULL AND TABLE_OWNER = 'ODBC' AND TABLE_NAME = 'TABSPECCOL3'
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLRESULTNAME  : SQL_CURSOR_0001
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
PARSE  : CMD   :  
WARNING: W--3------------ 
PARSEID: OUTPUT:
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARAMETER DESCRIPTION:
Application            Kernel
Nr.  Type  Length      Type  Length      Fraction 
---------------------------------------------
1    0     2           0     1           0    
2    7     129         2     32          0    
3    0     2           0     2           0    
4    7     129         2     15          0    
5    1     4           0     4           0    
6    1     4           0     4           0    
7    0     2           0     3           0    
8    0     2           0     1           0    
9    7     9           2     8           0    
OUTPUT :    1: SCOPE                           :                   1
OUTPUT :    2: COLUMN_NAME                     : NAME
OUTPUT :    3: DATA_TYPE                       :                   1
OUTPUT :    4: TYPE_NAME                       : CHAR
OUTPUT :    5: PRECISION                       :                  30
OUTPUT :    6: LENGTH                          :                  30
OUTPUT :    7: SCALE                           :  IS NULL
OUTPUT :    8: PSEUDO_COLUMN                   :                   2
OUTPUT :    9: CODETYPE                        : ASCII
SQLERRD(INDEX_3) : 1          
START:
END:

MASS STATEMENT :  
FETCH "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
SQLCODE:  100        Row not found
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

EXISTS TABLE "ODBC"."TABSPECCOL3"
START:
END:

SELECT NUM(1) SCOPE, 'SYSKEY' COLUMN_NAME, 99 DATA_TYPE, 'CHAR' TYPE_NAME, 
NUM(8) PRECISION, NUM(8) "LENGTH", NULL SCALE, NUM(2) PSEUDO_COLUMN, 'BYTE' 
CODETYPE FROM SYSDBA.DUAL WHERE NULL<>NULL
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT NUM(1) SCOPE, 'SYSKEY' COLUMN_NAME, 99 DATA_TYPE, 'CHAR' TYPE_NAME, 
NUM(8) PRECISION, NUM(8) "LENGTH", NULL SCALE, NUM(2) PSEUDO_COLUMN, 'BYTE' 
CODETYPE FROM SYSDBA.DUAL WHERE NULL<>NULL
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLCODE:  100        Row not found
SQLRESULTNAME  : SQL_CURSOR_0001
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

EXISTS TABLE "ODBC"."TABSPECCOL1"
START:
END:

SELECT NUM(1) SCOPE, 'SYSKEY' COLUMN_NAME, 99 DATA_TYPE, 'CHAR' TYPE_NAME, 
NUM(8) PRECISION, NUM(8) "LENGTH", NULL SCALE, NUM(2) PSEUDO_COLUMN, 'BYTE' 
CODETYPE FROM SYSDBA.DUAL WHERE NULL<>NULL
PARSE  : CMD   :  
mfIndex init      : 2
PARSEID: OUTPUT:
START:
END:

SELECT NUM(1) SCOPE, 'SYSKEY' COLUMN_NAME, 99 DATA_TYPE, 'CHAR' TYPE_NAME, 
NUM(8) PRECISION, NUM(8) "LENGTH", NULL SCALE, NUM(2) PSEUDO_COLUMN, 'BYTE' 
CODETYPE FROM SYSDBA.DUAL WHERE NULL<>NULL
EXECUTE: CMD   :  
PARSEID: INPUT :
mfIndex init      : 2
mfIndex init      : 2
SQLCODE:  100        Row not found
SQLRESULTNAME  : SQL_CURSOR_0001
START:
END:

CLOSE "SQL_CURSOR_0001"
PARSE  : CMD   :  
PARSEID: OUTPUT:
START:
END:

CLOSE "SQL_CURSOR_0001"
EXECUTE: CMD   :  
PARSEID: INPUT :
PARSEID: SELECT:
mfIndex init      : 2
mfIndex restore   : 2
START:
END:
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :
mfIndex delete    : 2
 
PARSEID: DROP  :
START:
END:
 
SQCDROPPARSID     
PARSEID:       :

DROP TABLE TABSPECCOL1
START:
END:

DROP TABLE TABSPECCOL2
START:
END:

DROP TABLE TABSPECCOL3
START:
END:

S1: DISCONNECT 
 
SQCFINISH         
====== END COMPACT PROT;
