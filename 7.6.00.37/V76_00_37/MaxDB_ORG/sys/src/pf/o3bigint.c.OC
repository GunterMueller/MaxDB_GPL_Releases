/*!**********************************************************************

  module: o3bigint.c

  -----------------------------------------------------------------------

  responsible:  Holger Bischoff (D027451 - Holger.Bischoff@SAP-AG.de)

  special area: ODBC-Tests

  description: Conversion to and from sql for SQL_C_UBIGINT and
               SQL_C_SBIGINT.

  -----------------------------------------------------------------------

                         Copyright (c) 1998-2005 SAP AG




    ========== licence begin  GPL
    Copyright (c) 1998-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end




************************************************************************/

#define PROGNAME "o3bigint"

#define ODBCVER 0x0350

#include "o3util.c"
#include "o3cnvtab.h"

SQLLEN lenIndiNumeric = 0;
SQLLEN lenIndiChar    = 0;
SQLLEN lenIndiShort   = 0;
SQLLEN lenIndiBigint  = 0;

static SQL_NUMERIC_STRUCT numeric1 = {
    0, 0, 0, { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
               0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }};

static SWORD short1 = 17;

static bigint bigint1 = (bigint) 123;
static bigint bigint2 = (bigint) -123;
static bigint bigint3 = 5000000000;
static bigint bigint4 = -5000000000;
static bigint bigint5 = 0;

static valueStruct numericValues[] = {
#if 0    
    { &numeric1, SQL_C_NUMERIC, &lenIndiNumeric, sizeof(SQL_NUMERIC_STRUCT) },
    { &short1, SQL_C_SHORT, &lenIndiShort, sizeof(SWORD) },
#endif    
    { &bigint1, SQL_C_UBIGINT, &lenIndiBigint, sizeof(bigint) },
    { &bigint2, SQL_C_SBIGINT, &lenIndiBigint, sizeof(bigint) },
    { &bigint3, SQL_C_UBIGINT, &lenIndiBigint, sizeof(bigint) },
    { &bigint4, SQL_C_SBIGINT, &lenIndiBigint, sizeof(bigint) },
    { &bigint5, SQL_C_UBIGINT, &lenIndiBigint, sizeof(bigint) },
    
    { NULL, 0, NULL, 0 }
}; /* numericValues */

SQL_NUMERIC_STRUCT numericVal;
UCHAR  charVal[1024];
bigint bigintVal;

static testTypesStruct testTypeBigint[] = {
    { SQL_C_UBIGINT,
      &bigintVal, sizeof(bigint), &lenIndiBigint },
    { SQL_C_SBIGINT,
      &bigintVal, sizeof(bigint), &lenIndiBigint },

    { 0, 0 }
}; /* TestTypeBigint */


static testTabStruct testTab[] = {
#if 0    
#endif    
    { SQL_SMALLINT,
      "SQL_SMALLINT",
      "(n integer, col smallint)",
      numericValues,
      testTypeBigint},
    
    { SQL_INTEGER,
      "SQL_INTEGER",
      "(n integer, col integer)",
      numericValues,
      testTypeBigint},
    { SQL_REAL, "SQL_REAL",
      "(n integer, col real(7))",
      numericValues,
      testTypeBigint},
    { SQL_FLOAT, "SQL_FLOAT",
      "(n integer, col float)",
      numericValues,
      testTypeBigint},
    
    { SQL_DOUBLE, "SQL_DOUBLE",
      "(n integer, col double precision)",
      numericValues,
      testTypeBigint},
    { SQL_CHAR, "SQL_CHAR",
      "(n integer, col CHAR(100))",
      numericValues,
      testTypeBigint},

    { SQL_CHAR, "SQL_CHAR (VARCHAR)",
      "(n integer, col VARCHAR(100))",
      numericValues,
      testTypeBigint},

    { 0, NULL, NULL, NULL, NULL}
}; /* TestTab */


int MAIN(int argc, char **argv) {
    RETCODE retcode;
    HENV    henv  = SQL_NULL_HENV;
    HDBC    hdbc  = SQL_NULL_HDBC;

    StartTest( PROGNAME );

    /*    memset( &bigint3, 1, 8 ); */
    
    retcode = FullConnect( &henv, &hdbc );
    if (retcode != SQL_SUCCESS) {
        return 0;
    }; /* if */

    ConversionTest( hdbc, testTab );
    FullDisconnect( &henv, &hdbc );
    
    EndTest( PROGNAME );
 exit:
    return 0;
}; /* main */
