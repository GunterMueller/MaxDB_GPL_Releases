#===============================================================================
# dbanalyzer743.cfg
# -----------------
# This file contains the configuration for the performance analyzing tool
# DBanalyzer of SAPDB.
#===============================================================================

#===============================================================================
#                        GLOBAL SETTINGS
#===============================================================================
[Settings]
IGNOREERROR=100,400,500,600,-3016,-9806

#===============================================================================
#                        VIEW DEFINITIONS
#===============================================================================
[View]
Name  = SYSMON_TASK_DETAIL_OV
Query = SELECT TASKNAME, SUM (DISPATCHCNT) DISPATCHCNT, SUM (COMMANDCNT) COMMANDCNT, \
         SUM (PRIOCNT) PRIOCNT, SUM (TASKSELFSUSPCNT) TASKSELFSUSPCNT, \
         SUM (REGIONACCESSCNT) REGIONACCESSCNT, \
         SUM (SIOREADCNT) SIOREADCNT, SUM (SIOREADPAGES) SIOREADPAGES, \
         SUM (SIOREADTOTABSTIME ) SIOREADABSTIME, \
         SUM (SIOWRITECNT) SIOWRITECNT,  SUM (SIOWRITEPAGES) SIOWRITEPAGES, \
         SUM (SIOWRITETOTABSTIME) SIOWRITEABSTIME, \
         SUM (DIOREADCNT) DIOREADCNT, SUM (DIOREADPAGES) DIOREADPAGES, \
         SUM (DIOREADTOTABSTIME ) DIOREADABSTIME, \
         SUM (DIOREADTOTRELTIME ) DIOREADRELTIME, \
         SUM (DIOWRITECNT) DIOWRITECNT,  SUM (DIOWRITEPAGES) DIOWRITEPAGES, \
         SUM (DIOWRITETOTABSTIME) DIOWRITEABSTIME, \
         SUM (DIOWRITETOTRELTIME) DIOWRITERELTIME, \
         SUM (BKPREADCNT) BKPREADCNT, SUM (BKPREADPAGES) BKPREADPAGES, \
         SUM (BKPREADTOTABSTIME ) BKPREADABSTIME, \
         SUM (BKPREADTOTRELTIME ) BKPREADRELTIME, \
         SUM (BKPWRITECNT) BKPWRITECNT,  SUM (BKPWRITEPAGES) BKPWRITEPAGES, \
         SUM (BKPWRITETOTABSTIME) BKPWRITEABSTIME, \
         SUM (BKPWRITETOTRELTIME) BKPWRITERELTIME, \
         SUM (VSUSPENDCNT) VSUSPENDCNT, \
         SUM (VSUSPENDTOTRELTIME ) VSUSPENDRELTIME, \
         SUM (VSUSPENDTOTABSTIME ) VSUSPENDABSTIME, \
         SUM (VSLEEPCNT) VSLEEPCNT, \
         SUM (VSLEEPTOTRELTIME ) VSLEEPRELTIME, \
         SUM (VSLEEPTOTABSTIME ) VSLEEPABSTIME, \
         SUM (VWAITCNT) VWAITCNT, \
         SUM (VWAITTOTRELTIME ) VWAITRELTIME, \
         SUM (VWAITTOTABSTIME ) VWAITABSTIME, \
         SUM (COMMANDCNT) COMMCNT, \
         SUM (TOTCMDEXECUTETIME ) CMDEXECUTETIME, \
         SUM (TOTCMDWAITRELTIME ) CMDWAITRELTIME, \
         SUM (TOTCMDWAITABSTIME ) CMDWAITABSTIME  \
        FROM SYSMON_TASK_DETAIL \
        GROUP BY TASKNAME

[View]
Name 		= MONITOR_OMS_OV
InstanceType 	= LVC 
Query		= SELECT SUM ("CallCnt") "CallCnt", \
                         SUM ("AvgRuntime"*"CallCnt") "SumRuntime", \
                         SUM ("OMS_Deref") "OMS_Deref", \
                         SUM ("LC_Deref") "LC_Deref", \
                         SUM ("KeyDeref") "KeyDeref", \
                         SUM ("OMS_Store") "OMS_Store", \
                         SUM ("LC_Store") "LC_Store", \
                         SUM ("OMS_Delete") "OMS_Delete", \
                         SUM ("LC_Delete") "LC_Delete", \
                         SUM ("LC_Lock") "LC_Lock", \
                         SUM ("DerefIter") "DerefIter", \
                         SUM ("LC_LogHops") "LC_LogHops", \
                         SUM ("LC_LogHopsIter") "LC_LogHopsIter", \
                         SUM ("Exceptions") "Exceptions", \
                         SUM ("OutOfDateExceptions") "OutOfDateExceptions", \
                         SUM ("Timeouts") "Timeouts", \
                         SUM ("MaxWaitForNewConsView") "MaxWaitForNewConsView", \
                         SUM ("MinWaitForNewConsView") "MinWaitForNewConsView", \
                         SUM ("AvgWaitForNewConsView") "AvgWaitForNewConsView", \ 
                         SUM ("OutOfMemoryExceptions") "OutOfMemoryExceptions", \
                         SUM ("SubtransRollbacks") "SubtransRollbacks", \
                         SUM ("SubtransCommits") "SubtransCommits", \
                         SUM ("VarObjectLoad") "VarObjectLoad", \
                         SUM ("VarObjectStore") "VarObjectStore", \
                         SUM ("OMS_Terminate") "OMS_Terminate", \
                         SUM ("OmsCacheSize") "OmsCacheSize" \
                  FROM MONITOR_OMS

&if $TYPE != "-light"
[View]
Name		 = CLASSCONTAINERS_OV
InstanceType = LVC 
Query 		 = SELECT COUNT (DISTINCT SCHEMA) SCHEMA_COUNT, \
         	 	      COUNT (CONTAINERNO) CONTAINER_COUNT, \
		              SUM (PAGECOUNT) PAGECOUNT, \
       		          SUM (FREE_PAGES) FREE_PAGES, \
                      SUM (KEY_LEAF_PAGES) KEY_LEAF_PAGES, \
                      SUM ("OCCUPANCY (%)" * PAGECOUNT) / SUM (PAGECOUNT) OCCUPANCY, \
                      SUM (EMPTY_PAGES) EMPTY_PAGES \
               FROM classcontainers \
               WHERE class_name IS NOT NULL
&endif

[View]
Name		 = OMS_VERSIONS_OV
InstanceType = LVC 
Query		 = SELECT COUNT (*) VERSION_COUNT , MAX (AGE_IN_HOURS) MAX_AGE_IN_HOURS, \
                      AVG (AGE_IN_HOURS) AVG_AGE_IN_HOURS, SUM ( HEAP_USAGE )/1024/1024 SUM_HEAP_USAGE \
               FROM OMS_VERSIONS

[View]
Name		 = OMS_HEAP_STATISTICS_OV
InstanceType = LVC 
Query		 = SELECT SUM (TOTAL_HEAP_USAGE)	TOTAL_HEAP_USAGE, \
                      SUM (RESERVED)			RESERVED, \
                      SUM (ALLOC_CNT)			ALLOC_CNT, \
       		          SUM (FREE_CNT)			FREE_CNT, \
        		      SUM (SYSTEM_ALLOC_CNT)	SYSTEM_ALLOC_CNT, \
        		      SUM (SYSTEM_FREE_CNT)		SYSTEM_FREE_CNT, \
        		      SUM (TOTAL_SPINLOCKS)		TOTAL_SPINLOCKS, \
        		      SUM (COLLISIONS)			COLLISIONS, \
        		      SUM (TOTAL_SPINLOOPS)		TOTAL_SPINLOOPS, \
        		      SUM (TOTAL_YIELDLOOPS)	TOTAL_YIELDLOOPS, \
        		      MAX (MAX_SPINLOOPS)		MAX_SPINLOOPS, \
        		      MAX (MAX_YIELDLOOPS)		MAX_YIELDLOOPS \
               FROM OMS_HEAP_STATISTICS

[View]
Name		 = OMS_EMERGENCY_HEAP_STATISTICS_OV
InstanceType = LVC 
Query		 = SELECT TOTAL_HEAP_USAGE	TOTAL_HEAP_USAGE, \
                      RESERVED			RESERVED \
               FROM OMS_HEAP_STATISTICS \
               WHERE DESCRIPTION LIKE 'EMERGENCY HEAP'

[View]
Name         = SYSMON_TASK_DETAIL_USER_AR
InstanceType = LVC 
Query        = SELECT DBPID                           DBPID,                \
                      APPL_PROCESS                    APPL_PID,             \
                      STATEDESC                       STATEDESC,            \
                      DISPATCHCNT                     DISPATCHCNT,          \
                      REGIONACCESSCNT                 REGIONACCESSCNT,      \
                      COMMANDCNT                      COMMCNT,              \
                      TOTCMDEXECUTETIME               TOTCMDEXECUTETIME,    \
                      VSUSPENDCNT                     VSUSPENDCNT,          \
                      VSUSPENDTOTABSTIME              VSUSPENDABSTIME,		\
                      VWAITCNT                        VWAITCNT,             \
                      VWAITTOTABSTIME                 VWAITABSTIME,         \
                      SIOREADCNT + DIOREADCNT		  READCNT,              \
                      SIOWRITECNT + DIOWRITECNT		  WRITECNT,             \
                      SIOREADTOTABSTIME               SIOREADTOTABSTIME,    \
                      DIOREADTOTABSTIME               DIOREADTOTABSTIME,    \
                      OMSCOMROUTINENAME               OMSCOMROUTINENAME     \
               FROM SYSMON_TASK_DETAIL                                      \
               WHERE TASKNAME = 'User' AND APPL_PROCESS > 0 AND NOT STATEDESC LIKE 'Connect wait'

[View]
Name         = SYSMON_TASK_DETAIL_USER_AR
InstanceType = OLTP 
Query        = SELECT DBPID                           DBPID,                \
                      APPL_PROCESS                    APPL_PID,             \
                      STATEDESC                       STATEDESC,            \
                      DISPATCHCNT                     DISPATCHCNT,          \
                      REGIONACCESSCNT                 REGIONACCESSCNT,      \
                      COMMANDCNT                      COMMCNT,              \
                      TOTCMDEXECUTETIME               TOTCMDEXECUTETIME,    \
                      VSUSPENDCNT                     VSUSPENDCNT,          \
                      VSUSPENDTOTABSTIME              VSUSPENDABSTIME,		\
                      VWAITCNT                        VWAITCNT,             \
                      VWAITTOTABSTIME                 VWAITABSTIME,         \
                      SIOWRITECNT + DIOWRITECNT		  WRITECNT,             \
                      SIOREADCNT + DIOREADCNT		  READCNT,              \
                      SIOREADTOTABSTIME               SIOREADTOTABSTIME,    \
                      DIOREADTOTABSTIME               DIOREADTOTABSTIME,    \
	        		  PARSEID                         = '?'                 \
               FROM SYSMON_TASK_DETAIL                                      \
               WHERE TASKNAME = 'User' AND APPL_PROCESS > 0 AND NOT STATEDESC LIKE 'Connect wait'
Maxversion   = 7.4.3.30

[View]
Name         = SYSMON_TASK_DETAIL_USER_AR
InstanceType = OLTP 
Query        = SELECT DBPID                           DBPID,                \
                      APPL_PROCESS                    APPL_PID,             \
                      STATEDESC                       STATEDESC,            \
                      DISPATCHCNT                     DISPATCHCNT,          \
                      REGIONACCESSCNT                 REGIONACCESSCNT,      \
                      COMMANDCNT                      COMMCNT,              \
                      TOTCMDEXECUTETIME               TOTCMDEXECUTETIME,    \
                      VSUSPENDCNT                     VSUSPENDCNT,          \
                      VSUSPENDTOTABSTIME              VSUSPENDABSTIME,		\
                      VWAITCNT                        VWAITCNT,             \
                      VWAITTOTABSTIME                 VWAITABSTIME,         \
                      SIOWRITECNT + DIOWRITECNT		  WRITECNT,             \
                      SIOREADCNT + DIOREADCNT		  READCNT,              \
                      SIOREADTOTABSTIME               SIOREADTOTABSTIME,    \
                      DIOREADTOTABSTIME               DIOREADTOTABSTIME,    \
                      PARSEID                         PARSEID               \
               FROM SYSMON_TASK_DETAIL,RUNNING_PARSEIDS                     \
               WHERE TASKNAME = 'User' AND NOT STATEDESC LIKE 'Connect wait' AND APPL_PROCESS > 0 AND TASKID(+) = DBPID 
Minversion   = 7.4.3.31

[View]
Name		 = GARBCOLLS_ACTIVITIES_OV
InstanceType = LVC 
Query		 = SELECT SUM(ACTIVATE_COUNT)             ACTIVATE_COUNT, \
                      SUM(DELETE_OBJ)                 OBJECTS_DELETED,\
					  SUM(RELHIST_NORMAL)             RELHIST_NORMAL  \
					  FROM GARBAGECOLLECTOR_STATISTICS

[View]
Name		 = NUM_ACTIVE_GARBCOLLS_OV
InstanceType = LVC 
Query		 = SELECT COUNT (*) NUM_ACTIVE_GARBCOLLS \
					  FROM GARBAGECOLLECTOR_STATISTICS                                      \
					  WHERE ACTIVE = 'YES'
[View]
Name		 = NUM_ACTIVE_DATAWRITER_OV
Query		 = SELECT COUNT (*) NUM_ACTIVE_DATAWRITER \
					  FROM SYSMON_TASK_DETAIL                                      \
					  WHERE TASKNAME = 'Datawr.' AND STATEDESC NOT LIKE 'No-Work%'

[View]
Name		 = NUM_CONNECTED_USERTASKS_OV
Query		 = SELECT COUNT (*) NUM_CONNECTED_USERTASKS  FROM SYSMON_TASK_DETAIL_USER_AR

[View]
Name		 = NUM_CANCELLED_TASKS_OV
Query		 = SELECT COUNT (*) NUM_CANCELLED_TASK \
					  FROM SYSMON_TASK             \
					  WHERE CANCEL_FLAG = '!'
[View]
Name		 = NUM_RUNNABLE_USERTASKS_OV
Query		 = SELECT COUNT (*) NUM_RUNNABLE_USERTASKS \
					  FROM SYSMON_RUNNABLE           \
               WHERE TASKTYPE = 'User' AND NOT (STATEDESC LIKE 'Running' OR STATEDESC LIKE 'DcomObjCalled') 
[View]
Name		 = NUM_RUNNING_USERTASKS_OV
Query		 = SELECT COUNT (*) -1 NUM_RUNNING_USERTASKS \
					  FROM SYSMON_US_ACTIVE           \
               WHERE TASKTYPE = 'User' AND     (STATEDESC LIKE 'Running' OR STATEDESC LIKE 'DcomObjCalled') 

[View]
Name		 = NUM_ACTIVE_USERTASKS_OV
Query		 = SELECT COUNT (*) -1 NUM_ACTIVE_USERTASKS \
					  FROM SYSMON_US_ACTIVE

[View]
Name		 = NUM_VBEGEXCL_USERTASKS_OV
Query		 = SELECT COUNT (*) NUM_VBEGEXCL_USERTASKS \
					  FROM SYSMON_US_ACTIVE            \
               WHERE STATEDESC = 'Vbegexcl'

[View]
Name		 = NUM_VWAIT_USERTASKS_OV
Query		 = SELECT COUNT (*) NUM_VWAIT_USERTASKS \
					  FROM SYSMON_US_ACTIVE         \
               WHERE STATEDESC = 'Vwait'

[View]
Name         = SPINLOCKS_OV
Query        = SELECT  SUM (LOCKS)				LOCKS,    \
                       SUM (COLLISIONS)			COLLISIONS,    \
   				       SUM (TOTAL_SPIN_LOOPS)	TOTAL_SPIN_LOOPS, \
					   SUM (TOTAL_YIELD_LOOPS)  TOTAL_YIELD_LOOPS, \
   				       MAX (MAX_SPIN_LOOPS)		MAX_SPIN_LOOPS, \
					   MAX (MAX_YIELD_LOOPS)	MAX_YIELD_LOOPS \
               FROM SPINLOCKS 

[View]
Name         = SPINLOCKS_AR
Query        = SELECT SPINLOCK_NAME                   SPINLOCK_NAME,        \
                      LOCKS                           LOCKS,		        \
                      COLLISIONS                      COLLISIONS,	        \
                      TOTAL_SPIN_LOOPS			      TOTAL_SPIN_LOOPS,     \
                      TOTAL_YIELD_LOOPS			      TOTAL_YIELD_LOOPS,    \
					  MAX_YIELD_LOOPS				  MAX_YIELD_LOOPS       \
               FROM SPINLOCKS \
			   WHERE COLLISIONS > 0

[View]
Name         = SYSMON_REGION_AR
Query        = SELECT REGID                           REGID,                \
                      REGIONNAME                      REGIONNAME,           \
                      ACCESSES                        ACCESSES,		        \
					  OWNERDBPID                      OWNERDBPID,           \
                      COLLISIONS                      COLLISIONS,	        \
                      WAITS			                  WAITS			        \
               FROM SYSMON_REGION                                           \
               WHERE REQSTDBPID  IS NULL AND COLLISIONS > 1

[View]
Name         = OMSVDIR_REGION_OV
InstanceType = LVC 
Query        = SELECT ACCESSES                   ACCESSES,		        \
                      COLLISIONS                 COLLISIONS,	        \
                      WAITS                      WAITS			        \
               FROM SYSMON_REGION                                       \
               WHERE REGIONNAME = 'OMSVDIR' AND REQSTDBPID  IS NULL
Maxversion   = 7.4.3.31

[View]
Name         = OMSVDIR_REGION_OV
InstanceType = LVC 
Query        = SELECT SUM(ACCESSES)                   ACCESSES,		        \
                      SUM(COLLISIONS)                 COLLISIONS,	        \
                      SUM(WAITS)                      WAITS			        \
               FROM SYSMON_REGION                                           \
               WHERE REGIONNAME LIKE 'OMSVD%' AND REQSTDBPID  IS NULL
Minversion   = 7.4.3.32

[View]
Name         = MONITOR_OMS_AR
InstanceType = LVC 
Query        = SELECT "Methodname"                   OMS_METHOD_NAME, \
                       SUM ("CallCnt")               OMS_TOTAL_METHOD_CALLS, \
                       SUM ("AvgRuntime")            OMS_TOTAL_METHOD_AVG_RUNTIME, \
                       SUM ("Timeouts")			     OMS_TIMEOUTS,    \
                       SUM ("OMS_Terminate")		 OMS_TERMINATE,    \
   				       SUM ("MaxWaitForNewConsView") MAX_WAIT_FOR_CONS_VIEW, \
					   SUM ("MinWaitForNewConsView") "MinWaitForNewConsView", \
					   SUM ("AvgWaitForNewConsView") AVG_WAIT_FOR_CONS_VIEW \ 
               FROM MONITOR_OMS                                         \
               WHERE "OMS_Terminate" > 0 OR "Timeouts" > 0 \
               GROUP BY "Methodname"

[View]
Name  = UPDSTATWANTED_OV
Query = SELECT COUNT (DISTINCT TABLENAME) NUM_SYSUPDSTATWANTED \
        FROM SYSUPDSTATWANTED

[View]
Name  = NUM_TREELOCK_WAITERS_OV
Query = SELECT COUNT (*) NUM_TREELOCK_WAITERS \
        FROM TREELOCKS WHERE MODE <> 'LOCK'

[View]
Name         = REGION_BLOCKERS_AR
Query		 = SELECT REGIONNAME                      REGIONNAME,          \
                      OWNERDBPID                      OWNERDBPID,          \  
		              COUNT(*)-1                      NUM_WAITERS          \
               FROM SYSMON_REGION,SYSMON_TASK_DETAIL                       \
               WHERE OWNERDBPID=DBPID                                      \
                     GROUP BY REGIONNAME,OWNERDBPID

[View]
Name  = NUM_REGION_WAITERS_OV
Query = SELECT COUNT (*) NUM_REGION_WAITERS \
        FROM SYSMON_REGION                  \
        WHERE REQSTDBPID IS NOT NULL

[View]
Name         = LOCK_WAITERS_AR
Query        = SELECT LR.PROCESS           WAITING_TASK,      \
                      LR.APPLPROCESS       WAITING_APPL,      \
                      LR.REQMODE           WAITING_REQMODE,   \
                      LR.TRANSCOUNT        WAITING_TRANS,     \
                      LH.PROCESS           HOLDER_TASK,       \
                      LH.APPLPROCESS       HOLDER_APPL,       \
                      LH.LOCKMODE          HOLER_LOCKMODE,    \
                      S.STATEDESC          HOLDER_TASK_STATE, \
                      LH.TABLENAME         TABLENAME,         \
					  LH.ROWIDHEX          ROWIDHEX           \  
               FROM   LOCK_HOLDER LH, LOCK_REQUESTOR LR, SYSMON_TASK S \
               WHERE  LR.TABLEID   = LH.TABLEID AND \
			          (LR.ROWIDHEX = LH.ROWIDHEX     OR \
					   LR.REQMODE  = 'sys_exclusive' OR  LH.LOCKMODE  = 'sys_exclusive'    OR \
					   (LR.REQMODE = 'tab_exclusive' AND LH.LOCKMODE <> 'sys_share' )      OR \
                       (LH.LOCKMODE= 'tab_exclusive' AND LR.REQMODE  <> 'sys_share')       OR \
                       (LR.REQMODE = 'tab_share    ' AND LH.LOCKMODE  = 'row_exclusive')   OR \
					   (LR.REQMODE = 'row_exclusive' AND LH.LOCKMODE  = 'tab_share' ))     AND \
			           LH.PROCESS = S.DBPID \
               UNION ALL                                      \
               SELECT DISTINCT LR.PROCESS  WAITING_TASK,      \
                      LR.APPLPROCESS       WAITING_APPL,      \
                      LR.REQMODE           WAITING_REQMODE,   \
                      LR.TRANSCOUNT        WAITING_TRANS,     \
                      LH.PROCESS           HOLDER_TASK,       \
                      LH.APPLPROCESS       HOLDER_APPL,       \
                      LH.LOCKMODE          HOLER_LOCKMODE,    \
                      S.STATEDESC          HOLDER_TASK_STATE, \
                      LH.TABLENAME         TABLENAME,         \
                      NULL                 ROWIDHEX           \               
               FROM   LOCK_HOLDER LH, LOCK_REQUESTOR LR, SYSMON_TASK S \  
               WHERE  LR.ROWIDHEX is NULL AND LR.TABLEID = LH.TABLEID AND LH.PROCESS = S.DBPID 

[View]
Name         = OLD_CONSISTENTVIEWS_AR
InstanceType = LVC 
Query        = SELECT DISTINCT DECODE(O.TRANSVERSION, NULL, 0, 1) IS_OMS_VER, \
                      PROCESS                         TASK_ID,                    \
                      APPLPROCESS                     APPL_PID,                   \
  			          HEAP_USAGE                      HEAP_USAGE,                 \
			          OPENTIME                        OPENTIME,                   \
	        		  CANCELLED                       CANCELLED,                  \
    			      C.CONSISTENTVIEW                CONSISTENTVIEW,             \
                      hour(timediff(timestamp, timestamp(OPENDATE, OPENTIME))) AGE_IN_HOURS \
               FROM OMS_VERSIONS  O, CONSISTENTVIEWS C, TRANSACTIONS T            \
               WHERE O.TRANSVERSION (+)  = C.CONSISTENTVIEW  AND                  \
                     T.CONSISTENTVIEW(+) = C.CONSISTENTVIEW  AND                  \  
                     hour(timediff(timestamp, timestamp(OPENDATE, OPENTIME)))> 3

[View]
Name         = NUM_HISTORY_PAGES_OV
InstanceType = LVC 
Query        = SELECT SUM (PAGECOUNT) NUM_HISTORY_PAGES \
               FROM HISTORYINFO

[View]
InstanceType = OLTP
Name         = SYSTEM_HEAP_USAGE_OV_742B28
Query        = SELECT ALLOCATOR          ALLOCATOR,      \
                      USED_BYTES         USED_BYTES      \
               FROM ALLOCATORSTATISTIC \
			   WHERE ALLOCATOR='SystemHeap'

[View]
InstanceType = LVC 
Name         = SYSTEM_HEAP_USAGE_OV_742B28
Query        = SELECT ALLOCATOR          ALLOCATOR,      \
                      USED_BYTES         USED_BYTES,     \
                      ALLOCATED_BYTES    ALLOCATED_BYTES \
               FROM ALLOCATORSTATISTIC \
			   WHERE ALLOCATOR='SystemHeap' OR ALLOCATOR='LVCMem_BlockAllocator' OR ALLOCATOR='OMS_Allocator'

[View]
Name  = NUM_TABS_FEW_SAMPLE_ROWS_OV
Query = SELECT COUNT (*) NUM_TABS_FEW_SAMPLE_ROWS \
        FROM TABLES TAB, OPTIMIZERSTATISTICS OPT               \ 
        WHERE TAB.TABLENAME  = OPT.TABLENAME AND               \
		      TAB.TYPE       = 'TABLE'       AND OPT.COLUMNNAME = 'TABLE STATISTICS' AND \
			  TAB.SAMPLE_ROWS <= 20000       AND TAB.SAMPLE_PERCENT IS NULL          AND \
              OPT.DISTINCTVALUES > 1000000

[View]
Name  = TABLES_UPDSTATWANTED_OV
Query = SELECT DISTINCT TABLENAME TABLENAME, \
               OWNER              OWNER      \
        FROM SYSUPDSTATWANTED

[View]
Name  = FEW_SAMPLES_ROWS_OV
Query = SELECT TAB.TABLENAME                       TABLENAME,  \
               TAB.OWNER                           OWNER,      \
               TAB.SAMPLE_ROWS                     SAMPLE_ROWS,\
               OPT.DISTINCTVALUES                  ROW_COUNT,  \
			   OPT.PAGECOUNT                       PAGE_COUNT  \
        FROM TABLES TAB, OPTIMIZERSTATISTICS OPT               \ 
        WHERE TAB.TABLENAME  = OPT.TABLENAME AND               \
		      TAB.TYPE       = 'TABLE'       AND OPT.COLUMNNAME = 'TABLE STATISTICS' AND \
			  TAB.SAMPLE_ROWS <= 20000       AND TAB.SAMPLE_PERCENT IS NULL          AND \
              OPT.DISTINCTVALUES > 1000000

[View]
InstanceType = LVC 
Name         = OBJ_LOCK_BLOCKERS_AR
Query		 = SELECT OBJECTID                       OBJECTID,             \
                      CLASS_ID                       CLASS_ID,             \
                      MAX(HOLDERTASKID)              HOLDERTASKID,         \  
		              COUNT(*)-1                     NUM_WAITERS           \
               FROM  OBJECTLOCKS                       \
               GROUP BY OBJECTID, CLASS_ID
Minversion   = 7.4.3.39

[View]
Name         = USER_TASK_SWITCHES_OV
Query        = SELECT SUM(DISPATCHCNT)   US_TASK_DISPATCHES, \
                      SUM(TASKSWITCHCNT) US_TASK_SWITCHES \
               FROM SYSMON_UKTHREAD                 \
               WHERE TASKCLUSTER LIKE '%US%'
Minversion   = 7.4.3.36


#===============================================================================
#                        CONSTANT DEFINITIONS
#===============================================================================
[Constant]
ID                  = IO_PER_SEC          
Value               = 50

[Constant]
ID                  = INTERVAL    
Value               = 900

[Constant]
ID                  = SNAPSHOTDURATION
Value               = 900

[Constant]
ID                  = MAX_RCV_RPL_TIME          
Value               = 100

[Constant]
ID                  = SQL_CMDS_PRODUCED_BY_DBANALYZER_LVC
Value               = 355

[Constant]
ID                  = SQL_CMDS_PRODUCED_BY_DBANALYZER_OLTP
Value               = 250

#===============================================================================
#                        ENVIRONMENT DEFINITIONS
#===============================================================================
[Environment]
ID              = INSTANCE_NAME
Label           = Name of instance
Class           = Hardware
Table           = SERVERDBS
Column          = SERVERDB
Type            = STRING
Description     = 

[Environment]
ID              = INSTANCE_NODE
Label           = node where instance is running
Class           = Hardware
Table           = SERVERDBS
Column          = SERVERNODE
Type            = STRING
Description     = 

[Environment]
ID              = RESTARTED_DATE
Label           = 
Class           = Restart
Table           = DBTIMES
Column          = RESTART_DATE
Type            = STRING
Description     = 

[Environment]
ID              = RESTARTED_TIME
Label           = 
Class           = Restart
Table           = DBTIMES
Column          = RESTART_TIME
Type            = STRING
Description     = 

[Environment]
ID              = VTRACE_STATE
Label           = 
Class           = state
Table           = INFO_STATE
Column          = "Kernel Trace"
Type            = STRING
Description     = 

[Environment]
ID              = RUNTIME_ENVIRONMENT
Label           = Runtime version
Class           = Hardware
Table           = VERSIONS
Column          = RUNTIMEENVIRONMENT
Type            = STRING
Description     = 

[Environment]
ID              = MAXCPU
Label           = Number of CPUs
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='MAXCPU'
Description     = 

[Environment]
ID              = MAXUSERTASKS
Label           = Maximim number of user tasks configured
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='MAXUSERTASKS'
Description     = 

[Environment]
ID              = TASKCLUSTER
InstanceType	= LVC 
Label           = Usertasks per Thread
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='_TASKCLUSTER_02'
Type            = STRING
Description     = 

[Environment]
ID              = NUM_DEVSPACES
Label           = Number of data volumes
Class           = Hardware
Table           = SYSDBA.CONFIGURATION
Column          = NUMERIC_VALUE
Condition		= DESCRIPTION='No of DATA DEVSPACEs'
Description     = 

[Parameter]
ID              = MAX_IDLE_IO_ALL_DEVS 
Label           =
Class           = RTE
Formula         = INTERVAL * NUM_DEVSPACES * IO_PER_SEC / 20 
Description     =

[Environment]
ID              = LOG_QUEUE_PAGES
Label           = Size of the Log Queue
Unit            = -
Class           = Logging
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Log queue pages'
Description     = 

[Environment]
ID              = GC_COUNT
InstanceType	= LVC 
Label           = GC_COUNT :
Class           = Configuration
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='_MAXGARBAGE_COLL'
Description     = 

[Environment]
ID              = OMS_HEAP_LIMIT
InstanceType	= LVC 
Label           = OMS_HEAP_LIMIT :
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='OMS_HEAP_LIMIT'
Description     = 
 
[Environment]
ID              = OMS_HEAP_COUNT
InstanceType	= LVC 
Label           = OMS_HEAP_COUNT :
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='OMS_HEAP_COUNT'
Description     = 

[Environment]
ID              = REQUEST_TIMEOUT
InstanceType	= LVC 
Label           = Request timeout
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='REQUEST_TIMEOUT'
Description     = 

[Environment]
ID              = NUM_TABS_FEW_SAMPLE_ROWS
Label           = Number of tables with few sample rows: 
Class           = Strategy
Table           = NUM_TABS_FEW_SAMPLE_ROWS_OV
Column          = NUM_TABS_FEW_SAMPLE_ROWS
Description     = 

[Environment]
ID              = MAXLOCKS
InstanceType	= LVC 
Label           = parameter max locks
Class           = Hardware
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='MAXLOCKS'
Description     = 

[Environment]
ID              = RESTART_TIME
Label           = Restart time, savepoint distance
Class           = Configuration
Table           = DBPARAMETERS
Column          = VALUE
Condition       = DESCRIPTION='_RESTART_TIME'
Description     = 
#===============================================================================
#                        PARAMETER DEFINITIONS
#===============================================================================
[Parameter]
ID              = NUM_SYSUPDSTATWANTED
Label           = Number of tables where update statistics is required: 
Class           = Strategy
Table           = UPDSTATWANTED_OV
Column          = NUM_SYSUPDSTATWANTED
Description     = 
&if $TYPE = "-light"
Startup         = 1
&endif

[Parameter]
ID              = NUM_BAD_INDEXES
Label           = Number of bad indexes: 
Class           = Strategy
Table           = INFO_STATE
Column          = Bad Indexes
Description     = 
&if $TYPE = "-light"
Startup         = 1
&endif

#-------------------------------------------------------------------------------
#                              Caches
#-------------------------------------------------------------------------------

#--- Data Cache

[Parameter]
ID              = DATA_CACHE_ACCESSES_ABS
Label           = 
Unit            = -
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache accesses'
Description     = 

[Parameter]
ID              = DC_Acc
Label           = Data cache accesses
Unit            = -
Class           = Caches
Protocol        = 1
Protocolinfo    = S
Formula         = DATA_CACHE_ACCESSES_ABS - last(DATA_CACHE_ACCESSES_ABS)
Description     = Total number of accesses to the data cache (SQL pages).

[Parameter]
ID              = DATA_CACHE_SUCCESSFUL_ABS
Label           =
Unit            = -
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache accesses successful'
Description     = 

[Parameter]
ID              = DC_Succ
Label           = Data cache accesses successful
Unit            = -
Class           = Caches
Protocol        = 1
Protocolinfo    = S
Formula         = DATA_CACHE_SUCCESSFUL_ABS - last(DATA_CACHE_SUCCESSFUL_ABS)
Description     = 

[Parameter]
ID              = DC_Fails
Label           = Data cache accesses unsuccessful
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = DC_Acc - DC_Succ
Description     =

[Parameter]
ID              = DC_Hit
Label           = Data cache hitrate
Unit            = %
Precision       = 2
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = Caches
Default         = 100
Formula         = DC_Succ / DC_Acc * 100
Description     = Hitrate for accesses to the data cache (SQL pages). \
                  Shortly, lower values may appear, e.g. during the initial \
                  read of tables or if the table doesn't fit into 10% of the \
                  data cache during repeated table scans (only if _LRU_FOR_SCAN=YES).

#--- Catalog Cache

[Parameter]
ID              = CATALOG_CACHE_ACCESSES_ABS
Label           =
Unit            = -
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Catalog cache accesses'
Description     = 

[Parameter]
ID              = Cat_Acc
Label           = Catalog cache accesses
Unit            = -
Class           = Caches
Protocol        = 1
Protocolinfo    = S
Formula         = CATALOG_CACHE_ACCESSES_ABS - last(CATALOG_CACHE_ACCESSES_ABS)
Description     = 

[Parameter]
ID              = CATALOG_CACHE_SUCCESSFUL_ABS
Label           =
Unit            = -
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Catalog cache accesses successful'
Description     = 
 
[Parameter]
ID              = Cat_Succ
Label           = Catalog cache accesses successful
Unit            = -
Class           = Caches
Protocol        = 1
Protocolinfo    = S
Formula         = CATALOG_CACHE_SUCCESSFUL_ABS - last(CATALOG_CACHE_SUCCESSFUL_ABS)
Description     = 

[Parameter]
ID              = Cat_Fails
Label           = Catalog cache accesses failed
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = Cat_Acc - Cat_Succ
Description     =

[Parameter]
ID              = Cat_Hit
Label           = Catalog cache hitrate
Unit            = %
Precision       = 2
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = Caches
Default         = 100
Formula         = Cat_Succ / Cat_Acc * 100
Description     =

[Parameter]
ID              = Parse_Activity
Label           = Parse activity
Unit            = %
Precision       = 2
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = Prepares / SQL_Cmds * 100.0
Description     =

#--- History / Undo Cache

[Parameter]
ID              = DATA_CACHE_HIST_UNDO_ACCESS_ABS
Label           =
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data history/undo accesses'
Description     = 

[Parameter]
ID              = Hist_Acc
Label           = Data history/undo accesses
Unit            = -
Curve           = 2
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = DATA_CACHE_HIST_UNDO_ACCESS_ABS - last(DATA_CACHE_HIST_UNDO_ACCESS_ABS)
Description     =

[Parameter]
ID              = DATA_CACHE_HIST_UNDO_SUCC_ABS
Label           =
Unit            = -
Curve           = 0
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data history/undo accesses successful'
Description     = 

[Parameter]
ID              = Hist_Succ
Label           = Data history/undo accesses successful
Unit            = -
Curve           = 2
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = DATA_CACHE_HIST_UNDO_SUCC_ABS - last(DATA_CACHE_HIST_UNDO_SUCC_ABS)
Description     =

[Parameter]
ID              = Hist_Fails
InstanceType 	= LVC 
Label           = Data history/undo accesses failed
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = Hist_Acc - Hist_Succ
Description     =


[Parameter]
ID              = Hist_Hit
Label           = Data history/undo hitrate
Unit            = %
Precision       = 2
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = Caches
Default         = 100
Formula         = Hist_Succ / Hist_Acc * 100
Description     =

#-------------------------------------------------------------------------------
#                              General (DB Filling)
#-------------------------------------------------------------------------------

[Monitor]
ID              = SQL_COMMANDS_EXECUTED_LVC
InstanceType 	= LVC 
Label           = "SQL commands executed: " + PureSQL_CmdsLiveCache 
Class           = General
Description     =
Information     = PureSQL_CmdsLiveCache > INTERVAL * 5

[Monitor]
ID              = SQL_COMMANDS_EXECUTED
InstanceType 	= OLTP
Label           = "SQL commands executed: " + PureSQL_Cmds 
Class           = General
Description     =
Information     = PureSQL_Cmds > INTERVAL * 5

[Monitor]
ID              = OMS_COMROUTINES_EXECUTED
InstanceType 	= LVC 
Label           = "DB procedures called: " + CallCnt
Class           = General
Description     =
Information     = CallCnt > INTERVAL * 10

[Parameter]
ID              = SYSTEM_HEAP_ABS
Label           = System heap used by the kernel process
Unit            = -
Class           = FILLING
Table           = SYSTEM_HEAP_USAGE_OV_742B28
Column          = USED_BYTES
Condition       = ALLOCATOR='SystemHeap'
Description     = 

[Parameter]
ID              = SysHeap
Label           = System heap used by the kernel process
Unit            = MB
Class           = FILLING
Protocol        = 1
Protocolinfo    = A
Formula         = SYSTEM_HEAP_ABS / 1024 / 1024
Description     = 

[Parameter]
ID              = DB_Size
Label           = Database size
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Unit            = pages
Class           = FILLING
Table           = SERVERDBSTATISTICS
Column          = SERVERDBSIZE
Description     =

[Parameter]
ID              = PermUsed
Label           = Permantly used memory
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Unit            = pages
Class           = FILLING
Table           = SERVERDBSTATISTICS
Column          = USEDPERM
Description     =

[Parameter]
ID              = TempUsed
Label           = Temporary used memory
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Unit            = pages
Class           = FILLING
Table           = SERVERDBSTATISTICS
Column          = USEDTMP
Description     =

[Parameter]
ID              = HistoryUsed
Label           = history pages in use
InstanceType    = LVC 
Protocol        = 1
Protocolinfo    = A
Unit            = pages
Class           = FILLING
Class           = GC
Table           = NUM_HISTORY_PAGES_OV
Column          = NUM_HISTORY_PAGES
Description     =

[Parameter]
ID              = DB_Filling
Label           = Database filling
Curve           = 2
Protocol        = 1
Protocolinfo    = A
Unit            = %
Precision       = 2
Class           = FILLING
Formula         = ( TempUsed + PermUsed ) / DB_Size * 100
Description     =

[Parameter]
ID              = Log_Size
Label           = Log size
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Unit            = pages
Class           = FILLING
Table           = SERVERDBSTATISTICS
Column          = LOGSIZE
Description     =

[Parameter]
ID              = Log_Used
Label           = Log used
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Unit            = pages
Class           = FILLING
Table           = SERVERDBSTATISTICS
Column          = USEDLOG
Description     =

[Parameter]
ID              = Log_Filling
Label           = Log filling
Protocol        = 1
Protocolinfo    = A
Class           = FILLING
Table           = SERVERDBSTATISTICS
Column          = PCTUSEDLOG
Description     =

[Parameter]
ID              = STATE_AUTOSAVE_LOG
Label           = state of autosave log
Class           = 
Table           = INFO_STATE
Column          = Autosave
Type            = STRING
Description     = 

#-------------------------------------------------------------------------------
#                               OLTP Log ????
#-------------------------------------------------------------------------------
[Parameter]
ID              = LogIoSequence
Label           =
Unit            = -
Class           = Logging
Table           = INTERNAL_STATE
Column          = VALUE
Condition       = DESCRIPTION='last known sequence'
Description     =

[Parameter]
ID              = PHYSICAL_LOG_WRITES_ABS
Label           =
Unit            = -
Class           = Logging
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Log page physical writes'
Description     =

[Parameter]
ID              = LogWrites
Label           = Log page physical writes
Unit            = -
Class           = Logging
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Formula         = PHYSICAL_LOG_WRITES_ABS - last(PHYSICAL_LOG_WRITES_ABS)
Description     =

[Parameter]
ID              = LQ_MaxUsedPg
Label           = Log queue max used pages
Unit            = -
Class           = Logging
Protocol        = 1
Protocolinfo    = A
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Log queue max used pages'
Description     =

[Parameter]
ID              = LOG_QUEUE_MAX_USED_PAGES_INTERVAL
Label           = Log queue max used pages
Unit            = -
Class           = Logging
Formula         = LQ_MaxUsedPg - last(LQ_MaxUsedPg)
Description     =

[Parameter]
ID              = LQ_MaxUsed
Label           = Log queue max used pages (%)
Unit            = -
Class           = Logging
Protocol        = 1
Protocolinfo    = A
Formula         = LQ_MaxUsedPg / LOG_QUEUE_PAGES * 100
Description     =

[Parameter]
ID              = LOG_QUEUE_OVERFLOWS_ABS
Label           =
Unit            = -
Class           = Logging
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Log queue overflows'
Description     =

[Parameter]
ID              = LQ_Overflows
Label           = Log queue overflows
Unit            = -
Class           = Logging
Protocol        = 1
Protocolinfo    = S
Formula         = LOG_QUEUE_OVERFLOWS_ABS - last(LOG_QUEUE_OVERFLOWS_ABS)
Description     =

[Parameter]
ID              = SIO_PHYSICAL_WRITE_ALOG_TASK_CNT_ABS
Label           = 
Unit            = -
Class           = Logging
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOWRITECNT
Condition       = TASKNAME='ALogwr.'
Description     =

[Parameter]
ID              = Log_PTaskWrites
Label           = Physical log writes by task
Unit            = -
Class           = Logging
Protocol        = 1
Protocolinfo    = S
Formula         = (SIO_PHYSICAL_WRITE_ALOG_TASK_CNT_ABS - last(SIO_PHYSICAL_WRITE_ALOG_TASK_CNT_ABS)) 
Description     =

[Parameter]
ID              = LOG_SIOWRITEPG_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOWRITEPAGES
Condition       = TASKNAME='ALogwr.'
Description     =

[Parameter]
ID              = Log_PTaskWrittenPg
Label           = # log pages written by task
Protocol        = 1
Protocolinfo    = S
Class           = Logging
Formula         = LOG_SIOWRITEPG_ABS - last(LOG_SIOWRITEPG_ABS)
Description     =

[Parameter]
ID              = SIO_WR_ALOG_ABSTIME_ABS
Label           = 
Class           = Logging
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOWRITEABSTIME
Condition       = TASKNAME='ALogwr.'
Description     =

[Parameter]
ID              = AvgWTime_LogPTask 
Label           = Time (ms) of physical log write by task
Unit            = milliseconds
Class           = Logging
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (SIO_WR_ALOG_ABSTIME_ABS - last(SIO_WR_ALOG_ABSTIME_ABS)) / 1000 / Log_PTaskWrites
Description     =

[Parameter]
ID              = DIO_PHYSICAL_WRITE_ALOG_TASK_CNT_ABS
Label           = 
Unit            = -
Class           = Logging
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITECNT
Condition       = TASKNAME='ALogwr.'
Description     =

[Parameter]
ID              = Log_PThreadWrites
Label           = Physical log writes via dev threads
Unit            = -
Class           = Logging
Protocol        = 1
Protocolinfo    = S
Formula         = (DIO_PHYSICAL_WRITE_ALOG_TASK_CNT_ABS - last(DIO_PHYSICAL_WRITE_ALOG_TASK_CNT_ABS)) 
Description     =

[Parameter]
ID              = LOG_DIOWRITEPG_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITEPAGES
Condition       = TASKNAME='ALogwr.'
Description     =

[Parameter]
ID              = Log_PThreadWrittenPg
Label           = # log pages written via dev threads
Protocol        = 1
Protocolinfo    = S
Class           = Logging
Formula         = LOG_DIOWRITEPG_ABS - last(LOG_DIOWRITEPG_ABS)
Description     =

[Parameter]
ID              = DIO_WR_ALOG_ABSTIME_ABS
Label           =
Class           = Logging
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITEABSTIME
Condition       = TASKNAME='ALogwr.'
Description     =

[Parameter]
ID              = AvgWTime_LogPThread 
Label           = Time (ms) of log write via dev threads
Unit            = milliseconds
Class           = Logging
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (DIO_WR_ALOG_ABSTIME_ABS - last(DIO_WR_ALOG_ABSTIME_ABS)) / 1000 / Log_PThreadWrites
Description     =
#-------------------------------------------------------------------------------
#                           Virtual/Physical I/O
#-------------------------------------------------------------------------------

[Parameter]
ID              = VIRTUAL_READS_ABS
Label           = Sum virtual reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Virtual  reads'
Description     =

[Parameter]
ID              = VReads
Label           = Virtual reads
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = VIRTUAL_READS_ABS - last(VIRTUAL_READS_ABS)
Description     =

[Parameter]
ID              = VIRTUAL_WRITES_ABS
Label           = Sum virtual writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Virtual  writes'
Description     =

[Parameter]
ID              = VWrites
Label           = Virtual writes
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = VIRTUAL_WRITES_ABS - last(VIRTUAL_WRITES_ABS)
Description     =

[Parameter]
ID              = PHYSICAL_READS_ABS
Label           = Sum physical reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Physical reads'
Description     =

[Parameter]
ID              = PReads
Label           = Physical reads
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = PHYSICAL_READS_ABS - last(PHYSICAL_READS_ABS)
Description     =

[Parameter]
ID              = PHYSICAL_WRITES_ABS
Label           = Sum physical writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Physical writes'
Description     =

[Parameter]
ID              = PWrites
Label           = Physical writes
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = PHYSICAL_WRITES_ABS - last(PHYSICAL_WRITES_ABS)
Description     =

[Parameter]
ID              = PERM_PAGE_VIRTUAL_READS_ABS
Label           = Sum perm page virtual reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Perm page      virtual  reads'
Description     =

[Parameter]
ID              = Perm_VReads
Label           = Perm page virtual reads
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = PERM_PAGE_VIRTUAL_READS_ABS - last(PERM_PAGE_VIRTUAL_READS_ABS)
Description     =

[Parameter]
ID              = PERM_PAGE_VIRTUAL_WRITES_ABS
Label           = Sum perm page virtual writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Perm page      virtual  writes'
Description     =

[Parameter]
ID              = Perm_VWrites
Label           = Perm page virtual writes
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = PERM_PAGE_VIRTUAL_WRITES_ABS - last(PERM_PAGE_VIRTUAL_WRITES_ABS)
Description     =

[Parameter]
ID              = PERM_PAGE_PHYSICAL_READS_ABS
Label           = Sum perm page physical reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Perm page      physical reads'
Description     =

[Parameter]
ID              = Perm_PReads
Label           = Perm page physical reads
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = PERM_PAGE_PHYSICAL_READS_ABS - last(PERM_PAGE_PHYSICAL_READS_ABS)
Description     =

[Parameter]
ID              = PERM_PAGE_PHYSICAL_WRITES_ABS
Label           = Sum perm page physical writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Perm page      physical writes'
Description     =

[Parameter]
ID              = Perm_PWrites
Label           = Perm page physical writes
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = PERM_PAGE_PHYSICAL_WRITES_ABS - last(PERM_PAGE_PHYSICAL_WRITES_ABS)
Description     =

[Parameter]
ID              = TEMP_PAGE_VIRTUAL_READS_ABS
Label           = Sum temp page virtual reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Temp page      virtual  reads'
Description     =

[Parameter]
ID              = Temp_VReads
Label           = Temp page virtual reads
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = TEMP_PAGE_VIRTUAL_READS_ABS - last(TEMP_PAGE_VIRTUAL_READS_ABS)
Description     =

[Parameter]
ID              = TEMP_PAGE_VIRTUAL_WRITES_ABS
Label           = Sum temp page virtual writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Temp page      virtual  writes'
Description     =

[Parameter]
ID              = Temp_VWrites
Label           = Temp page virtual writes
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = TEMP_PAGE_VIRTUAL_WRITES_ABS - last(TEMP_PAGE_VIRTUAL_WRITES_ABS)
Description     =

[Parameter]
ID              = TEMP_PAGE_PHYSICAL_READS_ABS
Label           = Sum temp page physical reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Temp page      physical reads'
Description     =

[Parameter]
ID              = Temp_PReads
Label           = Temp page physical reads
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = TEMP_PAGE_PHYSICAL_READS_ABS - last(TEMP_PAGE_PHYSICAL_READS_ABS)
Description     =

[Parameter]
ID              = TEMP_PAGE_PHYSICAL_WRITES_ABS
Label           = Sum temp page physical writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Temp page      physical writes'
Description     =

[Parameter]
ID              = Temp_PWrites
Label           = Temp page physical writes
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = TEMP_PAGE_PHYSICAL_WRITES_ABS - last(TEMP_PAGE_PHYSICAL_WRITES_ABS)
Description     =

[Parameter]
ID              = BD_READ_LONG_ABS
Label           = 
Unit            = -
Class           = LONG
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='BD read   LONG'
Description     =

[Parameter]
ID              = Long_Reads
Label           = # of longs read
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = BD_READ_LONG_ABS - last(BD_READ_LONG_ABS)
Description     =

[Parameter]
ID              = BD_WRITE_LONG_ABS
Label           = 
Unit            = -
Class           = LONG
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='BD write  LONG'
Description     =

[Parameter]
ID              = Long_Writes
Label           = # of longs written
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = BD_WRITE_LONG_ABS - last(BD_WRITE_LONG_ABS)
Description     =

[Parameter]
ID              = LONG_PAGE_VIRTUAL_READS_ABS
Label           = sum LONG page virtual reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='LONG page      virtual  reads'
Description     =

[Parameter]
ID              = Long_VReads
Label           = LONG page virtual reads
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = LONG_PAGE_VIRTUAL_READS_ABS - last(LONG_PAGE_VIRTUAL_READS_ABS)
Description     =

[Parameter]
ID              = LONG_PAGE_VIRTUAL_WRITES_ABS
Label           = Sum LONG page virtual writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='LONG page      virtual  writes'
Description     =

[Parameter]
ID              = Long_VWrites
Label           = LONG page virtual writes
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = LONG_PAGE_VIRTUAL_WRITES_ABS - last(LONG_PAGE_VIRTUAL_WRITES_ABS)
Description     =

[Parameter]
ID              = LONG_PAGE_PHYSICAL_READS_ABS
Label           = Sum LONG page physical reads
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='LONG page      physical reads'
Description     =

[Parameter]
ID              = Long_PReads
Label           = LONG page physical reads
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = LONG_PAGE_PHYSICAL_READS_ABS - last(LONG_PAGE_PHYSICAL_READS_ABS)
Description     =

[Parameter]
ID              = LONG_PAGE_PHYSICAL_WRITES_ABS
Label           = Sum LONG page physical writes
Unit            = -
Class           = IO
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='LONG page      physical writes'
Description     =

[Parameter]
ID              = Long_PWrites
Label           = LONG page physical writes
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = LONG_PAGE_PHYSICAL_WRITES_ABS - last(LONG_PAGE_PHYSICAL_WRITES_ABS)
Description     =

[Parameter]
ID              = SAVEPOINT_ID_ABS
Label           = savepoint id
Unit            = -
Class           = IO
Table           = INTERNAL_STATE 
Column          = VALUE
Condition       = DESCRIPTION='savepoint id'
Description     =
Minversion      = 7.4.3.10

[Parameter]
ID              = Savepoints
Label           = # of savepoints
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = IO
Formula         = SAVEPOINT_ID_ABS - last(SAVEPOINT_ID_ABS)
Description     =
Minversion      = 7.4.3.10

[Parameter]
ID              = LastSvpInSec
Label           = runtime of last savepoint in seconds
Unit            = -
Class           = IO
Table           = INTERNAL_STATE 
Column          = VALUE
Condition       = DESCRIPTION='last duration (sec)'
Description     =
Minversion      = 7.4.3.10

#-------------------------------------------------------------------------------
#                               TRANSACTIONS
#-------------------------------------------------------------------------------
[Parameter]
ID              = EXT_DBPROC_CALLS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='External DBPROC calls'
Description     =

[Parameter]
ID              = DBProcCalls
Label           = # DB procedure calls
InstanceType	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = EXT_DBPROC_CALLS_ABS - last(EXT_DBPROC_CALLS_ABS)
Description     =

[Parameter]
ID              = SQL_COMMANDS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SQL commands'
Description     =

[Parameter]
ID              = SQL_Cmds
Label           = # SQL commands
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = SQL_COMMANDS_ABS - last(SQL_COMMANDS_ABS)
Description     =

[Parameter]
ID              = PureSQL_CmdsLiveCache
InstanceType 	= LVC 
Label           = # SQL commands
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = SQL_Cmds - SQL_CMDS_PRODUCED_BY_DBANALYZER_LVC - (EXT_DBPROC_CALLS_ABS - last(EXT_DBPROC_CALLS_ABS))
Description     =

[Parameter]
ID              = PureSQL_Cmds
InstanceType 	= OLTP
Label           = # SQL commands
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = SQL_Cmds - SQL_CMDS_PRODUCED_BY_DBANALYZER_OLTP - (EXT_DBPROC_CALLS_ABS - last(EXT_DBPROC_CALLS_ABS))
Description     =

[Parameter]
ID              = ExtDBProcCalls
Label           = # external DB procedure calls
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = EXT_DBPROC_CALLS_ABS - last(EXT_DBPROC_CALLS_ABS)
Description     =

[Parameter]
ID              = PREPARES_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='PREPAREs'
Description     =

[Parameter]
ID              = Prepares
Label           = # Prepares
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = PREPARES_ABS - last(PREPARES_ABS)
Description     =

[Parameter]
ID              = PREPARES_REPEATED_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='PREPAREs repeated'
Description     =

[Parameter]
ID              = PrepsRepeated
Label           = # Repeated prepares 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = PREPARES_REPEATED_ABS - last(PREPARES_REPEATED_ABS)
Description     =

[Parameter]
ID              = EXECUTES_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='EXECUTEs'
Description     =

[Parameter]
ID              = Executes
Label           = # Executes
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = EXECUTES_ABS - last(EXECUTES_ABS)
Description     =

[Parameter]
ID              = COMMITS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='COMMITs'
Description     =

[Parameter]
ID              = Commits
Label           = # Commits
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = COMMITS_ABS - last(COMMITS_ABS)
Description     =

[Parameter]
ID              = ROLLBACKS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='ROLLBACKs'
Description     =

[Parameter]
ID              = Rollbacks
Label           = # Rollbacks
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = ROLLBACKS_ABS - last(ROLLBACKS_ABS)
Description     =

[Parameter]
ID              = LOCKS_AND_UNLOCKS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='LOCKs and UNLOCKs'
Description     =

[Parameter]
ID              = Locks_Unlocks
Label           = # Locks and unlocks
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = LOCKS_AND_UNLOCKS_ABS - last(LOCKS_AND_UNLOCKS_ABS)
Description     =

[Parameter]
ID              = SUBTRANS_BEGINS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SUBTRANS BEGINs'
Description     =

[Parameter]
ID              = BegSubtrans
Label           = # Subtrans begins
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = SUBTRANS_BEGINS_ABS - last(SUBTRANS_BEGINS_ABS)
Description     =

[Parameter]
ID              = SUBTRANS_ENDS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SUBTRANS ENDs'
Description     =

[Parameter]
ID              = EndSubtrans
Label           = # Subtrans ends
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = SUBTRANS_ENDS_ABS - last(SUBTRANS_ENDS_ABS)
Description     =

[Parameter]
ID              = SUBTRANS_ROLLBACKS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SUBTRANS ROLLBACKs'
Description     =

[Parameter]
ID              = RollbSubtrans
Label           = # Subtrans rollbacks
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = SUBTRANS_ROLLBACKS_ABS - last(SUBTRANS_ROLLBACKS_ABS)
Description     =

[Parameter]
ID              = LOCKLIST_ESCALATIONS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Lock list escalations'
Description     =

[Parameter]
ID              = LocklEscalations
Label           = # Lock list escalations
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = LOCKLIST_ESCALATIONS_ABS - last(LOCKLIST_ESCALATIONS_ABS)
Description     =

[Parameter]
ID              = LOCK_REQUEST_TIMEOUTS_ABS
Label           =
Unit            = -
Class           = TRANSACTIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Request timeouts'
Description     =

[Parameter]
ID              = LockReqTimeouts
Label           = # Lock request timeouts
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = TRANSACTIONS
Formula         = LOCK_REQUEST_TIMEOUTS_ABS - last(LOCK_REQUEST_TIMEOUTS_ABS)
Description     =

[Parameter]
ID              = TreeLWaiters
Label           = Number tasks requesting a treelock 
Class           = TRANSACTIONS
Table           = NUM_TREELOCK_WAITERS_OV
Column          = NUM_TREELOCK_WAITERS
Description     = 

#-------------------------------------------------------------------------------
#                               LOAD
#-------------------------------------------------------------------------------

[Parameter]
ID              = SELECTS_AND_FETCHES_ABS 
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SELECTs and FETCHes'
Description     =

[Parameter]
ID              = SelFet
Label           = # select and fetches
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = SELECTS_AND_FETCHES_ABS - last(SELECTS_AND_FETCHES_ABS)
Description     =

[Parameter]
ID              = SELECT_AND_FETCH_ROWS_READ_ABS   
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SELECTs and FETCHes, rows read'
Description     =

[Parameter]
ID              = SelFetRR
Label           = rows read for select and fetches
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = SELECT_AND_FETCH_ROWS_READ_ABS - last(SELECT_AND_FETCH_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = SELECT_AND_FETCH_ROWS_QUAL_ABS   
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='SELECTs and FETCHes, rows qual'
Description     =

[Parameter]
ID              = SelFetRQ
Label           = rows qualified for select and fetches 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = SELECT_AND_FETCH_ROWS_QUAL_ABS - last(SELECT_AND_FETCH_ROWS_QUAL_ABS)
Description     =


[Parameter]
ID              = SelFetSel
Label           = selectivity for select and fetches 
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = LOAD
#Default         = SELECTS_AND_FETCHES_ROWS_READ
Default         = 1111
Formula         = SelFetRQ / SelFetRR * 100
Description     =

[Parameter]
ID              = INSERTS_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='INSERTs'
Description     =

[Parameter]
ID              = Inserts
Label           = # inserts
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = INSERTS_ABS - last(INSERTS_ABS)
Description     =

[Parameter]
ID              = INSERTS_ROWS_INSERTED_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='INSERTs, rows inserted'
Description     =

[Parameter]
ID              = InsRows
Label           = Inserted rows 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = INSERTS_ROWS_INSERTED_ABS - last(INSERTS_ROWS_INSERTED_ABS)
Description     =

[Parameter]
ID              = UPDATES_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='UPDATEs'
Description     =

[Parameter]
ID              = Updates
Label           = # updates
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = UPDATES_ABS - last(UPDATES_ABS)
Description     =

[Parameter]
ID              = UPDATES_ROWS_READ_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='UPDATEs, rows read'
Description     =

[Parameter]
ID              = UpdRR
Label           = rows read for updates 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = UPDATES_ROWS_READ_ABS - last(UPDATES_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = UPDATES_ROWS_UPDATED_ABS
Label           = 
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='UPDATEs, rows updated'
Description     =

[Parameter]
ID              = UpdRU
Label           = rows updated 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = UPDATES_ROWS_UPDATED_ABS - last(UPDATES_ROWS_UPDATED_ABS)
Description     =

[Parameter]
ID              = UpdSel
Label           = selectivity for updates
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = LOAD
#Default         = UpdRR
Default         = 1111
Formula         =  UpdRU / UpdRR * 100
Description     =

[Parameter]
ID              = DELETES_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='DELETEs'
Description     =

[Parameter]
ID              = Deletes
Label           = # deletes
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = DELETES_ABS - last(DELETES_ABS)
Description     =

[Parameter]
ID              = DELETES_ROWS_READ_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='DELETEs, rows read'
Description     =

[Parameter]
ID              = DelRR
Label           = rows read for delete
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = DELETES_ROWS_READ_ABS - last(DELETES_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = DELETES_ROWS_DELETED_ABS
Label           =
Unit            = -
Class           = LOAD
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='DELETEs, rows deleted'
Description     =

[Parameter]
ID              = DelRD
Label           = rows deleted
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = LOAD
Formula         = DELETES_ROWS_DELETED_ABS - last(DELETES_ROWS_DELETED_ABS)
Description     =

[Parameter]
ID              = DelSel
Label           = selectivity for deletes
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = LOAD
#Default         =DelRR
Default         = 1111
Formula         = DelRD / DelRR * 100
Description     =

#-------------------------------------------------------------------------------
#                               OPTIMIZER STRATEGY
#-------------------------------------------------------------------------------

[Parameter]
ID              = PRIMARY_KEY_ACCESSES_ABS
Label           =
Unit            = -
Class           = STRATEGY_PRIMKEY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Primary key accesses'
Description     =

[Parameter]
ID              = PKeyAcc
Label           = # primary key accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_PRIMKEY
Formula         = PRIMARY_KEY_ACCESSES_ABS - last(PRIMARY_KEY_ACCESSES_ABS)
Description     =

[Parameter]
ID              = PRIMARY_KEY_ACCESSES_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_PRIMKEY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Primary key accesses, rows read'
Description     =

[Parameter]
ID              = PKeyRR
Label           = rows read during primary key accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_PRIMKEY
Formula         = PRIMARY_KEY_ACCESSES_ROWS_READ_ABS - last(PRIMARY_KEY_ACCESSES_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = PRIMARY_KEY_ACCESSES_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_PRIMKEY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Primary key accesses, rows qual'
Description     =

[Parameter]
ID              = PKeyRQ
Label           = rows qualified during primary key accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_PRIMKEY
Formula         = PRIMARY_KEY_ACCESSES_ROWS_QUAL_ABS - last(PRIMARY_KEY_ACCESSES_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = PRIMARY_KEY_RANGE_ACCESSES_ABS
Label           =
Unit            = -
Class           = STRATEGY_PRIMKEY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Primary key range accesses'
Description     =

[Parameter]
ID              = PKeyRgAcc
Label           = # primary key range accesses 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_PRIMKEY
Formula         = PRIMARY_KEY_RANGE_ACCESSES_ABS - last(PRIMARY_KEY_RANGE_ACCESSES_ABS)
Description     =

[Parameter]
ID              = PRIM_KEY_RANGE_ACC_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_PRIMKEY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Primary key range accesses, rows read'
Description     =

[Parameter]
ID              = PKeyRgRR
Label           = rows read during primary key range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_PRIMKEY
Formula         = PRIM_KEY_RANGE_ACC_ROWS_READ_ABS - last(PRIM_KEY_RANGE_ACC_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = PRIM_KEY_RANGE_ACC_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_PRIMKEY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Primary key range accesses, rows qual'
Description     =

[Parameter]
ID              = PKeyRgRQ
Label           = rows qualified during primary key range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_PRIMKEY
Formula         = PRIM_KEY_RANGE_ACC_ROWS_QUAL_ABS - last(PRIM_KEY_RANGE_ACC_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = PKeyRgSel
Label           = selectivity during primary key range accesses
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_PRIMKEY
#Default         = PKeyRgRR
Default         = 1111
Formula         = PKeyRgRQ / PKeyRgRR * 100
Description     =

[Parameter]
ID              = INDEX_ACCESSES_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Index accesses'
Description     =

[Parameter]
ID              = InxAcc
Label           = # index accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = INDEX_ACCESSES_ABS - last(INDEX_ACCESSES_ABS)
Description     =

[Parameter]
ID              = INDEX_ACCESSES_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Index accesses, rows read'
Description     =

[Parameter]
ID              = InxRR
Label           = rows read during index accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = INDEX_ACCESSES_ROWS_READ_ABS - last(INDEX_ACCESSES_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = INDEX_ACCESSES_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Index accesses, rows qual'
Description     =

[Parameter]
ID              = InxRQ
Label           = rows qualified during index accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = INDEX_ACCESSES_ROWS_QUAL_ABS - last(INDEX_ACCESSES_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = InxSel
Label           = selectivity during index access
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_INDEX
#Default         = INDEX_ROWS_READ
Default         = 1111
Formula         = InxRQ / InxRR * 100
Description     =

[Parameter]
ID              = INDEX_RANGE_ACCESSES_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Index range accesses'
Description     =

[Parameter]
ID              = InxRgAcc
Label           = # index range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = INDEX_RANGE_ACCESSES_ABS - last(INDEX_RANGE_ACCESSES_ABS)
Description     =

[Parameter]
ID              = INDEX_RANGE_ACCESS_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Index range accesses, rows read'
Description     =

[Parameter]
ID              = InxRgRR
Label           = rows read during index range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = INDEX_RANGE_ACCESS_ROWS_READ_ABS - last(INDEX_RANGE_ACCESS_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = INDEX_RANGE_ACCESS_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Index range accesses, rows qual'
Description     =

[Parameter]
ID              = InxRgRQ
Label           = rows qualified during index range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = INDEX_RANGE_ACCESS_ROWS_QUAL_ABS - last(INDEX_RANGE_ACCESS_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = InxRgSel
Label           = selectivity during index range accesses
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_INDEX
#Default         = INDEX_RANGE_ROWS_READ
Default         = 1111
Formula         = InxRgRQ / InxRgRR * 100 
Description     =

[Parameter]
ID              = ISOLATED_INDEX_ACCESSES_ABS
Label           = 
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index accesses'
Description     =

[Parameter]
ID              = IsoInxAcc
Label           = # isolated index accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = ISOLATED_INDEX_ACCESSES_ABS - last(ISOLATED_INDEX_ACCESSES_ABS)
Description     =

[Parameter]
ID              = ISOL_INDEX_ACCESS_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index accesses, rows read'
Description     =

[Parameter]
ID              = IsoInxRR
Label           = rows read during isolated index accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = ISOL_INDEX_ACCESS_ROWS_READ_ABS - last(ISOL_INDEX_ACCESS_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = ISOL_INDEX_ACCESS_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index accesses, rows qual'
Description     =

[Parameter]
ID              = IsoInxRQ
Label           = rows qualified during isolated index accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = ISOL_INDEX_ACCESS_ROWS_QUAL_ABS - last(ISOL_INDEX_ACCESS_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = IsoInxSel
Label           = selectivity during isolated index access
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_INDEX
Formula         = IsoInxRR / IsoInxRR * 100
Description     =

[Parameter]
ID              = ISOLATED_INDEX_RANGE_ACCESS_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index range accesses'
Description     =

[Parameter]
ID              = IsoInxRgAcc
Label           = # isolated index range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = ISOLATED_INDEX_RANGE_ACCESS_ABS - last(ISOLATED_INDEX_RANGE_ACCESS_ABS)
Description     =

[Parameter]
ID              = ISOL_IND_RANGE_ACC_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index range accesses, rows read'
Description     =

[Parameter]
ID              = IsoInxRgRR
Label           = rows read during isolated index range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = ISOL_IND_RANGE_ACC_ROWS_READ_ABS - last(ISOL_IND_RANGE_ACC_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = ISOL_IND_RANGE_ACC_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_INDEX
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index range accesses, rows qual'
Description     =

[Parameter]
ID              = IsoInxRgRQ
Label           = rows qualified during isolated index range accesses
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_INDEX
Formula         = ISOL_IND_RANGE_ACC_ROWS_QUAL_ABS - last(ISOL_IND_RANGE_ACC_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = IsoInxRgSel
Label           = selectivity during isolated index range access
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_INDEX
#Default         = ISOLATED_INDEX_RANGE_ROWS_READ
Default         = 1111
Formula         = IsoInxRgRQ / IsoInxRgRR * 100
Description     =

[Parameter]
ID              = TABLE_SCANS_ABS
Label           =
Unit            = -
Class           = STRATEGY_SCANS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Table scans'
Description     =

[Parameter]
ID              = TabScan
Label           = # table scans
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_SCANS
Formula         = TABLE_SCANS_ABS - last(TABLE_SCANS_ABS)
Description     =

[Parameter]
ID              = TABLE_SCANS_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_SCANS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Table scans, rows read'
Description     =

[Parameter]
ID              = TabScanRR
Label           = rows read during tabel scans
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_SCANS
Formula         = TABLE_SCANS_ROWS_READ_ABS - last(TABLE_SCANS_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = TABLE_SCANS_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_SCANS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Table scans, rows qual'
Description     =

[Parameter]
ID              = TabScanRQ
Label           = rows qualified during tabel scans
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_SCANS
Formula         = TABLE_SCANS_ROWS_QUAL_ABS - last(TABLE_SCANS_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = TabScanSel
Label           = selectivity during tabel scans
Unit            = (ratio read/qual)
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_SCANS
#Default         = TabScanRR
Default         = 1111
Formula         = TabScanRQ / TabScanRR * 100
Description     =

[Parameter]
ID              = ISOLATED_INDEX_SCANS_ABS
Label           =
Unit            = -
Class           = STRATEGY_SCANS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index scans'
Description     =

[Parameter]
ID              = IsoInxScan
Label           = # isolated index scans
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_SCANS
Formula         = ISOLATED_INDEX_SCANS_ABS - last(ISOLATED_INDEX_SCANS_ABS)
Description     =

[Parameter]
ID              = ISOL_INDEX_SCANS_ROWS_READ_ABS
Label           =
Unit            = -
Class           = STRATEGY_SCANS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index scans, rows read'
Description     =

[Parameter]
ID              = IsoInxScanRR
Label           = rows read during isolated index scans
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_SCANS
Formula         = ISOL_INDEX_SCANS_ROWS_READ_ABS - last(ISOL_INDEX_SCANS_ROWS_READ_ABS)
Description     =

[Parameter]
ID              = ISOL_INDEX_SCANS_ROWS_QUAL_ABS
Label           =
Unit            = -
Class           = STRATEGY_SCANS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Isolated index scans, rows qual'
Description     =

[Parameter]
ID              = IsoInxScanRQ
Label           = rows qualified during isolated index scans
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = STRATEGY_SCANS
Formula         = ISOL_INDEX_SCANS_ROWS_QUAL_ABS - last(ISOL_INDEX_SCANS_ROWS_QUAL_ABS)
Description     =

[Parameter]
ID              = IsoInxScanSel
Label           =
Unit            = -
Protocol        = 1
Protocolinfo    = A
Class           = STRATEGY_SCANS
#Default         = IsoInxScanRR
Default         = 1111
Formula         = IsoInxScanRQ / IsoInxScanRR * 100
Description     = 

#-------------------------------------------------------------------------------
#                               OMS
#-------------------------------------------------------------------------------
&if $TYPE != "-light"
#---- Class Containers (Table CLASSCONTANERS)
  
[Parameter]
ID              = Schemas
Label           = # of different schemas
InstanceType 	= LVC 
Unit            = -
Class           = OMS_CONTAINER
Protocol        = 1
Protocolinfo    = A
Table           = CLASSCONTAINERS_OV
Column          = SCHEMA_COUNT
Description     =

[Parameter]
ID              = Containers
Label           = # of class container
InstanceType 	= LVC 
Unit            = -
Class           = OMS_CONTAINER
Protocol        = 1
Protocolinfo    = A
Table           = CLASSCONTAINERS_OV
Column          = CONTAINER_COUNT
Description     =

[Parameter]
ID              = ContOccup
Label           = avg occupancy of class containers in %
InstanceType 	= LVC 
Unit            = %
Precision       = 2
Class           = OMS_CONTAINER
Protocol        = 1
Protocolinfo    = A
Table           = CLASSCONTAINERS_OV
Column          = OCCUPANCY
Description     =

[Parameter]
ID              = ContPg
Label           = sum page count of class containers
InstanceType 	= LVC 
Unit            = -
Class           = OMS_CONTAINER
Protocol        = 1
Protocolinfo    = A
Table           = CLASSCONTAINERS_OV
Column          = PAGECOUNT
Description     =

[Parameter]
ID              = ContFreePg
Label           = sum free pages of class containers
InstanceType 	= LVC 
Unit            = -
Class           = OMS_CONTAINER
Protocol        = 1
Protocolinfo    = A
Table           = CLASSCONTAINERS_OV
Column          = FREE_PAGES
Description     =

[Parameter]
ID              = ContLKPages
Label           = sum key leaf pages of class containers
InstanceType 	= LVC 
Unit            = -
Class           = OMS_CONTAINER
Protocol        = 1
Protocolinfo    = A
Table           = CLASSCONTAINERS_OV
Column          = KEY_LEAF_PAGES
Description     =
&endif

#---- GC Statistics

[Parameter]
ID              = GC_ACTIVATE_COUNT_ABS
InstanceType 	= LVC 
Label           =
Class           = Caches
Table           = GARBCOLLS_ACTIVITIES_OV
Column          = ACTIVATE_COUNT

[Parameter]
ID              = GC_Activities
InstanceType 	= LVC 
Label           = # of times gc tasks have been restarted
Protocol        = 1
Protocolinfo    = S
Class           = GC
Formula         = GC_ACTIVATE_COUNT_ABS - last(GC_ACTIVATE_COUNT_ABS)
Description     =

[Parameter]
ID              = GC_OBJECTS_DELETED_ABS
InstanceType 	= LVC 
Label           =
Class           = Caches
Table           = GARBCOLLS_ACTIVITIES_OV
Column          = OBJECTS_DELETED

[Parameter]
ID              = GC_ObjDel
InstanceType 	= LVC 
Label           = # of objectes deleted during gc
Protocol        = 1
Protocolinfo    = S
Class           = GC
Formula         = GC_OBJECTS_DELETED_ABS - last(GC_OBJECTS_DELETED_ABS)
Description     =

[Parameter]
ID              = GC_RELHIST_NORMAL_ABS
InstanceType 	= LVC 
Label           =
Class           = Caches
Table           = GARBCOLLS_ACTIVITIES_OV
Column          = RELHIST_NORMAL

[Parameter]
ID              = GC_HistReleased
InstanceType 	= LVC 
Label           = # of history objects released during gc
Protocol        = 1
Protocolinfo    = S
Class           = GC
Formula         = GC_RELHIST_NORMAL_ABS - last(GC_RELHIST_NORMAL_ABS)
Description     =

[Parameter]
ID              = DIO_PHYSICAL_READ_GC_TASK_CNT
InstanceType	= LVC 
Label           = 
Unit            = -
Class           = GC
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOREADCNT
Condition       = TASKNAME='GarbColl'
Description     = 

[Parameter]
ID              = SIO_PHYSICAL_READ_GC_TASK_CNT
InstanceType	= LVC 
Label           = 
Unit            = -
Class           = GC
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOREADCNT
Condition       = TASKNAME='GarbColl'
Description     = 

[Parameter]
ID              = GC_PhysRead
InstanceType	= LVC 
Label           = Physical GarbColl reads via dev threads
Protocol        = 1
Protocolinfo    = S
Unit            = -
Class           = GC
Class           = GC
Formula         = (DIO_PHYSICAL_READ_GC_TASK_CNT - last(DIO_PHYSICAL_READ_GC_TASK_CNT)) + \
                  (SIO_PHYSICAL_READ_GC_TASK_CNT - last(SIO_PHYSICAL_READ_GC_TASK_CNT))
Description     =

[Parameter]
ID              = DIO_READ_GC_ABSTIME_ABS
InstanceType	= LVC 
Label           =
Class           = GC
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOREADABSTIME
Condition       = TASKNAME='GarbColl'
Description     =

[Parameter]
ID              = SIO_READ_GC_ABSTIME_ABS
InstanceType	= LVC 
Label           =
Class           = GC
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOREADABSTIME
Condition       = TASKNAME='GarbColl'
Description     =

[Parameter]
ID              = AvgRTime_GC
InstanceType	= LVC 
Label           = Time (ms) GarbColl reads
Unit            = milliseconds
Class           = GC
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Formula         = ((DIO_READ_GC_ABSTIME_ABS - last(DIO_READ_GC_ABSTIME_ABS)) + \
                   (SIO_READ_GC_ABSTIME_ABS - last(SIO_READ_GC_ABSTIME_ABS)) ) / 1000 / GC_PhysRead
Description     =

#---- Cache accesses

[Parameter]
ID              = DATA_CACHE_OMS_ACCESSES_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache OMS accesses'
#Description     =

[Parameter]
ID              = OMS_Acc
InstanceType 	= LVC 
Label           = Data cache OMS accesses
Unit            = -
Curve           = 2
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = DATA_CACHE_OMS_ACCESSES_ABS - last(DATA_CACHE_OMS_ACCESSES_ABS)
Description     =

[Parameter]
ID              = DATA_CACHE_OMS_SUCCESSFUL_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = Caches
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache OMS accesses successful'
Description     =

[Parameter]
ID              = OMS_Succ
InstanceType 	= LVC 
Label           = Data cache OMS accesses successful
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = (DATA_CACHE_OMS_SUCCESSFUL_ABS - last(DATA_CACHE_OMS_SUCCESSFUL_ABS)) 
Description     =

[Parameter]
ID              = OMS_Fails
InstanceType 	= LVC 
Label           = Data cache OMS accesses failed
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = Caches
Formula         = OMS_Acc - OMS_Succ
Description     =

[Parameter]
ID              = OMS_Hit
InstanceType 	= LVC 
Label           = Data cache OMS hitrate
Unit            = %
Precision       = 2
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = Caches
Default         = 100
Formula         = OMS_Succ / OMS_Acc * 100
Description     =


#----- Cache Occupation

[Parameter]
ID              = DATA_CACHE_SIZE
Label           = size of data cache in KB
InstanceType 	= LVC 
Class           = Caches
Table           = SYSDBA.CONFIGURATION
Column          = NUMERIC_VALUE
Condition	= DESCRIPTION='Datacache size'
Description     = 

[Parameter]
ID              = DataCacheSize
Label           = size of data cache in pages
InstanceType 	= LVC 
Class           = OMS_CACHE_OCCUPANCY
Protocol        = 1
Protocolinfo    = A
Formula         = DATA_CACHE_SIZE / 8
Description     = 

[Parameter]
ID              = SQL_Pages
Label           = # of cached SQL pages 
InstanceType 	= LVC 
Label           =
Unit            = -
Protocol        = 1
Protocolinfo    = A
Class           = OMS_CACHE_OCCUPANCY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache no of SQL data pages'
Description     =

[Parameter]
ID              = OMS_Pages
Label           = # of cached OMS pages 
InstanceType 	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = A
Class           = OMS_CACHE_OCCUPANCY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache no of OMS data pages'
Description     =

[Parameter]
ID              = Hist_Pages
Label           = # of cached history/undo pages 
InstanceType 	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = A
Class           = OMS_CACHE_OCCUPANCY
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='Data cache no of history/undo pages'
Description     =

[Parameter]
ID              = DC_Used
Label           = % of datacache in use
InstanceType 	= LVC 
Unit            = -
Precision       = 2
Protocol        = 1
Protocolinfo    = A
Class           = OMS_CACHE_OCCUPANCY
Formula         = ( SQL_Pages + OMS_Pages + Hist_Pages ) / DataCacheSize * 100
Description     =

#---- OMS HEAP (Table OMS_HEAP_STATISTICS

[Parameter]
ID              = OMS_TOTAL_HEAP_USAGE_ABS
InstanceType 	= LVC 
Table           = OMS_HEAP_STATISTICS_OV
Column          = TOTAL_HEAP_USAGE
Description     = Memory usage by the COM-Routines of the LiveCache.

[Parameter]
ID              = ActHeapUsed
InstanceType 	= LVC 
Label           = OMS heap actual in use
Unit            = MB
Precision       = 2
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = OMS_HEAP
Formula         = OMS_TOTAL_HEAP_USAGE_ABS / 1024 / 1024
Description     = Memory usage by the COM-Routines of the LiveCache.

[Parameter]
ID              = OMS_RESERVED_HEAP_ABS
InstanceType 	= LVC 
Table           = SYSTEM_HEAP_USAGE_OV_742B28
Column          = ALLOCATED_BYTES
Condition       = ALLOCATOR='LVCMem_BlockAllocator'
Description     =

[Parameter]
ID              = MaxHeapUsed
Label           = maximum OMS heap used since LVC startup 
InstanceType 	= LVC 
Unit            = MB
Protocol        = 1
Protocolinfo    = A
Precision       = 2
Class           = OMS_HEAP
Formula         = OMS_RESERVED_HEAP_ABS / 1024 / 1024
Description     =

[Parameter]
ID              = OMS_HEAP_ALLOC_CNT_ABS
InstanceType 	= LVC 
Label           = OMS heap allocated total
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = ALLOC_CNT
Description     =

[Parameter]
ID              = HeapAlloc
Label           = # OMS heap allocations
InstanceType 	= LVC 
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Formula         = OMS_HEAP_ALLOC_CNT_ABS- last(OMS_HEAP_ALLOC_CNT_ABS)
Description     =

[Parameter]
ID              = OMS_HEAP_FREE_CNT_ABS
InstanceType 	= LVC 
Label           = Free total
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = FREE_CNT
Description     =

[Parameter]
ID              = HeapFree
Label           = # OMS heap deallocations
InstanceType 	= LVC 
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Formula         = OMS_HEAP_FREE_CNT_ABS - last(OMS_HEAP_FREE_CNT_ABS)
Description     =

[Parameter]
ID              = SysAllocCnt
Label           = # OMS heap allocations from OS
InstanceType 	= LVC 
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = SYSTEM_ALLOC_CNT
Description     =

[Parameter]
ID              = SysFreeCnt
Label           = # OMS heap deallocations to OS
InstanceType 	= LVC 
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = SYSTEM_FREE_CNT
Description     =

[Parameter]
ID              = OMS_HEAP_COLLISIONS_ABS
InstanceType 	= LVC 
Label           =
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = COLLISIONS
Description     =

[Parameter]
ID              = HeapColl
Label           = # collisions (OMS heap synchronization)
InstanceType 	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Formula         = OMS_HEAP_COLLISIONS_ABS - last(OMS_HEAP_COLLISIONS_ABS)
Description     =

[Parameter]
ID              = OMS_HEAP_SPINLOCKS_ABS
Label           = # spinlocks used to synchronize OMS heap 
InstanceType 	= LVC 
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = TOTAL_SPINLOCKS
Description     =

[Parameter]
ID              = Spinlocks
Label           = # spinlocks used to synchronize OMS heap 
InstanceType 	= LVC 
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Formula         = OMS_HEAP_SPINLOCKS_ABS - last(OMS_HEAP_SPINLOCKS_ABS)
Description     =

[Parameter]
ID              = HeapCollPercent
Label           = % collisions (OMS heap synchronization)
InstanceType 	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = A
Precision       = 2
Class           = OMS_HEAP
Formula         = HeapColl / Spinlocks * 100
Description     =

[Parameter]
ID              = OMS_HEAP_TOTAL_SPINLOOPS_ABS
InstanceType 	= LVC 
Label           =
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = TOTAL_SPINLOOPS
Description     =

[Parameter]
ID              = Spinloops
Label           = # of spinloops before thread yielded
InstanceType 	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Formula         = OMS_HEAP_TOTAL_SPINLOOPS_ABS - last(OMS_HEAP_TOTAL_SPINLOOPS_ABS)
Description     =

[Parameter]
ID              = MaxSpinloops
Label           = max. spinloops before thread yielded
InstanceType 	= LVC 
Protocol        = 1
Protocolinfo    = A
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = MAX_SPINLOOPS
Description     =

[Parameter]
ID              = OMS_HEAP_TOTAL_YIELDLOOPS_ABS
InstanceType 	= LVC 
Label           =
Class           = OMS_HEAP
Table           = OMS_HEAP_STATISTICS_OV
Column          = TOTAL_YIELDLOOPS
Description     =

[Parameter]
ID              = Yieldloops
Label           = # of thread yields due to heap collision 
InstanceType 	= LVC 
Unit            = -
Protocol        = 1
Protocolinfo    = S
Class           = OMS_HEAP
Formula         = OMS_HEAP_TOTAL_YIELDLOOPS_ABS - last(OMS_HEAP_TOTAL_YIELDLOOPS_ABS)
Description     =

#[Parameter]
#ID              = OMS_HEAP_MAX_YIELDLOOPS_ABS
#InstanceType 	= LVC 
#Label           =
#Class           = OMS_HEAP
#Table           = OMS_HEAP_STATISTICS_OV
#Column          = MAX_YIELDLOOPS
#Description     =

#[Parameter]
#ID              = OMS_HEAP_MAX_YIELDLOOPS
#InstanceType 	= LVC 
#Label           =
#Unit            = -
#Protocol        = 1
#Class           = OMS_HEAP
#Formula         = OMS_HEAP_MAX_YIELDLOOPS_ABS - last(OMS_HEAP_MAX_YIELDLOOPS_ABS)
#Description     =

[Parameter]
ID              = OMS_HEAP_EMERGENCY_IN_USE_ABS
InstanceType 	= LVC 
Table           = OMS_EMERGENCY_HEAP_STATISTICS_OV
Column          = TOTAL_HEAP_USAGE
Description     = 

[Parameter]
ID              = OMS_HEAP_EMERGENCY_MAX_USED
InstanceType 	= LVC 
Unit            = Byte
Table           = OMS_EMERGENCY_HEAP_STATISTICS_OV
Column          = RESERVED
Class           = OMS_HEAP
Description     = Emergency heap max used by the COM-Routines of the LiveCache.

[Parameter]
ID              = OMS_ALLOCATOR_ALLOCATED_ABS
InstanceType 	= LVC 
Table           = SYSTEM_HEAP_USAGE_OV_742B28
Column          = ALLOCATED_BYTES
Condition       = ALLOCATOR='OMS_Allocator'
Description     =

[Parameter]
ID              = OMS_AllocatorAllocated
Label           = currently allocated for OMS_allocator 
InstanceType 	= LVC 
Unit            = MB
Protocol        = 1
Protocolinfo    = A
Precision       = 2
Class           = OMS_HEAP
Formula         = OMS_ALLOCATOR_ALLOCATED_ABS / 1024 / 1024
Description     =

[Parameter]
ID              = OMS_ALLOCATOR_USED_ABS
InstanceType 	= LVC 
Table           = SYSTEM_HEAP_USAGE_OV_742B28
Column          = USED_BYTES
Condition       = ALLOCATOR='OMS_Allocator'
Description     =

[Parameter]
ID              = OMS_AllocatorUsed
Label           = currently used in OMS_allocator 
InstanceType 	= LVC 
Unit            = MB
Protocol        = 1
Protocolinfo    = A
Precision       = 2
Class           = OMS_HEAP
Formula         = OMS_ALLOCATOR_USED_ABS / 1024 / 1024
Description     =

#---- MONITOR_OMS 

[Parameter]
ID              = CallCnt_Abs
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = CallCnt
#Description     =

[Parameter]
ID              = CallCnt
Label           = # of DB procedures called
InstanceType 	= LVC 
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = OMS
Formula         = CallCnt_Abs - last(CallCnt_Abs)
Description     =

[Parameter]
ID              = SumRuntime_Abs
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = SumRuntime
Description     =

[Parameter]
ID              = SumRuntime
Label           =
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Formula         = SumRuntime_Abs - last(SumRuntime_Abs)
Description     =

[Parameter]
ID              = AvgRuntime
Label           = average runtime of DB procedures
InstanceType 	= LVC 
Unit            = milliseconds
Class           = OMS
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = SumRuntime / CallCnt
Description     =

[Parameter]
ID              = OMS_Deref_Abs
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = OMS_Deref
Description     =

[Parameter]
ID              = DerefsOMS
Label           = # derefs via OID to OMS heap
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_Deref_Abs - last(OMS_Deref_Abs)
Description     =

[Parameter]
ID              = LC_DEREF_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = LC_Deref
Description     = 

[Parameter]
ID              = DerefsLC
Label           = # derefs via OID to LC base
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = LC_DEREF_ABS - last(LC_DEREF_ABS)
Description     =

[Parameter]
ID              = KEY_DEREF_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = KeyDeref
Description     =

[Parameter]
ID              = KeyDerefs
Label           = # derefs to key objects 
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = KEY_DEREF_ABS - last(KEY_DEREF_ABS)
Description     =

[Parameter]
ID              = OMS_STORE_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = OMS_Store
Description     =

[Parameter]
ID              = StoresOMS
Label           = # stores to the OMS heap
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_STORE_ABS - last(OMS_STORE_ABS)
Description     =

[Parameter]
ID              = LC_STORE_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = LC_Store
Description     =

[Parameter]
ID              = StoresLC
Label           = # stores to the LC base
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = LC_STORE_ABS - last(LC_STORE_ABS)
Description     =

[Parameter]
ID              = OMS_DELETE_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = OMS_Delete
Description     =

[Parameter]
ID              = DelOMS
Label           = # deletes in OMS heap
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_DELETE_ABS - last(OMS_DELETE_ABS)
Description     =

[Parameter]
ID              = LC_DELETE_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = LC_Delete
Description     =

[Parameter]
ID              = DelLC
Label           = # deletes in LC base
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = LC_DELETE_ABS - last(LC_DELETE_ABS)
Description     =

[Parameter]
ID              = LC_LOCK_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = LC_Lock
Description     =

[Parameter]
ID              = ObjLocks
Label           = # of object locks
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = LC_LOCK_ABS - last(LC_LOCK_ABS)
Description     =

[Parameter]
ID              = DEREFITER_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = DerefIter
Description     =

[Parameter]
ID              = IterDerefs
Label           = # derefs via iterator to LC base
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = DEREFITER_ABS - last(DEREFITER_ABS)
Description     =

[Parameter]
ID              = LC_LOGHOPS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = LC_LogHops
Description     =

[Parameter]
ID              = LogHops
Label           = # hops in LC base via OID to locate obj
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = LC_LOGHOPS_ABS - last(LC_LOGHOPS_ABS)
Description     =

[Parameter]
ID              = LC_LOGHOPSITER_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = LC_LogHopsIter
Description     =

[Parameter]
ID              = IterLogHops
Label           = # hops in LC base via iter to locate obj
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = LC_LOGHOPSITER_ABS - last(LC_LOGHOPSITER_ABS)
Description     =

[Parameter]
ID              = OMS_EXCEPTIONS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Curve           = 1
Table           = MONITOR_OMS_OV
Column          = Exceptions
Description     =

[Parameter]
ID              = Exceptions
Label           = # of OMS exceptions
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_EXCEPTIONS_ABS - last(OMS_EXCEPTIONS_ABS)
Description     =

[Parameter]
ID              = OUTOFDATEEXCEPTIONS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = OutOfDateExceptions
Description     =

[Parameter]
ID              = OutOfDateExcp
Label           = # of out of date exceptions
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OUTOFDATEEXCEPTIONS_ABS - last(OUTOFDATEEXCEPTIONS_ABS)
Description     =

[Parameter]
ID              = OMS_TIMEOUTS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = Timeouts
Description     =

[Parameter]
ID              = Timeouts
Label           = # OMS timeouts
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_TIMEOUTS_ABS - last(OMS_TIMEOUTS_ABS)
Description     =

[Parameter]
ID              = OUTOFMEMORYEXCEPTIONS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = OutOfMemoryExceptions
Description     =

[Parameter]
ID              = OutOfMemExcept
Label           = # out of memory exceptions
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OUTOFMEMORYEXCEPTIONS_ABS - last(OUTOFMEMORYEXCEPTIONS_ABS)
Description     =

[Parameter]
ID              = SUBTRANSROLLBACKS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = SubtransRollbacks
Description     =

[Parameter]
ID              = SubtransRollb
Label           = # of subtrans rollbacks
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = SUBTRANSROLLBACKS_ABS - last(SUBTRANSROLLBACKS_ABS)
Description     =

[Parameter]
ID              = SUBTRANSCOMMITS_ABS
InstanceType 	= LVC 
Label           =
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = SubtransCommits
Description     =

[Parameter]
ID              = SubtransCommits
Label           = # of subtrans commits
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = SUBTRANSCOMMITS_ABS - last(SUBTRANSCOMMITS_ABS)
Description     =

[Parameter]
ID              = VAROBJECTLOAD_ABS
InstanceType 	= LVC 
Label           = 
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = VarObjectLoad
Description     =

[Parameter]
ID              = VarObjLoad
Label           = # var object loads
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = VAROBJECTLOAD_ABS - last(VAROBJECTLOAD_ABS)
Description     =

[Parameter]
ID              = VAROBJECTSTORE_ABS
InstanceType 	= LVC 
Label           = 
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = VarObjectStore
Description     =

[Parameter]
ID              = VarObjStore
Label           = # var object stores
InstanceType 	= LVC 
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = VAROBJECTSTORE_ABS - last(VAROBJECTSTORE_ABS)
Description     =

[Parameter]
ID              = OMS_TERMINATE_ABS
InstanceType 	= LVC 
Label           = 
Unit            = -
Class           = OMS
Table           = MONITOR_OMS_OV
Column          = OMS_Terminate
Description     =

[Parameter]
ID              = Terminates
InstanceType 	= LVC 
Label           = # of OMS terminates
Unit            = -
Class           = OMS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_TERMINATE_ABS - last(OMS_TERMINATE_ABS)
Description     =
#------------ Versionen (OMS_VERSIONS)

[Parameter]
ID              = OMS_Versions
Label           = # of existing OMS versions
InstanceType 	= LVC 
Unit            = -
Class           = OMS_VERSIONS
Protocol        = 1
Protocolinfo    = A
Table           = OMS_VERSIONS_OV
Column          = VERSION_COUNT
Description     =

[Parameter]
ID              = AvgAgeInHours
Label           = average age of OMS versions in hours 
InstanceType 	= LVC 
Unit            = -
Class           = OMS_VERSIONS
Protocol        = 1
Protocolinfo    = A
Table           = OMS_VERSIONS_OV
NullRep         = 0 
Column          = AVG_AGE_IN_HOURS
Description     =

[Parameter]
ID              = MaxAgeInHours
Label           = maximum age of OMS versions in hours 
InstanceType 	= LVC 
Unit            = -
Class           = OMS_VERSIONS
Protocol        = 1
Protocolinfo    = A
NullRep         = 0 
Table           = OMS_VERSIONS_OV
Column          = MAX_AGE_IN_HOURS
Description     =

[Parameter]
ID              = HeapUsedByVersions
Label           = sum OMS heap in MB used by OMS versions 
InstanceType 	= LVC 
Unit            = MB
Class           = OMS_HEAP
Class           = OMS_VERSIONS
Protocol        = 1
Protocolinfo    = A
NullRep         = 0 
# *** not allowed *** Formula         = VERSION_SUM_HEAP_USAGE / 1024 / 1024
Table           = OMS_VERSIONS_OV
Column          = SUM_HEAP_USAGE
Description     =

[Parameter]
ID              = OMS_VERSION_UNLOADS_ABS
Label           = # of unloads of OMS versions
InstanceType 	= LVC 
Unit            = -
Class           = OMS_VERSIONS
Table           = MONITOR
Column          = VALUE
Condition       = DESCRIPTION='OMS version unloads'
Description     =

[Parameter]
ID              = VersUnloads
Label           = # of unloads of OMS versions
InstanceType 	= LVC 
Unit            = -
Class           = OMS_VERSIONS
Protocol        = 1
Protocolinfo    = S
Formula         = OMS_VERSION_UNLOADS_ABS - last(OMS_VERSION_UNLOADS_ABS)
Description     =

#------------ Versionen (CONSISTENTVIEWS)

[Array]
ID              = OLD_CNSTVIEW_IS_OMS_VER
Label           = is consistent view OMS version
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = IS_OMS_VER
Index           = CONSISTENTVIEW
Type            = NUMERIC

[Array]
ID              = OLD_CNSTVIEW_TASK_ID
Label           = task dealing with consistent view
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = TASK_ID
Index           = CONSISTENTVIEW
Type            = NUMERIC

[Array]
ID              = OLD_CNSTVIEW_APPL_PID
Label           = application dealing with consistent view
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = APPL_PID
Index           = CONSISTENTVIEW
Type            = NUMERIC

[Array]
ID              = OLD_CNSTVIEW_HEAP_USAGE
Label           = heap usage in case of OMS version
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = HEAP_USAGE
Index           = CONSISTENTVIEW
Type            = STRING

[Array]
ID              = OLD_CNSTVIEW_OPEN_TIME
Label           = time consistent view opened
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = OPENTIME
Index           = CONSISTENTVIEW
Type            = STRING

[Array]
ID              = OLD_CNSTVIEW_CANCELLED
Label           = is consistent view cacelled
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = CANCELLED
Index           = CONSISTENTVIEW
Type            = STRING

[Array]
ID              = OLD_CNSTVIEW_AGE_IN_HOURS
Label           = is consistent view cacelled
InstanceType 	= LVC 
Table           = OLD_CONSISTENTVIEWS_AR
Column          = AGE_IN_HOURS
Index           = CONSISTENTVIEW
Type            = NUMERIC

#-------------------------------------------------------------------------------
#                               UKT_ACTIVITY
#-------------------------------------------------------------------------------
[Array]
ID              = UKT_THREAD_NAME
Label           = UKT name
Table           = SYSMON_UKTHREAD
Column          = THREADNAME
Index           = THREADNAME
Type            = STRING
Minversion      = 7.4.3.33

[Array]
ID              = UKT_THREAD_STATE
Label           = UKT state
Table           = SYSMON_UKTHREAD
Column          = THREADSTATE
Index           = THREADNAME
Type            = STRING
Minversion      = 7.4.3.33

[Array]
ID              = UKT_IDLE_CNT_ABS
Label           = UKT idle count abs
Table           = SYSMON_UKTHREAD
Column          = IDLECOUNT
Index           = THREADNAME
Type            = NUMERIC
Minversion      = 7.4.3.33

[Array]
ID              = UKT_IDLE_CNT
Label           = UKT idle count during interval
Type            = NUMERIC
Formula         = UKT_IDLE_CNT_ABS[] - last(UKT_IDLE_CNT_ABS[])
ForEach         = UKT_IDLE_CNT_ABS
Minversion      = 7.4.3.33

[Array]
ID              = UKT_RUNQUE_LEN
Label           = current runqueue length 
Table           = SYSMON_UKTHREAD
Column          = USEDRUNQUEUELENGTH
Index           = THREADNAME
Type            = NUMERIC
Minversion      = 7.4.3.33

[Monitor]
ID              = UKT_HIGH_LOAD
Label           = UKT_THREAD_NAME[] + " is running since " + INTERVAL + " seconds, actual run queue length is " + UKT_RUNQUE_LEN[]
Class           = Performance
Description     = 
Skip1           = UKT_THREAD_STATE[] == "Sleeping" || UKT_THREAD_STATE[] != last(UKT_THREAD_STATE[])
Warning2        = UKT_IDLE_CNT[] == 0
ForEach         = UKT_IDLE_CNT
Minversion      = 7.4.3.33

#-------------------------------------------------------------------------------
#                               TASK_IO
#-------------------------------------------------------------------------------

[Parameter]
ID              = SIO_PHYSICAL_READ_USER_TASK_ABS
Label           = 
Unit            = -
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOREADCNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = User_PRTask
Label           = Physical user reads by task
Unit            = -
Class           = TASK_IO
Protocol        = 1
Protocolinfo    = S
Formula         = (SIO_PHYSICAL_READ_USER_TASK_ABS - last(SIO_PHYSICAL_READ_USER_TASK_ABS)) 
Description     =

[Parameter]
ID              = SIO_READ_US_ABSTIME_ABS
Label           = 
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOREADABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = AvgRTime_UserPTask 
Label           = Time (ms) physical user reads by task
Unit            = milliseconds
Class           = TASK_IO
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (SIO_READ_US_ABSTIME_ABS - last(SIO_READ_US_ABSTIME_ABS)) / 1000 / User_PRTask
Description     =

[Parameter]
ID              = DIO_PHYSICAL_READ_USER_TASK_CNT
Label           = 
Unit            = -
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOREADCNT
Condition       = TASKNAME='User'
Description     = 

[Parameter]
ID              = User_PRThread
Label           = Physical user reads via dev threads
Protocol        = 1
Protocolinfo    = S
Unit            = -
Class           = TASK_IO
Formula         = (DIO_PHYSICAL_READ_USER_TASK_CNT - last(DIO_PHYSICAL_READ_USER_TASK_CNT)) 
Description     =

[Parameter]
ID              = DIO_READ_US_ABSTIME_ABS
Label           =
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOREADABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = AvgRTime_UserPThread
Label           = Time (ms) user reads via dev threads
Unit            = milliseconds
Class           = TASK_IO
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (DIO_READ_US_ABSTIME_ABS - last(DIO_READ_US_ABSTIME_ABS)) / 1000 / User_PRThread
Description     =

[Parameter]
ID              = SIO_PHYSICAL_WRITE_USER_TASK_ABS
Label           = 
Unit            = -
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOWRITECNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = User_PWTask
Label           = Physical user writes by task
Protocol        = 1
Protocolinfo    = S
Unit            = -
Class           = TASK_IO
Formula         = (SIO_PHYSICAL_WRITE_USER_TASK_ABS - last(SIO_PHYSICAL_WRITE_USER_TASK_ABS)) 
Description     =

[Parameter]
ID              = SIO_WR_US_ABSTIME_ABS
Label           = 
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = SIOWRITEABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = AvgWTime_UserPTask 
Label           = Time (ms) physical user writes by task
Unit            = milliseconds
Class           = TASK_IO
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (SIO_WR_US_ABSTIME_ABS - last(SIO_WR_US_ABSTIME_ABS)) / 1000 / User_PWTask
Description     =

[Parameter]
ID              = DIO_PHYSICAL_WRITE_USER_TASK_CNT
Label           = 
Unit            = -
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITECNT
Condition       = TASKNAME='User'
Description     = 

[Parameter]
ID              = User_PWThread
Label           = Physical user writes via dev threads
Protocol        = 1
Protocolinfo    = S
Unit            = -
Class           = TASK_IO
Formula         = (DIO_PHYSICAL_WRITE_USER_TASK_CNT - last(DIO_PHYSICAL_WRITE_USER_TASK_CNT)) 
Description     =

[Parameter]
ID              = DIO_WR_US_ABSTIME_ABS
Label           =
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITEABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = AvgWTime_UserPThread
Label           = Time (ms) user writes via dev threads
Unit            = milliseconds
Class           = TASK_IO
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (DIO_WR_US_ABSTIME_ABS - last(DIO_WR_US_ABSTIME_ABS)) / 1000 / User_PWThread
Description     =

[Parameter]
ID              = USERTASKREADCNT_ABS
Label           = 
Unit            = -
Class           = TASK_IO
Table           = sysmon_totalcount
Column          = USERTASKREADCNT
Description     =

[Parameter]
ID              = READ_IO_USER_TASK
Label           =
Unit            = -
Class           = TASK_IO
Formula         = (USERTASKREADCNT_ABS - last(USERTASKREADCNT_ABS)) 
Description     =

[Parameter]
ID              = USERTASKWRITECNT_ABS
Label           = 
Unit            = -
Class           = TASK_IO
Table           = sysmon_totalcount
Column          = USERTASKWRITECNT
Description     =

[Parameter]
ID              = WRITE_IO_USER_TASK
Label           =
Unit            = -
Class           = TASK_IO
Formula         = (USERTASKWRITECNT_ABS - last(USERTASKWRITECNT_ABS)) 
Description     =

[Parameter]
ID              = DIO_PHYSICAL_WRITE_DW_TASK_CNT_ABS
Label           = 
Unit            = -
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITECNT
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = DW_PThreadWrites
Label           = Physical DW writes via dev threads
Unit            = -
Class           = TASK_IO
Protocol        = 1
Protocolinfo    = S
Formula         = (DIO_PHYSICAL_WRITE_DW_TASK_CNT_ABS - last(DIO_PHYSICAL_WRITE_DW_TASK_CNT_ABS)) 
Description     =

[Parameter]
ID              = DW_DIOWRITEPG_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITEPAGES
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = DW_PThreadWrittenPg
Label           = # pages written by data writer tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_IO
Formula         = DW_DIOWRITEPG_ABS - last(DW_DIOWRITEPG_ABS)
Description     =

[Parameter]
ID              = DIO_WR_DW_ABSTIME_ABS
Label           =
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITEABSTIME
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = AvgAbsWTime_DWPThread 
Label           = Time (ms) of DW writes via dev threads
Unit            = milliseconds
Class           = TASK_IO
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (DIO_WR_DW_ABSTIME_ABS - last(DIO_WR_DW_ABSTIME_ABS)) / 1000 / DW_PThreadWrites
Description     =

[Parameter]
ID              = DIO_WR_DW_RELTIME_ABS
Label           =
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOWRITERELTIME
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = AvgRelWTime_DWPThread 
Label           = Time (ms) of DW writes via dev threads
Unit            = milliseconds
Class           = TASK_IO
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (DIO_WR_DW_RELTIME_ABS - last(DIO_WR_DW_RELTIME_ABS)) / 1000 / DW_PThreadWrites
Description     =

[Parameter]
ID              = DIO_PHYSICAL_READ_DW_TASK_CNT_ABS
Label           = 
Unit            = -
Class           = TASK_IO
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOREADCNT
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = DW_PThreadReads
Label           = Physical DW reads via dev threads
Unit            = -
Class           = TASK_IO
Protocol        = 1
Protocolinfo    = S
Formula         = (DIO_PHYSICAL_READ_DW_TASK_CNT_ABS - last(DIO_PHYSICAL_READ_DW_TASK_CNT_ABS)) 
Description     =

[Parameter]
ID              = DW_DIOREADPG_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DIOREADPAGES
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = DW_PThreadReadPg
Label           = # pages read by data writer tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_IO
Formula         = DW_DIOREADPG_ABS - last(DW_DIOREADPG_ABS)
Description     =

#------------ BACKUP -----------------

[Parameter]
ID              = BUP_PHYSICAL_WRITE_CNT_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPWRITECNT
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = BackUpWrites
Label           = Physical writes for backup
Class           = BACKUP
Protocol        = 1
Protocolinfo    = S
Formula         = (BUP_PHYSICAL_WRITE_CNT_ABS - last(BUP_PHYSICAL_WRITE_CNT_ABS)) 
Description     =

[Parameter]
ID              = BUP_WRITEPG_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPWRITEPAGES
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = BackUpWrittenPg
Label           = # pages written for backup
Protocol        = 1
Protocolinfo    = S
Class           = BACKUP
Formula         = BUP_WRITEPG_ABS - last(BUP_WRITEPG_ABS)
Description     =

[Parameter]
ID              = BUP_WRITE_ABSTIME_ABS
Label           =
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPWRITEABSTIME
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = AvgAbsWTime_Backup 
Label           = Time (ms) of writes for backup
Unit            = milliseconds
Class           = BACKUP
Protocol        = 1
Protocolinfo    = A
Formula         = (BUP_WRITE_ABSTIME_ABS - last(BUP_WRITE_ABSTIME_ABS)) / 1000 / BackUpWrites
Description     =

[Parameter]
ID              = BUP_WRITE_RELTIME_ABS
Label           =
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPWRITERELTIME
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = AvgRelWTime_Backup 
Label           = Time (ms) of writes for backup
Unit            = milliseconds
Class           = BACKUP
Protocol        = 1
Protocolinfo    = A
Formula         = (BUP_WRITE_RELTIME_ABS - last(BUP_WRITE_RELTIME_ABS)) / 1000 / BackUpWrites
Description     =

[Parameter]
ID              = BUP_PHYSICAL_READ_CNT_ABS
Label           = 
Unit            = -
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPREADCNT
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = BackUpReads
Label           = Physical reads for backup
Unit            = -
Class           = BACKUP
Protocol        = 1
Protocolinfo    = S
Formula         = (BUP_PHYSICAL_READ_CNT_ABS - last(BUP_PHYSICAL_READ_CNT_ABS)) 
Description     =

[Parameter]
ID              = BUP_READPG_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPREADPAGES
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = BackUpReadPg
Label           = # pages read for backup
Protocol        = 1
Protocolinfo    = S
Class           = BACKUP
Formula         = BUP_READPG_ABS - last(BUP_READPG_ABS)
Description     =

[Parameter]
ID              = PgPerIORead
Label           = # pages read per read call
Protocol        = 1
Protocolinfo    = S
Class           = BACKUP
Formula         = BackUpReadPg / BackUpReads
Description     =

[Parameter]
ID              = BUP_READ_ABSTIME_ABS
Label           =
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPREADABSTIME
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = AvgAbsRTime_Backup 
Label           = read time (ms) for backup
Unit            = milliseconds
Class           = BACKUP
Protocol        = 1
Protocolinfo    = A
Formula         = (BUP_READ_ABSTIME_ABS - last(BUP_READ_ABSTIME_ABS)) / 1000 / BackUpReads
Description     =

[Parameter]
ID              = BUP_READ_RELTIME_ABS
Label           =
Table           = SYSMON_TASK_DETAIL_OV
Column          = BKPREADRELTIME
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = AvgRelRTime_Backup 
Label           = read time (ms) for backup
Unit            = milliseconds
Class           = BACKUP
Protocol        = 1
Protocolinfo    = A
Formula         = (BUP_READ_RELTIME_ABS - last(BUP_READ_RELTIME_ABS)) / 1000 / BackUpReads
Description     =

#-------------------------------------------------------------------------------
#                               RTE Time Values
#-------------------------------------------------------------------------------

#--- Kernel Receive/Reply-Time (User Tasks)

[Parameter]
ID              = COMMCNT_ABS
Label           =
Unit            = -
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = COMMCNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = CommCnt 
Label           = # communications appl <--> user task
Unit            = -
Curve           = 1
Protocol        = 1
Protocolinfo    = S
Class           = TASK_STATES
Class           = TASK_ACTIVITIES
Class           = OVERVIEW
Formula         = COMMCNT_ABS -last(COMMCNT_ABS)
Description     =

[Parameter]
ID              = CMDEXECUTETIME
Label           =
Unit            = msec
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = CMDEXECUTETIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = CmdExecTimeAvg 
Label           = time (ms) during command execution
Unit            = milliseconds
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = TASK_STATES
Formula         = (CMDEXECUTETIME - last(CMDEXECUTETIME)) / 1000 / CommCnt
Description     =

[Parameter]
ID              = CMDWAITABSTIME
Label           =
Unit            = msec
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = CMDWAITABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = AbsCmdWaitTimeAvg 
Label           = time (ms) waiting for command
Unit            = milliseconds
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = TASK_STATES
Formula         = (CMDWAITABSTIME - last(CMDWAITABSTIME)) / 1000 / CommCnt
Description     =

[Parameter]
ID              = CMDWAITRELTIME
Label           =
Unit            = msec
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = CMDWAITRELTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = RelCmdWaitTimeAvg 
Label           = time (ms) waiting for command
Unit            = milliseconds
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Class           = TASK_STATES
Formula         = (CMDWAITRELTIME - last(CMDWAITRELTIME)) / 1000 / CommCnt
Description     =

#--- Vwait-Time (User Tasks)

[Parameter]
ID              = VWAITABSTIME_ABS
Label           = 
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VWAITABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = VWAITRELTIME_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VWAITRELTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = VWAITCNT_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VWAITCNT
Condition       = TASKNAME='User'
Label           =

[Parameter]
ID              = WaitCnt
Label           = # waits
Class           = TASK_STATES
Protocol        = 1
Class           = OVERVIEW
Protocolinfo    = S
Formula         = VWAITCNT_ABS - last(VWAITCNT_ABS)
Description     =

[Parameter]
ID              = WaitTimeAvg
Label           = time (ms) waiting for locks (table)
Unit            = milliseconds
Class           = TASK_STATES
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (VWAITABSTIME_ABS - last(VWAITABSTIME_ABS)) / 1000 / WaitCnt
Description     =

[Parameter]
ID              = WaitRelTimeAvg
Label           = time (ms) waiting for locks (table)
Unit            = milliseconds
Class           = TASK_STATES
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (VWAITRELTIME_ABS - last(VWAITRELTIME_ABS)) / 1000 / WaitCnt
Description     =

#--- Suspend-Time (User Tasks)

[Parameter]
ID              = VSUSPENDABSTIME_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VSUSPENDABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = VSUSPENDRELTIME_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VSUSPENDRELTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = VSUSPENDCNT_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VSUSPENDCNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = SuspendCnt
Label           = # suspends
Class           = OVERVIEW
Class           = TASK_STATES
Protocol        = 1
Protocolinfo    = S
Formula         = VSUSPENDCNT_ABS - last(VSUSPENDCNT_ABS)
Description     =

[Parameter]
ID              = SuspTimeAvg 
Label           = time (ms) waiting for locks (tree) 
Unit            = milliseconds
Class           = TASK_STATES
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (VSUSPENDABSTIME_ABS - last(VSUSPENDABSTIME_ABS)) / 1000 / SuspendCnt
Description     =

[Parameter]
ID              = RelSuspTimeAvg 
Label           = time (ms) waiting for locks (tree) 
Unit            = milliseconds
Class           = TASK_STATES
Curve           = 1
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (VSUSPENDRELTIME_ABS - last(VSUSPENDRELTIME_ABS)) / 1000 / SuspendCnt
Description     =

[Parameter]
ID              = ReadCntUS
Label           = # physical reads for user tasks
Class           = OVERVIEW
Protocol        = 1
Protocolinfo    = S
Formula         = User_PRTask + User_PRThread
Description     =

#--- Vsleep-Time (User Tasks)

[Parameter]
ID              = VSLEEPABSTIME_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VSLEEPABSTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = VSLEEPRELTIME_ABS
Label           =
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VSLEEPRELTIME
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = VSLEEPCNT_ABS
Label           = 
Class           = TASK_STATES
Table           = SYSMON_TASK_DETAIL_OV
Column          = VSLEEPCNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = SleepCnt
Label           = # sleeps
Protocol        = 1
Protocolinfo    = S
Class           = TASK_STATES
Formula         = VSLEEPCNT_ABS - last(VSLEEPCNT_ABS)
Description     =

[Parameter]
ID              = SleepTimeAvg 
Label           = time (ms) sleeping 
Unit            = milliseconds
Curve           = 1
Class           = TASK_STATES
Protocol        = 1
Protocolinfo    = A
Default         = 0
Formula         = (VSLEEPABSTIME_ABS - last(VSLEEPABSTIME_ABS)) / 1000 / SleepCnt
Description     =

#--- Task activities
[Parameter]
ID              = ActiveUserTasks
Label           = # of active user tasks 
Class           = TASK_ACTIVITIES
Protocol        = 1
Protocolinfo    = S
Table           = NUM_ACTIVE_USERTASKS_OV
Column          = NUM_ACTIVE_USERTASKS
Description     = 

[Parameter]
ID              = RunningUserTasks
Label           = # of running user tasks 
Class           = TASK_ACTIVITIES
Protocol        = 1
Protocolinfo    = S
Table           = NUM_RUNNING_USERTASKS_OV
Column          = NUM_RUNNING_USERTASKS
Description     = 

[Parameter]
ID              = RunnableUserTasks
Label           = # of runnable user tasks 
Class           = TASK_ACTIVITIES
Protocol        = 1
Protocolinfo    = S
Table           = NUM_RUNNABLE_USERTASKS_OV
Column          = NUM_RUNNABLE_USERTASKS
Description     = 

[Parameter]
ID              = WaitingUserTasks
Label           = # of user tasks waiting for a lock 
Class           = TASK_ACTIVITIES
Protocol        = 1
Protocolinfo    = S
Table           = NUM_VWAIT_USERTASKS_OV
Column          = NUM_VWAIT_USERTASKS
Description     = 

[Parameter]
ID              = EnterRegionUserTasks
Label           = # of user tasks entering a region 
Class           = TASK_ACTIVITIES
Protocol        = 1
Protocolinfo    = S
Table           = NUM_VBEGEXCL_USERTASKS_OV
Column          = NUM_VBEGEXCL_USERTASKS
Description     = 

[Parameter]
ID              = RegionWaiters
Label           = # of tasks waiting for a region 
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Table           = NUM_REGION_WAITERS_OV
Column          = NUM_REGION_WAITERS
Description     = 

[Parameter]
ID              = US_TASK_SWITCH_ABS
Label           = 
Table           = USER_TASK_SWITCHES_OV
Column          = US_TASK_SWITCHES
Description     =
Minversion   = 7.4.3.36

[Parameter]
ID              = TaskSwitchUS
Label           = # task switches of user tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Class           = OVERVIEW
Formula         = US_TASK_SWITCH_ABS - last(US_TASK_SWITCH_ABS)
Description     =
Minversion   = 7.4.3.36

[Parameter]
ID              = US_TASK_DISPATCHES_ABS
Label           = 
Table           = USER_TASK_SWITCHES_OV
Column          = US_TASK_DISPATCHES
Description     =
Minversion   = 7.4.3.36

[Parameter]
ID              = DispatchesUS
Label           = # dispatches of user tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Class           = OVERVIEW
Formula         = US_TASK_DISPATCHES_ABS - last(US_TASK_DISPATCHES_ABS)
Description     =
Minversion   = 7.4.3.36

[Parameter]
ID              = US_DISPATCHCNT_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DISPATCHCNT
Condition       = TASKNAME='User'
Description     =
Maxversion   = 7.4.3.35

[Parameter]
ID              = DispUS
Label           = # dispatches of user tasks
Protocol        = 1
Protocolinfo    = S
Class           = OVERVIEW
Class           = TASK_ACTIVITIES
Formula         = US_DISPATCHCNT_ABS - last(US_DISPATCHCNT_ABS)
Description     =
Maxversion   = 7.4.3.35

[Parameter]
ID              = US_SELFSUSPENDCNT_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = TASKSELFSUSPCNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = SelfSuspUS
Label           = # self suspends user tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = US_SELFSUSPENDCNT_ABS - last(US_SELFSUSPENDCNT_ABS)
Description     =

[Parameter]
ID              = US_REGIONACCESSCNT_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = REGIONACCESSCNT
Condition       = TASKNAME='User'
Description     =

[Parameter]
ID              = RegAccUS
Label           = # region accesses user tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = US_REGIONACCESSCNT_ABS - last(US_REGIONACCESSCNT_ABS)
Description     =

[Parameter]
ID              = GC_DISPATCHCNT_ABS
Label           = 
InstanceType	= LVC 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DISPATCHCNT
Condition       = TASKNAME='GarbColl'
Description     =

[Parameter]
ID              = DispGC
Label           = # dispatches of garbage collector tasks
InstanceType	= LVC 
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = GC_DISPATCHCNT_ABS - last(GC_DISPATCHCNT_ABS)
Description     =

[Parameter]
ID              = DW_DISPATCHCNT_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DISPATCHCNT
Condition       = TASKNAME='Datawr.'
Description     =

[Parameter]
ID              = DispDW
Label           = # dispatches of data writer tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = DW_DISPATCHCNT_ABS - last(DW_DISPATCHCNT_ABS)
Description     =

[Parameter]
ID              = SV_DISPATCHCNT_ABS
Label           = 
Table           = SYSMON_TASK_DETAIL_OV
Column          = DISPATCHCNT
Condition       = TASKNAME='Server'
Description     =

[Parameter]
ID              = DispSV
Label           = # dispatches of server tasks
Protocol        = 1
Protocolinfo    = S
Class           = TASK_ACTIVITIES
Formula         = SV_DISPATCHCNT_ABS - last(SV_DISPATCHCNT_ABS)
Description     =

[Parameter]
ID              = ConnectedUser
Label           = Number of connected user tasks 
Class           = TASKING
Table           = NUM_CONNECTED_USERTASKS_OV
Column          = NUM_CONNECTED_USERTASKS
Description     = 

[Parameter]
ID              = FreeUser
Label           = Number of free (not connected) user tasks 
Class           = TASKING
Formula         = MAXUSERTASKS - ConnectedUser
Description     = 

[Parameter]
ID              = ActivDataWriter
Label           = Number active datawriter tasks 
Class           = TASKING
Table           = NUM_ACTIVE_DATAWRITER_OV
Column          = NUM_ACTIVE_DATAWRITER
Description     = 

[Parameter]
ID              = ActivGarbColls
Label           = Number active garbage collector tasks 
InstanceType 	= LVC 
Class           = TASKING
Table           = NUM_ACTIVE_GARBCOLLS_OV
Column          = NUM_ACTIVE_GARBCOLLS
Description     = 

[Parameter]
ID              = CancelledTasks
Label           = Number of cancelled tasks 
Class           = TASKING
Table           = NUM_CANCELLED_TASKS_OV
Column          = NUM_CANCELLED_TASKS
Description     = 

#===============================================================================
#                        UPDATE STATISTICS WANTED / OPTIMIZER HINTS
#===============================================================================
#[Array]
#ID              = UPDW_ROWNO
#Label           = table owner
#Table           = SYSUPDSTATWANTED
#Column          = ROWNO
#Index           = ROWNO
#Type            = INTEGER
#Startup         = 1

#[Array]
#ID              = UPDW_COLUMN_NAME
#Label           = column name
#Table           = SYSUPDSTATWANTED
#Column          = COLUMNNAME
#Index           = TABLENAME
#Type            = STRING
#Startup         = 1

[Array]
ID              = UPDW_OWNER_NAME
Label           = table owner
Table           = TABLES_UPDSTATWANTED_OV
Column          = OWNER
Index           = TABLENAME
Type            = STRING
Startup         = 1

[Array]
ID              = UPDW_TABLE_NAME
Label           = table name
Table           = TABLES_UPDSTATWANTED_OV
Column          = TABLENAME
Index           = TABLENAME
Type            = STRING
Startup         = 1

[Array]
ID              = FEW_SAMPLE_ROWS_TABLE_NAME
Label           = table name
Table           = FEW_SAMPLES_ROWS_OV
Column          = TABLENAME
Index           = TABLENAME
Type            = STRING
Startup         = 1

[Array]
ID              = FEW_SAMPLE_ROWS_TABLE_OWNER
Label           = table owner
Table           = FEW_SAMPLES_ROWS_OV
Column          = OWNER
Index           = TABLENAME
Type            = STRING
Startup         = 1

[Array]
ID              = FEW_SAMPLE_ROWS
Label           = number of sample rows
Table           = FEW_SAMPLES_ROWS_OV
Column          = SAMPLE_ROWS
Index           = TABLENAME
Type            = NUMERIC
Startup         = 1

[Array]
ID              = FEW_SAMPLE_ROWS_ROW_COUNT
Label           = number of rows
Table           = FEW_SAMPLES_ROWS_OV
Column          = ROW_COUNT
Index           = TABLENAME
Type            = NUMERIC
Startup         = 1

[Array]
ID              = FEW_SAMPLE_ROWS_PAGECOUNT
Label           = number of rows
Table           = FEW_SAMPLES_ROWS_OV
Column          = PAGE_COUNT
Index           = TABLENAME
Type            = NUMERIC
Startup         = 1
#===============================================================================
#                        ARRAY DEFINITIONS / LOCK_WAITERS
#===============================================================================
#===============================================================================
#                        ARRAY DEFINITIONS / LOCK_WAITERS
#===============================================================================
[Array]
ID              = LOCK_WAITER_TRANS
Label           = Lock waiters trans id
Table           = LOCK_WAITERS_AR
Column          = WAITING_TRANS
Index           = WAITING_TRANS
Type            = NUMERIC

[Array]
ID              = LOCK_HOLDER_TID
Label           = Lock holders task id
Table           = LOCK_WAITERS_AR
Column          = HOLDER_TASK
Index           = WAITING_TRANS
Type            = NUMERIC

[Array]
ID              = LOCK_HOLDER_APPL
Label           = Lock holders task id
Table           = LOCK_WAITERS_AR
Column          = HOLDER_APPL
Index           = WAITING_TRANS
Type            = NUMERIC

[Array]
ID              = LOCK_HOLDER_LOCKMODE
Label           = Lock holders lock mode
Table           = LOCK_WAITERS_AR
Column          = HOLER_LOCKMODE
Index           = WAITING_TRANS
Type            = STRING

[Array]
ID              = LOCK_HOLDER_TASK_STATE
Label           = Lock holders task state
Table           = LOCK_WAITERS_AR
Column          = HOLDER_TASK_STATE
Index           = WAITING_TRANS
Type            = STRING

[Array]
ID              = LOCK_REQUESTOR_TID
Label           = Lock requestors task id
Table           = LOCK_WAITERS_AR
Column          = WAITING_TASK
Index           = WAITING_TRANS
Type            = NUMERIC

[Array]
ID              = LOCK_REQUESTOR_APPL
Label           = Lock requestors task id
Table           = LOCK_WAITERS_AR
Column          = WAITING_APPL
Index           = WAITING_TRANS
Type            = NUMERIC

[Array]
ID              = LOCK_REQUESTOR_LOCKMODE
Label           = Lock requestors lock mode
Table           = LOCK_WAITERS_AR
Column          = WAITING_REQMODE
Index           = WAITING_TRANS
Type            = STRING

[Array]
ID              = LOCK_TABLENAME
Label           = Locked table
Table           = LOCK_WAITERS_AR
Column          = TABLENAME
Index           = WAITING_TRANS
Type            = STRING

[Array]
ID              = LOCK_ROWIDHEX
Label           = Locked rowid (hex)
Table           = LOCK_WAITERS_AR
Column          = ROWIDHEX
Index           = WAITING_TRANS
Type            = STRING

[Monitor]
ID              = WAIT_FOR_LOCK_ON_TABLE
Label           = "Task " + LOCK_REQUESTOR_TID[] + " (appl. " + LOCK_REQUESTOR_APPL[] + ") is waiting for lock '" + LOCK_REQUESTOR_LOCKMODE[] + "' on table " + LOCK_TABLENAME[] + " since " + INTERVAL +\
                  "s, locked '" + LOCK_HOLDER_LOCKMODE[] + "' from task " + LOCK_HOLDER_TID[] + " (appl. " + LOCK_HOLDER_APPL[] + ", state " + LOCK_HOLDER_TASK_STATE[] + ")"
Class           = Performance
Description     = 
Skip1           = LOCK_TABLENAME[] == "?"
Warning3        = LOCK_REQUESTOR_TID[] == last(LOCK_REQUESTOR_TID[]) && LOCK_WAITER_TRANS[] == last(LOCK_WAITER_TRANS[])
ForEach         = LOCK_REQUESTOR_TID

[Monitor]
ID              = WAIT_FOR_LOCK_ON_ROWID
Label           = "Task " + LOCK_REQUESTOR_TID[] + " (appl. " + LOCK_REQUESTOR_APPL[] + ") is waiting for lock '" + LOCK_REQUESTOR_LOCKMODE[] + "' on row id " + LOCK_ROWIDHEX[] + " since " + INTERVAL +\
                  "s, locked '" + LOCK_HOLDER_LOCKMODE[] + "' from task " + LOCK_HOLDER_TID[] + " (appl. " + LOCK_HOLDER_APPL[] + ", state " + LOCK_HOLDER_TASK_STATE[] + ")"
Class           = Performance
Description     = 
Skip1           = LOCK_TABLENAME[] != "?"
Warning3        = LOCK_REQUESTOR_TID[] == last(LOCK_REQUESTOR_TID[]) && LOCK_WAITER_TRANS[] == last(LOCK_WAITER_TRANS[])
ForEach         = LOCK_REQUESTOR_TID
Maxversion      = 7.4.3.33

#===============================================================================
#                        ARRAY DEFINITIONS / MONITOR_OMS DETAILS
#===============================================================================
[Array]
ID              = METHOD_NAME
InstanceType	= LVC 
Label           = Methodname
Table           = MONITOR_OMS_AR
Column          = OMS_METHOD_NAME
Index           = OMS_METHOD_NAME
Type            = STRING

[Array]
ID              = COM_ROUTINE_TOTAL_CALLS_ABS
InstanceType	= LVC 
Label           = # of calls DB procedure
Table           = MONITOR_OMS_AR
Column          = OMS_TOTAL_METHOD_CALLS
Index           = OMS_METHOD_NAME
Type            = NUMERIC

[Array]
ID              = COM_ROUTINE_CALLS
InstanceType	= LVC 
Label           = Timeout inside DB procedure
Type            = NUMERIC
Formula         = COM_ROUTINE_TOTAL_CALLS_ABS[] - last(COM_ROUTINE_TOTAL_CALLS_ABS[])
ForEach         = COM_ROUTINE_TOTAL_CALLS_ABS

[Array]
ID              = OMS_TOTAL_METHOD_AVG_RUNTIME
InstanceType	= LVC 
Label           = # avg runtime overall calls
Table           = MONITOR_OMS_AR
Column          = OMS_TOTAL_METHOD_AVG_RUNTIME
Index           = OMS_METHOD_NAME
Type            = NUMERIC

[Array]
ID              = OMS_METHOD_AVG_RUNTIME
InstanceType	= LVC 
Label           = Timeout inside DB procedure
Type            = NUMERIC
Formula         = ( COM_ROUTINE_TOTAL_CALLS_ABS[] * OMS_TOTAL_METHOD_AVG_RUNTIME[] - \
                    last(COM_ROUTINE_TOTAL_CALLS_ABS[]) * last(OMS_TOTAL_METHOD_AVG_RUNTIME[])) / COM_ROUTINE_CALLS[]
ForEach         = COM_ROUTINE_TOTAL_CALLS_ABS

[Array]
ID              = COM_ROUTINE_TIMEOUTS_ABS
InstanceType	= LVC 
Label           = Timeout inside DB procedure
Table           = MONITOR_OMS_AR
Column          = OMS_TIMEOUTS
Index           = OMS_METHOD_NAME
Type            = NUMERIC

[Array]
ID              = COM_ROUTINE_TIMEOUTS
InstanceType	= LVC 
Label           = Timeout inside DB procedure
Type            = NUMERIC
Formula         = COM_ROUTINE_TIMEOUTS_ABS[] - last(COM_ROUTINE_TIMEOUTS_ABS[])
ForEach         = COM_ROUTINE_TIMEOUTS_ABS

[Array]
ID              = COM_ROUTINE_TERMINATES_ABS
InstanceType	= LVC 
Label           = Termination of DB procedure in case if an error
Table           = MONITOR_OMS_AR
Column          = OMS_TERMINATE
Index           = OMS_METHOD_NAME
Type            = NUMERIC

[Array]
ID              = COM_ROUTINE_TERMINATES
InstanceType	= LVC 
Label           = Termination of DB procedure in case if an error
Type            = NUMERIC
Formula         = COM_ROUTINE_TERMINATES_ABS[] - last(COM_ROUTINE_TERMINATES_ABS[])
ForEach         = COM_ROUTINE_TERMINATES_ABS

[Array]
ID              = AVG_WAIT_FOR_CONS_VIEW
InstanceType	= LVC 
Label           = avg. wait time for consistent view 
Table           = MONITOR_OMS_AR
Column          = AVG_WAIT_FOR_CONS_VIEW
Index           = OMS_METHOD_NAME
Type            = NUMERIC
ForEach         = AVG_WAIT_FOR_CONS_VIEW

[Array]
ID              = MAX_WAIT_FOR_CONS_VIEW
InstanceType	= LVC 
Label           = max. wait time for consistent view 
Table           = MONITOR_OMS_AR
Column          = MAX_WAIT_FOR_CONS_VIEW
Index           = OMS_METHOD_NAME
Type            = NUMERIC
ForEach         = MAX_WAIT_FOR_CONS_VIEW

#[Monitor]
#ID              = COM_ROUTINE_CALLED
#InstanceType 	= LVC 
#Label           = COM_ROUTINE_CALLS[] + " calls of DB procedure '" + METHOD_NAME[] + "' avg runtime " + OMS_METHOD_AVG_RUNTIME[] + " ms (overall avg " + OMS_TOTAL_METHOD_AVG_RUNTIME[] + " ms)"
#Class           = OMS
#Description     = 
#Skip1           = COM_ROUTINE_CALLS[] <= 0
#Information     = OMS_METHOD_AVG_RUNTIME[] <= OMS_TOTAL_METHOD_AVG_RUNTIME[] 
#Warning1        = OMS_METHOD_AVG_RUNTIME[] >  OMS_TOTAL_METHOD_AVG_RUNTIME[] * 2 || OMS_METHOD_AVG_RUNTIME[] > 100
#ForEach         = METHOD_NAME

#===============================================================================
#                        ARRAY DEFINITIONS / USER DETAILS
#===============================================================================
[Array]
ID              = USER_TASK_STATE
Label           = State of usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = STATEDESC
Index           = DBPID
Type            = STRING

[Array]
ID              = USER_TASK_OMSCOMROUTINE_NAME
InstanceType	= LVC 
Label           = Name of DB procedure processed by usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = OMSCOMROUTINENAME
Index           = DBPID
Type            = STRING

[Array]
ID              = USER_TASK_RUNNING_PARSEID
InstanceType	= OLTP
Label           = parse id processed by usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = PARSEID
Index           = DBPID
Type            = STRING

[Array]
ID              = USER_TASK_PID
Label           = PID of usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = DBPID
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_REGIONACCESSCNT_ABS
Label           = Region Access Count of usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = REGIONACCESSCNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_REGIONACCESSCNT
Label           = Region Access Count of usertask
Type            = NUMERIC
Formula         = USER_TASK_REGIONACCESSCNT_ABS[] - last(USER_TASK_REGIONACCESSCNT_ABS[])
ForEach         = USER_TASK_REGIONACCESSCNT_ABS

[Array]
ID              = USER_TASK_DISPATCHCNT_ABS
Label           = Dispatch count of usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = DISPATCHCNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_DISPATCHCNT
Label           = Dispatch count of usertask
Type            = NUMERIC
Formula         = USER_TASK_DISPATCHCNT_ABS[] - last(USER_TASK_DISPATCHCNT_ABS[])
ForEach         = USER_TASK_DISPATCHCNT_ABS

[Array]
ID              = USER_TASK_APPL_PID
Label           = application pid connected to usertask
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = APPL_PID
Index           = DBPID
Type            = NUMERIC

# -------------------- USER COMMAND TIME STATISTICS --------------------

[Array]
ID              = USER_TASK_COMM_CNT_ABS
Label           = communication count absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = COMMCNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_COMM_CNT
Label           = communication count during time period
Type            = NUMERIC
Formula         = USER_TASK_COMM_CNT_ABS[] - last(USER_TASK_COMM_CNT_ABS[])
ForEach         = USER_TASK_COMM_CNT_ABS

[Array]
ID              = USER_TASK_TOTCMDEXECTIME_ABS
Label           = command execution time absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = TOTCMDEXECUTETIME
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_AVGCMDEXECTIME
Label           = command execution during time period
Type            = NUMERIC
Formula         = (USER_TASK_TOTCMDEXECTIME_ABS[] - last(USER_TASK_TOTCMDEXECTIME_ABS[]) ) / 1000 / USER_TASK_COMM_CNT[]
ForEach         = USER_TASK_TOTCMDEXECTIME_ABS

# -------------------- USER VSUSPEND TIME STATISTICS --------------------

[Array]
ID              = USER_TASK_VSUSPENDCNT_ABS
Label           = command count absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = VSUSPENDCNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_VSUSPENDCNT
Label           = vsuspend count during time period
Type            = NUMERIC
Formula         = USER_TASK_VSUSPENDCNT_ABS[] - last(USER_TASK_VSUSPENDCNT_ABS[])
ForEach         = USER_TASK_VSUSPENDCNT_ABS

[Array]
ID              = USER_TASK_VSUSPENDABSTIME_ABS
Label           = command execution time absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = VSUSPENDABSTIME
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_AVGVSUSPENDABSTIME
Label           = command execution during time period
Type            = NUMERIC
Formula         = (USER_TASK_VSUSPENDABSTIME_ABS[] - last(USER_TASK_VSUSPENDABSTIME_ABS[]) ) / 1000 / USER_TASK_VSUSPENDCNT[]
ForEach         = USER_TASK_VSUSPENDABSTIME_ABS

# -------------------- USER VWAIT TIME STATISTICS --------------------

[Array]
ID              = USER_TASK_VWAITCNT_ABS
Label           = vwait count absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = VWAITCNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_VWAITCNT
Label           = vwait count during time period
Type            = NUMERIC
Formula         = USER_TASK_VWAITCNT_ABS[] - last(USER_TASK_VWAITCNT_ABS[])
ForEach         = USER_TASK_VWAITCNT_ABS

[Array]
ID              = USER_TASK_VWAITABSTIME_ABS
Label           = vwait execution time absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = VWAITABSTIME
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_AVGVWAITABSTIME
Label           = vwait execution during time period
Type            = NUMERIC
Formula         = (USER_TASK_VWAITABSTIME_ABS[] - last(USER_TASK_VWAITABSTIME_ABS[]) ) / 1000 / USER_TASK_VWAITCNT[]
ForEach         = USER_TASK_VWAITABSTIME_ABS

# -------------------- USER PHYSICAL IO COUNT --------------------

[Array]
ID              = USER_TASK_WRITECNT_ABS
Label           = physical write count absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = WRITECNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_WRITECNT
Label           = physical write count during time period
Type            = NUMERIC
Formula         = USER_TASK_WRITECNT_ABS[] - last(USER_TASK_WRITECNT_ABS[])
ForEach         = USER_TASK_WRITECNT_ABS

[Array]
ID              = USER_TASK_READCNT_ABS
Label           = physical read count absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = READCNT
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_READCNT
Label           = physical read count during time period
Type            = NUMERIC
Formula         = USER_TASK_READCNT_ABS[] - last(USER_TASK_READCNT_ABS[])
ForEach         = USER_TASK_READCNT_ABS

[Array]
ID              = USER_TASK_SIOREADABSTIME_ABS
Label           = physical read time via task absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = SIOREADTOTABSTIME
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_DIOREADABSTIME_ABS
Label           = physical read time via dev thread absolute
Table           = SYSMON_TASK_DETAIL_USER_AR
Column          = DIOREADTOTABSTIME
Index           = DBPID
Type            = NUMERIC

[Array]
ID              = USER_TASK_READAVG_ABSTIME
Label           = physical read avg time period
Type            = NUMERIC
Formula         = (USER_TASK_SIOREADABSTIME_ABS[] - last(USER_TASK_SIOREADABSTIME_ABS[]) + USER_TASK_DIOREADABSTIME_ABS[] - last(USER_TASK_DIOREADABSTIME_ABS[]) ) / 1000 / USER_TASK_READCNT[]
ForEach         = USER_TASK_SIOREADABSTIME_ABS


#===============================================================================
#                        ARRAY DEFINITIONS / REGION DETAILS
#===============================================================================
# ------- OMSVDIR REGION STATISTICS ---------------

[Parameter]
ID              = OMSVDIR_REGION_ACCESSCNT_ABS
InstanceType 	= LVC
Label           = # of OMSVDIR region accesses 
Table           = OMSVDIR_REGION_OV
Column          = ACCESSES

[Parameter]
ID              = OmsVdirAccesses
InstanceType 	= LVC
Label           = # of accesses to OMSVDIR region  
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = OMSVDIR_REGION_ACCESSCNT_ABS - last(OMSVDIR_REGION_ACCESSCNT_ABS)

[Parameter]
ID              = OMSVDIR_REGION_COLLISIONCNT_ABS
InstanceType 	= LVC
Label           = # of collisions OMSVDIR region 
Table           = OMSVDIR_REGION_OV
Column          = COLLISIONS

[Parameter]
ID              = OmsVdirCollisions
InstanceType 	= LVC
Label           = # of collisions to OMSVDIR region
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = OMSVDIR_REGION_COLLISIONCNT_ABS - last(OMSVDIR_REGION_COLLISIONCNT_ABS)

[Parameter]
ID              = PercentOmsVdirCollisions
InstanceType 	= LVC
Label           = % of collisions OMSVDIR region 
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = A
Formula         = (OMSVDIR_REGION_COLLISIONCNT_ABS - last(OMSVDIR_REGION_COLLISIONCNT_ABS)) \
                  / (OMSVDIR_REGION_ACCESSCNT_ABS - last(OMSVDIR_REGION_ACCESSCNT_ABS)) * 100

[Parameter]
ID              = OMSVDIR_REGION_WAITS_ABS
InstanceType 	= LVC
Label           = Waits for region
Table           = OMSVDIR_REGION_OV
Column          = WAITS

[Parameter]
ID              = OmsVdirWaits
InstanceType 	= LVC
Label           = Waits for OMSVDIR region
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = OMSVDIR_REGION_WAITS_ABS - last(OMSVDIR_REGION_WAITS_ABS)

[Parameter]
ID              = PercentOmsVdirWaits
InstanceType 	= LVC
Label           = OMSVDIR region waits in percent
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = A
Formula         = (OMSVDIR_REGION_WAITS_ABS - last(OMSVDIR_REGION_WAITS_ABS)) \
                  / (OMSVDIR_REGION_ACCESSCNT_ABS - last(OMSVDIR_REGION_ACCESSCNT_ABS)) * 100


# ------- CNSTVIEW REGION STATISTICS ---------------

[Parameter]
ID              = CNSTVIEW_REGION_ACCESSCNT_ABS
InstanceType 	= LVC
Label           = # of CNSTVIEW region accesses 
Table           = SYSMON_REGION_AR
Column          = ACCESSES
Condition       = REGIONNAME='CNSTVIEW'

[Parameter]
ID              = CnstViewAccesses
InstanceType 	= LVC
Label           = # of accesses to CNSTVIEW region  
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = CNSTVIEW_REGION_ACCESSCNT_ABS - last(CNSTVIEW_REGION_ACCESSCNT_ABS)

[Parameter]
ID              = CNSTVIEW_REGION_COLLISIONCNT_ABS
InstanceType 	= LVC
Label           = # of collisions CNSTVIEW region 
Table           = SYSMON_REGION_AR
Column          = COLLISIONS
Condition       = REGIONNAME='CNSTVIEW'

[Parameter]
ID              = CnstViewCollisions
InstanceType 	= LVC
Label           = # of collisions to CNSTVIEW region
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = CNSTVIEW_REGION_COLLISIONCNT_ABS - last(CNSTVIEW_REGION_COLLISIONCNT_ABS)

[Parameter]
ID              = PercentCnstViewCollisions
InstanceType 	= LVC
Label           = % of collisions CNSTVIEW region 
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = A
Formula         = (CNSTVIEW_REGION_COLLISIONCNT_ABS - last(CNSTVIEW_REGION_COLLISIONCNT_ABS)) \
                  / (CNSTVIEW_REGION_ACCESSCNT_ABS - last(CNSTVIEW_REGION_ACCESSCNT_ABS)) * 100

[Parameter]
ID              = CNSTVIEW_REGION_WAITS_ABS
InstanceType 	= LVC
Label           = Waits for region
Table           = SYSMON_REGION_AR
Column          = WAITS
Condition       = REGIONNAME='CNSTVIEW'

[Parameter]
ID              = CnstViewWaits
InstanceType 	= LVC
Label           = Waits for CNSTVIEW region
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = CNSTVIEW_REGION_WAITS_ABS - last(CNSTVIEW_REGION_WAITS_ABS)

[Parameter]
ID              = PercentCnstViewWaits
InstanceType 	= LVC
Label           = CNSTVIEW region waits in percent
Class           = OMS_REGIONS
Protocol        = 1
Protocolinfo    = A
Formula         = (CNSTVIEW_REGION_WAITS_ABS - last(CNSTVIEW_REGION_WAITS_ABS)) \
                  / (CNSTVIEW_REGION_ACCESSCNT_ABS - last(CNSTVIEW_REGION_ACCESSCNT_ABS)) * 100

# ------- REGION ARRAY ( all regions ) ---------------
[Array]
ID              = REGION_ID
Label           = Region id
Table           = SYSMON_REGION_AR
Column          = REGID
Index           = REGID
Type            = NUMERIC

[Array]
ID              = REGION_NAME
Label           = Name of region
Table           = SYSMON_REGION_AR
Column          = REGIONNAME
Index           = REGID
Type            = STRING

[Array]
ID              = REGION_OWNER
Label           = owner task of region
Table           = SYSMON_REGION_AR
Column          = OWNERDBPID
Index           = REGID
Type            = NUMERIC

[Array]
ID              = REGION_ACCESSCNT_ABS
Label           = Accesses to the region
Table           = SYSMON_REGION_AR
Column          = ACCESSES
Index           = REGID
Type            = NUMERIC

[Array]
ID              = REGION_ACCESSCNT
Label           = Region Access Count during this interval
Type            = NUMERIC
Formula         = REGION_ACCESSCNT_ABS[] - last(REGION_ACCESSCNT_ABS[])
ForEach         = REGION_ACCESSCNT_ABS

[Array]
ID              = REGION_COLLISIONCNT_ABS
Label           = Collisions on the region
Table           = SYSMON_REGION_AR
Column          = COLLISIONS
Index           = REGID
Type            = NUMERIC

[Array]
ID              = REGION_COLLISIONCNT
Label           = Region collisions during the interval
Type            = NUMERIC
Formula         = REGION_COLLISIONCNT_ABS[] - last(REGION_COLLISIONCNT_ABS[])
ForEach         = REGION_COLLISIONCNT_ABS

[Array]
ID              = REGION_COLLISION_PERCENT
Label           = Region collisions in percent during the interval
Type            = NUMERIC
#Precision       = 2
Formula         = (REGION_COLLISIONCNT_ABS[] - last(REGION_COLLISIONCNT_ABS[])) \
                  / (REGION_ACCESSCNT_ABS[] - last(REGION_ACCESSCNT_ABS[])) * 100
ForEach         = REGION_ACCESSCNT_ABS

[Array]
ID              = REGION_WAITS_ABS
Label           = Waits for region
Table           = SYSMON_REGION_AR
Column          = WAITS
Index           = REGID
Type            = NUMERIC

[Array]
ID              = REGION_WAITS
Label           = Waits for region during the interval
Type            = NUMERIC
Formula         = REGION_WAITS_ABS[] - last(REGION_WAITS_ABS[])
ForEach         = REGION_WAITS_ABS

[Array]
ID              = REGION_WAITS_PERCENT
Label           = Region waits in percent during the interval
Type            = NUMERIC
Formula         = (REGION_WAITS_ABS[] - last(REGION_WAITS_ABS[])) \
                  / (REGION_ACCESSCNT_ABS[] - last(REGION_ACCESSCNT_ABS[])) * 100
ForEach         = REGION_ACCESSCNT_ABS

[Parameter]
ID              = TOT_REGIONACCESSCNT_ABS
Label           = # of region accesses 
Class           = REGIONS
Table           = SYSMON_TOTALCOUNT
Column          = REGIONACCESSCNT
Description     = 

[Parameter]
ID              = RegionAccesses
Label           = # of region accesses 
Class           = REGIONS
Class           = OVERVIEW
Protocol        = 1
Protocolinfo    = S
Formula         = TOT_REGIONACCESSCNT_ABS - last(TOT_REGIONACCESSCNT_ABS)
Description     = 

[Parameter]
ID              = TOT_REGIONCOLLISIONCNT_ABS
Label           = # of region collisions
Class           = REGIONS
Table           = SYSMON_TOTALCOUNT
Column          = REGIONCOLLCNT
Description     = 

[Parameter]
ID              = RegionCollisions
Label           = # of region collisions
Class           = REGIONS
Class           = OVERVIEW
Protocol        = 1
Protocolinfo    = S
Formula         = TOT_REGIONCOLLISIONCNT_ABS - last(TOT_REGIONCOLLISIONCNT_ABS)
Description     = 

[Parameter]
ID              = TOT_REGIONWAITCNT_ABS
Label           = # of region waits
Class           = REGIONS
Table           = SYSMON_TOTALCOUNT
Column          = REGIONWAITCNT
Description     = 

[Parameter]
ID              = RegionWaits
Label           = # of region waits
Class           = REGIONS
Class           = OVERVIEW
Protocol        = 1
Protocolinfo    = S
Formula         = TOT_REGIONWAITCNT_ABS - last(TOT_REGIONWAITCNT_ABS)
Description     = 

[Parameter]
ID              = TOT_ENTERREGIONCOLLCNT_ABS
Label           = # collisions when entering a region
Class           = REGIONS
Table           = SYSMON_TOTALCOUNT
Column          = VBEGEXCLTASCOLLCNT
Description     = 

[Parameter]
ID              = EnterRegionColl
Label           = # collisions when entering a region
Class           = REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = TOT_ENTERREGIONCOLLCNT_ABS - last(TOT_ENTERREGIONCOLLCNT_ABS)
Description     = 

[Parameter]
ID              = TOT_LEAVEREGIONCOLLCNT_ABS
Label           = # collisions when leaving a region
Class           = REGIONS
Table           = SYSMON_TOTALCOUNT
Column          = VENDEXCLTASCOLLCNT
Description     = 

[Parameter]
ID              = LeaveRegionColl
Label           = # collisions when leaving a region
Class           = REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = TOT_LEAVEREGIONCOLLCNT_ABS - last(TOT_LEAVEREGIONCOLLCNT_ABS)
Description     = 

[Parameter]
ID              = TOT_TASKSELFSUSPCNT_ABS
Label           = # collisions when leaving a region
Class           = REGIONS
Table           = SYSMON_TOTALCOUNT
Column          = TASKSELFSUSPCNT
Description     = 

[Parameter]
ID              = TaskSelfSusp
Label           = # voluntary dispatches of tasks
Class           = REGIONS
Protocol        = 1
Protocolinfo    = S
Formula         = TOT_TASKSELFSUSPCNT_ABS - last(TOT_TASKSELFSUSPCNT_ABS)
Description     = 

[Array]
ID              = BLOCKED_REGIONNAME
Label           = Name of the blocked region
Table           = REGION_BLOCKERS_AR
Column          = REGIONNAME
Index           = REGIONNAME
Type            = STRING

[Array]
ID              = BLOCKED_REGION_OWNER
Label           = Owner of the blocked region
Table           = REGION_BLOCKERS_AR
Column          = OWNERDBPID
Index           = REGIONNAME
Type            = NUMERIC

[Array]
ID              = BLOCKED_REGION_NUM_WAITERS
Label           = # tasks waiting for the blocked region
Table           = REGION_BLOCKERS_AR
Column          = NUM_WAITERS
Index           = REGIONNAME
Type            = NUMERIC

#===============================================================================
#                        OBJECT_LOCKS
#===============================================================================
[Array]
ID              = BLOCKED_OBJECTID
InstanceType    = LVC 
Label           = blocked object id
Table           = OBJ_LOCK_BLOCKERS_AR
Column          = OBJECTID
Index           = OBJECTID
Type            = STRING
Minversion      = 7.4.3.39

[Array]
ID              = BLOCKED_CLASS_ID
InstanceType    = LVC 
Label           = blocked object id
Table           = OBJ_LOCK_BLOCKERS_AR
Column          = CLASS_ID
Index           = OBJECTID
Type            = STRING
Minversion      = 7.4.3.39

[Array]
ID              = BLOCKED_OBJ_HOLDERTASKID
InstanceType    = LVC 
Label           = Owner of the blocked object
Table           = OBJ_LOCK_BLOCKERS_AR
Column          = HOLDERTASKID
Index           = OBJECTID
Type            = NUMERIC
Minversion      = 7.4.3.39

[Array]
ID              = BLOCKED_OBJ_NUM_WAITERS
InstanceType    = LVC 
Label           = # tasks waiting for the blocked object
Table           = OBJ_LOCK_BLOCKERS_AR
Column          = NUM_WAITERS
Index           = OBJECTID
Type            = NUMERIC
Minversion      = 7.4.3.39

[Monitor]
ID              = WAIT_FOR_OBJECT
Label           = BLOCKED_OBJ_NUM_WAITERS[] + " tasks are waiting for Class id " + BLOCKED_CLASS_ID[] + ", object '" + BLOCKED_OBJECTID[] + "', owner: task " +  BLOCKED_OBJ_HOLDERTASKID[]
Class           = Environment
Description     =
Skip1           = BLOCKED_OBJ_NUM_WAITERS[] <= 0 
Information     = BLOCKED_OBJ_NUM_WAITERS[] > 1
Warning1        = BLOCKED_OBJ_NUM_WAITERS[] > 5
Warning2        = BLOCKED_OBJ_NUM_WAITERS[] > 10
Warning3        = BLOCKED_OBJ_NUM_WAITERS[] > 20
ForEach         = BLOCKED_OBJECTID
InstanceType    = LVC 
Minversion      = 7.4.3.39
#===============================================================================
#                        SPINLOCKS DETAILS
#===============================================================================
[Parameter]
ID              = SPINLOCKS_ABS
Label           = 
Table           = SPINLOCKS_OV
Column          = LOCKS
Description     =

[Parameter]
ID              = SpinLocks
Label           = # spinlocks
Protocol        = 1
Protocolinfo    = S
Class           = REGIONS
Formula         = SPINLOCKS_ABS - last(SPINLOCKS_ABS)
Description     =

[Parameter]
ID              = SPINLOCKCOLL_ABS
Label           = 
Table           = SPINLOCKS_OV
Column          = COLLISIONS
Description     =

[Parameter]
ID              = SpinLockCollisions
Label           = # collisions during spinlock
Protocol        = 1
Protocolinfo    = S
Class           = REGIONS
Formula         = SPINLOCKCOLL_ABS - last(SPINLOCKCOLL_ABS)
Description     =

[Parameter]
ID              = SPINLOCKLOOPS_ABS
Label           = 
Table           = SPINLOCKS_OV
Column          = TOTAL_SPIN_LOOPS
Description     =

[Parameter]
ID              = SpinLockLoops
Label           = # loops during spinlock collisions
Protocol        = 1
Protocolinfo    = S
Class           = REGIONS
Formula         = SPINLOCKLOOPS_ABS - last(SPINLOCKLOOPS_ABS)
Description     =

[Parameter]
ID              = SPINLOCKYIELDS_ABS
Label           = 
Table           = SPINLOCKS_OV
Column          = TOTAL_YIELD_LOOPS
Description     =

[Parameter]
ID              = SpinLockYields
Label           = # thread yields during spinlock coll
Protocol        = 1
Protocolinfo    = S
Class           = REGIONS
Formula         = SPINLOCKYIELDS_ABS - last(SPINLOCKYIELDS_ABS)
Description     =

[Array]
ID              = SPINLOCK_NAME
Label           = Name of spinlock
Table           = SPINLOCKS_AR
Column          = SPINLOCK_NAME
Index           = SPINLOCK_NAME
Type            = STRING

[Array]
ID              = SPINLOCK_LOCKS_ABS
Label           = # of spinlock
Table           = SPINLOCKS_AR
Column          = LOCKS
Index           = SPINLOCK_NAME
Type            = NUMERIC

[Array]
ID              = SPINLOCK_LOCKS
Label           = # of spinlock
Type            = NUMERIC
Formula         = SPINLOCK_LOCKS_ABS[] - last(SPINLOCK_LOCKS_ABS[])
ForEach         = SPINLOCK_LOCKS_ABS

[Array]
ID              = SPINLOCK_COLLISIONS_ABS
Label           = # of spinlock collisions
Table           = SPINLOCKS_AR
Column          = COLLISIONS
Index           = SPINLOCK_NAME
Type            = NUMERIC

[Array]
ID              = SPINLOCK_COLLISIONS
Label           = # of spinlock collisions
Type            = NUMERIC
Formula         = SPINLOCK_COLLISIONS_ABS[] - last(SPINLOCK_COLLISIONS_ABS[])
ForEach         = SPINLOCK_COLLISIONS_ABS

[Array]
ID              = SPINLOCK_COLLISIONS_PERCENT
Label           = spinlock collisions in percent during interval
Type            = NUMERIC
Formula         = (SPINLOCK_COLLISIONS_ABS[] - last(SPINLOCK_COLLISIONS_ABS[])) \
                  / (SPINLOCK_LOCKS_ABS[] - last(SPINLOCK_LOCKS_ABS[])) * 100
ForEach         = SPINLOCK_LOCKS_ABS

[Array]
ID              = SPINLOCK_TOTAL_SPIN_LOOPS_ABS
Label           = # of spinloops during collisions
Table           = SPINLOCKS_AR
Column          = TOTAL_SPIN_LOOPS
Index           = SPINLOCK_NAME
Type            = NUMERIC

[Array]
ID              = SPINLOCK_TOTAL_SPIN_LOOPS
Label           = # of spinloops during collisions
Type            = NUMERIC
Formula         = SPINLOCK_TOTAL_SPIN_LOOPS_ABS[] - last(SPINLOCK_TOTAL_SPIN_LOOPS_ABS[])
ForEach         = SPINLOCK_TOTAL_SPIN_LOOPS_ABS

[Array]
ID              = SPINLOCK_TOTAL_YIELD_LOOPS_ABS
Label           = # of yield loops during collisions
Table           = SPINLOCKS_AR
Column          = TOTAL_YIELD_LOOPS
Index           = SPINLOCK_NAME
Type            = NUMERIC

[Array]
ID              = SPINLOCK_TOTAL_YIELD_LOOPS
Label           = # of yield loops during collisions
Type            = NUMERIC
Formula         = SPINLOCK_TOTAL_YIELD_LOOPS_ABS[] - last(SPINLOCK_TOTAL_YIELD_LOOPS_ABS[])
ForEach         = SPINLOCK_TOTAL_YIELD_LOOPS_ABS

[Array]
ID              = SPINLOCK_MAX_YIELD_LOOPS
Label           = # of yield loops during collisions
Table           = SPINLOCKS_AR
Column          = MAX_YIELD_LOOPS
Index           = SPINLOCK_NAME
Type            = NUMERIC

#===============================================================================
#                        MONITOR DEFINITIONS
#===============================================================================

#-------------------------------------------------------------------------------
#                             General
#-------------------------------------------------------------------------------

[Monitor]
ID              = DATABASE_FILLING_LVC
InstanceType 	= LVC
Label           = "Data volume filling level " + DB_Filling + "%, " + DB_Size + " pages configured, perm used " + PermUsed + ", temp used " + TempUsed 
Class           = General
Description     =
Warning3        = DB_Filling > 97 
Warning2        = DB_Filling > 90
Warning1        = DB_Filling > 88
UserAction      =

[Monitor]
ID              = DATABASE_FILLING
InstanceType 	= OLTP
Label           = "Data volume filling level " + DB_Filling + "%, " + DB_Size + " pages configured, perm used " + PermUsed + ", temp used " + TempUsed 
Class           = General
Description     =
Warning3        = DB_Filling > 97 
Warning2        = DB_Filling > 95
Warning1        = DB_Filling > 90
UserAction      =

[Monitor]
ID              = LOG_FILLING
Label           = "Log area filling level " + Log_Filling + "%, " + Log_Size + " pages configured, " + Log_Used + " used" 
Class           = General
Description     =
Warning3        = Log_Filling > 97 
Warning2        = Log_Filling > 95
Warning1        = Log_Filling > 90
UserAction      =

[Monitor]
ID              = STATE_AUTOSAVE_LOG
Label           = "Auto save log has been switched '" + STATE_AUTOSAVE_LOG + "'" 
Class           = General
Description     =
Warning1        = STATE_AUTOSAVE_LOG != "On" && last(STATE_AUTOSAVE_LOG) == "On"
UserAction      =

#-------------------------------------------------------------------------------
#                             Caches
#-------------------------------------------------------------------------------
[Monitor]
ID              = DC_Hit
Label           = "Data cache hitrate (SQL Pages) " + DC_Hit + "%, " + DC_Fails + " of "+ DC_Acc + " accesses failed"
Class           = Caches
Description     = For a running database application the data cache hitrate \
                  should not be less than 99%, otherwise too much data has \
                  to be read physically. Data cache hitrates less than 99% \
                  for intervals of 15 minutes or more must be avoided.
Warning3        = DC_Hit < 96 \ 
                  && ( PReads ) > MAX_IDLE_IO_ALL_DEVS 
Warning2        = DC_Hit < 98 \
                  && ( PReads ) > MAX_IDLE_IO_ALL_DEVS 
Warning1        = DC_Hit < 99 \
                  && ( PReads ) > MAX_IDLE_IO_ALL_DEVS
Information     = DC_Hit < 99 \
                  && ( PReads ) < MAX_IDLE_IO_ALL_DEVS
UserAction      = In addition to enlarging the data cache (note the paging risk \
                  of the operating system), search for the cause of the high read \
                  activity. Frequently, individual SQL statements cause a high percentage \
                  of the total logical and physical read activities. Enlarging the cache \
                  only moves the load from the disk to the CPU although an additional \
                  index could transform a read-intensive table scan into a cheap direct access.

[Monitor]
ID              = CATALOG_CACHE_HITRATE
Label           = "Catalog cache hitrate (SQL Pages) " + Cat_Hit + "%, " + Cat_Fails + " of " + Cat_Acc + " accesses failed"
InstanceType 	= OLTP
Class           = Caches
Description     =
Warning3        = Cat_Hit < 80 \ 
                  && ( SQL_Cmds ) > INTERVAL 
Warning2        = Cat_Hit < 85 \
                  && ( SQL_Cmds ) > INTERVAL 
Warning1        = Cat_Hit < 90 \
                  && ( SQL_Cmds ) > INTERVAL 
Information     = Cat_Hit < 85 \
                  && ( SQL_Cmds ) <= INTERVAL
UserAction      =

[Monitor]
ID              = PARSE_ACTIVITY
Label           = "Parse activities " + Parse_Activity + "%, " + Prepares + " prepares, " + SQL_Cmds + " commands"
Class           = LOAD
Description     =
Warning3        = Parse_Activity > 75 \ 
                  && SQL_Cmds > INTERVAL 
Warning2        = Parse_Activity > 50 \ 
                  && SQL_Cmds > INTERVAL 
Warning1        = Parse_Activity > 25 \ 
                  && SQL_Cmds > INTERVAL 
Information     = Parse_Activity > 10 \ 
                  && SQL_Cmds < INTERVAL 
UserAction      =

# OMS Caches ----------

[Monitor]
ID              = DATA_CACHE_OMS_HITRATE
InstanceType 	= LVC 
Label           = "OMS cache hitrate " + OMS_Hit + "%, " + OMS_Fails + " of " + OMS_Acc + " accesses failed"
Class           = Caches
Description     =
Warning3        = OMS_Hit < 99 \ 
                  && ( OMS_Fails > MAX_IDLE_IO_ALL_DEVS ) 
Warning1        = OMS_Hit < 99.5 \
                  && ( OMS_Fails > MAX_IDLE_IO_ALL_DEVS ) 
Information     = OMS_Hit < 99.5 \
                  && ( OMS_Fails < MAX_IDLE_IO_ALL_DEVS ) 
UserAction      =

[Monitor]
ID              = DATA_CACHE_HIST_UNDO_HITRATE
InstanceType 	= LVC 
Label           = "OMS History cache hitrate " + Hist_Hit + "%, " + Hist_Fails + " of " + Hist_Acc + " accesses failed"
Class           = Caches
Description     =
Warning3        = Hist_Hit < 99 \ 
                  && ( PReads ) > MAX_IDLE_IO_ALL_DEVS 
Warning1        = Hist_Hit < 99.5 \
                  && ( PReads ) > MAX_IDLE_IO_ALL_DEVS 
Information     = Hist_Hit < 99.5 \
                  && ( PReads ) <= MAX_IDLE_IO_ALL_DEVS
UserAction      =

#-------------------------------------------------------------------------------
#                             Strategy
#-------------------------------------------------------------------------------
[Monitor]
ID              = SELECTS_AND_FETCHES_SELECTIVITY
Label           = "Selects and fetches selectivity " + SelFetSel + "%: " + SelFet + " selects and fetches, " + SelFetRR + " rows read, " + SelFetRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = SelFet == 0 || SelFetRR < INTERVAL
Warning3        = SelFetSel < 0.3
Warning2        = SelFetSel < 2.5
Warning1        = SelFetSel < 5.0
UserAction      =

[Monitor]
ID              = DELETES_SELECTIVITY
Label           = "Deletes selectivity " + DelSel + "%: " + Deletes + " deletes, " + DelRR + " rows read, " + DelRD + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = Deletes == 0 || DelRR < INTERVAL
Warning3        = DelSel < 0.3
Warning2        = DelSel < 2.5
Warning1        = DelSel < 5.0
UserAction      =

[Monitor]
ID              = UPDATES_SELECTIVITY
Label           = "Updates selectivity " + UpdSel + "%: " + Updates + " updates, " + UpdRR + " rows read, " + UpdRU + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = Updates == 0 || UpdRR < INTERVAL
Warning3        = UpdSel < 0.3
Warning2        = UpdSel < 2.5
Warning1        = UpdSel < 5.0
UserAction      =

[Monitor]
ID              = TABLE_SCANS_SELECTIVITY
Label           = TabScan + " table scans, selectivity " + TabScanSel + "%: " + TabScanRR + " rows read, " + TabScanRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = TabScan == 0 || TabScanRR < INTERVAL || ( TabScanRR / TabScan ) < 50.0 
Warning3        = TabScanSel < 0.3
Warning2        = TabScanSel < 2.5
Warning1        = TabScanSel < 5.0
UserAction      =

[Monitor]
ID              = PRIMARY_KEY_RANGE_SELECTIVITY
Label           = PKeyRgAcc + " primary key range accesses, selectivity " + PKeyRgSel + "%: " + PKeyRgRR + " rows read, " + PKeyRgRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = PKeyRgAcc == 0 || PKeyRgRR < INTERVAL || ( PKeyRgRR / PKeyRgAcc ) < 50.0 
Warning3        = PKeyRgSel < 0.3
Warning2        = PKeyRgSel < 2.5
Warning1        = PKeyRgSel < 5.0
UserAction      =

[Monitor]
ID              = INDEX_SELECTIVITY
Label           = InxAcc + " index accesses, selectivity " + InxSel + "%: " + InxRR + " rows read, " + InxRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = InxAcc == 0 || InxRR < INTERVAL || ( InxRR / InxAcc ) < 50.0 
Warning3        = InxSel < 0.3
Warning2        = InxSel < 2.5
Warning1        = InxSel < 5.0
UserAction      =

[Monitor]
ID              = INDEX_RANGE_SELECTIVITY
Label           = InxRgAcc + " index range accesses, selectivity " + InxRgSel + "%: " + InxRgRR + " rows read, " + InxRgRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = InxRgRR == 0 || InxRgRR < INTERVAL || ( InxRgRR / InxRgAcc ) < 50.0
Warning3        = InxRgSel < 0.3
Warning2        = InxRgSel < 2.5
Warning1        = InxRgSel < 5.0
UserAction      =

[Monitor]
ID              = ISOLATED_INDEX_SELECTIVITY
Label           = IsoInxAcc + " isolated index accesses, selectivity " + IsoInxSel + "%: " + IsoInxRR + " rows read, " + IsoInxRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = IsoInxAcc == 0 || IsoInxRR < INTERVAL || ( IsoInxRR / IsoInxAcc ) < 50.0 
Warning3        = IsoInxSel < 0.3
Warning2        = IsoInxSel < 2.5
Warning1        = IsoInxSel < 5.0
UserAction      =

[Monitor]
ID              = ISOLATED_INDEX_RANGE_SELECTIVITY
Label           = IsoInxRgAcc + " isolated index range accesses, selectivity " + IsoInxRgSel + "%: " + IsoInxRgRR + " rows read, " + IsoInxRgRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = IsoInxRgAcc == 0 || IsoInxRgRR < INTERVAL || ( IsoInxRgRR / IsoInxRgAcc ) < 50.0
Warning3        = IsoInxRgSel < 0.3
Warning2        = IsoInxRgSel < 2.5
Warning1        = IsoInxRgSel < 5.0
UserAction      =

[Monitor]
ID              = ISOLATED_INDEX_SCANS_SELECTIVITY
Label           = IsoInxScan + " isolated index scans, selectivity " + IsoInxScanSel + "%: " + IsoInxScanRR + " rows read, " + IsoInxScanRQ + " rows qualified"
Class           = STRATEGY
Description     =
Skip1           = IsoInxScan == 0 || IsoInxScanRR < INTERVAL || ( IsoInxScanRR / IsoInxScan ) < 50.0 
Warning3        = IsoInxScanSel < 0.3
Warning2        = IsoInxScanSel < 2.5
Warning1        = IsoInxScanSel < 5.0
UserAction      =

#-------------------------------------------------------------------------------
#                             Locking
#-------------------------------------------------------------------------------

[Monitor]
ID              = LOCKLIST_ESCALATIONS
Label           = "Lock list escalations: " + LocklEscalations
Class           = Locking
Description     =
Warning3        = LocklEscalations > 0 
UserAction      =

[Monitor]
ID              = LOCK_REQUEST_TIMEOUTS
Label           = "Lock request timeouts: " + LockReqTimeouts
Class           = Locking
Description     =
Warning3        = LockReqTimeouts > 0 
UserAction      =

[Monitor]
ID              = NUM_TREELOCK_WAITERS
Label           = "Number of tasks requesting a treelock " + TreeLWaiters
Class           = Environment
Description     =
Information     = TreeLWaiters > 0 
Warning3        = TreeLWaiters > 20 
UserAction      =

#-------------------------------------------------------------------------------
#                             Logging
#-------------------------------------------------------------------------------
[Monitor]
ID              = LOG_QUEUE_OVERFLOWS
Label           = "Log queue overflows: " + LQ_Overflows 
Class           = Logging
Description     =
Warning3        = LQ_Overflows > 0 
UserAction      =

[Monitor]
ID              = LOG_QUEUE_MAX_USED_PAGES
Label           = "max Log queue filling: " + LQ_MaxUsed + " %"
Class           = Logging
Description     =
Warning3        = LOG_QUEUE_MAX_USED_PAGES_INTERVAL > 0 && LQ_MaxUsed > 80
UserAction      =

#-------------------------------------------------------------------------------
#                             State (RTE)
#-------------------------------------------------------------------------------

[Monitor]
ID              = SIO_WR_ALOG_TIME_AVG
Label           = "Avg log write time (log writer task) " + AvgWTime_LogPTask + " ms, " + Log_PTaskWrites + " writes, " + Log_PTaskWrittenPg + " pages"
Class           = Time
Description     =
Warning3        = AvgWTime_LogPTask > 100
Information     = AvgWTime_LogPTask > 50
UserAction      =

[Monitor]
ID              = DIO_WR_ALOG_TIME_AVG
Label           = "Avg log write time (dev thread) " + AvgWTime_LogPThread + " ms, " + Log_PThreadWrites + " writes, " + Log_PThreadWrittenPg + " pages"
Class           = Time
Description     =
Warning3        = AvgWTime_LogPThread > 100
Information     = AvgWTime_LogPThread > 50
UserAction      =

#-------------------------------------------------------------------------------
#                             IO
#-------------------------------------------------------------------------------

[Monitor]
ID              = TEMP_PAGE_PHYSICAL_WRITES
Label           ="Number of physical writes of temporary pages: " + Temp_PWrites
Class           = IO
Description     =
Warning3        = Temp_PWrites > MAX_IDLE_IO_ALL_DEVS 
Information     = Temp_PWrites > 0 
UserAction      =

[Monitor]
ID              = PReads
Label           = "Number of physical reads: " + PReads
Class           = IO
Description     =
Information     = PReads > ( 4 * MAX_IDLE_IO_ALL_DEVS )
UserAction      =

[Monitor]
ID              = PHYSICAL_WRITES
Label           ="Number of physical writes: " + PWrites
Class           = IO
Description     =
Information     = PWrites > ( 4 * MAX_IDLE_IO_ALL_DEVS )
UserAction      =

[Monitor]
ID              = LONG_SAVEPOINT_RUNTIME
Label           ="runtime of last savepoint: " + LastSvpInSec + " seconds"
Class           = IO
Description     =
Skip1           = Savepoints < 1 
Warning1        = LastSvpInSec + LastSvpInSec > RESTART_TIME
Warning2        = LastSvpInSec > RESTART_TIME
UserAction      =
Minversion      = 7.4.3.10

#-------------------------------------------------------------------------------
#                             Memory
#-------------------------------------------------------------------------------

[Monitor]
ID              = MORE_HISTORY_THAN_OMS_PAGES
InstanceType 	= LVC 
Label           = "Number of cached history pages (" + Hist_Pages + ") exceeds number of cached OMS pages ("+ OMS_Pages + ")"
Class           = Memory
Description     =
Warning3        = Hist_Pages / OMS_Pages > 3 
Warning2        = Hist_Pages / OMS_Pages > 2
Warning1        = Hist_Pages / OMS_Pages > 1 
Information     = Hist_Pages > OMS_Pages
UserAction      =

#-------------------------------------------------------------------------------
#                             OMS
#-------------------------------------------------------------------------------

[Monitor]
ID              = OMS_TOTAL_HEAP_USAGE
InstanceType 	= LVC 
Label           = "OMS heap utilization " + OMS_TOTAL_HEAP_USAGE_ABS / 1024 / OMS_HEAP_LIMIT * 100 + " %, used/max : " + ActHeapUsed + " / " + OMS_HEAP_LIMIT / 1024 + " MB"
Class           = OMS_HEAP
Description     =
Skip1           = OMS_HEAP_LIMIT == 0
Warning1        = OMS_TOTAL_HEAP_USAGE_ABS / 1024 / OMS_HEAP_LIMIT > 0.7
Warning2        = OMS_TOTAL_HEAP_USAGE_ABS / 1024 / OMS_HEAP_LIMIT > 0.8
Warning3        = OMS_TOTAL_HEAP_USAGE_ABS / 1024 / OMS_HEAP_LIMIT > 0.9
UserAction      =

[Monitor]
ID              = OMS_VERSION_UNLOADS
InstanceType 	= LVC 
Label           = "OMS version unloads: " + VersUnloads
Class           = OMS_HEAP
Warning3        = VersUnloads > 0
UserAction      =

[Monitor]
ID              = OUTOFMEMORYEXCEPTIONS
InstanceType 	= LVC 
Label           = OutOfMemExcept + " out of memory exceptions"
Class           = OMS_HEAP
Description     =
Warning3        = OutOfMemExcept > 0
UserAction      =

[Monitor]
ID              = OMS_HEAP_COLLISIONS
InstanceType 	= LVC 
Label           = "OMS heap collisions "+ HeapCollPercent + "%, " + HeapColl + " collisons during " + Spinlocks + " heap allocations / deallocations"
Class           = OMS_HEAP
Description     =
Skip1           = HeapColl < INTERVAL * 10
Warning1        = HeapCollPercent > 5
Warning2        = HeapCollPercent > 10
Warning3        = HeapCollPercent > 25
UserAction      =

[Monitor]
ID              = COM_ROUTINE_TIMEOUTS_ZERO_WAITTIME
InstanceType 	= LVC 
Label           = COM_ROUTINE_TIMEOUTS[] + " Timeouts for DB procedure: " + METHOD_NAME[] + ", 0 wait time"
Class           = OMS
Description     = 
Information     = MAX_WAIT_FOR_CONS_VIEW[] == 0 && COM_ROUTINE_TIMEOUTS[] > 0
Warning1        = MAX_WAIT_FOR_CONS_VIEW[] == 0 && COM_ROUTINE_TIMEOUTS[] > INTERVAL 
ForEach         = METHOD_NAME

[Monitor]
ID              = COM_ROUTINE_TIMEOUTS_WITH_WAITTIME
InstanceType 	= LVC 
Label           = COM_ROUTINE_TIMEOUTS[] + " Timeouts for DB procedure: " + METHOD_NAME[] + ", avg/max wait time for consitent view: " + AVG_WAIT_FOR_CONS_VIEW[] / 1000 + " / " + MAX_WAIT_FOR_CONS_VIEW[] / 1000 + " sec"
Class           = OMS
Description     = 
Information     = MAX_WAIT_FOR_CONS_VIEW[] > 0 && COM_ROUTINE_TIMEOUTS[] > 0
Warning1        = MAX_WAIT_FOR_CONS_VIEW[] > 0 && COM_ROUTINE_TIMEOUTS[] > INTERVAL 
Warning3        = MAX_WAIT_FOR_CONS_VIEW[] > 0 && COM_ROUTINE_TIMEOUTS[] > 0 && AVG_WAIT_FOR_CONS_VIEW[] > 1000
ForEach         = METHOD_NAME

[Monitor]
ID              = COM_ROUTINE_TERMINATE
InstanceType 	= LVC 
Label           = COM_ROUTINE_TERMINATES[] + " terminatates of DB procedure '" + METHOD_NAME[] + "' due to errors"
Class           = OMS
Description     = 
Warning3        = COM_ROUTINE_TERMINATES[] > 0
ForEach         = METHOD_NAME

#-------------------------------------------------------------------------------
#                 regions / task states
#-------------------------------------------------------------------------------

[Monitor]
ID              = NUM_FREE_USER
Label           = "Number of free user tasks " + FreeUser + ", connected users " + ConnectedUser 
Class           = Environment
Description     =
Warning2	    = FreeUser <= 3 
UserAction      =

[Monitor]
ID              = NUM_RESTARTS_OF_GARBCOLLS_NO_PHYSREADS
InstanceType 	= LVC 
Label           = "Garbage collector tasks activated " + GC_Activities + " times, currently active: " + ActivGarbColls
Class           = Environment
Description     =
Skip1           = GC_PhysRead > 0
Information     = GC_Activities > 0 || ActivGarbColls > 0 
UserAction      =

[Monitor]
ID              = NUM_RESTARTS_OF_GARBCOLLS_AND_PHYSREADS
InstanceType 	= LVC 
Label           = "Garbage collector tasks activated " + GC_Activities + " times, currently active: " + ActivGarbColls + ", physical reads: " + GC_PhysRead + ", avg read time: " + AvgRTime_GC + " ms"
Class           = Environment
Description     =
Skip1           = GC_PhysRead == 0
Information     = GC_Activities > 0 || ActivGarbColls > 0 
UserAction      =

[Monitor]
ID              = GARBCOLLS_ACTIVITY
InstanceType 	= LVC 
Label           = "Garbage collection deleted " + GC_ObjDel + " objects and " + GC_HistReleased + " history objects, amount of history pages now: " + HistoryUsed
Class           = Environment
Description     =
#Skip1           = GC_Activities <= 0
Information     = GC_ObjDel > 0  || GC_HistReleased >  0
UserAction      =

#[Monitor]
#ID              = NUM_ACTIVE_DATAWRITER
#Label           = "active datawriter tasks: " + ActivDataWriter
#Class           = Performance
#Description     =
#Skip1			= INTERVAL >= RESTART_TIME
#Information     = ActivDataWriter > 0 
#UserAction      =

[Monitor]
ID              = DW_WRITES
Label           = "datawriter tasks actvity: dispatches: " + DispDW + ", writes: " + DW_PThreadWrites + ", pages: " + DW_PThreadWrittenPg
Class           = Environment
Description     =
Skip1			= INTERVAL >= RESTART_TIME
Information     = DW_PThreadWrites > 0
UserAction      =

[Monitor]
ID              = DIO_WR_DW_TIME_AVG
Label           = "Avg datawriter write time (dev thread) " + AvgAbsWTime_DWPThread + " ms, " + DW_PThreadWrites + " writes, " + DW_PThreadWrittenPg + " pages"
Class           = Time
Description     =
Warning3        = AvgAbsWTime_DWPThread > 100
Information     = AvgAbsWTime_DWPThread > 50
UserAction      =

[Monitor]
ID              = DW_READS
Label           = "datawriter tasks actvity. Dispatches: " + DispDW + ", reads: " + DW_PThreadReads + ", pages: " +  DW_PThreadReadPg
Class           = Environment
Description     =
Skip1			= INTERVAL >= RESTART_TIME  
Information     = DW_PThreadReads > 0 
UserAction      =

[Monitor]
ID              = NUM_CANCELLED_TASKS
Label           = "Number of cancelled tasks: " + CancelledTasks
Class           = Performance
Description     =
Warning1        = CancelledTasks > 0 
UserAction      =

[Monitor]
ID              = NUM_RUNNABLE_TASKS
Label           = "Number of runnable user tasks: " + RunnableUserTasks
Class           = Performance
Description     =
Information     = RunnableUserTasks > 0 
Warning1        = RunnableUserTasks > MAXCPU 
UserAction      =

[Monitor]
ID              = SV_WERE_ACTIVE_NO_BACKUP
Label           = "server tasks activity but not for backup. Dispatches: " + DispSV
Class           = Environment
Description     =
Skip1			= BackUpReadPg > 0 || BackUpWrittenPg > 0
Information     = DispSV > 0 
UserAction      =

[Monitor]
ID              = SV_WERE_ACTIVE_FOR_BACKUP
Label           = "backup activity: number of pages read " + BackUpReadPg + ", written " + BackUpWrittenPg
Class           = Environment
Description     =
Information     = BackUpReadPg > 0 || BackUpWrittenPg > 0
UserAction      =

[Monitor]
ID              = USR_STATE_OLTP_WITHOUT_PARSEID
InstanceType 	= OLTP
Label           = "User task " + USER_TASK_PID[] + " blocked in state '" + USER_TASK_STATE[] + "', application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     = 
Skip1           = USER_TASK_RUNNING_PARSEID[] != "?"
Warning3        = !(USER_TASK_STATE[] like "Command*") && USER_TASK_DISPATCHCNT[] == 0
ForEach         = USER_TASK_STATE

[Monitor]
ID              = USR_STATE_OLTP_WITH_PARSEID
InstanceType 	= OLTP
Label           = "User task " + USER_TASK_PID[] + " blocked in state '" + USER_TASK_STATE[] + "', parseid: " + USER_TASK_RUNNING_PARSEID[] + ", application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     = 
Skip1           = USER_TASK_RUNNING_PARSEID[] == "?"
Warning3        = !(USER_TASK_STATE[] like "Command*") && USER_TASK_DISPATCHCNT[] == 0
ForEach         = USER_TASK_STATE

[Monitor]
ID              = USR_PROCESSING_SAME_COMMAND_WITHOUT_PARSEID
InstanceType 	= OLTP
Label           = "User task " + USER_TASK_PID[] + " processing same command last " + INTERVAL + " seconds, " + USER_TASK_DISPATCHCNT[] + " dispatches, application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     = 
Skip1           = USER_TASK_RUNNING_PARSEID[] != "?"
Warning3        = USER_TASK_COMM_CNT[] == 0 && USER_TASK_DISPATCHCNT[] > 1
ForEach         = USER_TASK_COMM_CNT

[Monitor]
ID              = USR_PROCESSING_SAME_COMMAND_WITH_PARSEID
InstanceType 	= OLTP
Label           = "User task " + USER_TASK_PID[] + " processing parseid '"+ USER_TASK_RUNNING_PARSEID[] +"' last " + INTERVAL + " seconds, " + USER_TASK_DISPATCHCNT[] + " dispatches, application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     = 
Skip1           = USER_TASK_RUNNING_PARSEID[] == "?"
Warning3        = USER_TASK_COMM_CNT[] == 0 && USER_TASK_DISPATCHCNT[] > 1
ForEach         = USER_TASK_COMM_CNT

[Monitor]
ID              = USR_STATE_LVC
InstanceType 	= LVC 
Label           = "User task " + USER_TASK_PID[] + " blocked in state '" + USER_TASK_STATE[] + "', DB procedure: " + USER_TASK_OMSCOMROUTINE_NAME[] + ", application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     = 
Warning3        = !(USER_TASK_STATE[] like "Command*") && !(USER_TASK_STATE[] like "Connect*") && !(USER_TASK_STATE[] like "Inactive") && USER_TASK_DISPATCHCNT[] == 0
ForEach         = USER_TASK_STATE

[Monitor]
ID              = USR_PROCESSING_SAME_COM_ROUTINE
InstanceType 	= LVC 
Label           = "User task " + USER_TASK_PID[] + " processing DB procedure '" + USER_TASK_OMSCOMROUTINE_NAME[] + "' last " + INTERVAL + " seconds, " + USER_TASK_DISPATCHCNT[] + " dispatches, application pid " + USER_TASK_APPL_PID[] 
Class           = Performance
Description     = 
Warning3        = USER_TASK_COMM_CNT[] == 0 && USER_TASK_DISPATCHCNT[] > 1
ForEach         = USER_TASK_COMM_CNT

[Monitor]
ID              = USR_CMD_EXEC_TIME
Label           = "Avg user cmd exec time for task " + USER_TASK_PID[] + " : " + USER_TASK_AVGCMDEXECTIME[] + " ms, " + USER_TASK_COMM_CNT[] + " commands, application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     =
Warning3        = USER_TASK_AVGCMDEXECTIME[] > 1000
Information     = USER_TASK_AVGCMDEXECTIME[] > 100
UserAction      =
ForEach         = USER_TASK_AVGCMDEXECTIME

[Monitor]
ID              = USR_VSUSPEND_TIME
Label           = "Avg user suspend time for task " + USER_TASK_PID[] + " : " + USER_TASK_AVGVSUSPENDABSTIME[] + " ms, " + USER_TASK_VSUSPENDCNT[] + " suspends, application pid " + USER_TASK_APPL_PID[] 
Class           = Performance
Description     =
Warning3        = USER_TASK_AVGVSUSPENDABSTIME[] > 1000
Information     = USER_TASK_AVGVSUSPENDABSTIME[] > 100
UserAction      =
ForEach         = USER_TASK_AVGVSUSPENDABSTIME

[Monitor]
ID              = USR_VWAIT_TIME
Label           = "Avg user wait time for task " + USER_TASK_PID[] + " : " + USER_TASK_AVGVWAITABSTIME[] + " ms, " + USER_TASK_VWAITCNT[] + " waits, application pid " + USER_TASK_APPL_PID[] 
Class           = Performance
Description     =
Warning3        = USER_TASK_AVGVWAITABSTIME[] > 10000
Information     = USER_TASK_AVGVWAITABSTIME[] > 1000
UserAction      =
ForEach         = USER_TASK_AVGVWAITABSTIME

[Monitor]
ID              = USR_READCNT_LVC
InstanceType 	= LVC
Label           = USER_TASK_READCNT[] + " physical reads for user task " + USER_TASK_PID[] + ", avg read time " + USER_TASK_READAVG_ABSTIME[] + " ms, application pid " + USER_TASK_APPL_PID[] 
Class           = Performance
Description     =
Skip1           = USER_TASK_APPL_PID[] != last(USER_TASK_APPL_PID[]) || USER_TASK_READCNT[] < INTERVAL / 5
Warning3        = USER_TASK_READCNT[] > INTERVAL * 50 || USER_TASK_READAVG_ABSTIME[] > 100
Warning2        = USER_TASK_READCNT[] > INTERVAL * 10 || USER_TASK_READAVG_ABSTIME[] > 50 
Information     = USER_TASK_READCNT[] > INTERVAL
UserAction      =
ForEach         = USER_TASK_READCNT

[Monitor]
ID              = USR_READCNT_OLTP
InstanceType 	= OLTP
Label           = USER_TASK_READCNT[] + " physical reads for user task " + USER_TASK_PID[] + ", " + USER_TASK_COMM_CNT[] + " commands, application pid " + USER_TASK_APPL_PID[]
Class           = Performance
Description     =
Skip1           = USER_TASK_APPL_PID[] != last(USER_TASK_APPL_PID[]) || USER_TASK_READCNT[] < INTERVAL * 2
Warning3        = USER_TASK_READCNT[] > INTERVAL * 60 || USER_TASK_READAVG_ABSTIME[] > 100
Warning2        = USER_TASK_READCNT[] > INTERVAL * 25 || USER_TASK_READAVG_ABSTIME[] > 50 
Information     = USER_TASK_READCNT[] > INTERVAL * 10
UserAction      =
ForEach         = USER_TASK_READCNT

[Monitor]
ID              = USR_WRITECNT
InstanceType 	= LVC
Label           = USER_TASK_WRITECNT[] + " physical writes for user task " + USER_TASK_PID[] + ", " + USER_TASK_COMM_CNT[] + " commands, application pid " + USER_TASK_APPL_PID[] 
Class           = Performance
Description     =
Skip1           = USER_TASK_APPL_PID[] != last(USER_TASK_APPL_PID[])
Warning3        = USER_TASK_WRITECNT[] > INTERVAL * 50
Warning2        = USER_TASK_WRITECNT[] > INTERVAL * 10
Information     = USER_TASK_WRITECNT[] > INTERVAL
UserAction      =
ForEach         = USER_TASK_WRITECNT

#-------------------------------------------------------------------------------
#                             REGIONS
#-------------------------------------------------------------------------------
[Monitor]
ID              = NUM_REGION_WAITERS
Label           = "Number of tasks requesting a region " + RegionWaiters
Class           = Environment
Description     =
Information     = RegionWaiters > 0 
Warning1        = RegionWaiters > MAXCPU 
Warning2        = RegionWaiters + RegionWaiters > MAXUSERTASKS
UserAction      =

[Monitor]
ID              = HOLDED_REGION_AND_WAITERS
Label           = BLOCKED_REGION_NUM_WAITERS[] + " tasks are waiting for region " + BLOCKED_REGIONNAME[] + " owned by task " +  BLOCKED_REGION_OWNER[]
Class           = Environment
Description     =
Skip1           = BLOCKED_REGION_NUM_WAITERS[] < 1 
Information     = BLOCKED_REGION_NUM_WAITERS[] > 0 
Warning1        = BLOCKED_REGION_NUM_WAITERS[] > MAXCPU 
Warning2        = BLOCKED_REGION_NUM_WAITERS[] + BLOCKED_REGION_NUM_WAITERS[] > MAXUSERTASKS
ForEach         = BLOCKED_REGIONNAME

[Monitor]
ID              = BLOCKED_REGION
Label           = "Region " + REGION_NAME[] + " blocked from task " + REGION_OWNER[] + " last " + INTERVAL + " seconds"
Class           = Performance
Description     = 
Warning3        = REGION_ACCESSCNT[] == 0 && REGION_OWNER[] > 0
ForEach         = REGION_NAME

[Monitor]
ID              = REGION_COLLISION_RATE_AND_WAITS
Label           = REGION_NAME[] + ": collision rate " + REGION_COLLISION_PERCENT[] + "%, " + REGION_COLLISIONCNT[] + " collisions, " + REGION_WAITS[] + " waits (" + REGION_WAITS_PERCENT[] + "%), " + REGION_ACCESSCNT[] +  " accesses on region " + REGION_ID[] 
Class           = Performance
Description     = 
Skip1           = REGION_WAITS[] == 0 || REGION_ACCESSCNT[] < INTERVAL * 100
Warning3        = REGION_COLLISION_PERCENT[] > MAXCPU * 10
Warning2        = REGION_COLLISION_PERCENT[] > MAXCPU * 5
Warning1        = REGION_COLLISION_PERCENT[] > MAXCPU * 2
Information     = REGION_COLLISION_PERCENT[] > (1 + MAXCPU / 3)
ForEach         = REGION_NAME

[Monitor]
ID              = REGION_COLLISION_RATE_NO_WAITS
Label           = REGION_NAME[] + ": collision rate " + REGION_COLLISION_PERCENT[] + "%, " + REGION_COLLISIONCNT[] + " collisions, no waits, " + REGION_ACCESSCNT[] +  " accesses on region " + REGION_ID[] 
Class           = Performance
Description     = 
Skip1           = REGION_WAITS[] > 0 || REGION_ACCESSCNT[] < INTERVAL * 100
Warning3        = REGION_COLLISION_PERCENT[] > MAXCPU * 10
Warning2        = REGION_COLLISION_PERCENT[] > MAXCPU * 5
Warning1        = REGION_COLLISION_PERCENT[] > MAXCPU * 2
Information     = REGION_COLLISION_PERCENT[] > (1 + MAXCPU / 3)
ForEach         = REGION_NAME

[Monitor]
ID              = SPINLOCK_COLLISION_RATE_AND_YIELDLOOPS
Label           = SPINLOCK_NAME[] + ": collision rate " + SPINLOCK_COLLISIONS_PERCENT[] + "%, " + SPINLOCK_COLLISIONS[] + " collisions, " + SPINLOCK_TOTAL_YIELD_LOOPS[] + " yield loops, " + SPINLOCK_LOCKS[] +  " accesses" 
Class           = SYNC
Description     = 
Skip1           = SPINLOCK_TOTAL_YIELD_LOOPS[] == 0  || SPINLOCK_LOCKS[] < INTERVAL * 100 || (SPINLOCK_COLLISIONS_PERCENT[] < 2 && SPINLOCK_LOCKS[] > SPINLOCK_TOTAL_YIELD_LOOPS[]) 
Warning3        = SPINLOCK_COLLISIONS_PERCENT[] > 25 || SPINLOCK_COLLISIONS[] * 10 < SPINLOCK_TOTAL_YIELD_LOOPS[]
Warning2        = SPINLOCK_COLLISIONS_PERCENT[] > 10 || SPINLOCK_COLLISIONS[] * 3 < SPINLOCK_TOTAL_YIELD_LOOPS[]
Warning1        = SPINLOCK_COLLISIONS_PERCENT[] > 5  || SPINLOCK_COLLISIONS[] < SPINLOCK_TOTAL_YIELD_LOOPS[] 
Information     = SPINLOCK_COLLISIONS_PERCENT[] > 2
ForEach         = SPINLOCK_NAME

[Monitor]
ID              = SPINLOCK_COLLISION_RATE_NO_YIELDS
Label           = SPINLOCK_NAME[] + ": collision rate " + SPINLOCK_COLLISIONS_PERCENT[] + "%, " + SPINLOCK_COLLISIONS[] + " collisions, no yield loops, " + SPINLOCK_LOCKS[] +  " accesses" 
Class           = SYNC
Description     = 
Skip1           = SPINLOCK_TOTAL_YIELD_LOOPS[] > 0 || SPINLOCK_LOCKS[] < INTERVAL * 100
Warning3        = SPINLOCK_COLLISIONS_PERCENT[] > 25
Warning2        = SPINLOCK_COLLISIONS_PERCENT[] > 10
Warning1        = SPINLOCK_COLLISIONS_PERCENT[] > 5
Information     = SPINLOCK_COLLISIONS_PERCENT[] > 2
ForEach         = SPINLOCK_NAME

#-------------------------------------------------------------------------------
#                             CONSISTENTVIEWS
#-------------------------------------------------------------------------------
[Monitor]
ID              = OLD_CONSISTENTVIEWS_NO_VERS
InstanceType 	= LVC
Label           ="Consistent view is " + OLD_CNSTVIEW_AGE_IN_HOURS[] + " hours old, owner T" + OLD_CNSTVIEW_TASK_ID[] + ", application pid " + OLD_CNSTVIEW_APPL_PID[] + " cancelled: " + OLD_CNSTVIEW_CANCELLED[]
Class           = OLD_CNSTVIEW
Description     = 
Skip1           = OLD_CNSTVIEW_IS_OMS_VER[] != 0 
Information     = OLD_CNSTVIEW_AGE_IN_HOURS[] > 4
Warning1        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 6
Warning2        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 7
Warning3        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 8
UserAction      =
ForEach         = OLD_CNSTVIEW_IS_OMS_VER

[Monitor]
ID              = OLD_CONSISTENTVIEWS_OMS_VERSION_AND_TASKID
InstanceType 	= LVC
Label           ="OMS version is " + OLD_CNSTVIEW_AGE_IN_HOURS[] + " hours old, heap usage: " + OLD_CNSTVIEW_HEAP_USAGE[]/1024 + "KB, cancelled: " + OLD_CNSTVIEW_CANCELLED[] + " owner: task " + OLD_CNSTVIEW_TASK_ID[] + ", application pid " + OLD_CNSTVIEW_APPL_PID[]
Class           = OLD_CNSTVIEW
Description     = 
Skip1           = OLD_CNSTVIEW_IS_OMS_VER[] == 0 || OLD_CNSTVIEW_TASK_ID[] <= 0
Information     = OLD_CNSTVIEW_AGE_IN_HOURS[] > 4
Warning1        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 6
Warning2        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 7
Warning3        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 8 || \
                  ( OLD_CNSTVIEW_AGE_IN_HOURS[] > 2 && ( READ_IO_USER_TASK > MAX_IDLE_IO_ALL_DEVS ) ) 
UserAction      =
ForEach         = OLD_CNSTVIEW_IS_OMS_VER

[Monitor]
ID              = OLD_CONSISTENTVIEWS_OMS_VERSION_NO_TASK_ID
InstanceType 	= LVC
Label           ="OMS version is " + OLD_CNSTVIEW_AGE_IN_HOURS[] + " hours old, heap usage: " + OLD_CNSTVIEW_HEAP_USAGE[]/1024 + "KB, cancelled: " + OLD_CNSTVIEW_CANCELLED[]
Class           = OLD_CNSTVIEW
Description     = 
Skip1           = OLD_CNSTVIEW_IS_OMS_VER[] == 0 || OLD_CNSTVIEW_TASK_ID[] > 0
Information     = OLD_CNSTVIEW_AGE_IN_HOURS[] > 4
Warning1        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 6
Warning2        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 7
Warning3        = OLD_CNSTVIEW_AGE_IN_HOURS[] > 8
UserAction      =
ForEach         = OLD_CNSTVIEW_IS_OMS_VER

&if $TYPE != "-light"
[Monitor]
ID              = NUM_SYSUPDSTATWANTED
Label           = "Number of tables where update statistics is required: " + NUM_SYSUPDSTATWANTED
Class           = Environment
Warning1        = NUM_SYSUPDSTATWANTED > last(NUM_SYSUPDSTATWANTED)

[Monitor]
ID              = NUM_BAD_INDEXES
Label           = "Number of bad indexes: " + NUM_BAD_INDEXES
Class           = Environment
Warning3        = NUM_BAD_INDEXES > last(NUM_BAD_INDEXES) 
&endif

#-------------------------------------------------------------------------------
#                             Environment (Startup)
#-------------------------------------------------------------------------------
[Monitor]
ID              = RUNTIME_ENVIRONMENT
Label           = "Runtime version: " + RUNTIME_ENVIRONMENT
Class           = Environment
Information     = 1
Startup         = 1

[Monitor]
ID              = RESTARTED_AT
Label           = "Instance " + INSTANCE_NAME + " (" + INSTANCE_NODE + ") is up since " + RESTARTED_DATE + " " + RESTARTED_TIME
Class           = Environment
Information     = 1
Startup         = 1

[Monitor]
ID              = VTRACE_STATE
Label           = "Vtrace is '" + VTRACE_STATE + "' !"
Class           = Environment
Warning1        = VTRACE_STATE != "Off"
Startup         = 1

[Monitor]
ID              = ENV_MAXCPU_MAXUSER
Label           = "Configuration: number of CPUs (MAXCPU): " + MAXCPU + ", max user tasks: " + MAXUSERTASKS
Class           = Environment
Information     = 1
Startup         = 1

[Monitor]
ID              = TASKCLUSTER
InstanceType	= LVC 
Label           = "Usertasks per Thread: " + TASKCLUSTER
Class           = Environment
Information     = MAXCPU == 1
Startup         = 1

[Monitor]
ID              = NUM_DEVSPACES
Label           = "Number of data volumes: " + NUM_DEVSPACES
Class           = Environment
Information     = 1
Startup         = 1

[Monitor]
ID              = GC_COUNT
InstanceType	= LVC 
Label           = "Configuration of _MAXGARBAGE_COLL: " + GC_COUNT
Class           = Environment
Warning2        = GC_COUNT <= 1
Startup         = 1

[Monitor]
ID              = ENV_SQL_COMMANDS_EXECUTED
Label           = "SQL commands executed: " + SQL_Cmds 
Class           = Environment
Description     =
Information     = SQL_Cmds > 0
Startup         = 1

[Monitor]
ID              = ENV_OMS_COMROUTINES_EXECUTED
InstanceType 	= LVC 
Label           = "DB procedure called: " + CallCnt 
Class           = Environment
Description     =
Information     = CallCnt > 0
Startup         = 1

[Monitor]
ID              = ENV_NUM_SYSUPDSTATWANTED
Label           = "Number of tables where update statistics is required: " + NUM_SYSUPDSTATWANTED
Class           = Environment
Warning1        = NUM_SYSUPDSTATWANTED > 0
Startup         = 1

[Monitor]
ID              = ENV_TABLES_SYSUPDSTATWANTED
Label           = "Owner: " + UPDW_OWNER_NAME[] + ", table: " + UPDW_TABLE_NAME[]
Class           = Environment
Warning1        = NUM_SYSUPDSTATWANTED > 0
ForEach         = UPDW_TABLE_NAME
Startup         = 1

[Monitor]
ID              = ENV_NUM_TABS_FEW_SAMPLE_ROWS
Label           = NUM_TABS_FEW_SAMPLE_ROWS + " tables contain > 1.000.000 records but only 20.000 rows will be sampled for statistics"
Class           = Environment
Information     = NUM_TABS_FEW_SAMPLE_ROWS >  0
Warning1        = NUM_TABS_FEW_SAMPLE_ROWS > 20
Warning2        = NUM_TABS_FEW_SAMPLE_ROWS > 50
Warning3        = NUM_TABS_FEW_SAMPLE_ROWS >100
Startup         = 1

[Monitor]
ID              = TOO_FEW_SAMPLE_ROWS_FOR_LARGE
Label           = "Table " + FEW_SAMPLE_ROWS_TABLE_OWNER[] + "." + FEW_SAMPLE_ROWS_TABLE_NAME[] + " contains " + FEW_SAMPLE_ROWS_ROW_COUNT[] + " rows (" + FEW_SAMPLE_ROWS_PAGECOUNT[] + " pages), sample rows: " + FEW_SAMPLE_ROWS[]
Class           = Environment
Warning1        = FEW_SAMPLE_ROWS_ROW_COUNT[] > 1000000
ForEach         = FEW_SAMPLE_ROWS_TABLE_NAME
Startup         = 1

[Monitor]
ID              = ENV_NUM_BAD_INDEXES
Label           = "Number of bad indexes: " + NUM_BAD_INDEXES
Class           = Environment
Warning2        = NUM_BAD_INDEXES > 0
Startup         = 1

[Monitor]
ID              = ENV_LOG_QUEUE_OVERFLOWS
Label           = "Log queue overflows: " + LQ_Overflows + ", configured log queue pages: " + LOG_QUEUE_PAGES
Class           = Environment
Description     =
Warning3        = LQ_Overflows > 0 
Startup         = 1

[Monitor]
ID              = ENV_LOG_IO_SEQUENCE
Label           = "IO sequence " + LogIoSequence + " - used for logging - is near limit 4294967295"
Class           = Environment
Description     =
Warning3        = LogIoSequence > 4000000000 
Startup         = 1

[Monitor]
ID              = ENV_LOCKLIST_ESCALATIONS
Label           = "Lock list escalations: " + LocklEscalations
Class           = Environment
Description     =
Warning3        = LocklEscalations > 0 
Startup         = 1

[Monitor]
ID              = ENV_LOCK_REQUEST_TIMEOUTS
Label           = "Lock request timeouts: " + LockReqTimeouts
Class           = Environment
Description     =
Warning3        = LockReqTimeouts > 0 
Startup         = 1

[Monitor]
ID              = ENV_REQUEST_TIMEOUT
InstanceType	= LVC 
Label           = "REQUEST_TIMEOUT is set to " + REQUEST_TIMEOUT + " seconds"
Class           = Environment
Description     =
Information     = REQUEST_TIMEOUT
Startup         = 1

[Monitor]
ID              = ENV_MAXLOCKS
InstanceType	= LVC 
Label           = "MAXLOCKS is set to " + MAXLOCKS + ", recommeded value: >= 200000"
Class           = Environment
Description     =
Warning3        = MAXLOCKS < 200000 
Startup         = 1

[Monitor]
ID              = OMS_HEAP_LIMIT
InstanceType	= LVC 
Label           = "Configuration of OMS_HEAP_LIMIT : " + OMS_HEAP_LIMIT / 1024 + " MB"
Class           = Environment
Warning3        = OMS_HEAP_LIMIT == 0
Information     = OMS_HEAP_LIMIT > 0
Startup         = 1

[Monitor]
ID              = ENV_OMS_RESERVED_HEAP
InstanceType 	= LVC 
Label           = "OMS heap reserved: " + MaxHeapUsed + " MB"
Class           = Environment
Information     = MaxHeapUsed > 0
Startup         = 1

[Monitor]
ID              = OMS_HEAP_COUNT
InstanceType	= LVC 
Label           = "Configuration of OMS_HEAP_COUNT : " + OMS_HEAP_COUNT
Class           = Environment
Warning3        = (OMS_HEAP_COUNT < MAXCPU) && (OMS_HEAP_COUNT < 7 ) && (HeapCollPercent > 0)
Startup         = 1
Maxversion      = 7.4.3.29

[Monitor]
ID              = OMS_HEAP_COUNT
InstanceType	= LVC 
Label           = "Configuration of OMS_HEAP_COUNT: " + OMS_HEAP_COUNT + ", recommended: " + MAXCPU + " (MAXCPU)"
Class           = Environment
Warning1        = OMS_HEAP_COUNT < MAXCPU 
Warning3        = OMS_HEAP_COUNT < MAXCPU && HeapCollPercent > 0
Startup         = 1
Minversion      = 7.4.3.30

[Monitor]
ID              = ENV_OMS_HEAP_COLLISIONS
InstanceType	= LVC 
Label           = "OMS heap collisions "+ HeapCollPercent + "%, " + HeapColl + " collisons during " + Spinlocks + " heap allocations / deallocations"
Class           = Environment
Warning3        = HeapCollPercent > 10
Information     = HeapCollPercent > 2
Startup         = 1

[Monitor]
ID              = ENV_OUTOFMEMORYEXCEPTIONS
InstanceType 	= LVC 
Label           = "OMS out of memory exceptions : " + OutOfMemExcept
Class           = Environment
Information     = OutOfMemExcept > 0 
Startup         = 1

[Monitor]
ID              = ENV_MS_HEAP_EMERGENCY_MAX_USED
InstanceType 	= LVC 
Label           = "OMS emergency heap max used: " + OMS_HEAP_EMERGENCY_MAX_USED / 1024 / 1024 + " MB"
Class           = Environment
Warning3        = OMS_HEAP_EMERGENCY_MAX_USED > 0
Startup         = 1

[Monitor]
ID              = ENV_OMS_VERSION_UNLOADS
InstanceType 	= LVC 
Label           = "OMS version unloads: " + VersUnloads
Class           = Environment
Warning3        = VersUnloads > 0
Startup         = 1

[Monitor]
ID              = ENV_COM_ROUTINE_TIMEOUTS_ZERO_WAITTIME
InstanceType 	= LVC 
Label           = COM_ROUTINE_TIMEOUTS[] + " Timeouts for DB procedure: " + METHOD_NAME[] + ", 0 wait time"
Class           = OMS
Description     = 
Information     = COM_ROUTINE_TIMEOUTS[] > 0   && AVG_WAIT_FOR_CONS_VIEW[] == 0
Warning1        = COM_ROUTINE_TIMEOUTS[] > 100 && AVG_WAIT_FOR_CONS_VIEW[] == 0
ForEach         = METHOD_NAME
Startup         = 1

[Monitor]
ID              = ENV_COM_ROUTINE_TIMEOUTS_WITH_WAITTIME
InstanceType 	= LVC 
Label           = COM_ROUTINE_TIMEOUTS[] + " Timeouts for DB procedure: " + METHOD_NAME[] + ", avg/max wait time for consitent view: " + AVG_WAIT_FOR_CONS_VIEW[] / 1000 + " / " + MAX_WAIT_FOR_CONS_VIEW[] / 1000 + " sec"
Class           = OMS
Description     = 
Information     = COM_ROUTINE_TIMEOUTS[] > 0   && AVG_WAIT_FOR_CONS_VIEW[] > 1
Warning3        = COM_ROUTINE_TIMEOUTS[] > 100 && AVG_WAIT_FOR_CONS_VIEW[] > 1000
ForEach         = METHOD_NAME
Startup         = 1

[Monitor]
ID              = ENV_COM_ROUTINE_TERMINATE
InstanceType 	= LVC 
Label           = COM_ROUTINE_TERMINATES[] + " terminatates of DB procedure '" + METHOD_NAME[] + "' due to errors"
Class           = OMS
Description     = 
Warning3        = COM_ROUTINE_TERMINATES[] > 0
ForEach         = METHOD_NAME
Startup         = 1

[Monitor]
ID              = ENV_DATA_CACHE_SIZE
InstanceType 	= LVC 
Label           = "Size of data cache " + DataCacheSize + " pages, " + DC_Used + "% in use"
Class           = Caches
Information	= DataCacheSize > 1
Startup         = 1



#===============================================================================
#                        miscellenious 
#===============================================================================
[Constant]
ID                  = NUM_INITIAL_SYMBOL_RESOLUTIONS
Value               = 5

[Parameter]
ID              = NUM_SYMBOL_RESOLUTIONS_ABS
Label           = 
Table           = SYSMON_TOTALCOUNT
Column          = SYMBOLRESOLVECNT
Description     =
Minversion      = 7.4.3.41

[Parameter]
ID              = SymbolResolutions
Label           = # of symbols resolved (callstack)
Protocol        = 1
Protocolinfo    = S
Class           = OVERVIEW
Formula         = NUM_SYMBOL_RESOLUTIONS_ABS - last(NUM_SYMBOL_RESOLUTIONS_ABS)
Description     =
Minversion      = 7.4.3.41

[Monitor]
ID              = ENV_NUM_SYMBOL_RESOLUTIONS
Label           = "Number of symbol resolutions to create call stacks: " + NUM_SYMBOL_RESOLUTIONS_ABS 
Class           = Environment
Warning2        = NUM_SYMBOL_RESOLUTIONS_ABS > NUM_INITIAL_SYMBOL_RESOLUTIONS
Startup         = 1
Minversion      = 7.4.3.41

[Monitor]
ID              = NUM_SYMBOL_RESOLUTIONS
Label           = "Number of symbol resolutions to create call stacks: " + SymbolResolutions 
Class           = Performance
Description     = 
Warning2        = SymbolResolutions > 0
Minversion      = 7.4.3.41

