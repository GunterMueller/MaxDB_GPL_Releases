/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_CATALOG_H
#define SDBMSG_CATALOG_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-12-20 14:17:52 */
#error SDBMsg_Catalog.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_CATALOG_COMPONENT "Catalog"
/* Begin of all message defines for component Catalog -> */
/* Begin of defines for message NO_MEMORY: ID = 1, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_NO_MEMORY 1, "Catalog", __FILE__, __LINE__, "Out of Memory", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_NO_MEMORY__MEMREQUEST "MEMREQUEST" /* optional */
/* <- End of defines for message NO_MEMORY */
/* Begin of defines for message INVALID_TABLE_DESCRIPTOR: ID = 2, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_INVALID_TABLE_DESCRIPTOR 2, "Catalog", __FILE__, __LINE__, "Invalid table descriptor", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message INVALID_TABLE_DESCRIPTOR */
/* Begin of defines for message CREATE_OBJECT_FAILED: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_CREATE_OBJECT_FAILED 3, "Catalog", __FILE__, __LINE__, "Creation of a catalog object failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_CREATE_OBJECT_FAILED__ERRORTEXT "ERRORTEXT" /* optional */
#define SDBMSGTAG_CATALOG_CREATE_OBJECT_FAILED__SQLSTATEMENT "SQLSTATEMENT" /* optional */
/* <- End of defines for message CREATE_OBJECT_FAILED */
/* Begin of defines for message STORE_PLAN_OBJECT_FAILED: ID = 4, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_STORE_PLAN_OBJECT_FAILED 4, "Catalog", __FILE__, __LINE__, "Storing of a planning object failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message STORE_PLAN_OBJECT_FAILED */
/* Begin of defines for message UPDATE_FAILED: ID = 5, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_UPDATE_FAILED 5, "Catalog", __FILE__, __LINE__, "Catalog update failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_UPDATE_FAILED__DESCRIPTION "DESCRIPTION" /* optional */
#define SDBMSGTAG_CATALOG_UPDATE_FAILED__IFR_ERROR "IFR_ERROR" /* optional */
/* <- End of defines for message UPDATE_FAILED */
/* Begin of defines for message ACCESS_FAILED: ID = 6, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_ACCESS_FAILED 6, "Catalog", __FILE__, __LINE__, "Catalog access failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_ACCESS_FAILED__DESCRIPTION "DESCRIPTION" /* optional */
#define SDBMSGTAG_CATALOG_ACCESS_FAILED__RETURNCODE "RETURNCODE" /* optional */
/* <- End of defines for message ACCESS_FAILED */
/* Begin of defines for message RESTART_FAILED: ID = 7, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_RESTART_FAILED 7, "Catalog", __FILE__, __LINE__, "Restart failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message RESTART_FAILED */
/* Begin of defines for message STORE_TABLES_FAILED: ID = 8, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CATALOG_STORE_TABLES_FAILED 8, "Catalog", __FILE__, __LINE__, "Storing of tables failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message STORE_TABLES_FAILED */
/* Begin of defines for message CONVERSION_ERROR: ID = 9, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_CATALOG_CONVERSION_ERROR 9, "Catalog", __FILE__, __LINE__, "conversion error", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_CONVERSION_ERROR__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_CATALOG_CONVERSION_ERROR__IFR_ERROR "IFR_ERROR"
/* <- End of defines for message CONVERSION_ERROR */
/* Begin of defines for message INDDESC_FILE_NOT_FOUND: ID = 11, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_CATALOG_INDDESC_FILE_NOT_FOUND 11, "Catalog", __FILE__, __LINE__, "Table file '$FILENO$' not found", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_INDDESC_FILE_NOT_FOUND__FILENO "FILENO"
/* <- End of defines for message INDDESC_FILE_NOT_FOUND */
/* Begin of defines for message INDDESC_GETCOUNT_SYSERR: ID = 12, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_CATALOG_INDDESC_GETCOUNT_SYSERR 12, "Catalog", __FILE__, __LINE__, "Error while retrieving index size information; index file no $FILENO$, error '$BASIS_ERROR$'", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_INDDESC_GETCOUNT_SYSERR__BASIS_ERROR "BASIS_ERROR"
#define SDBMSGTAG_CATALOG_INDDESC_GETCOUNT_SYSERR__FILENO "FILENO"
/* <- End of defines for message INDDESC_GETCOUNT_SYSERR */
/* Begin of defines for message TABLEDESC_GETCOUNT_SYSERR: ID = 13, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_CATALOG_TABLEDESC_GETCOUNT_SYSERR 13, "Catalog", __FILE__, __LINE__, "System error while retrieving table size information; table file no $FILENO$, error $BASIS_ERROR$", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_TABLEDESC_GETCOUNT_SYSERR__BASIS_ERROR "BASIS_ERROR"
#define SDBMSGTAG_CATALOG_TABLEDESC_GETCOUNT_SYSERR__FILENO "FILENO"
/* <- End of defines for message TABLEDESC_GETCOUNT_SYSERR */
/* Begin of defines for message TABLEDESC_BUILDFILEID_FAILED: ID = 14, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_CATALOG_TABLEDESC_BUILDFILEID_FAILED 14, "Catalog", __FILE__, __LINE__, "Unexpected error while building table file id; fileNo $FILENO$, error '$ERRORTEXT$'", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_TABLEDESC_BUILDFILEID_FAILED__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_CATALOG_TABLEDESC_BUILDFILEID_FAILED__FILENO "FILENO"
/* <- End of defines for message TABLEDESC_BUILDFILEID_FAILED */
/* Begin of defines for message DESCRIPTOR_NOT_CREATED: ID = 15, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_CATALOG_DESCRIPTOR_NOT_CREATED 15, "Catalog", __FILE__, __LINE__, "descriptor not created", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CATALOG_DESCRIPTOR_NOT_CREATED__DESCRIPTION "DESCRIPTION"
/* <- End of defines for message DESCRIPTOR_NOT_CREATED */
/* <- End of message defines for component Catalog */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_CATALOG_ENUMERATION \
                    Catalog_NO_MEMORY=1, \
                    Catalog_INVALID_TABLE_DESCRIPTOR=2, \
                    Catalog_CREATE_OBJECT_FAILED=3, \
                    Catalog_STORE_PLAN_OBJECT_FAILED=4, \
                    Catalog_UPDATE_FAILED=5, \
                    Catalog_ACCESS_FAILED=6, \
                    Catalog_RESTART_FAILED=7, \
                    Catalog_STORE_TABLES_FAILED=8, \
                    Catalog_CONVERSION_ERROR=9, \
                    Catalog_INDDESC_FILE_NOT_FOUND=11, \
                    Catalog_INDDESC_GETCOUNT_SYSERR=12, \
                    Catalog_TABLEDESC_GETCOUNT_SYSERR=13, \
                    Catalog_TABLEDESC_BUILDFILEID_FAILED=14, \
                    Catalog_DESCRIPTOR_NOT_CREATED=15
#define SDBMSG_CATALOG_INITIALIZATIONLIST(x) \
                    x(SDBMSG_CATALOG_NO_MEMORY, "NO_MEMORY"), \
                    x(SDBMSG_CATALOG_INVALID_TABLE_DESCRIPTOR, "INVALID_TABLE_DESCRIPTOR"), \
                    x(SDBMSG_CATALOG_CREATE_OBJECT_FAILED, "CREATE_OBJECT_FAILED"), \
                    x(SDBMSG_CATALOG_STORE_PLAN_OBJECT_FAILED, "STORE_PLAN_OBJECT_FAILED"), \
                    x(SDBMSG_CATALOG_UPDATE_FAILED, "UPDATE_FAILED"), \
                    x(SDBMSG_CATALOG_ACCESS_FAILED, "ACCESS_FAILED"), \
                    x(SDBMSG_CATALOG_RESTART_FAILED, "RESTART_FAILED"), \
                    x(SDBMSG_CATALOG_STORE_TABLES_FAILED, "STORE_TABLES_FAILED"), \
                    x(SDBMSG_CATALOG_CONVERSION_ERROR, "CONVERSION_ERROR"), \
                    x(SDBMSG_CATALOG_INDDESC_FILE_NOT_FOUND, "INDDESC_FILE_NOT_FOUND"), \
                    x(SDBMSG_CATALOG_INDDESC_GETCOUNT_SYSERR, "INDDESC_GETCOUNT_SYSERR"), \
                    x(SDBMSG_CATALOG_TABLEDESC_GETCOUNT_SYSERR, "TABLEDESC_GETCOUNT_SYSERR"), \
                    x(SDBMSG_CATALOG_TABLEDESC_BUILDFILEID_FAILED, "TABLEDESC_BUILDFILEID_FAILED"), \
                    x(SDBMSG_CATALOG_DESCRIPTOR_NOT_CREATED, "DESCRIPTOR_NOT_CREATED")
/* <- some helpful enumerations */

#endif /* SDBMSG_CATALOG_H */
