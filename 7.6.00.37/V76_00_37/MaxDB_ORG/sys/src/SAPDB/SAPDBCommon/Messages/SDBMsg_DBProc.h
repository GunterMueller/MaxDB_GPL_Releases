/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_DBPROC_H
#define SDBMSG_DBPROC_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-08-05 09:59:06 */
#error SDBMsg_DBProc.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_DBPROC_COMPONENT "DBProc"
/* Begin of all message defines for component DBProc -> */
/* Begin of defines for message NO_MEMORY: ID = 1, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_DBPROC_NO_MEMORY 1, "DBProc", __FILE__, __LINE__, "Out of memory", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_DBPROC_NO_MEMORY__MEMREQUEST "MEMREQUEST" /* optional */
/* <- End of defines for message NO_MEMORY */
/* Begin of defines for message FUNCTION_CALL_FAILED: ID = 2, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_DBPROC_FUNCTION_CALL_FAILED 2, "DBProc", __FILE__, __LINE__, "Function call failed", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_DBPROC_FUNCTION_CALL_FAILED__RETURNCODE "RETURNCODE"
/* <- End of defines for message FUNCTION_CALL_FAILED */
/* Begin of defines for message COMM_PING_FAILED: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_DBPROC_COMM_PING_FAILED 3, "DBProc", __FILE__, __LINE__, "No response", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message COMM_PING_FAILED */
/* Begin of defines for message COMM_ACCEPT_FAILED: ID = 4, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_DBPROC_COMM_ACCEPT_FAILED 4, "DBProc", __FILE__, __LINE__, "Accept failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message COMM_ACCEPT_FAILED */
/* Begin of defines for message SPAWN_FAILED: ID = 5, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_DBPROC_SPAWN_FAILED 5, "DBProc", __FILE__, __LINE__, "Spawn failed", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_DBPROC_SPAWN_FAILED__RETURNCODE "RETURNCODE"
/* <- End of defines for message SPAWN_FAILED */
/* Begin of defines for message COMM_LISTEN_FAILED: ID = 6, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_DBPROC_COMM_LISTEN_FAILED 6, "DBProc", __FILE__, __LINE__, "Listen failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message COMM_LISTEN_FAILED */
/* Begin of defines for message TYPE_NOT_DEFINED: ID = 7, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_DBPROC_TYPE_NOT_DEFINED 7, "DBProc", __FILE__, __LINE__, "Type not defined", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_DBPROC_TYPE_NOT_DEFINED__TYPE "TYPE"
/* <- End of defines for message TYPE_NOT_DEFINED */
/* Begin of defines for message SQL_FAILURE: ID = 8, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_DBPROC_SQL_FAILURE 8, "DBProc", __FILE__, __LINE__, "SQL Error", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_DBPROC_SQL_FAILURE__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_DBPROC_SQL_FAILURE__RETURNCODE "RETURNCODE"
/* <- End of defines for message SQL_FAILURE */
/* <- End of message defines for component DBProc */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_DBPROC_ENUMERATION \
                    DBProc_NO_MEMORY=1, \
                    DBProc_FUNCTION_CALL_FAILED=2, \
                    DBProc_COMM_PING_FAILED=3, \
                    DBProc_COMM_ACCEPT_FAILED=4, \
                    DBProc_SPAWN_FAILED=5, \
                    DBProc_COMM_LISTEN_FAILED=6, \
                    DBProc_TYPE_NOT_DEFINED=7, \
                    DBProc_SQL_FAILURE=8
#define SDBMSG_DBPROC_INITIALIZATIONLIST(x) \
                    x(SDBMSG_DBPROC_NO_MEMORY, "NO_MEMORY"), \
                    x(SDBMSG_DBPROC_FUNCTION_CALL_FAILED, "FUNCTION_CALL_FAILED"), \
                    x(SDBMSG_DBPROC_COMM_PING_FAILED, "COMM_PING_FAILED"), \
                    x(SDBMSG_DBPROC_COMM_ACCEPT_FAILED, "COMM_ACCEPT_FAILED"), \
                    x(SDBMSG_DBPROC_SPAWN_FAILED, "SPAWN_FAILED"), \
                    x(SDBMSG_DBPROC_COMM_LISTEN_FAILED, "COMM_LISTEN_FAILED"), \
                    x(SDBMSG_DBPROC_TYPE_NOT_DEFINED, "TYPE_NOT_DEFINED"), \
                    x(SDBMSG_DBPROC_SQL_FAILURE, "SQL_FAILURE")
/* <- some helpful enumerations */

#endif /* SDBMSG_DBPROC_H */
