/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_LIVECACHE_H
#define SDBMSG_LIVECACHE_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-02-21 15:48:22 */
#error __FILE__ was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_LIVECACHE_COMPONENT "LiveCache"
/* Begin of all message defines for component LiveCache -> */
/* Begin of defines for message DROP_CONTAINER_TRIGGER_FAILED: ID = 1, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_LIVECACHE_DROP_CONTAINER_TRIGGER_FAILED 1, "LiveCache", __FILE__, __LINE__, "drop container trigger failed", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_LIVECACHE_DROP_CONTAINER_TRIGGER_FAILED__FILENO "FILENO"
#define SDBMSGTAG_LIVECACHE_DROP_CONTAINER_TRIGGER_FAILED__RETURNCODE "RETURNCODE"
/* <- End of defines for message DROP_CONTAINER_TRIGGER_FAILED */
/* Begin of defines for message NO_MORE_MEMROY: ID = 2, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_LIVECACHE_NO_MORE_MEMROY 2, "LiveCache", __FILE__, __LINE__, "OMS_HEAP_LIMIT exceeded", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_LIVECACHE_NO_MORE_MEMROY__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_LIVECACHE_NO_MORE_MEMROY__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_LIVECACHE_NO_MORE_MEMROY__BYTE_SIZE "BYTE_SIZE"
/* <- End of defines for message NO_MORE_MEMROY */
/* Begin of defines for message BAD_ALLOC: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_LIVECACHE_BAD_ALLOC 3, "LiveCache", __FILE__, __LINE__, "bad_alloc thrown", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message BAD_ALLOC */
/* Begin of defines for message LVC_ITERATOR_ON_REMOVED_FILE: ID = 4, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_LIVECACHE_LVC_ITERATOR_ON_REMOVED_FILE 4, "LiveCache", __FILE__, __LINE__, "Object key iterator on a removed file", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_LIVECACHE_LVC_ITERATOR_ON_REMOVED_FILE__FILENO "FILENO"
/* <- End of defines for message LVC_ITERATOR_ON_REMOVED_FILE */
/* <- End of message defines for component LiveCache */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_LIVECACHE_ENUMERATION \
                    LiveCache_DROP_CONTAINER_TRIGGER_FAILED=1, \
                    LiveCache_NO_MORE_MEMROY=2, \
                    LiveCache_BAD_ALLOC=3, \
                    LiveCache_LVC_ITERATOR_ON_REMOVED_FILE=4
#define SDBMSG_LIVECACHE_INITIALIZATIONLIST(x) \
                    x(SDBMSG_LIVECACHE_DROP_CONTAINER_TRIGGER_FAILED, "DROP_CONTAINER_TRIGGER_FAILED"), \
                    x(SDBMSG_LIVECACHE_NO_MORE_MEMROY, "NO_MORE_MEMROY"), \
                    x(SDBMSG_LIVECACHE_BAD_ALLOC, "BAD_ALLOC"), \
                    x(SDBMSG_LIVECACHE_LVC_ITERATOR_ON_REMOVED_FILE, "LVC_ITERATOR_ON_REMOVED_FILE")
/* <- some helpful enumerations */

#endif /* SDBMSG_LIVECACHE_H */
