/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_KERNELCOMMON_H
#define SDBMSG_KERNELCOMMON_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-06-14 18:18:48 */
#error SDBMsg_KernelCommon.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_KERNELCOMMON_COMPONENT "KernelCommon"
/* Begin of all message defines for component KernelCommon -> */
/* Begin of defines for message NO_MEMORY: ID = 1, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_KERNELCOMMON_NO_MEMORY 1, "KernelCommon", __FILE__, __LINE__, "memory allocation failed", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_KERNELCOMMON_NO_MEMORY__BYTES_NEEDED "BYTES_NEEDED"
/* <- End of defines for message NO_MEMORY */
/* Begin of defines for message TYPE_TOO_LONG: ID = 2, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_KERNELCOMMON_TYPE_TOO_LONG 2, "KernelCommon", __FILE__, __LINE__, "type of template parameter too long", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_KERNELCOMMON_TYPE_TOO_LONG__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_KERNELCOMMON_TYPE_TOO_LONG__BYTE_SIZE "BYTE_SIZE"
/* <- End of defines for message TYPE_TOO_LONG */
/* Begin of defines for message HEAP_MEMORY_ALLOCATION_FAILED: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_KERNELCOMMON_HEAP_MEMORY_ALLOCATION_FAILED 3, "KernelCommon", __FILE__, __LINE__, "Heap memory allocation failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message HEAP_MEMORY_ALLOCATION_FAILED */
/* Begin of defines for message VERSION_INFO: ID = 4, VERSION = 1, TAGS = 6 -> */
#define SDBMSG_KERNELCOMMON_VERSION_INFO 4, "KernelCommon", __FILE__, __LINE__, "$TITLE$: Version = $MAJOR_NUMBER$.$MINOR_NUMBER$.$CORRECTION_LEVEL$.$BUILD_NUMBER$", (Msg_Has6Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_KERNELCOMMON_VERSION_INFO__BUILD_NUMBER "BUILD_NUMBER"
#define SDBMSGTAG_KERNELCOMMON_VERSION_INFO__CORRECTION_LEVEL "CORRECTION_LEVEL"
#define SDBMSGTAG_KERNELCOMMON_VERSION_INFO__MAJOR_NUMBER "MAJOR_NUMBER"
#define SDBMSGTAG_KERNELCOMMON_VERSION_INFO__MINOR_NUMBER "MINOR_NUMBER"
#define SDBMSGTAG_KERNELCOMMON_VERSION_INFO__TITLE "TITLE"
/* <- End of defines for message VERSION_INFO */
/* Begin of defines for message NO_UPGRADE_PROTOCOL: ID = 5, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_KERNELCOMMON_NO_UPGRADE_PROTOCOL 5, "KernelCommon", __FILE__, __LINE__, "could not create upgrade protocol", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message NO_UPGRADE_PROTOCOL */
/* Begin of defines for message ERROR_OUTPUT: ID = 6, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_KERNELCOMMON_ERROR_OUTPUT 6, "KernelCommon", __FILE__, __LINE__, "$TITLE$, Errorcode $BASIS_ERROR$ \"$ERRORTEXT$\"", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_KERNELCOMMON_ERROR_OUTPUT__BASIS_ERROR "BASIS_ERROR"
#define SDBMSGTAG_KERNELCOMMON_ERROR_OUTPUT__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_KERNELCOMMON_ERROR_OUTPUT__TITLE "TITLE"
/* <- End of defines for message ERROR_OUTPUT */
/* Begin of defines for message TASK_LOCAL_STORAGE_CHECK: ID = 7, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_KERNELCOMMON_TASK_LOCAL_STORAGE_CHECK 7, "KernelCommon", __FILE__, __LINE__, "Taskid T$TASK_ID$ was found but current Taskid is T$VALUE$.", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_KERNELCOMMON_TASK_LOCAL_STORAGE_CHECK__TASK_ID "TASK_ID"
#define SDBMSGTAG_KERNELCOMMON_TASK_LOCAL_STORAGE_CHECK__VALUE "VALUE"
/* <- End of defines for message TASK_LOCAL_STORAGE_CHECK */
/* Begin of defines for message DATA_BACKUP_FAILED: ID = 8, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_KERNELCOMMON_DATA_BACKUP_FAILED 8, "KernelCommon", __FILE__, __LINE__, "Data backup failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message DATA_BACKUP_FAILED */
/* <- End of message defines for component KernelCommon */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_KERNELCOMMON_ENUMERATION \
                    KernelCommon_NO_MEMORY=1, \
                    KernelCommon_TYPE_TOO_LONG=2, \
                    KernelCommon_HEAP_MEMORY_ALLOCATION_FAILED=3, \
                    KernelCommon_VERSION_INFO=4, \
                    KernelCommon_NO_UPGRADE_PROTOCOL=5, \
                    KernelCommon_ERROR_OUTPUT=6, \
                    KernelCommon_TASK_LOCAL_STORAGE_CHECK=7, \
                    KernelCommon_DATA_BACKUP_FAILED=8
#define SDBMSG_KERNELCOMMON_INITIALIZATIONLIST(x) \
                    x(SDBMSG_KERNELCOMMON_NO_MEMORY, "NO_MEMORY"), \
                    x(SDBMSG_KERNELCOMMON_TYPE_TOO_LONG, "TYPE_TOO_LONG"), \
                    x(SDBMSG_KERNELCOMMON_HEAP_MEMORY_ALLOCATION_FAILED, "HEAP_MEMORY_ALLOCATION_FAILED"), \
                    x(SDBMSG_KERNELCOMMON_VERSION_INFO, "VERSION_INFO"), \
                    x(SDBMSG_KERNELCOMMON_NO_UPGRADE_PROTOCOL, "NO_UPGRADE_PROTOCOL"), \
                    x(SDBMSG_KERNELCOMMON_ERROR_OUTPUT, "ERROR_OUTPUT"), \
                    x(SDBMSG_KERNELCOMMON_TASK_LOCAL_STORAGE_CHECK, "TASK_LOCAL_STORAGE_CHECK"), \
                    x(SDBMSG_KERNELCOMMON_DATA_BACKUP_FAILED, "DATA_BACKUP_FAILED")
/* <- some helpful enumerations */

#endif /* SDBMSG_KERNELCOMMON_H */
