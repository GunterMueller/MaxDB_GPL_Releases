/*
        ========== licence begin  GPL
        Copyright (c) 2006 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_CONVERTER_H
#define SDBMSG_CONVERTER_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2006-03-31 10:09:01 */
#error SDBMsg_Converter.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_CONVERTER_COMPONENT "Converter"
/* Begin of all message defines for component Converter -> */
/* Begin of defines for message ALLOCATION_OF_BACKUP_PNOLIST_FAILED: ID = 1, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CONVERTER_ALLOCATION_OF_BACKUP_PNOLIST_FAILED 1, "Converter", __FILE__, __LINE__, "Allocation of main memory for data backup failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message ALLOCATION_OF_BACKUP_PNOLIST_FAILED */
/* Begin of defines for message BAD_ALLOC_PNOLIST: ID = 2, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_CONVERTER_BAD_ALLOC_PNOLIST 2, "Converter", __FILE__, __LINE__, "Allocation of main memory failed", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CONVERTER_BAD_ALLOC_PNOLIST__ALLOC_SIZE "ALLOC_SIZE"
#define SDBMSGTAG_CONVERTER_BAD_ALLOC_PNOLIST__MAXUSEDDATAPAGENO "MAXUSEDDATAPAGENO" /* optional */
#define SDBMSGTAG_CONVERTER_BAD_ALLOC_PNOLIST__NUMUSEDCONVPAGES "NUMUSEDCONVPAGES" /* optional */
/* <- End of defines for message BAD_ALLOC_PNOLIST */
/* Begin of defines for message ALLOCATION_OF_USED_PNOLIST_FAILED: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_CONVERTER_ALLOCATION_OF_USED_PNOLIST_FAILED 3, "Converter", __FILE__, __LINE__, "Allocation of main memory for database consistency check failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message ALLOCATION_OF_USED_PNOLIST_FAILED */
/* Begin of defines for message PAGENO_INVALID: ID = 4, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_CONVERTER_PAGENO_INVALID 4, "Converter", __FILE__, __LINE__, "PageNo is out of range", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CONVERTER_PAGENO_INVALID__PAGENO "PAGENO"
#define SDBMSGTAG_CONVERTER_PAGENO_INVALID__PERSISTENT_TYPE "PERSISTENT_TYPE"
#define SDBMSGTAG_CONVERTER_PAGENO_INVALID__PAGENO_1 "PAGENO_1"
/* <- End of defines for message PAGENO_INVALID */
/* Begin of defines for message PAGENO_NOT_IN_BACKUP: ID = 5, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_CONVERTER_PAGENO_NOT_IN_BACKUP 5, "Converter", __FILE__, __LINE__, "Page is not a part of the current data backup", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CONVERTER_PAGENO_NOT_IN_BACKUP__PAGENO "PAGENO"
#define SDBMSGTAG_CONVERTER_PAGENO_NOT_IN_BACKUP__PERSISTENT_TYPE "PERSISTENT_TYPE"
/* <- End of defines for message PAGENO_NOT_IN_BACKUP */
/* Begin of defines for message INVALID_RECOVERY_PAGENO: ID = 7, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_CONVERTER_INVALID_RECOVERY_PAGENO 7, "Converter", __FILE__, __LINE__, "PageNo is out of range", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CONVERTER_INVALID_RECOVERY_PAGENO__PAGENO "PAGENO"
#define SDBMSGTAG_CONVERTER_INVALID_RECOVERY_PAGENO__PERSISTENT_TYPE "PERSISTENT_TYPE"
#define SDBMSGTAG_CONVERTER_INVALID_RECOVERY_PAGENO__PAGENO_1 "PAGENO_1"
/* <- End of defines for message INVALID_RECOVERY_PAGENO */
/* Begin of defines for message RECOVERY: ID = 8, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_CONVERTER_RECOVERY 8, "Converter", __FILE__, __LINE__, "Could not assign physical page address", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_CONVERTER_RECOVERY__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_CONVERTER_RECOVERY__PAGENO "PAGENO"
#define SDBMSGTAG_CONVERTER_RECOVERY__PERSISTENT_TYPE "PERSISTENT_TYPE"
#define SDBMSGTAG_CONVERTER_RECOVERY__BOOL "BOOL" /* optional */
#define SDBMSGTAG_CONVERTER_RECOVERY__VOLUME_ID "VOLUME_ID" /* optional */
#define SDBMSGTAG_CONVERTER_RECOVERY__BLOCK_NO "BLOCK_NO" /* optional */
/* <- End of defines for message RECOVERY */
/* <- End of message defines for component Converter */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_CONVERTER_ENUMERATION \
                    Converter_ALLOCATION_OF_BACKUP_PNOLIST_FAILED=1, \
                    Converter_BAD_ALLOC_PNOLIST=2, \
                    Converter_ALLOCATION_OF_USED_PNOLIST_FAILED=3, \
                    Converter_PAGENO_INVALID=4, \
                    Converter_PAGENO_NOT_IN_BACKUP=5, \
                    Converter_INVALID_RECOVERY_PAGENO=7, \
                    Converter_RECOVERY=8
#define SDBMSG_CONVERTER_INITIALIZATIONLIST(x) \
                    x(SDBMSG_CONVERTER_ALLOCATION_OF_BACKUP_PNOLIST_FAILED, "ALLOCATION_OF_BACKUP_PNOLIST_FAILED"), \
                    x(SDBMSG_CONVERTER_BAD_ALLOC_PNOLIST, "BAD_ALLOC_PNOLIST"), \
                    x(SDBMSG_CONVERTER_ALLOCATION_OF_USED_PNOLIST_FAILED, "ALLOCATION_OF_USED_PNOLIST_FAILED"), \
                    x(SDBMSG_CONVERTER_PAGENO_INVALID, "PAGENO_INVALID"), \
                    x(SDBMSG_CONVERTER_PAGENO_NOT_IN_BACKUP, "PAGENO_NOT_IN_BACKUP"), \
                    x(SDBMSG_CONVERTER_INVALID_RECOVERY_PAGENO, "INVALID_RECOVERY_PAGENO"), \
                    x(SDBMSG_CONVERTER_RECOVERY, "RECOVERY")
/* <- some helpful enumerations */

#endif /* SDBMSG_CONVERTER_H */
