/*
        ========== licence begin  GPL
        Copyright (c) 2006 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_RECOVERY_H
#define SDBMSG_RECOVERY_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2006-03-30 13:08:38 */
#error SDBMsg_Recovery.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_RECOVERY_COMPONENT "Recovery"
/* Begin of all message defines for component Recovery -> */
/* Begin of defines for message ILLEGAL_TASKNO: ID = 1, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RECOVERY_ILLEGAL_TASKNO 1, "Recovery", __FILE__, __LINE__, "A backup should be created with an illegal id=$JOB_ID$.", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RECOVERY_ILLEGAL_TASKNO__JOB_ID "JOB_ID"
/* <- End of defines for message ILLEGAL_TASKNO */
/* Begin of defines for message EITHER_MEDIA_OR_VOLUME: ID = 2, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RECOVERY_EITHER_MEDIA_OR_VOLUME 2, "Recovery", __FILE__, __LINE__, "It was given a mediano=$MEDIA_NO$ and a volumeno=$VOLUME_NO$. Only one is allowed.", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RECOVERY_EITHER_MEDIA_OR_VOLUME__MEDIA_NO "MEDIA_NO"
#define SDBMSGTAG_RECOVERY_EITHER_MEDIA_OR_VOLUME__VOLUME_NO "VOLUME_NO"
/* <- End of defines for message EITHER_MEDIA_OR_VOLUME */
/* Begin of defines for message ALLOCATION_FAILED: ID = 3, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RECOVERY_ALLOCATION_FAILED 3, "Recovery", __FILE__, __LINE__, "No heap memory is availble for $DESCRIPTION$.", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RECOVERY_ALLOCATION_FAILED__DESCRIPTION "DESCRIPTION"
/* <- End of defines for message ALLOCATION_FAILED */
/* Begin of defines for message BACKUP_SERVER_NOT_CREATED: ID = 4, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_RECOVERY_BACKUP_SERVER_NOT_CREATED 4, "Recovery", __FILE__, __LINE__, "Allocation of recovery component is not complete.", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message BACKUP_SERVER_NOT_CREATED */
/* Begin of defines for message NO_JOB_FOUND_IN_WAITLIST: ID = 5, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_RECOVERY_NO_JOB_FOUND_IN_WAITLIST 5, "Recovery", __FILE__, __LINE__, "There are no more jobs in the job list.", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message NO_JOB_FOUND_IN_WAITLIST */
/* Begin of defines for message DATA_FAILED: ID = 6, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_RECOVERY_DATA_FAILED 6, "Recovery", __FILE__, __LINE__, "Data recovery failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message DATA_FAILED */
/* <- End of message defines for component Recovery */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_RECOVERY_ENUMERATION \
                    Recovery_ILLEGAL_TASKNO=1, \
                    Recovery_EITHER_MEDIA_OR_VOLUME=2, \
                    Recovery_ALLOCATION_FAILED=3, \
                    Recovery_BACKUP_SERVER_NOT_CREATED=4, \
                    Recovery_NO_JOB_FOUND_IN_WAITLIST=5, \
                    Recovery_DATA_FAILED=6
#define SDBMSG_RECOVERY_INITIALIZATIONLIST(x) \
                    x(SDBMSG_RECOVERY_ILLEGAL_TASKNO, "ILLEGAL_TASKNO"), \
                    x(SDBMSG_RECOVERY_EITHER_MEDIA_OR_VOLUME, "EITHER_MEDIA_OR_VOLUME"), \
                    x(SDBMSG_RECOVERY_ALLOCATION_FAILED, "ALLOCATION_FAILED"), \
                    x(SDBMSG_RECOVERY_BACKUP_SERVER_NOT_CREATED, "BACKUP_SERVER_NOT_CREATED"), \
                    x(SDBMSG_RECOVERY_NO_JOB_FOUND_IN_WAITLIST, "NO_JOB_FOUND_IN_WAITLIST"), \
                    x(SDBMSG_RECOVERY_DATA_FAILED, "DATA_FAILED")
/* <- some helpful enumerations */

#endif /* SDBMSG_RECOVERY_H */
