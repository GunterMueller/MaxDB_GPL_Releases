/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_MESSAGES_H
#define SDBMSG_MESSAGES_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-11-21 13:26:20 */
#error SDBMsg_Messages.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_MESSAGES_COMPONENT "Messages"
/* Begin of all message defines for component Messages -> */
/* Begin of defines for message STORE_VALUE: ID = 1, VERSION = 1, TAGS = 6 -> */
#define SDBMSG_MESSAGES_STORE_VALUE 1, "Messages", __FILE__, __LINE__, "Storing value for $MEMBER_NAME$ value $MEMBER_VALUE$ buffer size $BYTE_SIZE$ bytes, saved $BYTES_USED$ bytes, needed $BYTES_NEEDED$ bytes", (Msg_Has6Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_STORE_VALUE__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_MESSAGES_STORE_VALUE__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_MESSAGES_STORE_VALUE__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_MESSAGES_STORE_VALUE__MEMBER_NAME "MEMBER_NAME"
#define SDBMSGTAG_MESSAGES_STORE_VALUE__MEMBER_VALUE "MEMBER_VALUE"
/* <- End of defines for message STORE_VALUE */
/* Begin of defines for message LOAD_VALUE: ID = 2, VERSION = 1, TAGS = 5 -> */
#define SDBMSG_MESSAGES_LOAD_VALUE 2, "Messages", __FILE__, __LINE__, "Load value for $MEMBER_NAME$ from buffer size $BYTE_SIZE$, needs $BYTES_NEEDED$ but only $BYTES_FREE$ bytes left", (Msg_Has5Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_LOAD_VALUE__BYTES_FREE "BYTES_FREE"
#define SDBMSGTAG_MESSAGES_LOAD_VALUE__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_MESSAGES_LOAD_VALUE__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_MESSAGES_LOAD_VALUE__MEMBER_NAME "MEMBER_NAME"
/* <- End of defines for message LOAD_VALUE */
/* Begin of defines for message STORE_CONTAINED_MESSAGE: ID = 3, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_MESSAGES_STORE_CONTAINED_MESSAGE 3, "Messages", __FILE__, __LINE__, "Storing submessage index $INDEX$", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_STORE_CONTAINED_MESSAGE__INDEX "INDEX"
/* <- End of defines for message STORE_CONTAINED_MESSAGE */
/* Begin of defines for message STORE_ILLEGAL_OFFSET: ID = 4, VERSION = 1, TAGS = 6 -> */
#define SDBMSG_MESSAGES_STORE_ILLEGAL_OFFSET 4, "Messages", __FILE__, __LINE__, "Storing string $MEMBER_NAME$ illegal offset $BYTE_OFFSET$ max offset $BYTE_MAX_OFFSET$ buffer size $BYTE_SIZE$ bytes, saved $BYTES_USED$ bytes", (Msg_Has6Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_STORE_ILLEGAL_OFFSET__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_MESSAGES_STORE_ILLEGAL_OFFSET__BYTE_MAX_OFFSET "BYTE_MAX_OFFSET"
#define SDBMSGTAG_MESSAGES_STORE_ILLEGAL_OFFSET__BYTE_OFFSET "BYTE_OFFSET"
#define SDBMSGTAG_MESSAGES_STORE_ILLEGAL_OFFSET__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_MESSAGES_STORE_ILLEGAL_OFFSET__MEMBER_NAME "MEMBER_NAME"
/* <- End of defines for message STORE_ILLEGAL_OFFSET */
/* Begin of defines for message STORE_UNTERMINATED_STRING: ID = 5, VERSION = 1, TAGS = 5 -> */
#define SDBMSG_MESSAGES_STORE_UNTERMINATED_STRING 5, "Messages", __FILE__, __LINE__, "Storing string $MEMBER_NAME$ unterminated value $MEMBER_VALUE$ offset $BYTE_OFFSET$ max offset $BYTE_MAX_OFFSET$", (Msg_Has5Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_STORE_UNTERMINATED_STRING__BYTE_MAX_OFFSET "BYTE_MAX_OFFSET"
#define SDBMSGTAG_MESSAGES_STORE_UNTERMINATED_STRING__BYTE_OFFSET "BYTE_OFFSET"
#define SDBMSGTAG_MESSAGES_STORE_UNTERMINATED_STRING__MEMBER_NAME "MEMBER_NAME"
#define SDBMSGTAG_MESSAGES_STORE_UNTERMINATED_STRING__MEMBER_VALUE "MEMBER_VALUE"
/* <- End of defines for message STORE_UNTERMINATED_STRING */
/* Begin of defines for message STORE_STRING: ID = 6, VERSION = 1, TAGS = 6 -> */
#define SDBMSG_MESSAGES_STORE_STRING 6, "Messages", __FILE__, __LINE__, "Storing string $MEMBER_NAME$ value $MEMBER_VALUE$ buffer size $BYTE_SIZE$ bytes, saved $BYTES_USED$ bytes, needed $BYTES_NEEDED$ bytes", (Msg_Has6Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_STORE_STRING__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_MESSAGES_STORE_STRING__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_MESSAGES_STORE_STRING__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_MESSAGES_STORE_STRING__MEMBER_NAME "MEMBER_NAME"
#define SDBMSGTAG_MESSAGES_STORE_STRING__MEMBER_VALUE "MEMBER_VALUE"
/* <- End of defines for message STORE_STRING */
/* Begin of defines for message REGISTRY_DUMP_START: ID = 7, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_MESSAGES_REGISTRY_DUMP_START 7, "Messages", __FILE__, __LINE__, "Begin of dump of registered messages", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message REGISTRY_DUMP_START */
/* Begin of defines for message REGISTRY_DUMP_END: ID = 8, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_MESSAGES_REGISTRY_DUMP_END 8, "Messages", __FILE__, __LINE__, "End of the message list registry dump", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message REGISTRY_DUMP_END */
/* Begin of defines for message OUT_OF_MEMORY: ID = 9, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_MESSAGES_OUT_OF_MEMORY 9, "Messages", __FILE__, __LINE__, "Failed message registration which needed $BYTES_NEEDED$ bytes", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_OUT_OF_MEMORY__ALLOCATOR "ALLOCATOR"
#define SDBMSGTAG_MESSAGES_OUT_OF_MEMORY__BYTES_NEEDED "BYTES_NEEDED"
/* <- End of defines for message OUT_OF_MEMORY */
/* Begin of defines for message REGISTRY_DUMP_ABORT: ID = 10, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_MESSAGES_REGISTRY_DUMP_ABORT 10, "Messages", __FILE__, __LINE__, "abort dump of registered messages", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message REGISTRY_DUMP_ABORT */
/* Begin of defines for message NOT_YET_IMPLEMENTED: ID = 11, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_MESSAGES_NOT_YET_IMPLEMENTED 11, "Messages", __FILE__, __LINE__, "$DESCRIPTION$ not yet implemented", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_NOT_YET_IMPLEMENTED__DESCRIPTION "DESCRIPTION"
/* <- End of defines for message NOT_YET_IMPLEMENTED */
/* Begin of defines for message IGNORED_MESSAGES: ID = 12, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_MESSAGES_IGNORED_MESSAGES 12, "Messages", __FILE__, __LINE__, "Ignored $ENTRY_COUNT$ messages due to limitation to $LIMIT$ messages per list", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_IGNORED_MESSAGES__LIMIT "LIMIT"
#define SDBMSGTAG_MESSAGES_IGNORED_MESSAGES__ENTRY_COUNT "ENTRY_COUNT"
/* <- End of defines for message IGNORED_MESSAGES */
/* Begin of defines for message FILE_EXTENSION_FAILED: ID = 13, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_MESSAGES_FILE_EXTENSION_FAILED 13, "Messages", __FILE__, __LINE__, "Extension of message file $FILENAME$ by $BYTE_SIZE$ failed", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_MESSAGES_FILE_EXTENSION_FAILED__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_MESSAGES_FILE_EXTENSION_FAILED__FILENAME "FILENAME"
/* <- End of defines for message FILE_EXTENSION_FAILED */
/* <- End of message defines for component Messages */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_MESSAGES_ENUMERATION \
                    Messages_STORE_VALUE=1, \
                    Messages_LOAD_VALUE=2, \
                    Messages_STORE_CONTAINED_MESSAGE=3, \
                    Messages_STORE_ILLEGAL_OFFSET=4, \
                    Messages_STORE_UNTERMINATED_STRING=5, \
                    Messages_STORE_STRING=6, \
                    Messages_REGISTRY_DUMP_START=7, \
                    Messages_REGISTRY_DUMP_END=8, \
                    Messages_OUT_OF_MEMORY=9, \
                    Messages_REGISTRY_DUMP_ABORT=10, \
                    Messages_NOT_YET_IMPLEMENTED=11, \
                    Messages_IGNORED_MESSAGES=12, \
                    Messages_FILE_EXTENSION_FAILED=13
#define SDBMSG_MESSAGES_INITIALIZATIONLIST(x) \
                    x(SDBMSG_MESSAGES_STORE_VALUE, "STORE_VALUE"), \
                    x(SDBMSG_MESSAGES_LOAD_VALUE, "LOAD_VALUE"), \
                    x(SDBMSG_MESSAGES_STORE_CONTAINED_MESSAGE, "STORE_CONTAINED_MESSAGE"), \
                    x(SDBMSG_MESSAGES_STORE_ILLEGAL_OFFSET, "STORE_ILLEGAL_OFFSET"), \
                    x(SDBMSG_MESSAGES_STORE_UNTERMINATED_STRING, "STORE_UNTERMINATED_STRING"), \
                    x(SDBMSG_MESSAGES_STORE_STRING, "STORE_STRING"), \
                    x(SDBMSG_MESSAGES_REGISTRY_DUMP_START, "REGISTRY_DUMP_START"), \
                    x(SDBMSG_MESSAGES_REGISTRY_DUMP_END, "REGISTRY_DUMP_END"), \
                    x(SDBMSG_MESSAGES_OUT_OF_MEMORY, "OUT_OF_MEMORY"), \
                    x(SDBMSG_MESSAGES_REGISTRY_DUMP_ABORT, "REGISTRY_DUMP_ABORT"), \
                    x(SDBMSG_MESSAGES_NOT_YET_IMPLEMENTED, "NOT_YET_IMPLEMENTED"), \
                    x(SDBMSG_MESSAGES_IGNORED_MESSAGES, "IGNORED_MESSAGES"), \
                    x(SDBMSG_MESSAGES_FILE_EXTENSION_FAILED, "FILE_EXTENSION_FAILED")
/* <- some helpful enumerations */

#endif /* SDBMSG_MESSAGES_H */
