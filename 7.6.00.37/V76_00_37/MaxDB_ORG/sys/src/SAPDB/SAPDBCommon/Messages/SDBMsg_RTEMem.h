/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_RTEMEM_H
#define SDBMSG_RTEMEM_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-02-21 15:48:22 */
#error __FILE__ was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_RTEMEM_COMPONENT "RTEMem"
/* Begin of all message defines for component RTEMem -> */
/* Begin of defines for message ATTACH_SHARED_MEMORY: ID = 1, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RTEMEM_ATTACH_SHARED_MEMORY 1, "RTEMem", __FILE__, __LINE__, "Attaching name shared memory $SHM_NAME$", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_ATTACH_SHARED_MEMORY__SHM_NAME "SHM_NAME"
/* <- End of defines for message ATTACH_SHARED_MEMORY */
/* Begin of defines for message DELETE_SHARED_MEMORY: ID = 2, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RTEMEM_DELETE_SHARED_MEMORY 2, "RTEMem", __FILE__, __LINE__, "Delete of name shared memory $SHM_NAME$", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_DELETE_SHARED_MEMORY__SHM_NAME "SHM_NAME"
/* <- End of defines for message DELETE_SHARED_MEMORY */
/* Begin of defines for message WRONG_EXPECTED_JOB_RESULT: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_RTEMEM_WRONG_EXPECTED_JOB_RESULT 3, "RTEMem", __FILE__, __LINE__, "Only shared memory allocation jobs can wait for segment address", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message WRONG_EXPECTED_JOB_RESULT */
/* Begin of defines for message DETACH_SHARED_MEMORY: ID = 4, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RTEMEM_DETACH_SHARED_MEMORY 4, "RTEMem", __FILE__, __LINE__, "Detaching from shared memory $SHM_NAME$", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_DETACH_SHARED_MEMORY__SHM_NAME "SHM_NAME"
/* <- End of defines for message DETACH_SHARED_MEMORY */
/* Begin of defines for message MAP_SEGMENT: ID = 5, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RTEMEM_MAP_SEGMENT 5, "RTEMem", __FILE__, __LINE__, "Mapping new chunk of $BYTES_NEEDED$ bytes for shared memory $SHM_NAME$", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_MAP_SEGMENT__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_RTEMEM_MAP_SEGMENT__SHM_NAME "SHM_NAME"
/* <- End of defines for message MAP_SEGMENT */
/* Begin of defines for message UNMAP_SEGMENT: ID = 6, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RTEMEM_UNMAP_SEGMENT 6, "RTEMem", __FILE__, __LINE__, "Unmapping of segment of shared memory $SHM_NAME$", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_UNMAP_SEGMENT__ADDRESS "ADDRESS"
#define SDBMSGTAG_RTEMEM_UNMAP_SEGMENT__SHM_NAME "SHM_NAME"
/* <- End of defines for message UNMAP_SEGMENT */
/* Begin of defines for message SHARED_MEMORY_NOT_REGISTERED: ID = 7, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RTEMEM_SHARED_MEMORY_NOT_REGISTERED 7, "RTEMem", __FILE__, __LINE__, "Shared memory $SHM_NAME$ not registered", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_SHARED_MEMORY_NOT_REGISTERED__DESCRIPTION "DESCRIPTION"
#define SDBMSGTAG_RTEMEM_SHARED_MEMORY_NOT_REGISTERED__SHM_NAME "SHM_NAME"
/* <- End of defines for message SHARED_MEMORY_NOT_REGISTERED */
/* Begin of defines for message NO_MORE_SYSTEM_PAGES: ID = 8, VERSION = 1, TAGS = 5 -> */
#define SDBMSG_RTEMEM_NO_MORE_SYSTEM_PAGES 8, "RTEMem", __FILE__, __LINE__, "No more system pages for $BYTES_NEEDED$ bytes available", (Msg_Has5Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_NO_MORE_SYSTEM_PAGES__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_RTEMEM_NO_MORE_SYSTEM_PAGES__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_RTEMEM_NO_MORE_SYSTEM_PAGES__DESCRIPTION "DESCRIPTION"
#define SDBMSGTAG_RTEMEM_NO_MORE_SYSTEM_PAGES__ERRORTEXT "ERRORTEXT"
/* <- End of defines for message NO_MORE_SYSTEM_PAGES */
/* Begin of defines for message OUT_OF_RESERVABLE_SYSTEM_PAGES: ID = 9, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RTEMEM_OUT_OF_RESERVABLE_SYSTEM_PAGES 9, "RTEMem", __FILE__, __LINE__, "Out of virtual address space for system pages", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_OUT_OF_RESERVABLE_SYSTEM_PAGES__ADDRESS "ADDRESS"
#define SDBMSGTAG_RTEMEM_OUT_OF_RESERVABLE_SYSTEM_PAGES__BYTES_NEEDED "BYTES_NEEDED"
/* <- End of defines for message OUT_OF_RESERVABLE_SYSTEM_PAGES */
/* Begin of defines for message MEMORY_LIMIT_REACHED: ID = 10, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_RTEMEM_MEMORY_LIMIT_REACHED 10, "RTEMem", __FILE__, __LINE__, "The set memory limit for $ALLOCATOR$ was reached", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_MEMORY_LIMIT_REACHED__ALLOCATOR "ALLOCATOR"
#define SDBMSGTAG_RTEMEM_MEMORY_LIMIT_REACHED__BYTES_NEEDED "BYTES_NEEDED"
#define SDBMSGTAG_RTEMEM_MEMORY_LIMIT_REACHED__BYTE_SIZE "BYTE_SIZE"
/* <- End of defines for message MEMORY_LIMIT_REACHED */
/* Begin of defines for message SYSTEM_HEAP_MEMORY_STATISTICS: ID = 11, VERSION = 1, TAGS = 7 -> */
#define SDBMSG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS 11, "RTEMem", __FILE__, __LINE__, "Used $BYTES_USED$ bytes from system heap with a limit of $BYTE_SIZE$ bytes", (Msg_Has7Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS__ALLOC_COUNT "ALLOC_COUNT"
#define SDBMSGTAG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS__BYTES_MAX_USED "BYTES_MAX_USED"
#define SDBMSGTAG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS__BYTES_USED "BYTES_USED"
#define SDBMSGTAG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS__BYTE_SIZE "BYTE_SIZE"
#define SDBMSGTAG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS__ERROR_COUNT "ERROR_COUNT"
#define SDBMSGTAG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS__FREE_COUNT "FREE_COUNT"
/* <- End of defines for message SYSTEM_HEAP_MEMORY_STATISTICS */
/* Begin of defines for message NEXT_RESERVED_ADDRESS: ID = 12, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RTEMEM_NEXT_RESERVED_ADDRESS 12, "RTEMem", __FILE__, __LINE__, "$ADDRESS$ is next address in reserved address space", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RTEMEM_NEXT_RESERVED_ADDRESS__ADDRESS "ADDRESS"
/* <- End of defines for message NEXT_RESERVED_ADDRESS */
/* <- End of message defines for component RTEMem */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_RTEMEM_ENUMERATION \
                    RTEMem_ATTACH_SHARED_MEMORY=1, \
                    RTEMem_DELETE_SHARED_MEMORY=2, \
                    RTEMem_WRONG_EXPECTED_JOB_RESULT=3, \
                    RTEMem_DETACH_SHARED_MEMORY=4, \
                    RTEMem_MAP_SEGMENT=5, \
                    RTEMem_UNMAP_SEGMENT=6, \
                    RTEMem_SHARED_MEMORY_NOT_REGISTERED=7, \
                    RTEMem_NO_MORE_SYSTEM_PAGES=8, \
                    RTEMem_OUT_OF_RESERVABLE_SYSTEM_PAGES=9, \
                    RTEMem_MEMORY_LIMIT_REACHED=10, \
                    RTEMem_SYSTEM_HEAP_MEMORY_STATISTICS=11, \
                    RTEMem_NEXT_RESERVED_ADDRESS=12
#define SDBMSG_RTEMEM_INITIALIZATIONLIST(x) \
                    x(SDBMSG_RTEMEM_ATTACH_SHARED_MEMORY, "ATTACH_SHARED_MEMORY"), \
                    x(SDBMSG_RTEMEM_DELETE_SHARED_MEMORY, "DELETE_SHARED_MEMORY"), \
                    x(SDBMSG_RTEMEM_WRONG_EXPECTED_JOB_RESULT, "WRONG_EXPECTED_JOB_RESULT"), \
                    x(SDBMSG_RTEMEM_DETACH_SHARED_MEMORY, "DETACH_SHARED_MEMORY"), \
                    x(SDBMSG_RTEMEM_MAP_SEGMENT, "MAP_SEGMENT"), \
                    x(SDBMSG_RTEMEM_UNMAP_SEGMENT, "UNMAP_SEGMENT"), \
                    x(SDBMSG_RTEMEM_SHARED_MEMORY_NOT_REGISTERED, "SHARED_MEMORY_NOT_REGISTERED"), \
                    x(SDBMSG_RTEMEM_NO_MORE_SYSTEM_PAGES, "NO_MORE_SYSTEM_PAGES"), \
                    x(SDBMSG_RTEMEM_OUT_OF_RESERVABLE_SYSTEM_PAGES, "OUT_OF_RESERVABLE_SYSTEM_PAGES"), \
                    x(SDBMSG_RTEMEM_MEMORY_LIMIT_REACHED, "MEMORY_LIMIT_REACHED"), \
                    x(SDBMSG_RTEMEM_SYSTEM_HEAP_MEMORY_STATISTICS, "SYSTEM_HEAP_MEMORY_STATISTICS"), \
                    x(SDBMSG_RTEMEM_NEXT_RESERVED_ADDRESS, "NEXT_RESERVED_ADDRESS")
/* <- some helpful enumerations */

#endif /* SDBMSG_RTEMEM_H */
