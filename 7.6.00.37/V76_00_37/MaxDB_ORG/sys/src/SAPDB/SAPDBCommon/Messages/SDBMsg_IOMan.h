/*
        ========== licence begin  GPL
        Copyright (c) 2006 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_IOMAN_H
#define SDBMSG_IOMAN_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2006-03-31 10:52:13 */
#error SDBMsg_IOMan.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_IOMAN_COMPONENT "IOMan"
/* Begin of all message defines for component IOMan -> */
/* Begin of defines for message ADD_VOLUME_IS_ONLINE: ID = 1, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_IOMAN_ADD_VOLUME_IS_ONLINE 1, "IOMan", __FILE__, __LINE__, "New volume already exist", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_ADD_VOLUME_IS_ONLINE__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_ADD_VOLUME_IS_ONLINE__VOLUME_TYPE "VOLUME_TYPE"
/* <- End of defines for message ADD_VOLUME_IS_ONLINE */
/* Begin of defines for message LOGDEVICE_CONFIGURATION_CORRUPTED: ID = 2, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_IOMAN_LOGDEVICE_CONFIGURATION_CORRUPTED 2, "IOMan", __FILE__, __LINE__, "The configuration of log device $VOLUME_ID$ is corrupted", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_LOGDEVICE_CONFIGURATION_CORRUPTED__VOLUME_ID "VOLUME_ID"
/* <- End of defines for message LOGDEVICE_CONFIGURATION_CORRUPTED */
/* Begin of defines for message NOT_ACCESSIBLE: ID = 3, VERSION = 1, TAGS = 6 -> */
#define SDBMSG_IOMAN_NOT_ACCESSIBLE 3, "IOMan", __FILE__, __LINE__, "An error occurred while accessing a volume", (Msg_Has6Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_NOT_ACCESSIBLE__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_IOMAN_NOT_ACCESSIBLE__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_NOT_ACCESSIBLE__VOLUME_TYPE "VOLUME_TYPE"
#define SDBMSGTAG_IOMAN_NOT_ACCESSIBLE__NUMBER "NUMBER"
#define SDBMSGTAG_IOMAN_NOT_ACCESSIBLE__BLOCK_NO "BLOCK_NO"
#define SDBMSGTAG_IOMAN_NOT_ACCESSIBLE__NUMBER1 "NUMBER1" /* optional */
/* <- End of defines for message NOT_ACCESSIBLE */
/* Begin of defines for message MULTIPLE_FAILED_READS: ID = 4, VERSION = 1, TAGS = 6 -> */
#define SDBMSG_IOMAN_MULTIPLE_FAILED_READS 4, "IOMan", __FILE__, __LINE__, "Multiple attempts to read a volume failed", (Msg_Has6Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_MULTIPLE_FAILED_READS__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_MULTIPLE_FAILED_READS__VOLUME_TYPE "VOLUME_TYPE"
#define SDBMSGTAG_IOMAN_MULTIPLE_FAILED_READS__NUMBER1 "NUMBER1"
#define SDBMSGTAG_IOMAN_MULTIPLE_FAILED_READS__NUMBER "NUMBER"
#define SDBMSGTAG_IOMAN_MULTIPLE_FAILED_READS__BLOCK_NO "BLOCK_NO"
#define SDBMSGTAG_IOMAN_MULTIPLE_FAILED_READS__BLOCK_NO_1 "BLOCK_NO_1" /* optional */
/* <- End of defines for message MULTIPLE_FAILED_READS */
/* Begin of defines for message BAD_PAGE: ID = 5, VERSION = 2, TAGS = 4 -> */
#define SDBMSG_IOMAN_BAD_PAGE 5, "IOMan", __FILE__, __LINE__, "Failed consistency check on read page", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("2"))
#define SDBMSGTAG_IOMAN_BAD_PAGE__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_BAD_PAGE__VOLUME_TYPE "VOLUME_TYPE"
#define SDBMSGTAG_IOMAN_BAD_PAGE__BLOCK_NO "BLOCK_NO"
#define SDBMSGTAG_IOMAN_BAD_PAGE__NUMBER1 "NUMBER1" /* optional */
#define SDBMSGTAG_IOMAN_BAD_PAGE__NUMBER2 "NUMBER2" /* optional */
#define SDBMSGTAG_IOMAN_BAD_PAGE__NUMBER3 "NUMBER3" /* optional */
#define SDBMSGTAG_IOMAN_BAD_PAGE__NUMBER "NUMBER" /* optional */
#define SDBMSGTAG_IOMAN_BAD_PAGE__BLOCK_NO_1 "BLOCK_NO_1" /* optional */
#define SDBMSGTAG_IOMAN_BAD_PAGE__VOLUME_ID_1 "VOLUME_ID_1" /* optional */
/* <- End of defines for message BAD_PAGE */
/* Begin of defines for message ABORT_READ: ID = 6, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_IOMAN_ABORT_READ 6, "IOMan", __FILE__, __LINE__, "The read operation has been terminated due to a corrupt page", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_ABORT_READ__VOLUME_ID "VOLUME_ID" /* optional */
#define SDBMSGTAG_IOMAN_ABORT_READ__NUMBER1 "NUMBER1" /* optional */
#define SDBMSGTAG_IOMAN_ABORT_READ__NUMBER3 "NUMBER3" /* optional */
#define SDBMSGTAG_IOMAN_ABORT_READ__NUMBER "NUMBER" /* optional */
#define SDBMSGTAG_IOMAN_ABORT_READ__BLOCK_NO "BLOCK_NO" /* optional */
/* <- End of defines for message ABORT_READ */
/* Begin of defines for message VOLUME_OFFLINE: ID = 7, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_IOMAN_VOLUME_OFFLINE 7, "IOMan", __FILE__, __LINE__, "Volume is offline", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_VOLUME_OFFLINE__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_VOLUME_OFFLINE__VOLUME_TYPE "VOLUME_TYPE"
/* <- End of defines for message VOLUME_OFFLINE */
/* Begin of defines for message DATA_AREA_STATE: ID = 8, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_IOMAN_DATA_AREA_STATE 8, "IOMan", __FILE__, __LINE__, "Current operational state of the data area", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_DATA_AREA_STATE__NUMBER1 "NUMBER1"
#define SDBMSGTAG_IOMAN_DATA_AREA_STATE__NUMBER2 "NUMBER2"
#define SDBMSGTAG_IOMAN_DATA_AREA_STATE__NUMBER "NUMBER"
/* <- End of defines for message DATA_AREA_STATE */
/* Begin of defines for message ABORT_DATA_BACKUP: ID = 9, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_IOMAN_ABORT_DATA_BACKUP 9, "IOMan", __FILE__, __LINE__, "Abort data backup due to an error", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message ABORT_DATA_BACKUP */
/* Begin of defines for message INCONSISTENT_BACKUP: ID = 10, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_IOMAN_INCONSISTENT_BACKUP 10, "IOMan", __FILE__, __LINE__, "Data backup is inconsistent", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_INCONSISTENT_BACKUP__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_INCONSISTENT_BACKUP__BLOCK_NO "BLOCK_NO"
/* <- End of defines for message INCONSISTENT_BACKUP */
/* Begin of defines for message BAD_OUTPUT_PAGE: ID = 11, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_IOMAN_BAD_OUTPUT_PAGE 11, "IOMan", __FILE__, __LINE__, "Consistency check on a page to be written failed", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__VOLUME_ID "VOLUME_ID"
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__VOLUME_TYPE "VOLUME_TYPE"
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__BLOCK_NO "BLOCK_NO"
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__NUMBER1 "NUMBER1" /* optional */
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__NUMBER2 "NUMBER2" /* optional */
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__NUMBER3 "NUMBER3" /* optional */
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__NUMBER "NUMBER" /* optional */
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__BLOCK_NO_1 "BLOCK_NO_1" /* optional */
#define SDBMSGTAG_IOMAN_BAD_OUTPUT_PAGE__VOLUME_ID_1 "VOLUME_ID_1" /* optional */
/* <- End of defines for message BAD_OUTPUT_PAGE */
/* Begin of defines for message PAGENO_DETAIL: ID = 12, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_IOMAN_PAGENO_DETAIL 12, "IOMan", __FILE__, __LINE__, "PageNo '$PAGENO$' is of persistence typ  '$PERSISTENT_TYPE$'", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_IOMAN_PAGENO_DETAIL__PAGENO "PAGENO"
#define SDBMSGTAG_IOMAN_PAGENO_DETAIL__PERSISTENT_TYPE "PERSISTENT_TYPE"
/* <- End of defines for message PAGENO_DETAIL */
/* <- End of message defines for component IOMan */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_IOMAN_ENUMERATION \
                    IOMan_ADD_VOLUME_IS_ONLINE=1, \
                    IOMan_LOGDEVICE_CONFIGURATION_CORRUPTED=2, \
                    IOMan_NOT_ACCESSIBLE=3, \
                    IOMan_MULTIPLE_FAILED_READS=4, \
                    IOMan_BAD_PAGE=5, \
                    IOMan_ABORT_READ=6, \
                    IOMan_VOLUME_OFFLINE=7, \
                    IOMan_DATA_AREA_STATE=8, \
                    IOMan_ABORT_DATA_BACKUP=9, \
                    IOMan_INCONSISTENT_BACKUP=10, \
                    IOMan_BAD_OUTPUT_PAGE=11, \
                    IOMan_PAGENO_DETAIL=12
#define SDBMSG_IOMAN_INITIALIZATIONLIST(x) \
                    x(SDBMSG_IOMAN_ADD_VOLUME_IS_ONLINE, "ADD_VOLUME_IS_ONLINE"), \
                    x(SDBMSG_IOMAN_LOGDEVICE_CONFIGURATION_CORRUPTED, "LOGDEVICE_CONFIGURATION_CORRUPTED"), \
                    x(SDBMSG_IOMAN_NOT_ACCESSIBLE, "NOT_ACCESSIBLE"), \
                    x(SDBMSG_IOMAN_MULTIPLE_FAILED_READS, "MULTIPLE_FAILED_READS"), \
                    x(SDBMSG_IOMAN_BAD_PAGE, "BAD_PAGE"), \
                    x(SDBMSG_IOMAN_ABORT_READ, "ABORT_READ"), \
                    x(SDBMSG_IOMAN_VOLUME_OFFLINE, "VOLUME_OFFLINE"), \
                    x(SDBMSG_IOMAN_DATA_AREA_STATE, "DATA_AREA_STATE"), \
                    x(SDBMSG_IOMAN_ABORT_DATA_BACKUP, "ABORT_DATA_BACKUP"), \
                    x(SDBMSG_IOMAN_INCONSISTENT_BACKUP, "INCONSISTENT_BACKUP"), \
                    x(SDBMSG_IOMAN_BAD_OUTPUT_PAGE, "BAD_OUTPUT_PAGE"), \
                    x(SDBMSG_IOMAN_PAGENO_DETAIL, "PAGENO_DETAIL")
/* <- some helpful enumerations */

#endif /* SDBMSG_IOMAN_H */
