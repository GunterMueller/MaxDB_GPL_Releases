/*
        ========== licence begin  GPL
        Copyright (c) 2005 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_RST_H
#define SDBMSG_RST_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2005-09-19 15:33:12 */
#error SDBMsg_Rst.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_RST_COMPONENT "Rst"
/* Begin of all message defines for component Rst -> */
/* Begin of defines for message REDO_READ_GET_TRANSENTRY_FAILED: ID = 1, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RST_REDO_READ_GET_TRANSENTRY_FAILED 1, "Rst", __FILE__, __LINE__, "Getting transentry $TRANS_INDEX$ for TR$TRANS_ID$ failed.", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_REDO_READ_GET_TRANSENTRY_FAILED__TRANS_ID "TRANS_ID"
#define SDBMSGTAG_RST_REDO_READ_GET_TRANSENTRY_FAILED__TRANS_INDEX "TRANS_INDEX"
/* <- End of defines for message REDO_READ_GET_TRANSENTRY_FAILED */
/* Begin of defines for message REDO_EXECUTE_FAILED: ID = 2, VERSION = 1, TAGS = 5 -> */
#define SDBMSG_RST_REDO_EXECUTE_FAILED 2, "Rst", __FILE__, __LINE__, "Trans $TRANS_ID$ failed during $REASON$ with $RETURNCODE$ ($ERRORTEXT$)", (Msg_Has5Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_REDO_EXECUTE_FAILED__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_RST_REDO_EXECUTE_FAILED__REASON "REASON"
#define SDBMSGTAG_RST_REDO_EXECUTE_FAILED__RETURNCODE "RETURNCODE"
#define SDBMSGTAG_RST_REDO_EXECUTE_FAILED__TRANS_ID "TRANS_ID"
/* <- End of defines for message REDO_EXECUTE_FAILED */
/* Begin of defines for message DROP_AUX_FILE_FAILED: ID = 3, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RST_DROP_AUX_FILE_FAILED 3, "Rst", __FILE__, __LINE__, "Starting job to drop aux files for transaction $TRANS_ID$ failed.", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_DROP_AUX_FILE_FAILED__TRANS_ID "TRANS_ID"
/* <- End of defines for message DROP_AUX_FILE_FAILED */
/* Begin of defines for message REDO_CONTROL_INFO1: ID = 4, VERSION = 2, TAGS = 4 -> */
#define SDBMSG_RST_REDO_CONTROL_INFO1 4, "Rst", __FILE__, __LINE__, "RedoControl: OldestCommitSeq: $LOG_IO_SEQUENCE$, RedoTasks: $TASKS_AVAILABLE$ , MaxRedoTrans: $MAX_NUM_REDO_TRANS$", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("2"))
#define SDBMSGTAG_RST_REDO_CONTROL_INFO1__LOG_IO_SEQUENCE "LOG_IO_SEQUENCE"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO1__TASKS_AVAILABLE "TASKS_AVAILABLE"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO1__MAX_NUM_REDO_TRANS "MAX_NUM_REDO_TRANS"
/* <- End of defines for message REDO_CONTROL_INFO1 */
/* Begin of defines for message REDO_CONTROL_INFO_TITLE: ID = 5, VERSION = 1, TAGS = 2 -> */
#define SDBMSG_RST_REDO_CONTROL_INFO_TITLE 5, "Rst", __FILE__, __LINE__, "RedoControl: $TITLE$", (Msg_Has2Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_REDO_CONTROL_INFO_TITLE__TITLE "TITLE"
/* <- End of defines for message REDO_CONTROL_INFO_TITLE */
/* Begin of defines for message REDO_CONTROL_INFO2: ID = 6, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_RST_REDO_CONTROL_INFO2 6, "Rst", __FILE__, __LINE__, "RedoControl: EndOfLogReached: $END_OF_LOG$, RedoIsAborted: $REDO_ABORTED$, RedoProcessingDisabled: $REDO_DISABLED$", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_REDO_CONTROL_INFO2__END_OF_LOG "END_OF_LOG"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO2__REDO_ABORTED "REDO_ABORTED"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO2__REDO_DISABLED "REDO_DISABLED"
/* <- End of defines for message REDO_CONTROL_INFO2 */
/* Begin of defines for message REDO_CONTROL_INFO4: ID = 8, VERSION = 2, TAGS = 3 -> */
#define SDBMSG_RST_REDO_CONTROL_INFO4 8, "Rst", __FILE__, __LINE__, "RedoControl: Transactions processed: $NUMBER$ ($NUMBER1$)", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("2"))
#define SDBMSGTAG_RST_REDO_CONTROL_INFO4__NUMBER1 "NUMBER1"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO4__NUMBER "NUMBER"
/* <- End of defines for message REDO_CONTROL_INFO4 */
/* Begin of defines for message REDO_TASK_COUNTER_MISMATCH: ID = 9, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RST_REDO_TASK_COUNTER_MISMATCH 9, "Rst", __FILE__, __LINE__, "Info:Counter mismatch: Resumed $TASKID_WAITING_1$ redo tasks but only $TASKID_WAITING_2$ were waiting.", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_REDO_TASK_COUNTER_MISMATCH__TASKID_WAITING_1 "TASKID_WAITING_1"
#define SDBMSGTAG_RST_REDO_TASK_COUNTER_MISMATCH__TASKID_WAITING_2 "TASKID_WAITING_2"
/* <- End of defines for message REDO_TASK_COUNTER_MISMATCH */
/* Begin of defines for message REDO_TASK_DEADLOCK: ID = 10, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_RST_REDO_TASK_DEADLOCK 10, "Rst", __FILE__, __LINE__, "Deadlock of redo tasks detected. All redo execution tasks and the redo reader are waiting.", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message REDO_TASK_DEADLOCK */
/* Begin of defines for message MORE_USER_THEN_REDO_TASKS: ID = 11, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_RST_MORE_USER_THEN_REDO_TASKS 11, "Rst", __FILE__, __LINE__, "$TASKS_WANTED$ redo transactions readable and $TASKS_AVAILABLE$ redo tasks available.", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_RST_MORE_USER_THEN_REDO_TASKS__TASKS_AVAILABLE "TASKS_AVAILABLE"
#define SDBMSGTAG_RST_MORE_USER_THEN_REDO_TASKS__TASKS_WANTED "TASKS_WANTED"
/* <- End of defines for message MORE_USER_THEN_REDO_TASKS */
/* Begin of defines for message REDO_CONTROL_INFO3: ID = 12, VERSION = 2, TAGS = 4 -> */
#define SDBMSG_RST_REDO_CONTROL_INFO3 12, "Rst", __FILE__, __LINE__, "RedoControl: redo reader T$TASK_ID$ wait reason:  $REASON$, waiting redo executer:  $NUMBER$", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("2"))
#define SDBMSGTAG_RST_REDO_CONTROL_INFO3__REASON "REASON"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO3__TASK_ID "TASK_ID"
#define SDBMSGTAG_RST_REDO_CONTROL_INFO3__NUMBER "NUMBER"
/* <- End of defines for message REDO_CONTROL_INFO3 */
/* <- End of message defines for component Rst */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_RST_ENUMERATION \
                    Rst_REDO_READ_GET_TRANSENTRY_FAILED=1, \
                    Rst_REDO_EXECUTE_FAILED=2, \
                    Rst_DROP_AUX_FILE_FAILED=3, \
                    Rst_REDO_CONTROL_INFO1=4, \
                    Rst_REDO_CONTROL_INFO_TITLE=5, \
                    Rst_REDO_CONTROL_INFO2=6, \
                    Rst_REDO_CONTROL_INFO4=8, \
                    Rst_REDO_TASK_COUNTER_MISMATCH=9, \
                    Rst_REDO_TASK_DEADLOCK=10, \
                    Rst_MORE_USER_THEN_REDO_TASKS=11, \
                    Rst_REDO_CONTROL_INFO3=12
#define SDBMSG_RST_INITIALIZATIONLIST(x) \
                    x(SDBMSG_RST_REDO_READ_GET_TRANSENTRY_FAILED, "REDO_READ_GET_TRANSENTRY_FAILED"), \
                    x(SDBMSG_RST_REDO_EXECUTE_FAILED, "REDO_EXECUTE_FAILED"), \
                    x(SDBMSG_RST_DROP_AUX_FILE_FAILED, "DROP_AUX_FILE_FAILED"), \
                    x(SDBMSG_RST_REDO_CONTROL_INFO1, "REDO_CONTROL_INFO1"), \
                    x(SDBMSG_RST_REDO_CONTROL_INFO_TITLE, "REDO_CONTROL_INFO_TITLE"), \
                    x(SDBMSG_RST_REDO_CONTROL_INFO2, "REDO_CONTROL_INFO2"), \
                    x(SDBMSG_RST_REDO_CONTROL_INFO4, "REDO_CONTROL_INFO4"), \
                    x(SDBMSG_RST_REDO_TASK_COUNTER_MISMATCH, "REDO_TASK_COUNTER_MISMATCH"), \
                    x(SDBMSG_RST_REDO_TASK_DEADLOCK, "REDO_TASK_DEADLOCK"), \
                    x(SDBMSG_RST_MORE_USER_THEN_REDO_TASKS, "MORE_USER_THEN_REDO_TASKS"), \
                    x(SDBMSG_RST_REDO_CONTROL_INFO3, "REDO_CONTROL_INFO3")
/* <- some helpful enumerations */

#endif /* SDBMSG_RST_H */
