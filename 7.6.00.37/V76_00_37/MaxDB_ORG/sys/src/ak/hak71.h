/*!******************************************************************************

  @file         hak71.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HAK71_H
#define HAK71_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\xa3\x04\xec\x53\x0d\x0d\x0e\xcc\x22\x55\x2e\x3c\x17\x46\x48\x69'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "gak00.h"
#include "vak001.h"
#include "ggg07.h"
#include "gak70.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal tsp00_Line a71blankline;

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71glob_init_accesspath_info ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71add_default_strat (
    tgg00_MessBlock       VAR_VALUE_REF  mblock);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71del_sysinfo_strategy (
    tsp00_Int4                           keylen,
    tgg00_MessBlock       VAR_VALUE_REF  mblock);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71default_strat (
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71key_strat (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tsp00_Int2                           start,
    tsp00_Int2                           stop);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71index_strat (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tsp00_Int2                           start,
    tsp00_Int2                           stop);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71create_key_sequence (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_syspointerarr     VAR_VALUE_REF  sparr,
    tak70_strategy_record  VAR_VALUE_REF  access_info);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71create_inv_sequence (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tak70_one_strat       VAR_VALUE_REF  inv_strat,
    tak_multindex         VAR_VALUE_REF  index_def);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71search_thru_index (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_StackEntry      VAR_VALUE_REF  column,
    tak_multindex         VAR_VALUE_REF  index_def,
    tsp00_Int2            VAR_VALUE_REF  invfield);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71prepare_qual_on_index (
    tgg00_MessBlock       VAR_VALUE_REF  mblock,
    tgg07_StrategyInfo    VAR_VALUE_REF  strategy,
    tgg00_BasisError      VAR_VALUE_REF  b_err);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71check_fetch_optimization (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak00_access_configuration  VAR_VALUE_REF  config,
    tak70_query_properties  VAR_VALUE_REF  qprop,
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy,
    tgg07_StratEnum       VAR_VALUE_REF  strategy,
    tgg07_StrRaw          VAR_ARRAY_REF  strat_data);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71calculate_pageIO (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_syspointerarr     VAR_VALUE_REF  sparr,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tak70_one_strat       VAR_VALUE_REF  strategy,
    tak70_eval_rec        VAR_VALUE_REF  eval_values,
    tsp00_Int4                           read_primpages,
    tsp00_Longreal        VAR_VALUE_REF  key_strat_value,
    tsp00_Int4                           index_pagesize,
    tsp00_Int2                           outrec_len);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool a71is_duplicate_avoidance (
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy,
    tgg07_StratEnum_Param                 stratenum,
    tgg07_StrRaw          VAR_ARRAY_REF  strat_data,
    tak70_query_properties  VAR_VALUE_REF  qprop);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int2 a71code_distinct_optim (
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71turn_into_build_strat (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg07_StratEnum       VAR_VALUE_REF  strategy);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71set_rescnt (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_syspointerarr     VAR_VALUE_REF  sparr,
    tsp00_Int4                           str_rowno,
    tak70_query_properties  VAR_VALUE_REF  qprop);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool a71GetKeyFromKeystrat (
    tgg00_MessBlock       VAR_VALUE_REF  mblock,
    tgg00_Lkey            VAR_VALUE_REF  key,
    tgg00_BasisError      VAR_VALUE_REF  b_err);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71adjust_configuration (
    tak_dml_info          VAR_VALUE_REF  dmli,
    tak70_strategy_record  VAR_VALUE_REF  config_qprop);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool a71MatchingFunctionBasedIndex (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              columnIndex,
    tak_multindex         VAR_VALUE_REF  index_def,
    tsp00_Int2            VAR_VALUE_REF  invfield);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71decide_min_rows (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tsp00_Int4                           readIO_pages,
    tsp00_Int4                           readIO_rows);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Longreal a71stratval_calc (
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tsp00_Int4                           read_pages,
    tsp00_Int4                           read_primrows,
    tsp00_Int4                           index_pagesize,
    pasbool                              count_recs);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71change_stack_code (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tgg07_StrategyInfo    VAR_VALUE_REF  strategy);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71update_strategy (
    tgg07_StrategyInfo    VAR_VALUE_REF  strat,
    tsp00_Int2                           offset,
    tsp00_Int2                           pos_upwards);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71change_stack_at_runtime (
    tgg00_MessBlock       VAR_VALUE_REF  mblock,
    tgg07_StrategyInfo    VAR_VALUE_REF  strategy,
    tgg07_stack_backup_info  VAR_VALUE_REF  backup_info,
    pasbool               VAR_VALUE_REF  mblock_changed);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a71restore_stack_at_runtime (
    tgg00_MessBlock       VAR_VALUE_REF  mblock,
    tgg07_StrategyInfo    VAR_VALUE_REF  strategy,
    tgg07_stack_backup_info  VAR_VALUE_REF  backup_info,
    pasbool                              mblock_changed);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

