/*!******************************************************************************

  @file         hak651.h

  ------------------------------------------------------------------------------

  @author       ElkeZ

  @brief        Const_Expression

\if EMIT_LICENCE  

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HAK651_H
#define HAK651_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x63\x47\xdb\xa8\x5b\x59\x36\x89\x40\xab\xc3\xcb\xe0\x54\x89\xcc'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "vak001.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void a651const_between_expression (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    integer                              st_begin,
    tgg00_StackOpType_Param                 op);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a651in_const_expression (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tsp00_Int2                           st_begin,
    tsp00_Int2                           st_end);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a651code_for_const_param_expr (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tsp00_Int2                           st_begin,
    tsp00_Int2                           expr_st_cnt);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a651value_calculate (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              st_begin,
    integer                              st_end,
    pasbool                              byte_str,
    pasbool                              like,
    tsp00_Int2                           iolen,
    tsp00_Int4                           err_pos);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

