/*!******************************************************************************

  @file         hak682.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 1999-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HAK682_H
#define HAK682_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x65\xc8\x27\xf0\x6b\x86\xd7\x8e\xde\xd1\x59\x8f\xa3\x51\x1c\x9c'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "vak001.h"
#include "gak68.h"
#include "gak71.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void a682_only_ex_join (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tak_parskey           VAR_VALUE_REF  parsk,
    tgg00_FileId          VAR_VALUE_REF  res_tree,
    pasbool                              use_old_rescnt);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682_execute_join (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tak68_sequence        VAR_ARRAY_REF  series,
    tgg00_FileId          VAR_VALUE_REF  res_tree,
    tak_parskey           VAR_VALUE_REF  parsk,
    tak68_joinview_rec    VAR_VALUE_REF  jvrec,
    pasbool                              use_old_rescnt,
    pasbool                              seqsearch_for_exec);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682_execute_join_operator (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tak68_sequence        VAR_ARRAY_REF  series,
    tgg00_FileId          VAR_VALUE_REF  res_tree,
    tak_parskey           VAR_VALUE_REF  parsk,
    tak68_joinview_rec    VAR_VALUE_REF  jvrec,
    pasbool                              use_old_rescnt,
    pasbool                              seqsearch_for_exec);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682context_mblock_sysk (
    tgg00_SysInfoKey      VAR_VALUE_REF  ke);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682copy_joinparsinfo (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_parskey           VAR_VALUE_REF  parsk);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682save_context (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tak_parskey           VAR_VALUE_REF  parsk,
    tak71_strat_rec       VAR_VALUE_REF  ak_strat_interface,
    tak68_sequence        VAR_ARRAY_REF  series,
    tak68_eq_record       VAR_VALUE_REF  eq_rec,
    tgg00_FileId          VAR_VALUE_REF  res_tree,
    pasbool                              use_operator_join,
    pasbool                              copy_joininfo);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682join_MBlock_key (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    const tak_parskey     VAR_VALUE_REF  parsk,
    const tgg00_Surrogate  VAR_ARRAY_REF  jv_tabid,
    tsp00_Int2                           seqno,
    tgg00_SysInfoKey      VAR_VALUE_REF  syskey,
    pasbool                              use_stmt_parsk);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682_mbuf_to_tmpbuf (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_SysInfoKey      VAR_VALUE_REF  syskey,
    tgg00_BasisError      VAR_VALUE_REF  b_err,
    tak68_mbuf_to_tmpbuf_context_Param                 sysinfo_kind);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a682j_one_record (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    const tsp00_Int2                     act_join,
    const tsp00_Int2                     curr_tabno,
    const tak_parskey     VAR_VALUE_REF  parsk,
    const tak68_joinview_rec  VAR_VALUE_REF  jvrec,
    const pasbool                        use_old_rescnt,
    const pasbool                        MBlocks_created);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

