/*!******************************************************************************

  @file         hak663.h

  ------------------------------------------------------------------------------

  @author       

  @brief        Resultname_handling

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HAK663_H
#define HAK663_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x7a\x02\x11\xbb\x51\xcc\xc3\xf9\x96\xd3\x22\x1c\x9e\x1e\x73\x32'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "vak001.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void a663get_result_records (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_directory_state_Param                 dstate,
    tsp00_Int4                           resid,
    tak_sysbufferaddress  VAR_VALUE_REF  pbasep,
    pasbool               VAR_VALUE_REF  ok);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_get_result_info (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  resname,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  modul_name,
    tak_sysbufferaddress  VAR_VALUE_REF  resname_addr,
    pasbool                              make_new_res,
    tgg00_TfnTemp_Param                  ftemptype,
    tak_directory_state_Param                 dstate,
    pasbool               VAR_VALUE_REF  f_ok);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_make_res_buf (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  res_name,
    tgg00_FileId          VAR_VALUE_REF  res_tree);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_put_result_info (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_sysbufferaddress  VAR_VALUE_REF  resname_addr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_del_result (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_resname_record    VAR_VALUE_REF  resname_rec,
    pasbool                              do_cdel,
    pasbool                              del_resname_rec);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663DelResult (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int4                           resid);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663commit_rollback (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_MessType_Param                 m_type,
    pasbool                              release,
    tgg00_SubtransNo                     subtrans);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_drop_parsid (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_parsid            VAR_VALUE_REF  p,
    integer               VAR_VALUE_REF  del_cnt);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_resname (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  res_name,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  modul_name,
    tak_sysbufferaddress  VAR_VALUE_REF  resname_addr,
    tak_directory_state_Param                 dstate,
    integer                              errorpos);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663create_result_file (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_MessType_Param                 m_type,
    tgg00_FileId          VAR_VALUE_REF  res_tree);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool a663parse_for_execute (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663pid_restable_get (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_parskey           VAR_VALUE_REF  pars_key,
    tak_directory_state_Param                 dstate,
    tak_syspointerarr     VAR_VALUE_REF  sparr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663restable_get (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_directory_state_Param                 dstate,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  tablen,
    tak_syspointerarr     VAR_VALUE_REF  sparr,
    pasbool               VAR_VALUE_REF  ok);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663_intern_resname_drop (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a663recurs_result_records (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_directory_state_Param                 dstate,
    tgg00_Surrogate       VAR_ARRAY_REF  surr,
    tak_sysbufferaddress  VAR_VALUE_REF  pbasep,
    pasbool               VAR_VALUE_REF  ok);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

