#
#  @(#)libomssimul.dld     7.4   2002-05-14
#
#
#
#
#    ========== licence begin  GPL
#    Copyright (c) 2000-2005 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end

# link

&slow
&if $OSSPEC in [ WIN32 ]
-lib=Eafxisd
-lib=mfc42d
-lib=mfcs42d
&endif
&endslow

&if $OSSPEC == WIN32
& if $MACH == I386 && not defined BIT64
&  if not ($_MSC_VER == 13 && $_MSC_VER_MINOR == 10)
-lib=libcimt
&  endif
& endif

-lib=libcpmt
-lib=uuid
# resources and so...
LVCSim_Def.def	definition
? distribute: symbols/libomssimul.pdb, Support/Mapfiles/libomssimul.map
&endif


#-BuildNrFunction=OMSSimul_DummyBuildNumber

LVCSim_GlobFnc.cpp
LVCSim_Compat.cpp
LVCSim_KernelInterface.cpp
LVCSim_Main.cpp
LVCSim_OIDAllocator.cpp
LVCSim_ObjectHandle.cpp
LVCSim_ObjectTree.cpp
LVCSim_ObjectVerHandle.cpp
LVCSim_liveCacheSink.cpp
LVCSim_CheckpointIO.cpp
LVCSim_DebugAllocator.cpp
LVCSim_DebugCallback.cpp
LVCSim_ProcServerInterface.cpp
LVCSim_RWLockManager.cpp

LVC_Dispatcher.cpp
LVC_DispatcherCOMClassHash.cpp
LVC_DispatcherHashEntry.cpp
LVC_ProcServerExecutor.cpp
LVC_ProcServerInterface.cpp

LVCMem_DefaultAllocator.cpp
SAPDBMem_DefaultRawAllocator.cpp

veo02.c

RTESys_MicroTime.c
RTE_KernelInterfaceInstance-simul.cpp
LVC_LibOmsInterface.cpp

liveCacheProcServ.lib

# FDIR_DEV
OMS_ContainerHandle.cpp # only as long as new FileDir isn't really used

liboms.dld nodistrib
libmemdbg.dld

&if $OSSPEC in [ WIN32 ]

# MultiSessionSimulator; Only WIN32 on IA-32
&if $MACH == I386 && not defined BIT64
libmssim.dld
&endif

vos38a
RTESys_NTHighResTimer.cpp

RTE_GlobalMultiThread.cpp
RTEThread_Context.cpp
eoxlib  f      nodistrib
-lib=user32
veo670.c
-lib=dbghelp

&else

&if ( $OSSPEC in [ LINUX ] and $MACH in [ S390X ] )
ven38NMP.cpp
&else
ven38a
&endif

libsqlptc.rel

veo670.c

&if $OSSPEC in [ OSF1 ]
-lpthread
&endif
&if $OSSPEC in [ HPUX ]
SAPDB_OStream.cpp
&endif

&if ( $OSSPEC in [ LINUX ] and $MACH in [ S390X, IA64 ] )
-dld
&endif

&endif

ClientRunTime.lib
splib.lib
RTESys_IO.c
