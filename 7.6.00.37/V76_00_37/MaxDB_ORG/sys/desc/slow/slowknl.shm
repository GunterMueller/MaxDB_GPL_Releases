# @(#)   desc/slow/slowknl.shm   7.1     02/09/98
#
#
#
#    ========== licence begin  GPL
#    Copyright (c) 2000-2005 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end

#-----------------------------------------------------------------------------
#
# All symbols are hold during linking making library sequences unneccessary
#
-keep_symbols

& if $OS == WIN32
&if $MACH == I386 && !defined BIT64
-lib=ptocntr
&else
-lib=ptocntr64
&endif
  -stack=8192
  -lib=advapi32
  -lib=wsock32
  -lib=shell32
  -lib=ole32
  -lib=oleaut32
  -lib=uuid

  :Resource/slowknl.rc remake

  vos80k.c s
  RTE_DiagPipe.cpp
  vos80kn.c s
&else
?tool option : CXX
#
# Begin of UNIX
#
& if $MACH = _IBMR2
  -lpthreads
& endif
& if $MACH in [ PA11, PA20W, HP_IA64 ]
  -lpthread
  -lsec
& endif
&if $OSSPEC in [ FREEBSD ]
  -llthread
& endif

& if $OSSPEC in [ OSF1 ]
  -lsecurity
& endif
& if $OSSPEC in [ FREEBSD ]
  -export-dynamic
  -lpthread
& endif
& if $OSSPEC in [ LINUX ]
# Maxim L. (Intel): ICC has no documented option '-export-dynamic', linker parameter passing shall be used
  -Wl,--export-dynamic
  -lpthread
  -ldl
& endif
&if $MACH == SUN || $OSSPEC == SOLARIS
  -Bdynamic
&   if $OSSPEC == SOLARIS
  -ldemangle
&   endif
  -ldl
& endif
& if $MACH in [ _IBMR2 ]
  -ldl
& endif
 ven80.cpp
#
# End of UNIX
#
&endif

ak1lib	s
&ifvar v80
ak2lib-v80 s
&else
ak2lib  s
&endif
ak3lib  s

ak4lib  s
akOptimizer.lib s
JoinExec.lib s
SystemViews.lib s
kblib   s
bdlib   s
kgglib  s

vta01   f
vta99.cpp s	
splib-kernel
OMS_DbpError-k.cpp
SAPDBAlgo_MD5File.c 
#
# New C++ Source from source tree SAPDB/...
#
Table.lib s # has to be placed before KernelCommon.lib due to sun one phase linker
IOManager.lib s
Logging.lib s
vbd37 s # have to be listed after Logging.lib because of one phase linker
FreeBlockManagement.lib s
Converter.lib s
Pager.lib s
DataAccess.lib s
FrameCtrl_Manager.cpp s
FrameCtrl_Wrapper.cpp s
::SAPDB/ConsistentRead/ConsistentRead.lib
::SAPDB/ServerTasks/ServerTasks.lib s
::SAPDB/Transaction/Transaction.lib s
::SAPDB/SQLManager/SharedSQL/SharedSQL.lib s
::SAPDB/SQLManager/Query/Query.lib s
::SAPDB/SQLManager/QueryRewrite/QueryRewrite.lib s
&ifvar v80
SQLManager-v80.lib s
&else
SQLManager.lib s
&endif
#
FileDirectory.lib s
liveCache.lib s # has to be placed before KernelCommon.lib due to sun one phase linker
KernelCommon.lib s
Restart.lib s
Trace.lib s
KernelRunTime.lib s
Kernel_TraceTopics.cpp
::SAPDB/SAPDBCommon/SAPDBCommonKernel.lib s
# interface runtime in kernel
:SAPDB/Interfaces/SQLDBC/SQLDBC-kernel.cpp
:SAPDB/Interfaces/SQLDBC/SQLDBC_StorageItems-kernel.cpp
::SAPDB/Interfaces/sapdbifr-kernel
# Already in SQLManager
#::SAPDB/PacketInterface/PacketInterface-kernel.lib

# PTS 1115851 
# -> export new constructors and destructors
& if $OSSPEC in [ AIX ]
LVCMem_Allocator.exp demand
-brtl
-bE:LVCMem_Allocator.exp
&endif

&if $OS == WIN32 && $MACH == I386 && !defined BIT64
:SAPDB/Purify/pure_api.c
:SAPDB/Purify/purify.c
&endif

