
      (*****************************************)
      (* tokens for the lexical analysis *)
      (* 1. tokens for all precompilers *)
      cpr_s_unknown                =   0;
      cpr_s_colon                  =   1;
      cpr_s_comma                  =   2;
      cpr_s_divide                 =   3;
      cpr_s_eof                    =   4;
      cpr_s_equal                  =   5;
      cpr_s_fixed_point_literal    =   6;
      cpr_s_floating_point_literal =   7;
      cpr_s_identifier             =   8;
      cpr_s_leftindpar             =   9;
      cpr_s_leftpar                =  10;
      cpr_s_macro                  =  11;
      cpr_s_minus                  =  12;
      cpr_s_parameter_name         =  13;
      cpr_s_greater                =  14;
      cpr_s_plus                   =  15;
      cpr_s_point                  =  16;
      cpr_s_rightindpar            =  17;
      cpr_s_rightpar               =  18;
      cpr_s_semicolon              =  19;
      cpr_s_asterisk               =  20;
      cpr_s_string_literal         =  21;
      cpr_s_unsigned_integer       =  22;
      cpr_s_bufeof                 =  23;
      cpr_s_cstring_literal        =  24;
      cpr_s_question_mark          =  25;
      cpr_sqldbcount_one = '\C1\10\00\00\00\00\00\00\00\00';
      cpr_parsidnull     = '\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00';
      cpr_nullchar       = '\00';
      cpr_ht_code        = '\09';    (* tabulator          *)
      cpr_leftind_par    = '[';    (* eckige klammer auf *)
      cpr_rightind_par   = ']';    (* eckige klammer zu  *)
      cpr_backslash      = '\\';
      cpr_pc_endsign     = '!';
      cpr_recordchr      = '!';
      cpr_recordchr2     = '~';      (* tilde *)
      cpr_recordchr3     = '|';      (* senkrechter strich *)
      cpr_macrochr          = '%';
      cpr_paramchr          = ':';
      cpr_preparechr        = '?';      (* ?? *)
      cpr_warningchr        = 'W';
      cpr_dquosym           = '"';
      cpr_quotsym           = '''';
      cpr_asterisk          = '*';
      cpr_cbegin_par        = '{';    (* geschweifte klammer auf *)
      cpr_cend_par          = '}';    (* geschweifte klammer zu  *)
      cpr_numblen_int2       =  5;       (* int2 : fixed len    *)
      cpr_numblen_int4       = 10;       (* int4 : fixed len    *)
      cpr_numblen_int8       = 18;       (* int8 : fixed len    *)
      cpr_numblen_r4      =  6;       (* real4: float len    *)
      cpr_numblen_r8      = 15;       (* real8: float len    *)
      cpr_result_xuser_read_err = 1;
      cpr_result_system_required= 2;
      cpr_result_too_many_users = 3;
      cpr_result_user_passw     = 4;
      cpr_result_whenever_stop  = 5;
      cpr_result_option_error   = 6;
      cpr_result_trace_error    = 7;
      cpr_result_sqlxa_invalid  = 8;
      (* ------------tpr00_TraceParseID_Enum---------------- *)
      TraceParseIDInput_epr00        = 1;
      TraceParseIDOutput_epr00      = 2;
      TraceParseIDChange_epr00       = 3;
      TraceParseIDNew_epr00          = 4;
      TraceParseIDSQLStmt_epr00      = 5;
      TraceParseIDSQLStmtBlank_epr00 = 6;
      TraceParseIDUseExecute_epr00   = 7;
      TraceParseIDFetch_epr00        = 8;
      TraceParseIDBlank_epr00        = 9;
      TraceParseIDAgain_epr00        = 10;
      TraceParseIDVersion_epr00      = 11;
      TraceParseIDSelect_epr00       = 12;
      TraceParseIDDrop_epr00         = 13;
      TraceParseIDFromCache_epr00    = 14;
      TraceParseIDSQLStmtMass_epr00  = 15;
      TraceParseIDOther_epr00        = 99;
      cpr_minint4         = - 2147483647;
      cpr_caidconst      = 'SQLCA   ';
      cpr_daidconst      = 'SQLDA   ';
      cpr_ghatzelcheck   = 'Hatzel-Check'; (* Ha ha, Hahahaha *)
      cpr_lhatzelcheck   = 'Check_Hatzel'; (* Ho ho, Hohohoho *)
      cpr_n_parameter    = 'PARAMETER                       ';
      (*----------------------------------------------------------*)
      (*   constante werden im precomilelauf errechnet muss >= 1  *)
      (*----------------------------------------------------------*)
      mxpr_partbuf        = 16000;     (* connect kommando buffer *)
      mxpr_sqlva1         = 10000;     (* host-variables addr *)
      mxpr_sqlva2         =  5000;     (* variable datatypes *)
      mxpr_sqlva3         = 10000;     (* variable names *)
      mxpr_sqlpa          =  5000;     (* parameter *)
      mxpr_sqlsa          =   500;     (* sequencs  *)
      mxpr_sqlka          =  3000;     (* kommandos *)
      mxpr_sqlpr          =   500;     (* prepare   *)
      mxpr_sqlst          =  1000;     (* statement *)
      mxpr_sqlfa          =   200;     (* fetch statements *)
      mxpr_sqlsd          =    20;     (* select direct fast commands *)
      mxpr_sqln           =   300;     (* anz sqlvar*)
      mxpr_sqlfn          =    50;     (* anz include-files im modul  *)
      mxpr_sqlat          =  500;     (* at-area, oracle at db-cmd *)
      mxpr_sqlcu          =  200;     (* cursor-area  *)
      mxpr_sqlsn          =  100;     (* snrsor-area  *)
      (*------------------------------------------*)
      (* Konstanten f?ur neu parsid rel 3.0.00    *)
      (*------------------------------------------*)
      cpr_p_precom_index     = 11;
      mxpr_knlparsid         =  12;   (* release 3.0..  *)
      mxpr_parsid            =  mxpr_knlparsid + 4;   (* release 7.1..  *)
      mxpr_errorloop   =   10; (* bei error -1,anz wiederholungen *)
      mxpr_sqlline     =   52;          (* mod 4 *)
      mxpr_macroline   =  126;
      mxpr_sqlga       =    8;  (* anzahl session  *)
      mxpr_sqlma       =  128;     (* mocros    *)
      mxpr_partkind    =   36;    (* vpi00c sqlmaxpartkind *)
      mxpr_numb           =    6;
      mxpr_errtext        =   70;
      mxpr_preline        =  512;          (* mod 4 *)
      mxpr_value          =  254;
      mxpr_mfetch         =   18;
      mxpr_mfetchbuffer   =   18;
      mxpr_mfetchrecords  =  250;
      mxpr_descrlvc       = 2000;
      mxpr_sysprof_stmlen = 1950;
      mxpr_buffer         = 8488;   (* old tsp00_MoveObj *)
      cpr_undefindicator    = -1;
      cpr_overflowindicator = -2;
      cpr_defaultparam      = -3;
      cpr_kind_empty         =   0;
      cpr_kind_internal      =   1;
      cpr_kind_db2           =   2;
      cpr_kind_ansi          =   3;
      cpr_kind_oracle        =   4;
      cpr_kind_sapr3         =   5;
      cpr_single_byte        =   0;
      cpr_multi_sjis         =   1;
      cpr_multi_euc          =   2;
      (*------------------------------------------*)
      (* Konstanten fuer sapdb_errors  und       *)
      (* Konstanten fuer sapdb_messagetypen      *)
      (*------------------------------------------*)
      cpr_pointerlen            =    0;
      cpr_file_or_table_droped  = -108;
      cpr_err_cmd_not_available = -101;
      cpr_database_crash        =  800;
      (* messagetypen nicht im precompiler erlaubt *)
      (* parsid  [5]  wert *)
      cpr_m_nolog           = 36;  (* Thomas A. fragen *)
      (*------------------------------------------*)
      (* Konstanten f?ur enumeration typen        *)
      (*------------------------------------------*)
      cpr_tr_inp            = 0;    (* trace text *)
      cpr_tr_outp           = 1;
      cpr_tr_loop           = 2;
      cpr_tr_longvar        = 3;
      cpr_tr_arrcnt         = 4;
      cpr_is_empty          = -1;   (* tsp00_Int2 *)
      cpr_is_false          = 0;
      cpr_is_true           = 1;    (* tsp00_Int2 *)
      cpr_is_init           = 2;
      cpr_is_describe       = 3;
      cpr_is_loop_cnt       = 4;    (* 1.entry for loop sa-entries.sastruc*)
      cpr_is_loop           = 5;    (* next sa-enties.sastruc for loop *)
      cpr_is_first          = 6;    (* clock mess time begin           *)
      cpr_is_end            = 7;    (* clock mess time end             *)
      cpr_is_only_pc        = 8;   (* prof.time without sqldbkerneltime*)
      cpr_is_statement      = 9;   (* hostvarname is statementname *)
      cpr_vstruct           = -1;
      cpr_vint2             = 0;     (* tsp00_Int2 *)
      cpr_vint4             = 1;
      cpr_vreal4            = 2;
      cpr_vreal8            = 3;
      cpr_vdecimal          = 4;
      cpr_vzoned            = 5;
      cpr_vchar             = 6;
      cpr_vcharc            = 7;
      cpr_vbchar            = 8;
      cpr_vdbchar           = 9;
      cpr_vbuf              = 10;
      cpr_vscalar           = 11;
      cpr_vintarr           = 12;
      cpr_vrec              = 13;
      cpr_vnone             = 14;
      cpr_vstring           = 15;
      cpr_vuns2             = 16;
      cpr_vuns4             = 17;
      cpr_vdecrec           = 18;
      cpr_varray            = 19;
      cpr_vstring1          = 20;
      cpr_vdbcharc          = 21;
      cpr_vlzone            = 22;
      cpr_vlszon            = 23;
      cpr_vtszon            = 24;
      cpr_vnumber           = 25;   (* visual basic *)
      cpr_vbyte             = 26;   (* visual basic *)
      cpr_vdbyte            = 27;   (* visual basic *)
      cpr_vansicharc        = 28;   (* ansi char for C with blanks *)
      cpr_vreal8sun         = 29;   (* real pascal sun *)
      cpr_vstringc          = 30;
      cpr_vansichar         = 31;   (* ansi char *)
      cpr_vr3charnull       = 32;   (* R3 intern datentyp *)
      (* only in sqlda, char with len=0 *)
      cpr_vint8         = 33;
      cpr_vuns8         = 34;
      cpr_vstring4      = 35;
      cpr_viaddr        = 36;
      cpr_vraw          = 37;
      cpr_vrawc         = 38;
      cpr_vfile         = 39;   (* datafile Cobol *)
      cpr_vfilec        = 40;   (* datafile C *)
      cpr_vunicode      = 41;   (* unicode   *)
      cpr_vunicodec     = 42;   (* unicode C *)
      cpr_vcharz        = 43;
      cpr_vonumber      = 44;
      cpr_vovarnum      = 45;
      cpr_vodate        = 46;
      cpr_vabaphandle   = 47;
      cpr_vvarchar_without_len   = 48;
      cpr_vint1         = 49;
      cpr_vuns1         = 50;
      cpr_vlong_desc    = 51;
      cpr_vucs2         = 52;
      cpr_vutf16        = 53;
      cpr_vstringunicode   = 54;    (* ora-varchar  contains UCS2 *)
      cpr_vstringunicode4  = 55;    (* ora-varchar4 contains UCS2 *)
      (*------------------------------------------*)
      (* Konstanten Oracle Datentypen             *)
      (*     nur in vpr00c                        *)
      (*------------------------------------------*)
      (*------------------------------------------*)
      (* Konstanten f?ur include Dateien describe *)
      (*------------------------------------------*)
      cpr_info_input    = 0;    (* colio *)
      cpr_info_output   = 1;
      cpr_info_inout    = 2;
      (* festgelegte dataentypen des precompilers *)
      cpr_vshort   =  cpr_vint2;       (* c *)
      cpr_vunsshort=  cpr_vuns2;       (* c *)
      cpr_vlong    =  cpr_vint4;       (* c *)
      cpr_vunslong =  cpr_vuns4;       (* c *)
      cpr_llong    =  cpr_numblen_int4; (* c *)
      cpr_lunslong =  cpr_numblen_int4; (* c *)
      cpr_vint     =  cpr_vint4;       (* c *)
      cpr_vunsigned=  cpr_vuns4;       (* c *)
      cpr_lint     =  cpr_numblen_int4; (* c *)
      cpr_lunsigned=  cpr_numblen_int4; (* c *)
      cpr_vinteger =  cpr_vint4;       (* pascal *)
      cpr_linteger =  cpr_numblen_int4; (* pascal *)
      cpr_vfloat   =  cpr_vreal4;      (* c *)
      cpr_vdouble  =  cpr_vreal8;      (* c *)
      cpr_vreal    =  cpr_vreal4;      (* f77 *)
      cpr_lshort   =  cpr_numblen_int2; (* c *)
      cpr_lunsshort=  cpr_numblen_int2; (* c *)
      cpr_lfloat   =  cpr_numblen_r4;(* c *)
      cpr_ldouble  =  cpr_numblen_r8;(* c *)
      cpr_trace_empty       = 0;    (* tsp00_Int2 *)
      cpr_trace_off         = 1;
      cpr_trace_formal      = 2;
      cpr_trace_long        = 3;
      cpr_trace_modformal   = 4;
      cpr_trace_modlong     = 5;
      cpr_com_empty         = 0;     (* command type *)
      cpr_com_sql           = 1;
      cpr_com_sql_conn      = 2;     (* sql connect statement *)
      cpr_com_cancel        = 3;     (* sql cancel  statement *)
      cpr_com_option        = 4;
      cpr_com_sql_close     = 5;
      cpr_com_crea_ind      = 6;
      cpr_com_sql_getval    = 7;     (* exex sql getval command *)
      cpr_com_sql_open      = 8;     (* c-i exec sql open statement *)
      cpr_com_commit_release = 9;    (* call interface *)
      cpr_com_describe      = 10;    (* call interface *)
      cpr_com_fetch_describe= 11;    (* call interface *)
      cpr_com_mfetch        = 12;    (* call interface *)
      cpr_com_mfetch_describe=13;    (* call interface *)
      cpr_com_exec          = 14;    (* intermediate code (of pass1) *)
      cpr_com_cics          = 15;    (* cics command found           *)
      cpr_com_command       = 16;    (* exec command                 *)
      cpr_com_unused        = 17;
      cpr_com_proc          = 18;    (* exec proc                    *)
      cpr_com_opt           = 19;    (* command line options *)
      cpr_com_sql_putval    = 20;    (* exec sql putval command *)
      cpr_com_set_format    = 21;    (* set format rel3.0  *)
      cpr_com_declare_cursor= 22;    (* declare cursor for ?? as param*)
      cpr_com_sql_fetch     = 23;    (* exec sql fetch command        *)
      cpr_com_ora_descr_sel = 24;    (* oracle desc sel.list *)
      cpr_com_oracle        = 25;    (* exec oracle          *)
      cpr_com_trace         = 26;
      cpr_com_sql_open_keep = 27;    (* exec sql open stmt. with keep opt. *)
      cpr_com_commit        = 28;
      cpr_com_rollback      = 29;
      cpr_com_rollback_release = 30;
      cpr_com_abort_session = 31;
      cpr_in_sqlva          = 0;     (* tsp00_Int2  *)
      cpr_in_sqlst          = 1;
      cpr_state_empty       = 0;     (* commandostate *)
      cpr_state_parse       = 1;
      cpr_state_execute     = 2;
      cpr_state_command     = 3;
      cpr_state_prepare     = 4;
      cpr_state_macro       = 5;
      cpr_state_trace       = 6;
      cpr_state_sync_exec   = 7;
      cpr_state_newsync_exec= 8;
      cpr_state_async_exec  = 9;
      cpr_state_decl_statem =10;
      cpr_state_decl_with_hold =11;
      cpr_state_execute_at_fetch  = 12;
      cpr_ci_implicit       = 0;     (* connectype    *)
      cpr_ci_program        = 1;
      cpr_ci_connect        = 2;
      cpr_ci_ora_connect    = 3;
      cpr_ci_explicit       = 4;
      cpr_co_ok                     = 0;    (* tsp00_Int2 *)
      cpr_co_dbms_start_required    = 1;
      cpr_co_too_many_users         = 2;
      cpr_co_restart_required       = 3;
      cpr_co_logon_required         = 4;
      cpr_co_user_or_pswd_illegal   = 5;
      cpr_co_crash                  = 6;
      cpr_co_timeout                = 7;
      cpr_co_implicit               = 8;
      cpr_co_user_op                = 9;

      cpr_se_empty          = 0;    (* tsp00_Int2 *)
      cpr_se_primary        = 1;
      cpr_se_second         = 2;
      CPR_CMD_STATE_INIT     = 0;
      CPR_CMD_STATE_START    = 1;
      CPR_CMD_STATE_READY    = 2;
      CPR_CMD_STATE_INFLIGHT = 3;
      CPR_CMD_STATE_END      = 4;
      cpr_fe_empty          = 0;    (* no fetch stm *)
      cpr_fe_fetch          = 1;    (* normal fetch *)
      cpr_fe_first          = 2;    (* fetch first  *)
      cpr_fe_next           = 3;    (* fetch next   *)
      cpr_fe_last           = 4;    (* fetch last   *)
      cpr_fe_prev           = 5;    (* fetch prev   *)
      cpr_fe_same           = 6;    (* fetch same   *)
      cpr_fe_posc           = 7;    (* fetch pos const*)
      cpr_fe_posv           = 8;    (* fetch pos variable *)
      cpr_fe_relc           = 9;    (* fetch relative const*)
      cpr_fe_relv           = 10;   (* fetch relative variable *)
      cpr_lo_iso_default    = -1;   (* option default *)
      cpr_lo_empty          = -1;   (* tsp00_Int2 empty *)
      cpr_lo_isolev0        = 0;    (* isolation level *)
      cpr_lo_isolev1        = 1;
      cpr_lo_isolev2        = 2;
      cpr_lo_isolev3        = 3;        (* ansi default *)
      cpr_lo_isolev4        = 4;        (* alt  *)
      cpr_lo_isolev9        = 9;
      cpr_lo_isolev10       = 10;       (* normal, sql-db default *)
      cpr_lo_isolev15       = 15;       (* implicit *)
      cpr_lo_isolev20       = 20;       (* explicit *)
      cpr_lo_isolev30       = 30;
      cpr_dt_empty          = 0;  (* sqldb date time format *)
      cpr_dt_normal         = 1;
      cpr_dt_iso            = 2;
      cpr_dt_usa            = 3;
      cpr_dt_eur            = 4;
      cpr_dt_jis            = 5;
      cpr_dt_ansi           = 6;
      cpr_lzu_connect   = 1;     (* fehler analyse von sql_result *)
      cpr_lzu_request   = 2;
      cpr_lzu_receive   = 3;
      cpr_lzu_release   = 4;
      cpr_lzu_sysprofile = 5;
      cpr_lzu_cancel     = 6;
      (*----------------------------------------------------------*)
      (*  errors f?ur call_interface                              *)
      (*----------------------------------------------------------*)
      cpr_c_ok           = 0;
      cpr_c_incompatible = 1;
      cpr_c_overflow     = 2;
      cpr_c_truncated    = 3;
      cpr_c_varnowrong   = 4;
      cpr_c_notimplemented=5;
      cpr_la_all     = 0;  (* all pascal runtime *)
      cpr_la_call    = 1;
      cpr_la_c       = 3;
      cpr_la_cobol   = 4;
      cpr_la_odbc    = 5;
      cpr_la_oci     = 6;
      cpr_la_cobmic  = 7;
      cpr_la_cob8860   = 8;
      cpr_la_pascalvax = 9;
      cpr_la_pascal    = 10;
      cpr_la_pascallpi = 11;
      cpr_la_pascal31  = 12;
      (* Konstanten fuer CPC-Code-Erzeugung *)
      (* sqlva1-area -entry's *)
      sqlvasc = 0;    (* scalar *)
      sqlvacm = 1;    (* componente *)
      sqlvast = 2;    (* struct *)
      sqlvapt = 3;    (* pointer *)
      (* sqlpar-area -entry's *)
      sqlparlo   = 0;   (* loop *)
      sqlparst   = 1;   (* struct *)
      sqlparel   = 2;   (* entry *)
      CPR_ERROR_ABAP_DESC_NOT_SET = -861;
      CPR_ERROR_ABAP_EXCEPTION    = -862;
      CPR_ERROR_CONNECTION_BUSY   = -810;
      cpr_error_session_not_connected   = -821;
      cpr_error_invalid_option    =-863;
      Version61_cpr00 = 60100;
      Version62_cpr00 = 60200;
      Version71_cpr00 = 70100;
      Version714cpr00 = 70104;
      Version72_cpr00 = 70200;
      Version721_cpr00 = 70201;
      Version722_cpr00 = 70202;
      Version724_cpr00 = 70204;
      Version725_cpr00 = 70205;
      Version730_cpr00 = 70300;
      Version731_cpr00 = 70301;
      Version740_cpr00 = 70400;
      Version741_cpr00 = 70401;
      Version742_cpr00 = 70402;
      (* Kernel Versions *)
      ActualKernelVersion_cpr00 = Version742_cpr00;
      MinKernelVersion_cpr00    = Version62_cpr00;
      SelDirFast_KernelVersion_cpr00 = Version72_cpr00;
      MaxLenOnBlob_KernelVersion_cpr00 = Version722_cpr00;
      (* CPC Runtime Versions *)
      Actual_CPCVersion_cpr00  = Version742_cpr00;
      Min_CPCVersion_cpr00     = Version731_cpr00;
      BlobSupport_CPCVersion_cpr00 = Version722_cpr00;
      (* tpr00_DescribeKindEnum *)
      Describe_Columns_epr00 = 1;
      Describe_Params_epr00 = 2;
      Describe_Both_epr00 = 3;

