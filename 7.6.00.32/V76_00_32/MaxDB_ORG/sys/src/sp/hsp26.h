/*!******************************************************************************

  @file         hsp26.h

  ------------------------------------------------------------------------------

  @author       JuergenA

  @brief        Packet_handling

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HSP26_H
#define HSP26_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\xd0\x0e\x19\xd2\x37\x1c\x0f\x91\xba\x1e\x64\x2b\x79\xda\x39\x71'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "vsp001.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void s26find_part (
    tsp1_segment          VAR_VALUE_REF  segm,
    tsp1_part_kind_Param                 part_kind,
    tsp1_part_ptr         VAR_VALUE_REF  part_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26finish_part (
    tsp1_packet_ptr                      packet_ptr,
    tsp1_part             VAR_VALUE_REF  finish_part);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26first_segment_init (
    tsp1_packet_ptr                      packet_ptr,
    tsp1_segment_kind_Param                 segm_kind,
    tsp1_segment_ptr      VAR_VALUE_REF  first_segm_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26init_cmd_packet (
    tsp1_packet_ptr                      packet_ptr,
    tsp1_segment_ptr      VAR_VALUE_REF  first_segm_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26new_part_init (
    tsp1_packet_ptr                      packet_ptr,
    tsp1_segment          VAR_VALUE_REF  segm,
    tsp1_part_ptr         VAR_VALUE_REF  new_part_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26new_segment_init (
    tsp1_packet_ptr                      packet_ptr,
    tsp1_segment_kind_Param                 segm_kind,
    tsp1_segment_ptr      VAR_VALUE_REF  new_segm_ptr,
    tsp1_part_ptr         VAR_VALUE_REF  first_part_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26next_segment (
    tsp1_segment_ptr      VAR_VALUE_REF  segm_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26nextpart (
    tsp1_part_ptr         VAR_VALUE_REF  part_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 s26packet_len (
    tsp1_packet_ptr                      packet_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 s26partlen (
    tsp1_part             VAR_VALUE_REF  part);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp1_part_ptr s26partptr (
    tsp1_part             VAR_VALUE_REF  part);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void s26reset_part (
    tsp1_segment          VAR_VALUE_REF  segm,
    tsp1_part_ptr         VAR_VALUE_REF  part_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp1_segment_ptr s26segmptr (
    tsp1_segment          VAR_VALUE_REF  segm);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 s26size_new_part (
    tsp1_packet_ptr                      packet_ptr,
    tsp1_segment          VAR_VALUE_REF  segm);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

