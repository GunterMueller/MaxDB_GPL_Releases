/*!******************************************************************************

  @file         hbd998.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HBD998_H
#define HBD998_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x1e\x12\xa0\x9b\x2e\xc8\xea\x17\xcd\xb7\x05\xb2\xd7\xcd\x34\x2d'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "gbd00.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void bd998AddFileNoSafetyMargin (
    tsp00_TaskId                         taskId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AddTableToFdir (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  surrogate,
    tgg00_ConverterVersion                 converterVersion,
    tsp00_PageNo                         rootPage,
    tsp00_Int2                           blobColCount,
    const tgg00_FiletypeSet  VAR_ARRAY_REF  fileTypeSet,
    const tgg91_FileVersion  VAR_VALUE_REF  fileVersion);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetFileInfo (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  surrogate,
    tgg00_FileId          VAR_VALUE_REF  fileId,
    tgg91_FileVersion     VAR_VALUE_REF  fileVersion,
    tbd_file_state_set    VAR_ARRAY_REF  fileState);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ResetReadOnly (
    tgg00_TransContext    VAR_VALUE_REF  transContext);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ShutdownFDir (
    tsp00_TaskId                         TaskId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AddToFDir (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tgg00_Filename        VAR_ARRAY_REF  filename,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AddSharedTempTableToFdir (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  surrogate,
    tsp00_PageNo                         rootPage,
    tsp00_Int2                           blobColCount,
    const tgg00_FiletypeSet  VAR_ARRAY_REF  fileTypeSet,
    const tgg91_FileVersion  VAR_VALUE_REF  fileVersion);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998DelFDirEntry (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tgg00_Filename        VAR_ARRAY_REF  filename,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo,
    pasbool                              shared_file);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998DelDirectFDirEntry (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tgg00_Surrogate       VAR_ARRAY_REF  fileSurrogate,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetFDirEntry (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tgg00_Filename        VAR_ARRAY_REF  filename,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo,
    pasbool                              shared_file,
    tsp00_MoveObjPtr      VAR_VALUE_REF  entryhandle);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetShortColFileNoForTable (
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurrogate,
    tgg00_Surrogate       VAR_ARRAY_REF  shortColFileSurrogate,
    tgg00_BasisError      VAR_VALUE_REF  b_err);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetTableBlobColCount (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurrogate,
    tsp00_Int4            VAR_VALUE_REF  blobColCount,
    tgg00_BasisError      VAR_VALUE_REF  bErr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998MarkFileDeleted (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998IsFileMarkedDeleted (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998RemoveFileDeletedMark (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998NewFileNo (
    tgg00_Surrogate       VAR_ARRAY_REF  file_no);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998NewTempFileNo (
    tgg00_Surrogate       VAR_ARRAY_REF  file_no);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998NewTempSharedFileNo (
    tgg00_Surrogate       VAR_ARRAY_REF  file_no);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetFDirMigrationFinished ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetFDirMigrationRunning ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ReleaseFDirEntry (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tsp00_MoveObjPtr      VAR_VALUE_REF  entryhandle,
    pasbool                              shared_file);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetFDirEntryFileinfo (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tgg00_Filename        VAR_ARRAY_REF  filename,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo,
    pasbool                              shared_file);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GcGetFDirEntryFileinfo (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tgg00_Filename        VAR_ARRAY_REF  filename,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo,
    pasbool                              shared_file);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetFDirEntry (
    tgg00_TransContext    VAR_VALUE_REF  transContext,
    tbd_fileinfo          VAR_VALUE_REF  fileinfo,
    tsp00_MoveObjPtr      VAR_VALUE_REF  entryhandle);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998VerifyFdir (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    pasbool                              withUpdate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998DropTableIndexes (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetIndexFileNoForTable (
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurrogate,
    tsp00_Int2                           index_no,
    tgg00_Surrogate       VAR_ARRAY_REF  indexSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AddShortColumnFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_ConverterVersion                 converterVersion,
    const tgg00_FileId    VAR_VALUE_REF  shortColId,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ConvTableFDirEntry (
    tsp00_TaskId                         taskId,
    tgg00_FileId          VAR_VALUE_REF  file_id,
    tsp00_PageNo          VAR_VALUE_REF  rootPno,
    tsp00_Int2                           blobColCount,
    tgg00_FiletypeSet     VAR_ARRAY_REF  fileTypeSet,
    tgg91_FileVersion     VAR_VALUE_REF  fileVersion);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ConvIndexFDirEntry (
    tsp00_TaskId                         taskId,
    tgg00_FileId          VAR_VALUE_REF  file_id,
    tsp00_PageNo          VAR_VALUE_REF  rootPno,
    tgg00_FiletypeSet     VAR_ARRAY_REF  fileTypeSet,
    tgg91_FileVersion     VAR_VALUE_REF  fileVersion);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ConvShortColFDirEntry (
    tsp00_TaskId                         taskId,
    tgg00_FileId          VAR_VALUE_REF  file_id,
    tsp00_PageNo          VAR_VALUE_REF  rootPno,
    tgg00_FiletypeSet     VAR_ARRAY_REF  fileTypeSet,
    tgg91_FileVersion     VAR_VALUE_REF  fileVersion);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998MigSwitchSingleIndexToMulti (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurrogate,
    tsp00_Int4                           oldSingleIndexId,
    tsp00_Int4                           newMultiIndexId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998MigCleanupSingleIndexes (
    tgg00_TransContext    VAR_VALUE_REF  trans);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998CreateFDir (
    tsp00_TaskId                         TaskId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998RestartFDir (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tsp00_PageNo                         FirDirRoot,
    tsp00_Int4                           ConverterVersion,
    tsp00_Int4                           RestartConverterVersion,
    pasbool                              cleanupFileDirPages);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998FlushFDir (
    tsp00_TaskId                         TaskId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998IsTempFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_FileId    VAR_VALUE_REF  fileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998IsExtendedTempFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_FileId    VAR_VALUE_REF  fileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_PageNo bd998GetFDirRootPageNo ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tgg00_TfnTemp_Param bd998GetExtendedTempFileType (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_FileId    VAR_VALUE_REF  tempFileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetTempFileLevel (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  tempFileId,
    const tsp00_Int2                     level);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetTempFileSublevel (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  tempFileId,
    const tsp00_Int2                     sublevel);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetTempFileIndex (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  tempFileId,
    const tsp00_Int4                     sublevel);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int2 bd998GetTempFileLevel (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_FileId    VAR_VALUE_REF  tempFileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int2 bd998GetTempFileSublevel (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_FileId    VAR_VALUE_REF  tempFileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 bd998GetTempFileIndex (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_FileId    VAR_VALUE_REF  tempFileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998CreateTempFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_FileId          VAR_VALUE_REF  tempFileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998CreateNamedTempFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  fileNo,
    tgg00_FileId          VAR_VALUE_REF  tempFileId,
    pasbool                              isExtendedTempFile,
    tgg00_TfnTemp_Param                  tempFileType);

/* Don't edit this file by hand, it is generated by ptocProto.py */

class FileDir_Iterator;

externPascal void bd998DestroyTempFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  tempSurrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998NewFileDirIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    FileDir_Iterator*&                   iteratorPtr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AddToFileDirIteratorFilter (
    FileDir_Iterator*&                   iteratorPtr,
    tgg00_Tfn_Param                      fileType);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998InitFileDirIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    pasbool                              showDeletedFiles,
    FileDir_Iterator*&                   iteratorPtr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998InitPrivateFileDirIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    pasbool                              showDeletedFiles,
    FileDir_Iterator*&                   iteratorPtr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998DestroyFileDirIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    FileDir_Iterator*&                   iteratorPtr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AdvanceFileDirIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    FileDir_Iterator*&                   iteratorPtr,
    tgg00_FileId          VAR_VALUE_REF  fileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998NewBadIndexIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    FileDir_Iterator*&                   iteratorPtr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998DestroyBadIndexIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    FileDir_Iterator*&                   iteratorPtr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AdvanceBadIndexIterator (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    FileDir_Iterator*&                   iteratorPtr,
    tgg00_FileId          VAR_VALUE_REF  fileId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetTableFileNoForIndex (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  indexSurrogate,
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurrogate,
    tgg00_BasisError      VAR_VALUE_REF  b_err);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetTableFileNoForShortColumn (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  shortColSurrogate,
    tgg00_Surrogate       VAR_ARRAY_REF  tableSurrogate,
    tgg00_BasisError      VAR_VALUE_REF  b_err);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetPageAndRecordCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_Surrogate       VAR_ARRAY_REF  surrogate,
    tsp00_Int4                           leafPageCount,
    tsp00_Int4                           indexPageCount,
    tsp00_Int4                           entryCount);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ModifyPageAndRecordCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_ConverterVersion                 convVersion,
    tgg00_Surrogate       VAR_ARRAY_REF  fileNo,
    tsp00_Int4                           leafPageCountDelta,
    tsp00_Int4                           indexPageCountDelta,
    tsp00_Int4                           entryCountDelta);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetPageAndRecordCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_Surrogate       VAR_ARRAY_REF  surrogate,
    tsp00_Int4            VAR_VALUE_REF  leafPageCount,
    tsp00_Int4            VAR_VALUE_REF  indexPageCount,
    tsp00_Int4            VAR_VALUE_REF  entryCount);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetLobPageCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_Surrogate       VAR_ARRAY_REF  surrogate,
    tsp00_Int4                           lobPageCount);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ModifyLobPageCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    tgg00_ConverterVersion                 convVersion,
    const tgg00_Surrogate&                 fileNo,
    tsp00_Int4                           lobPageCountDelta);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998AddFileStatesToEntry (
    tgg00_TransContext    VAR_VALUE_REF  t,
    tgg00_Surrogate       VAR_ARRAY_REF  table_surr,
    tbd_fileinfo          VAR_VALUE_REF  fileInfo,
    pasbool                              shared_file,
    tbd_file_state_set    VAR_ARRAY_REF  newState);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SubFileStatesFromEntry (
    tgg00_TransContext    VAR_VALUE_REF  t,
    tgg00_Surrogate       VAR_ARRAY_REF  table_surr,
    tbd_fileinfo          VAR_VALUE_REF  fileInfo,
    pasbool                              shared_file,
    tbd_file_state_set    VAR_ARRAY_REF  subState);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 bd998GetBadIndexCount ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ResetAllCachedLockStates (
    tsp00_Addr            VAR_VALUE_REF  LocalFileDir);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998IncrementIndexUsageCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  indexFileSurr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998ResetIndexUsageCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  indexFileSurr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 bd998GetIndexUsageCount (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  indexFileSurr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998GetNewSysKeyForFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurr,
    tgg00_Surrogate       VAR_ARRAY_REF  sysKey);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998AddAndGetNewSysKeyForFile (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurr,
    tgg00_Surrogate       VAR_ARRAY_REF  sysKey);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetRecordsPacked (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  surr,
    pasbool                              recordsPacked);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998AreRecordsPacked (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  surr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998SetPagesClustered (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurr,
    pasbool                              pagesClustered);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool bd998ArePagesClustered (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  tableSurr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd998GetExtendedFiletypeSet (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    const tgg00_Surrogate  VAR_ARRAY_REF  surrogate,
    tgg00_ExtendedFiletypeSet  VAR_ARRAY_REF  eFiletypeSet);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

