/*!******************************************************************************

  @file         hbd20_5.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HBD20_5_H
#define HBD20_5_H


/*===========================================================================*
 *     RefType: C++                                                          *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x81\xa9\x51\x7c\xb3\x17\xa5\xc7\x96\x55\xde\x88\x83\xc6\x92\x9c'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "gbd00.h"
#include "gbd02.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal pasbool bd20ExclusiveLocks (
    tsp00_TaskId             TaskId);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd20FullestDataCacheSegment (
    tsp00_TaskId             TaskId,
    integer               &  CacheNo);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd20GetPageForIO (
    tsp00_TaskId             TaskId,
    integer                  RegOffset,
    tgg00_BasisError      &  TrError,
    tsp00_Int2            &  FlushElems,
    tbd00_NodePtrList     &  NodePtrList,
    tbd2_data_cb_flush_list  &  CBlockList,
    pasbool               &  Completed);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tbd02_pDataCBlock bd20GetPageFromClusterIOChain (
    tsp00_TaskId             TaskId,
    integer                  RegOffset);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd20GetLeftChangedNode (
    tsp00_TaskId             TaskId,
    tbd02_pDataCBlock        pCBlock,
    tbd02_pDataCBlock     &  leftpCBlock,
    pasbool               &  found);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd20GetRightChangedNode (
    tsp00_TaskId             TaskId,
    tbd02_pDataCBlock        pCBlock,
    tbd02_pDataCBlock     &  rightpCBlock,
    pasbool               &  found);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 bd20IOElemCount (
    tsp00_TaskId             TaskId,
    integer                  RegOffset);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd20GetTempFromLRURechain (
    tsp00_TaskId             TaskId,
    integer                  RegOffset,
    tgg00_BasisError      &  TrError,
    tsp00_Int2            &  FlushElems,
    tbd00_NodePtrList     &  NodePtrList,
    tbd2_data_cb_flush_list  &  CBlockList);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void bd20ResetIOState (
    tsp00_TaskId             TaskId,
    integer                  RegOffset,
    tsp00_Int2               FlushElems,
    tbd2_data_cb_flush_list  &  CBlockList);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

