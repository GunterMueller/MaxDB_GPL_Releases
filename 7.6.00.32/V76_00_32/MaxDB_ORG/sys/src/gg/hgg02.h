/*!******************************************************************************

  @file         hgg02.h

  ------------------------------------------------------------------------------

  @author       ElkeZ

  @brief        Codetransformation_and_Coding

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HGG02_H
#define HGG02_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x9e\x00\xeb\xb8\xa3\xf2\xff\xf8\x7f\x2c\x8e\x5f\x78\x66\x26\x3f'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "ggg04.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal tgg04_CodeTables g02codetables;

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02hex (
    void                  *  source,
    tsp00_Int4                           source_pos,
    void                  *  dest,
    tsp00_Int4                           dest_pos,
    tsp00_Int4                           source_len);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02date_time_to_int (
    tsp00_Date            VAR_ARRAY_REF  date_str,
    tsp00_Time            VAR_ARRAY_REF  time_str,
    tsp00_Int4            VAR_VALUE_REF  date_int,
    tsp00_Int4            VAR_VALUE_REF  time_int);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02datechange (
    tsp00_Timestamp       VAR_ARRAY_REF  sbuf,
    void                  *  dbuf,
    integer                              spos,
    tsp00_Int4                           dpos,
    tgg00_DateTimeFormat_Param                 format,
    tgg00_BasisError      VAR_VALUE_REF  e);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02decrypt (
    tsp00_Name            VAR_ARRAY_REF  clearname,
    tsp00_CryptPw         VAR_ARRAY_REF  crypt);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#if !defined (AUDIT)

externPascal void g02dump (
    tgg00_VfFileref       VAR_VALUE_REF  hostfile,
    tsp00_Page            VAR_ARRAY_REF  buf,
    tsp00_Int4            VAR_VALUE_REF  out_pno,
    integer               VAR_VALUE_REF  out_pos,
    tsp00_VfReturn        VAR_VALUE_REF  host_err,
    tsp00_ErrText         VAR_ARRAY_REF  errtext);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

externPascal void g02inittranslate_tables ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02upstring (
    void                  *  source,
    tsp00_Int4                           srcind,
    void                  *  dest,
    tsp00_Int4                           destind,
    tsp00_Int4                           length,
    tsp00_CodeType                       code_type);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02lowstring (
    void                  *  source,
    tsp00_Int4                           srcind,
    void                  *  dest,
    tsp00_Int4                           destind,
    tsp00_Int4                           length,
    tsp00_CodeType                       code_type);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void g02timechange (
    tsp00_Timestamp       VAR_ARRAY_REF  sbuf,
    void                  *  dbuf,
    integer                              spos,
    tsp00_Int4                           dpos,
    tgg00_DateTimeFormat_Param                 format,
    tgg00_BasisError      VAR_VALUE_REF  e);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

