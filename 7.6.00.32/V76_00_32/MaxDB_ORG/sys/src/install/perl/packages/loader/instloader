#!/usr/bin/perl
#
# $Header: //sapdb/V76/c_00/b_32/sys/src/install/perl/packages/loader/instloader#1 $
# $DateTime: 2006/07/06 16:50:32 $
# $Change: 130190 $
#
# Desc:

import SAPDB::Install::StdIO;
import SAPDB::Install::System;
import SAPDB::Install::Registry;
import SAPDB::Install::Tools;
import SAPDB::Install::SetUser;
import SAPDB::Install::Cwd;
import SAPDB::Install::Values;

$path{'name'} = 'loader path';

$path{'mode'}=0775;
$path{'opt'}='loader_path=s';
$path{'list'} = 'loader.lst';
$path{'update'}=0;
	
$usage= " [-loader_path <instpath>]";
$usage_desc = "\t-loader_path <instpath>\tloader installation directory\n";
                  


@paths = (\%path);
$main_path=\%path;
$skip=0;
@opts=();


sub preinstall{
	if($SAPDB::Install::StartInstall::opt_loader_path){
		$path{'value'}=$SAPDB::Install::StartInstall::opt_loader_path;
	}
	else{
		my ($data,$prog)=readIndepPath();
		$prog =~ /\S/ or $prog = $SAPDB::Install::Values::indep_prog_path;
		$data =~ /\S/ or $data = $SAPDB::Install::Values::indep_data_path;
		$prog =~ /\S/ or print2stderr("independent program path not found\n") and diesoft($SAPDB::Install::Values::diemsg);
		$path{'default'} = $prog;
		$path{'value'}=$prog;  
	}
	return 1;
}
 

sub postprepare{
	return 1;
}


sub postinstall{
	return 1;    
}



sub registerWin{
	
	return 1;

}
	

sub registerUX{
	return 1;
}


*register =           $^O =~ /^MsWin/i ? \&registerWin :
        \&registerUX;



sub unregisterWin{
	return 1;
}

sub unregisterUX{
	return 1;
}


*unregister =           $^O =~ /^MsWin/i ? \&unregisterWin :
        \&unregisterUX;


sub preuninstall{
	return 1;
}

sub postuninstall{
	return 1;	
}

1;
                                                                                                         
