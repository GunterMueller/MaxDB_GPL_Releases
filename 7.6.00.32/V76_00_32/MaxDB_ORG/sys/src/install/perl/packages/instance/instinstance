#!/usr/bin/perl

unless(defined %SAPDB::Install::Templates::Setup::){
	require SAPDB::Install::Templates::Setup;
}

import SAPDB::Install::StdIO;
import SAPDB::Install::Values;

$path{'name'} = 'Instance  path';
$path{'mode'}=0775;
$path{'opt'}='instance_path=s';
$path{'default'}='sapdb/instance';

@paths = (\%path);

@opts=('config=s','instrootpath=s','drive=s','template=s','d=s');


$main_path=\%path;
%config = ('template', 'mi');


sub framestart{
	my ($archivename) = ($packobj->Archive =~ /([^\/]+)$/);
	unless($archivename =~ /^IA[A-Z0-9]{0,6}\.TGZ$/){
		print2stderr("archive name of package \"DB Instance\" doesn\'t match conventions\n");
		diesoft($diemsg);
	}
		
	$config{'tgz_handle'} = $packobj->Untgz;
	$config{'archive_name'} = $packobj->Archive;
	$config{'backup_name'} = 'BACKUP';
	SAPDB::Install::Templates::Setup::framestart(\@paths,\%config);
	return 1;
}

sub preinstall{
	SAPDB::Install::Templates::Setup::preinstall(\@paths,\%config);
	return 1;
}
sub postprepare{
	SAPDB::Install::Templates::Setup::postprepare(\@paths,\%config);
	return 1;
}

sub postinstall{
	SAPDB::Install::Templates::Setup::postinstall(\@paths,\%config);
	return 1;
}

sub register{
	SAPDB::Install::Templates::Setup::register(\@paths,\%config);
return 1;
}

sub framestop{
	SAPDB::Install::Templates::Setup::framestop(\@paths,\%config);
return 1;
}


1;

