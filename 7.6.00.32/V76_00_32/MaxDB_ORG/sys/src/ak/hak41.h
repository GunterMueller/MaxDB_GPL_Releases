/*!******************************************************************************

  @file         hak41.h

  ------------------------------------------------------------------------------

  @author       ThomasA

  @brief        AK_show_syntax

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HAK41_H
#define HAK41_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x95\xf6\x76\xf4\x51\x35\xe5\xa0\xc1\xf9\x06\xeb\x0a\x62\x07\x7a'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "vak001.h"
#include "gak40.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void a41_a_check_database (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int2            VAR_VALUE_REF  put_node);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41_astart_stop_statement (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int2            VAR_VALUE_REF  put_node);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41_show_semantic (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41execute_show (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_MessBlock       VAR_VALUE_REF  mblock);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41get_table (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_ShowKind_Param                 show_kind,
    tak_sysbufferaddress  VAR_VALUE_REF  base_ptr,
    tgg00_BasisError      VAR_VALUE_REF  b_err);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41glob_init ();

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41init_show_glob (
    tak40_show_glob       VAR_VALUE_REF  a41v,
    tsp00_CodeType                       mess_code);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41show_result_name (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int2            VAR_VALUE_REF  put_node);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41table_exist (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  tablen,
    tak_syspointerarr     VAR_VALUE_REF  p_arr,
    pasbool               VAR_VALUE_REF  ok);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41reset_all (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a41reset (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

