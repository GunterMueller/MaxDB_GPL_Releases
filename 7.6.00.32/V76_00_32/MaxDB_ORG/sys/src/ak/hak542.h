/*!******************************************************************************

  @file         hak542.h

  ------------------------------------------------------------------------------

  @author       ElkeZ

  @brief        DML_Help_Procedures

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 1999-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HAK542_H
#define HAK542_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x06\x44\x52\x04\x8f\xc6\x10\xa1\xe3\xd3\xb1\xfc\xa4\xd2\x1e\x01'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "vsp001.h"
#include "ggg00.h"
#include "vak001.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void a542add_intern_file (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_Surrogate       VAR_ARRAY_REF  tableid,
    tgg00_Surrogate       VAR_ARRAY_REF  owner,
    pasbool                              correlated_view,
    tsp00_SqlMode_Param                  sqlmode,
    tgg00_Surrogate       VAR_ARRAY_REF  schemacontext,
    tak_sysbufferaddress                 ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542char_to_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    char                                 c);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal pasbool a542cmplex_view_stored (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_Surrogate       VAR_ARRAY_REF  view_id);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542copy_into_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_MoveObjPtr                     const_addr,
    tsp00_Int4                           const_len);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_MoveObjPtr a542GetAndRemovePacket (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542InternalPacket (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    pasbool                              release_internal_packet,
    tsp00_Int4                           initial_len,
    tsp00_Int4                           required_len);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542fill_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int4                           pos,
    tsp00_Int4                           len,
    char                                 fillchar);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542move_to_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_MoveObjPtr                     const_addr,
    tsp00_Int4                           const_len);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542identifier_to_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_KnlIdentifier   VAR_ARRAY_REF  identifier);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542internal_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    pasbool                              release_internal_packet,
    tsp00_Int4                           required_len);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542next_intern_sql_cmd (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    pasbool                              release_packet,
    tgg00_FileId          VAR_VALUE_REF  tree,
    tsp00_Int2            VAR_VALUE_REF  key_int);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542change_intern_sql_cmd (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_FileId          VAR_VALUE_REF  tree,
    tsp00_Int2                           key_int);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542pop_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542push_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_MoveObjPtr                     pPacket);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542release_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp1_segment_ptr                     segm_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542reset_packet (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542store_current_command (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_FileId          VAR_VALUE_REF  tree,
    tsp00_Int2            VAR_VALUE_REF  key_int);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542cmd_shinfo_store (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_parskey           VAR_VALUE_REF  parsk,
    tak_sysbufferaddress                 short_info_ptr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542get_abapinfo (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_C40             VAR_ARRAY_REF  abapname,
    integer               VAR_VALUE_REF  abapnamelen,
    tsp00_Number          VAR_ARRAY_REF  abaplinenr);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a542SubstituteInPacket (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              packetPos,
    integer                              oldLength,
    tsp00_MoveObjPtr                     pNewValue,
    integer                              newLength);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

