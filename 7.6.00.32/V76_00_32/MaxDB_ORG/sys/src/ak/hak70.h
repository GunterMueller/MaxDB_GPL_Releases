/*!******************************************************************************

  @file         hak70.h

  ------------------------------------------------------------------------------

  @author       GertG / HolgerB

  @brief        Build_Strategy

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HAK70_H
#define HAK70_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\x02\x4c\xae\xa2\xa0\x6e\x3a\x5c\x4a\xc2\xa0\x38\xdf\xf6\xfe\x35'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "gak00.h"
#include "vak001.h"
#include "ggg07.h"
#include "gak70.h"
#include "gak71.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal tak70_strategy_record a70_glob_zstrat_rec;
externPascal tgg07_StratEnumSet a70glob_key_strats;
externPascal tgg07_StratEnumSet a70glob_inv_strats;
externPascal tgg07_StratEnumSet a70glob_join_strats;
externPascal tgg07_StratEnumSet a70glob_join_key_strats;
externPascal tgg07_StratEnumSet a70glob_join_inv_strats;
externPascal tgg07_StratEnumSet a70glob_fetch_strats;
externPascal tgg07_StratEnumSet a70glob_build_strats;
externPascal tgg07_StratEnumSet a70glob_key_build_strats;
externPascal tgg07_StratEnumSet a70glob_inv_build_strats;
externPascal tgg07_StratEnumSet a70glob_key_fetch_strats;
externPascal tgg07_StratEnumSet a70glob_inv_fetch_strats;
externPascal tgg07_StratEnumSet a70glob_in_strats;
externPascal tgg07_StratEnumSet a70glob_subq_strats;
externPascal tgg07_StratEnumSet a70glob_accessop_uknwn_strats;
externPascal tgg07_StratEnumSet a70glob_accessop_known_strats;
externPascal tgg07_StratEnumSet a70glob_accessop_key_build_strats;
externPascal tgg07_StratEnumSet a70glob_accessop_inv_build_strats;
externPascal tgg07_StratEnumSet a70glob_accessop_key_fetch_strats;
externPascal tgg07_StratEnumSet a70glob_accessop_inv_fetch_strats;

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a70_strategy_search (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tgg00_FileId          VAR_VALUE_REF  rtree,
    tak71_strat_rec       VAR_VALUE_REF  strat_rec);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a70strategy (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy,
    tsp00_Int2            VAR_VALUE_REF  StratInfo_len,
    tak71_page_eval_rec   VAR_VALUE_REF  eval_info,
    tak00_access_configuration                 config);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a70L1_strat_search (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_syspointerarr     VAR_VALUE_REF  sparr,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy,
    tsp00_Int2            VAR_VALUE_REF  StratInfo_len,
    tak71_page_eval_rec   VAR_VALUE_REF  eval_info,
    tak00_ord_fields      VAR_VALUE_REF  order_fields,
    tsp00_Int4            VAR_VALUE_REF  L1_pageIO,
    tsp00_Longreal        VAR_VALUE_REF  L1_stratvalue);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a70L2L3_strat_search (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_dml_info          VAR_VALUE_REF  dmli,
    tak_syspointerarr     VAR_VALUE_REF  sparr,
    tak70_strategy_record  VAR_VALUE_REF  access_info,
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy,
    tsp00_Int2            VAR_VALUE_REF  StratInfo_len,
    tsp00_Int4                           morestratpos,
    tak71_page_eval_rec   VAR_VALUE_REF  eval_info,
    tak70_term            VAR_VALUE_REF  L1_terms,
    tak00_ord_fields      VAR_VALUE_REF  order_fields,
    tsp00_Int4                           L1_pageIO,
    tsp00_Longreal        VAR_VALUE_REF  L1_stratvalue);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a70_invkeylen (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg07_StrategyInfo    VAR_VALUE_REF  gg_strategy,
    tsp00_Int2            VAR_VALUE_REF  invkeylen);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a70_keylengths (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg07_StratEnum_Param                 strategy,
    integer                              fetch_primkeylen,
    tsp00_Int2                           fetch_invkeylen,
    integer                              build_primkeylen,
    integer               VAR_VALUE_REF  primlen,
    integer               VAR_VALUE_REF  invlen);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

