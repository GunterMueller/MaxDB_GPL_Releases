/*!******************************************************************************

  @file         hak37.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 1999-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HAK37_H
#define HAK37_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\xc6\xfa\x64\x57\xdd\x4f\xdd\x0e\x25\x8a\x2e\xe9\xbf\xfd\x04\x9c'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "vak001.h"
#include "vsp0031.h"
#include "gak30.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void a37_call_semantic (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_UtilCmdId       VAR_VALUE_REF  util_cmd_id);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int2 a37blocksize (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_a30_utility_glob  VAR_VALUE_REF  a30v);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37get_surrogate (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              ti,
    tgg00_Surrogate       VAR_ARRAY_REF  surrogate);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal char a37hex2char (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              hexpos);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37char2hex (
    char                                 input,
    tsp00_C2              VAR_ARRAY_REF  output);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37return_hostname (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37init_util_record (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tgg00_MessType_Param                 m_type,
    tgg00_MessType2_Param                 mm_type);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37media_name (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int2            VAR_VALUE_REF  ti,
    tgg00_QualBuf         VAR_VALUE_REF  qual);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37label_name (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tsp00_Int2            VAR_VALUE_REF  ti,
    tgg00_QualBuf         VAR_VALUE_REF  qual);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37multi_tape_info (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              kw_index);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37put_count_to_messbuf (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak_a30_utility_glob  VAR_VALUE_REF  a30v);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37state_get (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    integer                              kw_index);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37state_vtrace (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37vtrace (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37utilprot_needed (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    pasbool               VAR_VALUE_REF  prot_needed,
    pasbool               VAR_VALUE_REF  with_tapeinfo);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37ddl (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    tak30_ddl_kind_Param                 ddl_id);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37insert_event (
    tsp31_event_ident_Param                 event);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37resultevent (
    tsp31_event_ident_Param                 ident,
    tsp00_Int2                           retcode);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37stop_all_vtrace (
    tak_all_command_glob  VAR_VALUE_REF  acv);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void a37verify_catalog (
    tak_all_command_glob  VAR_VALUE_REF  acv,
    pasbool                              do_repair,
    pasbool                              in_migration);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

