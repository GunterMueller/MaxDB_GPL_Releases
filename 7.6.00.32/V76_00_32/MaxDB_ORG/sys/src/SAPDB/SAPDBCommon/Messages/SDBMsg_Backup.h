/*
        ========== licence begin  GPL
        Copyright (c) 2006 SAP AG

        This program is free software; you can redistribute it and/or
        modify it under the terms of the GNU General Public License
        as published by the Free Software Foundation; either version 2
        of the License, or (at your option) any later version.

        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with this program; if not, write to the Free Software
        Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
        ========== licence end

*/

#ifndef SDBMSG_BACKUP_H
#define SDBMSG_BACKUP_H
/*
This header file was generated by buildmsg.pl
--- Do not edit....
*/
#ifdef __cplusplus
#ifndef MSG_LIST_HPP
#include "SAPDB/Messages/Msg_List.hpp"
#endif
#ifndef MSG_ARG_HPP
#include "SAPDB/Messages/Msg_Arg.hpp"
#endif
#ifndef MSG_SIMPLEARG_HPP
#include "SAPDB/Messages/Msg_SimpleArg.hpp"
#endif
#endif

#ifndef SDB_RELEASE_070600  /* don't merge this define - only this date: 2006-03-24 13:52:44 */
#error SDBMsg_Backup.h was probably integrated between releases, do not integrate this header file, \
use buildmsg
#endif


#define SDBMSG_BACKUP_COMPONENT "Backup"
/* Begin of all message defines for component Backup -> */
/* Begin of defines for message MEDIUM_ERROR: ID = 1, VERSION = 1, TAGS = 4 -> */
#define SDBMSG_BACKUP_MEDIUM_ERROR 1, "Backup", __FILE__, __LINE__, "Backupmedium #$BACKUP_MEDIA_NO$ ($BACKUP_MEDIUM_NAME$) $ERRORTEXT$", (Msg_Has4Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_BACKUP_MEDIUM_ERROR__BACKUP_MEDIA_NO "BACKUP_MEDIA_NO"
#define SDBMSGTAG_BACKUP_MEDIUM_ERROR__ERRORTEXT "ERRORTEXT"
#define SDBMSGTAG_BACKUP_MEDIUM_ERROR__BACKUP_MEDIUM_NAME "BACKUP_MEDIUM_NAME"
/* <- End of defines for message MEDIUM_ERROR */
/* Begin of defines for message MEDIUM_INFO: ID = 2, VERSION = 1, TAGS = 3 -> */
#define SDBMSG_BACKUP_MEDIUM_INFO 2, "Backup", __FILE__, __LINE__, "Backupmedium #$BACKUP_MEDIA_NO$ ($BACKUP_MEDIUM_NAME$)", (Msg_Has3Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_BACKUP_MEDIUM_INFO__BACKUP_MEDIA_NO "BACKUP_MEDIA_NO"
#define SDBMSGTAG_BACKUP_MEDIUM_INFO__BACKUP_MEDIUM_NAME "BACKUP_MEDIUM_NAME"
/* <- End of defines for message MEDIUM_INFO */
/* Begin of defines for message DATA_FAILED: ID = 3, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_BACKUP_DATA_FAILED 3, "Backup", __FILE__, __LINE__, "Data backup failed", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message DATA_FAILED */
/* Begin of defines for message CONFIG_MISMATCH: ID = 4, VERSION = 1, TAGS = 5 -> */
#define SDBMSG_BACKUP_CONFIG_MISMATCH 4, "Backup", __FILE__, __LINE__, "Parameter '$TITLE$' has value $VALUE$ but the configured range is between $LIMIT_LOWER$ and $LIMIT_UPPER$", (Msg_Has5Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
#define SDBMSGTAG_BACKUP_CONFIG_MISMATCH__TITLE "TITLE"
#define SDBMSGTAG_BACKUP_CONFIG_MISMATCH__VALUE "VALUE"
#define SDBMSGTAG_BACKUP_CONFIG_MISMATCH__LIMIT_UPPER "LIMIT_UPPER"
#define SDBMSGTAG_BACKUP_CONFIG_MISMATCH__LIMIT_LOWER "LIMIT_LOWER"
/* <- End of defines for message CONFIG_MISMATCH */
/* Begin of defines for message BLOCK_COUNT_CHANGED: ID = 5, VERSION = 1, TAGS = 1 -> */
#define SDBMSG_BACKUP_BLOCK_COUNT_CHANGED 5, "Backup", __FILE__, __LINE__, "The given value for BlockCount is changed to the maximum value which was configured.", (Msg_Has1Args*)0, Msg_SimpleArg("_MESSAGEVERSION", reinterpret_cast<const SAPDB_UTF8*>("1"))
/* <- End of defines for message BLOCK_COUNT_CHANGED */
/* <- End of message defines for component Backup */

/* some helpful enumerations (created by buildmsg.pl) -> */

#define SDBMSG_BACKUP_ENUMERATION \
                    Backup_MEDIUM_ERROR=1, \
                    Backup_MEDIUM_INFO=2, \
                    Backup_DATA_FAILED=3, \
                    Backup_CONFIG_MISMATCH=4, \
                    Backup_BLOCK_COUNT_CHANGED=5
#define SDBMSG_BACKUP_INITIALIZATIONLIST(x) \
                    x(SDBMSG_BACKUP_MEDIUM_ERROR, "MEDIUM_ERROR"), \
                    x(SDBMSG_BACKUP_MEDIUM_INFO, "MEDIUM_INFO"), \
                    x(SDBMSG_BACKUP_DATA_FAILED, "DATA_FAILED"), \
                    x(SDBMSG_BACKUP_CONFIG_MISMATCH, "CONFIG_MISMATCH"), \
                    x(SDBMSG_BACKUP_BLOCK_COUNT_CHANGED, "BLOCK_COUNT_CHANGED")
/* <- some helpful enumerations */

#endif /* SDBMSG_BACKUP_H */
