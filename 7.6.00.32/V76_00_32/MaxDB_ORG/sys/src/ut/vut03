/* @lastChanged: "1998-02-16 12:00"
 
 * @filename:   vut03
 * @purpose:    "UT_errormsg"
 * @release:    7.1.0.0
 * @see:        "-.-"
 *
 * @Copyright (c) 1998-2005 SAP AG"
 */
 
.tt 1 $SAP$LiveCache$VUT03$
.tt 3 $$UT_errormsg$1999-12-01$
 
.nf
 
 .nf

.nf

    ========== licence begin  GPL
    Copyright (c) 1998-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
.fo


.fo

 
.fo
***********************************************************
 
Module  : UT_errormsg
 
Define  :
 
&       ifndef XCONTROL
        PROCEDURE
              u03application (VAR appl_vers : tsp00_C5;
                    VAR application : tsp00_C3);
&       endif
 
        PROCEDURE
              u03geterrormsg (err_code : tsp00_Int2; VAR ln : tsp00_Line);
&       ifndef XCONTROL
 
        PROCEDURE
              u03getversion_no (VAR version_no : tsp00_Sname);
&       endif
&       ifndef XCONTROL
 
        PROCEDURE
              u03version (VAR term : tut_terminal;
                    VAR protfile   : tut_vf_fileref;
                    write_prot     : boolean);
&       endif
 
.CM *-END-* define --------------------------------------
.sp;.cp 3
Use     :
 
        FROM
              TA_terminal_IO : VTA09;
 
        PROCEDURE
              t09putmsg (VAR term     : tut_terminal;
                    VAR msg           : tsp00_Line;
                    is_warning        : boolean;
                    immediate_display : boolean);
 
      ------------------------------ 
 
        FROM
              TA_write_protfile : VTA12;
 
        PROCEDURE
              t12write_prot (VAR fileref : tut_vf_fileref;
                    VAR ln    : tsp00_Line;
                    length    : integer;
                    VAR error : integer);
 
      ------------------------------ 
 
        FROM
              Kernel_move_and_fill : VGG101;
 
        PROCEDURE
              SAPDB_PascalForcedMove (
                    source_upb  : tsp00_Int4;
                    destin_upb  : tsp00_Int4;
                    source      : tsp00_MoveObjPtr;
                    source_pos  : tsp00_Int4;
                    destin      : tsp00_MoveObjPtr;
                    destin_pos  : tsp00_Int4;
                    length      : tsp00_Int4);
 
       
 
      ------------------------------ 
 
        FROM
              Version : VSP100;
 
        PROCEDURE
              sp100_GetSenderIDVersionP  (
                    VAR SenderIDP    : tsp00_C5);
 
      ------------------------------ 
 
        FROM
              Version : VSP101;
 
        PROCEDURE
              sp101_GetVersionStringP  (
                    VAR ComponentNameP    : tsp00_C9;
                    VAR VersionStringP    : tsp00_Version);
 
.CM *-END-* use -----------------------------------------
.sp;.cp 3
Synonym :
 
.CM *-END-* synonym -------------------------------------
.sp;.cp 3
Author  : JuergenA
.sp
.cp 3
Created : 1982-11-18
.sp
.cp 3
.sp
.cp 3
Release :      Date : 1999-12-01
.sp
***********************************************************
.sp
.fo
.oc _/1
Specification:
 
.CM *-END-* specification -------------------------------
.fo;.sp 2;.in
***********************************************************
.sp
.fo
.oc _/1
Description:
 
.CM *-END-* description ---------------------------------
.fo;.sp 2;.in
***********************************************************
.sp
.cp 20
.nf
.oc _/1
Structure:
 
.CM *-END-* structure -----------------------------------
.sp 2
**********************************************************
.sp
.cp 10
.nf
.oc _/1
.CM -lll-
Code    :
 
 
CONST
      c_immediate_displ = true;
      c_warning         = true;
      c_component       = 'UTILITY  ';
      (* *)
      sys_err     = -9000;
&     ifndef XCONTROL
 
 
(*------------------------------*) 
 
PROCEDURE
      u03application (VAR appl_vers : tsp00_C5;
            VAR application : tsp00_C3);
 
BEGIN
sp100_GetSenderIDVersionP(appl_vers);
application := csp_comp_db_manager
END;
 
&endif
(*------------------------------*) 
 
PROCEDURE
      u03geterrormsg (err_code : tsp00_Int2; VAR ln : tsp00_Line);
 
VAR
      i      : integer;
      rem    : integer;
      len    : integer;
      offset : integer;
      number : tsp00_C6;
      n      : tsp00_Sname;
 
BEGIN
FOR i := 1 TO LINE_MXSP00 DO
    ln [i] := ' ';
(*ENDFOR*) 
ln [1] := '*';
ln [2] := '*';
ln [3] := '*';
offset := 4;
IF  err_code <= sys_err
THEN
    BEGIN
    n   := 'System error';
    len := 12
    END
ELSE
    BEGIN
    n   := 'Error       ';
    len := 5
    END;
(*ENDIF*) 
FOR i := 1 TO len DO
    ln [offset+i] := n [i];
(*ENDFOR*) 
offset := offset + len + 1;
IF  err_code < 0
THEN
    rem := - err_code
ELSE
    rem := err_code;
(*ENDIF*) 
number := '      ';
len    := 0;
i      := 5;
WHILE (i >= 1) AND (rem > 0) DO
    BEGIN
    number [i] := chr((rem MOD 10) + ord('0'));
    rem := rem DIV 10;
    i   := i - 1;
    len := len + 1
    END;
(*ENDWHILE*) 
IF  err_code < 0
THEN
    BEGIN
    number [5-len] := '-';
    len := len + 1
    END;
(*ENDIF*) 
FOR i := 1 TO len DO
    ln [offset+i] := number [5-len+i];
(*ENDFOR*) 
offset := offset + len;
ut03msg (number, offset, ln)
END;
 
&ifndef XCONTROL
(*------------------------------*) 
 
PROCEDURE
      u03getversion_no (VAR version_no : tsp00_Sname);
 
VAR
      skip_blanks : boolean;
      pos         : integer;
      i           : integer;
      comptxt     : tsp00_C9;
      vers        : tsp00_Version;
 
BEGIN
comptxt     := c_component;
(* PTS 1104704 *)
sp101_GetVersionStringP (comptxt, vers);
version_no  := bsp_sname;
pos         := 1;
skip_blanks := false;
FOR i := 1 TO 2 DO
    BEGIN
    WHILE (pos < VERSION_MXSP00) AND
          (((vers [pos] = ' ') AND skip_blanks)
          OR
          ((vers [pos] <> ' ') AND NOT skip_blanks)) DO
        pos := pos + 1;
    (*ENDWHILE*) 
    skip_blanks := NOT skip_blanks
    END;
(*ENDFOR*) 
pos := pos - 1;
i   := 1;
WHILE (i <= SNAME_MXSP00) AND (pos+i < VERSION_MXSP00)
      AND (vers [pos+i] <> ' ') DO
    BEGIN
    version_no [i] := vers [pos+i];
    i := i + 1
    END
(*ENDWHILE*) 
END;
 
&endif
&ifndef XCONTROL
(*------------------------------*) 
 
PROCEDURE
      u03version (VAR term : tut_terminal;
            VAR protfile   : tut_vf_fileref;
            write_prot     : boolean);
 
VAR
      dummy_err   : integer;
      show_cmd    : tsp00_C20;
      vers        : tsp00_Version;
      ln          : tsp00_Line;
      comptxt     : tsp00_C9;
 
BEGIN
t12write_prot (protfile, term.blankline, VERSION_MXSP00, dummy_err);
IF   write_prot
THEN
    BEGIN
    show_cmd := 'SHOW UTILITY VERSION';
    ln       := term.blankline;
    SAPDB_PascalForcedMove (sizeof (show_cmd), sizeof (ln), @show_cmd, 1,
          @ln, 1, sizeof (show_cmd));
    t12write_prot (protfile, ln, mxsp_c20, dummy_err);
    t12write_prot (protfile, term.blankline, VERSION_MXSP00, dummy_err);
    END;
(*ENDIF*) 
comptxt := c_component;
(* PTS 1104704 *)
sp101_GetVersionStringP (comptxt, vers);
ln      := term.blankline;
SAPDB_PascalForcedMove (sizeof (vers), sizeof (ln), @vers, 1, @ln, 1, sizeof (vers));
t09putmsg (term, ln, NOT c_warning, NOT c_immediate_displ);
t12write_prot (protfile, ln, VERSION_MXSP00, dummy_err)
END;
 
&endif
(*------------------------------*) 
 
PROCEDURE
      ut03msg (msg_no : tsp00_C6;
            offset    : integer;
            VAR ln    : tsp00_Line);
 
CONST
      max_msg = 200;
 
VAR
      found    : boolean;
      i        : integer;
      last_msg : integer;
 
      m : ARRAY [1..max_msg] OF RECORD
            CASE boolean OF
                true:
                    (t : tsp00_C50);
                false:
                    (no : tsp00_C6)
                END;
            (*ENDCASE*) 
 
 
BEGIN
found := false;
i     := 1;
m [i].t := '-9406 DDL trigger failed                          ';
i := i + 1;
m [i].t := '-9405 AK Datapart too short                       ';
i := i + 1;
m [i].t := '-9404 AK                                          ';
i := i + 1;
m [i].t := '-9402 AK Unexpected strategy information          ';
i := i + 1;
m [i].t := '-9401 AK Invalid SERVERDB no                      ';
i := i + 1;
m [i].t := '-9400 AK Cachedirectory full                      ';
i := i + 1;
m [i].t := '-9229 KB Too many child process requests          ';
i := i + 1;
m [i].t := '-9228 KB Queue mismatch                           ';
i := i + 1;
m [i].t := '-9227 KB Unexpected child process request         ';
i := i + 1;
m [i].t := '-9224 KB Net error                                ';
i := i + 1;
m [i].t := '-9222 KB Netserver not OK                         ';
i := i + 1;
m [i].t := '-9221 KB Net response timeout                     ';
i := i + 1;
m [i].t := '-9220 KB Invalid SERVERDB                         ';
i := i + 1;
m [i].t := '-9219 KB Unexpected net request                   ';
i := i + 1;
m [i].t := '-9218 KB Unknown SERVERDB no                      ';
i := i + 1;
m [i].t := '-9217 KB Invalid SERVERDB no                      ';
i := i + 1;
m [i].t := '-9215 KB Exclusive violation                      ';
i := i + 1;
m [i].t := '-9214 KB Open write transaction                   ';
i := i + 1;
m [i].t := '-9212 KB RESTART incomplete                       ';
i := i + 1;
m [i].t := '-9211 KB Stack type illegal                       ';
i := i + 1;
m [i].t := '-9210 KB Stack op illegal                         ';
i := i + 1;
m [i].t := '-9209 KB Log error                                ';
i := i + 1;
m [i].t := '-9207 KB Transactions inconsistent                ';
i := i + 1;
m [i].t := '-9206 AK Duplicate catalog information            ';
i := i + 1;
m [i].t := '-9205 AK Catalog information not found            ';
i := i + 1;
m [i].t := '-9204 AK System information inconsistent          ';
i := i + 1;
m [i].t := '-9203 KB Skip key update                          ';
i := i + 1;
m [i].t := '-9202 KB Enough resultsets                        ';
i := i + 1;
m [i].t := '-9201 KB New hostfile required                    ';
i := i + 1;
m [i].t := '-9046 BD No converter entry                       ';
i := i + 1;
m [i].t := '-9044 BD Inconsistent nodetype                    ';
i := i + 1;
m [i].t := '-9043 BD Fdir access not allowed                  ';
i := i + 1;
m [i].t := '-9042 BD Append not allowed                       ';
i := i + 1;
m [i].t := '-9041 BD Index not accessible                     ';
i := i + 1;
m [i].t := '-9040 BD Dropping of fdir not allowed             ';
i := i + 1;
m [i].t := '-9035 BD Bad volume                               ';
i := i + 1;
m [i].t := '-9034 BD Bad bitmappage                           ';
i := i + 1;
m [i].t := '-9033 BD Bad syspage                              ';
i := i + 1;
m [i].t := '-9032 BD Bad convpage                             ';
i := i + 1;
m [i].t := '-9031 BD Bad output                               ';
i := i + 1;
m [i].t := '-9030 BD Bad logpage                              ';
i := i + 1;
m [i].t := '-9029 BD Bad invfile                              ';
i := i + 1;
m [i].t := '-9028 BD Bad file                                 ';
i := i + 1;
m [i].t := '-9027 BD Bad fdir                                 ';
i := i + 1;
m [i].t := '-9026 BD Bad datapage                             ';
i := i + 1;
m [i].t := '-9025 BD Illegal invlistpos                       ';
i := i + 1;
m [i].t := '-9024 BD Invalid entrypos                         ';
i := i + 1;
m [i].t := '-9023 BD Illegal entrypos                         ';
i := i + 1;
m [i].t := '-9021 BD No statistic                             ';
i := i + 1;
m [i].t := '-9020 BD Init missing                             ';
i := i + 1;
m [i].t := '-9019 BD Buffer limit                             ';
i := i + 1;
m [i].t := '-9018 BD Page in wrong tree                       ';
i := i + 1;
m [i].t := '-9016 BD No prev invkey                           ';
i := i + 1;
m [i].t := '-9015 BD No next invey                            ';
i := i + 1;
m [i].t := '-9014 BD Invalid leaves structure                 ';
i := i + 1;
m [i].t := '-9013 BD Invalid index structure                  ';
i := i + 1;
m [i].t := '-9012 BD Inv not found                            ';
i := i + 1;
m [i].t := '-9011 BD Inv list not found                       ';
i := i + 1;
m [i].t := '-9010 BD Invalid invlistpos                       ';
i := i + 1;
m [i].t := '-9009 BD Illegal root                             ';
i := i + 1;
m [i].t := '-9008 BD Illegal record                           ';
i := i + 1;
m [i].t := '-9007 BD Illegal page no                          ';
i := i + 1;
m [i].t := '-9006 BD Illegal keylength                        ';
i := i + 1;
m [i].t := '-9005 BD Illegal key                              ';
i := i + 1;
m [i].t := '-9004 BD Illegal file name                        ';
i := i + 1;
m [i].t := '-9003 BD Illegal entrylength                      ';
i := i + 1;
m [i].t := '-9002 BD Illegal branchlength                     ';
i := i + 1;
m [i].t := '-9001 BD Invalid root                             ';
i := i + 1;
m [i].t := '-9000 Not yet implemented                         ';
i := i + 1;
m [i].t := '-8888 SERVERDB not accessible                     ';
i := i + 1;
m [i].t := '-8042 Acknowledgement necessary                   ';
i := i + 1;
m [i].t := '-8038 SERVERDB must be authorized                 ';
i := i + 1;
m [i].t := '-8033 Incomplete log segment                      ';
i := i + 1;
m [i].t := '-8029 No servers installed                        ';
i := i + 1;
m [i].t := '-8022 User already connected                      ';
i := i + 1;
m [i].t := '-8006 Data types must be compatible               ';
i := i + 1;
m [i].t := '-8004 Constant must be compatible with column     ';
i := i + 1;
m [i].t := '-8003 Log and data must be compatible             ';
i := i + 1;
m [i].t := '-8002 User already connected to this user task    ';
i := i + 1;
m [i].t := '-8001 User must be connected                      ';
i := i + 1;
m [i].t := '-8000 SERVERDB must be restarted                  ';
i := i + 1 ;
m [i].t := '-7900 Different block sizes                       ';
i := i + 1;
m [i].t := '-7076 NO MORE DATA TO READ FROM TAPE              ';
i := i + 1;
m [i].t := '-7075 CURRENT SAVE SKIPPED, NEXT IS READY TO TAKE ';
i := i + 1;
m [i].t := '-7071 AUTOSAVE LOG must be stopped                ';
i := i + 1;
m [i].t := '-7044 CLEAR LOG not allowed                       ';
i := i + 1;
m [i].t := '-7017 User not allowed                            ';
i := i + 1;
m [i].t := '-7006 Reserved identifier not allowed             ';
i := i + 1;
m [i].t := '-6014 Duplicate value                             ';
i := i + 1;
m [i].t := '-6010 Duplicate volume name                       ';
i := i + 1;
m [i].t := '-6006 Duplicate name                              ';
i := i + 1;
m [i].t := '-5016 Missing delimiter                           ';
i := i + 1;
m [i].t := '-5015 Missing keyword                             ';
i := i + 1;
m [i].t := '-5009 Missing integer                             ';
i := i + 1;
m [i].t := '-5008 Missing string constant                     ';
i := i + 1;
m [i].t := '-5007 Missing numeric constant                    ';
i := i + 1;
m [i].t := '-5006 Missing identifier                          ';
i := i + 1;
m [i].t := '-5004 Missing constant                            ';
i := i + 1;
m [i].t := '-5001 Missing privilege                           ';
i := i + 1;
m [i].t := '-4014 Unknown SERVERDB name                       ';
i := i + 1;
m [i].t := '-4011 Unknown index name                          ';
i := i + 1;
m [i].t := '-4010 Unknown MAPCHAR SET name                    ';
i := i + 1;
m [i].t := '-4008 Unknown user name/password combination      ';
i := i + 1;
m [i].t := '-4005 Unknown column name                         ';
i := i + 1;
m [i].t := '-4004 Unknown table name                          ';
i := i + 1;
m [i].t := '-4003 Unknown user name                           ';
i := i + 1;
m [i].t := '-4000 Unknown result table                        ';
i := i + 1;
m [i].t := '-3999 Invalid parameter                           ';
i := i + 1;
m [i].t := '-3056 Invalid SERVERNODE                          ';
i := i + 1;
m [i].t := '-3055 Invalid SERVERDB                            ';
i := i + 1;
m [i].t := '-3054 Invalid block size                          ';
i := i + 1;
m [i].t := '-3053 Invalid mirrored volume specification       ';
i := i + 1;
m [i].t := '-3049 Invalid time format                         ';
i := i + 1;
m [i].t := '-3048 Invalid date format                         ';
i := i + 1;
m [i].t := '-3038 Invalid volume size                         ';
i := i + 1;
m [i].t := '-3037 Invalid volume name                         ';
i := i + 1;
m [i].t := '-3036 Invalid number of data volumes              ';
i := i + 1;
m [i].t := '-3035 Invalid date time format                    ';
i := i + 1;
m [i].t := '-3034 Invalid log segment size                    ';
i := i + 1;
m [i].t := '-3032 Log volume name not in cserv                ';
i := i + 1;
m [i].t := '-3031 Invalid REQUEST TIMEOUT                     ';
i := i + 1;
m [i].t := '-3030 Invalid SESSION TIMEOUT                     ';
i := i + 1;
m [i].t := '-3029 Invalid number of log volumes               ';
i := i + 1;
m [i].t := '-3028 Invalid LOG MODE                            ';
i := i + 1;
m [i].t := '-3027 Invalid LOCK TIMEOUT                        ';
i := i + 1;
m [i].t := '-3025 Invalid default code                        ';
i := i + 1;
m [i].t := '-3018 Invalid numeric parameter                   ';
i := i + 1;
m [i].t := '-3017 Invalid unsigned integer                    ';
i := i + 1;
m [i].t := '-3016 Invalid numeric constant                    ';
i := i + 1;
m [i].t := '-3014 Invalid end of SQL statement                ';
i := i + 1;
m [i].t := '-3011 Invalid column name                         ';
i := i + 1;
m [i].t := '-3010 Invalid character value                     ';
i := i + 1;
m [i].t := '-3009 Invalid table name                          ';
i := i + 1;
m [i].t := '-3008 Invalid keyword or missing delimiter        ';
i := i + 1;
m [i].t := '-3005 Invalid SQL statement                       ';
i := i + 1;
m [i].t := '-3004 Invalid host file sequence                  ';
i := i + 1;
m [i].t := '-3003 Invalid user name                           ';
i := i + 1;
m [i].t := '-3002 Invalid datatype                            ';
i := i + 1;
m [i].t := '-3001 Invalid first volume name                   ';
i := i + 1;
m [i].t := '-3000 Invalid host file content                   ';
i := i + 1;
m [i].t := '-2026 Invalid label                               ';
i := i + 1;
m [i].t := '-2025 Invalid number of backup devices            ';
i := i + 1;
m [i].t := '-2020 Data buffer too small                       ';
i := i + 1;
m [i].t := '-2014 Identifier too long                         ';
i := i + 1;
m [i].t := '-2008 Data area too small                         ';
i := i + 1;
m [i].t := '-1025 Too many net requests                       ';
i := i + 1;
m [i].t := '-1022 Too many SERVERDBs                          ';
i := i + 1;
m [i].t := '-1021 Too many users connected                    ';
i := i + 1;
m [i].t := '-1015 Too many values                             ';
i := i + 1;
m [i].t := '-1010 Too many volumes                            ';
i := i + 1;
m [i].t := '-1003 Too many buffers requested                  ';
i := i + 1;
m [i].t := '-1001 Too many lock objects specified             ';
i := i + 1;
m [i].t := '-1000 Too many lock requests                      ';
i := i + 1;
m [i].t := ' -919 SERVERDB disconnected                       ';
i := i + 1;
m [i].t := ' -917 Save/restore write process crash - I/O error';
i := i + 1;
m [i].t := ' -916 Save/restore read process crash - I/O error ';
i := i + 1;
m [i].t := ' -912 Communication failure                       ';
i := i + 1;
m [i].t := ' -910 COSTLIMIT for this user exhausted           ';
i := i + 1;
m [i].t := ' -909 Mirrored volumes impossible                 ';
i := i + 1;
m [i].t := ' -907 Space for user session exhausted            ';
i := i + 1;
m [i].t := ' -906 TEMPLIMIT for this user exhausted           ';
i := i + 1;
m [i].t := ' -905 PERMLIMIT for this user exhausted           ';
i := i + 1;
m [i].t := ' -904 Space for result tables exhausted           ';
i := i + 1;
m [i].t := ' -903 Host file I/O error                         ';
i := i + 1;
m [i].t := ' -902 I/O error                                   ';
i := i + 1;
m [i].t := ' -901 LOG FULL                                    ';
i := i + 1;
m [i].t := ' -900 Data space full (emergency shutdown)        ';
i := i + 1;
m [i].t := ' -122 History not found                           ';
i := i + 1;
m [i].t := ' -121 SERVERDB must be empty                      ';
i := i + 1;
m [i].t := ' -120 Request discarded                           ';
i := i + 1;
m [i].t := ' -119 SERVERDB already activated                  ';
i := i + 1;
m [i].t := ' -118 SERVERDB must be activated                  ';
i := i + 1;
m [i].t := ' -115 Table is read only                          ';
i := i + 1;
m [i].t := ' -111 Incompatible incremental backup             ';
i := i + 1;
m [i].t := ' -110 Log must be saved                           ';
i := i + 1;
m [i].t := ' -109 SERVERDB is read only                       ';
i := i + 1;
m [i].t := ' -108 Table or index dropped or content deleted   ';
i := i + 1;
(* PTS 1103119 E.Z. *)
m [i].t := ' -107 SQL statement not available for this instanc';
i := i + 1;
m [i].t := ' -106 Table unloaded or content deleted           ';
i := i + 1;
m [i].t := ' -102 SQL statement cancelled                     ';
i := i + 1;
m [i].t := ' -101 SQL statement not available in this DB mode ';
i := i + 1;
m [i].t := '  100 Row not found                               ';
i := i + 1;
m [i].t := '  110 LONG column is undefined (empty)            ';
i := i + 1;
m [i].t := '  200 Duplicate key                               ';
i := i + 1;
m [i].t := '  250 Duplicate secondary key                     ';
i := i + 1;
m [i].t := '  300 Integrity violation                         ';
i := i + 1;
m [i].t := '  320 View violation                              ';
i := i + 1;
m [i].t := '  350 Referential integrity violated              ';
i := i + 1;
m [i].t := '  360 Foreign key integrity violation             ';
i := i + 1;
m [i].t := '  400 Lock collision                              ';
i := i + 1;
m [i].t := '  450 Lock collision caused by pending locks      ';
i := i + 1;
m [i].t := '  500 Lock request timeout                        ';
i := i + 1;
m [i].t := '  600 Work rolled back                            ';
i := i + 1;
m [i].t := '  650 Work rolled back                            ';
i := i + 1;
m [i].t := '  700 Session inactivity timeout(work rolled back)';
i := i + 1;
m [i].t := '  750 Too many SQL statements (work rolled back)  ';
last_msg := i;
i        := 1;
WHILE NOT found AND (i <= last_msg) DO
    IF  m [i].no = msg_no
    THEN
        found := true
    ELSE
        i := i + 1;
    (*ENDIF*) 
(*ENDWHILE*) 
IF  found
THEN
    BEGIN
    ln [offset+1] := ':';
    SAPDB_PascalForcedMove (sizeof (m [i].t), sizeof (ln), @m[i].t, 7,
          @ln, offset+3, sizeof (m [i].t)-6)
    END;
(*ENDIF*) 
i := max_msg; (* avoid usecheck error *)
END;
 
.CM *-END-* code ----------------------------------------
.SP 2 
***********************************************************
.PA 
