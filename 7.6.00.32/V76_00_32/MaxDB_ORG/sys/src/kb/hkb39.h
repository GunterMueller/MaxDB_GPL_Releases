/*!******************************************************************************

  @file         hkb39.h

  ------------------------------------------------------------------------------

  @author       <unknown>

  @brief        <unknown topic>

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2001-2005 SAP AG
 
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end
\endif

********************************************************************************/

#ifndef HKB39_H
#define HKB39_H


/*===========================================================================*
 *     RefType: Both                                                         *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\xa5\x02\xda\x75\x5c\x7a\x11\xe3\xba\xe2\xfa\x5b\xa2\x48\xf5\x73'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "gkb00.h"
#include "gkb03.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal void k39config_restartrec_from_first_tape (
    tgg00_TransContext    VAR_VALUE_REF  t,
    tkb3_save_static_ptr                 glob,
    tgg00_MessType2_Param                 msg2type,
    tsp00_Int2                           tape_no,
    tkb3_block_ptr                       block,
    pasbool                              bIsClustered);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k39locate_logentries_in_page (
    tsp00_TaskId                         taskId,
    pasbool               VAR_VALUE_REF  rte_cancel_flag,
    tsp00_PageNo                         wanted_lpno,
    tkb00_PagePtr         VAR_VALUE_REF  logpage,
    tgg00_BasisError      VAR_VALUE_REF  trError);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tsp00_Int4 k39pages_for_first_info (
    tsp00_Int4                           blocksize);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k39read_label (
    tgg00_TransContext    VAR_VALUE_REF  t,
    tkb3_save_static_ptr                 glob,
    tsp00_Int2                           tape_no,
    tkb3_info_stuff       VAR_VALUE_REF  my_info);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k39restore_config (
    tgg00_TransContext    VAR_VALUE_REF  t,
    tkb3_save_static_ptr                 glob,
    tsp00_DbName          VAR_ARRAY_REF  dbname);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k39run_backup_task (
    tgg00_TransContext    VAR_VALUE_REF  trans,
    pasbool                              forAutosave,
    pasbool                              in_region);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k39wakeup_all (
    tkb3_save_static_ptr                 glob,
    tsp00_TaskId                         process_id);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k39write_extra_block (
    tgg00_TransContext    VAR_VALUE_REF  t,
    tkb3_save_static_ptr                 glob,
    integer                              tape_no,
    tgg00_PageType2_Param                 what_page,
    tkb3_info_stuff       VAR_VALUE_REF  info);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

