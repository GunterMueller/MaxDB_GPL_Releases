/*!******************************************************************************

  @file         hkb51_2.h

  ------------------------------------------------------------------------------

  @author       UweH

  @brief        KB_locklist

\if EMIT_LICENCE

    ========== licence begin  GPL
    Copyright (c) 2000-2005 SAP AG

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
    ========== licence end

\endif

********************************************************************************/

#ifndef HKB51_2_H
#define HKB51_2_H


/*===========================================================================*
 *     RefType: C++                                                          *
 *===========================================================================*/

/*===========================================================================*
 *     MD5: '\xb2\x65\xf5\xdf\xee\xcc\xf8\x49\xe7\xfc\xa7\x53\x29\x94\x94\x77'
 *===========================================================================*/


/*===========================================================================*
 *  INCLUDES                                                                 *
 *===========================================================================*/

#include "gsp00.h"
#include "ggg00.h"
#include "gkb05.h"


/*===========================================================================*
 *  FUNCTION PROTOTYPES                                                      *
 *===========================================================================*/

externPascal tkb05_Glob k51glob;

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k51check_ins_lock (
    tgg00_TransContext    &  t,
    tkb05_WantedLock      &  WantedLock,
    pasbool               &  rowLockCollision);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k51FindConsistView (
    tsp00_TaskId             TaskId,
    tgg00_TransIndex         TransIndex,
    tgg91_TransNo            ConsistViewNo,
    tkb05_ConsistViewPtr  &  ConsistView);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb51GetSessionStart (
    tgg00_TransContext    &  Trans,
    tsp00_Int4            &  Date,
    tsp00_Int4            &  Time);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k51info_lock (
    tsp00_TaskId             TaskId,
    tkb05_LockInfo        &  LockInfo);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k51init_wanted_lock (
    tkb05_WantedLock      &  WantedLock);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb51sfree_segment (
    tkb05_SupplyPoolGlob  &  SupplyPoolGlob,
    tkb05_SupplySegmPtr   &  FreeSegment);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void kb51sget_segment (
    tgg00_TransContext    &  t,
    tkb05_SupplyPoolGlob  &  SupplyPoolGlob,
    tkb05_SupplySegmPtr   &  NewSegment);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal tkb05_RegionNo k51tr_index_region (
    tgg00_TransIndex         TransIndex);

/* Don't edit this file by hand, it is generated by ptocProto.py */

externPascal void k51unlock (
    tsp00_TaskId             TaskId,
    tgg00_TransIndex         TransIndex,
    tgg00_TransState      &  TransState,
    tkb05_WantedLock      &  WantedLock);

/* Don't edit this file by hand, it is generated by ptocProto.py */


#endif

