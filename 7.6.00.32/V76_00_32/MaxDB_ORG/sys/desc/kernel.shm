# @(#)   desc/kernel.shm   7.2   30/11/96
# variants: kernel-reloc.shm
#
#
#    ========== licence begin  GPL
#    Copyright (c) 2000-2005 SAP AG
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    as published by the Free Software Foundation; either version 2
#    of the License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#    ========== licence end

#-----------------------------------------------------------------------------
#
# All symbols are hold during linking making library sequences unneccessary
#
-keep_symbols

&ifvar reloc
? output : $INSTROOT/pgm/kernel_reloc*
-realname=kernel_reloc
&endif

&ifvar fastcap
? output : $INSTROOT/pgm/Capkernel*
&endif

&ifvar omstst
? output : $INSTROOT/pgm/omststknl*
-realname=omststknl
&if $OS in [ WIN32 ]
? distribute: symbols/kernel-omstst.pdb,Support/Mapfiles/kernel-omstst.map
&endif
&endif

&if variant(qfy)
->$INSTROOT/pgm/kernel_qfy*
-realname=kernel_qfy
&elif variant(pfy)
->$INSTROOT/pgm/kernel_pfy*
-realname=kernel_pfy
&endif

&if $OS == WIN32
&if $MACH == I386 && !defined BIT64
-lib=ptocntr
&else
-lib=ptocntr64
&endif
&ifvar fastcap
  -p
&endif
&if variant(reloc) || variant(qfy) || variant(pfy)
  -fixed:no
&endif
  -stack=8192
  -subsystem:windows
  -entry:WinMainCRTStartup
  -lib=advapi32
  -lib=wsock32
  -lib=gdi32
  -lib=shell32
  -lib=ole32
  -lib=oleaut32
  -lib=uuid
&ifvar omstst
  :Resource/kernel-omstst.rc remake
&else
  :Resource/kernel.rc remake
&endif
  vos80k.c
  RTE_DiagPipe.cpp
  vos80kn.c

&else
?tool option : CXX
#
# Begin of UNIX
#
& if $MACH == _IBMR2
  -lpthreads
& endif
#PTS 1114591 performance improvement ...
& if $MACH == PA20W
  "-Wl,-a,archive_shared -lcres -Wl,-a,default"
& endif
& if $MACH in [ PA11, PA20W, HP_IA64 ]
  -lpthread
  -lsec
& endif
& if $OSSPEC == OSF1
# need support for shadow passwords
  -lsecurity
& endif
& if $OSSPEC == FREEBSD
  -export-dynamic
#  -llthread
#  -llthread_p
#  -llgcc_r
#vbd06
& endif

& if $OSSPEC == LINUX
# Maxim L. (Intel): ICC does not support option '-export-dynamic', linker parameter passing shall be used
  -Wl,--export-dynamic
  -lpthread
  -ldl
& endif
& if $MACH in [ _IBMR2 ]
  -ldl
& elif $MACH == SUN || $OSSPEC == SOLARIS
  -ldl
  -ldemangle
& endif
  ven80.cpp
#
# End of UNIX
#
&endif

#& if $OSSPEC == FREEBSD
#veo38.cpp
#&endif

ak1lib [s s s]
&ifvar omstst
# liveache kernel-omstst
ak2lib-omstst [s s s]
&else
&ifvar v80
ak2lib-v80 [s s s]
&else
ak2lib [s s s]
&endif
&endif
ak3lib [s s s]
ak4lib [s s s]
akOptimizer.lib [s s s]
JoinExec.lib [s s s]
SystemViews.lib
kblib [s s s]
bdlib [s s s]
&ifvar omstst
# liveache kernel-omstst
kgglib-omstst [s s s]
&else
kgglib [s s s]
&endif
&slow
vta01 f
vta99.cpp s
&endslow
splib-kernel
SAPDBAlgo_MD5File.c
OMS_DbpError-k.cpp
#
# New C++ Source from source tree SAPDB/...
#
Table.lib # has to be placed before KernelCommon.lib due to sun one phase linker
IOManager.lib
Logging.lib [s s s]
vbd37 [s s s] # have to be listed after Logging.lib because of one phase linker
FreeBlockManagement.lib
Converter.lib
Pager.lib
DataAccess.lib [s s s]
FrameCtrl_Manager.cpp
FrameCtrl_Wrapper.cpp
::SAPDB/ConsistentRead/ConsistentRead.lib
::SAPDB/ServerTasks/ServerTasks.lib
::SAPDB/Transaction/Transaction.lib
&ifvar omstst
# liveache kernel-omstst
liveCache-omstst 
&else
liveCache.lib # has to be placed before KernelCommon.lib due to sun one phase linker
&endif
::SAPDB/SQLManager/SharedSQL/SharedSQL.lib
::SAPDB/SQLManager/Query/Query.lib
::SAPDB/SQLManager/QueryRewrite/QueryRewrite.lib
&ifvar v80
SQLManager-v80.lib
&else
SQLManager.lib
&endif
#
FileDirectory.lib [s s s]
KernelCommon.lib [s s s]
Restart.lib [s s s]
Trace.lib [s s s]
&ifvar omstst
# liveache kernel-omstst
 KernelRunTime-omstst.lib f
&else
&ifvar fastcap
  KernelRunTime-fastcap.lib f
&else
  KernelRunTime.lib f
&endif
&endif
Kernel_TraceTopics.cpp
::SAPDB/SAPDBCommon/SAPDBCommonKernel.lib

# interface runtime in kernel
:SAPDB/Interfaces/SQLDBC/SQLDBC-kernel.cpp
:SAPDB/Interfaces/SQLDBC/SQLDBC_StorageItems-kernel.cpp
::SAPDB/Interfaces/sapdbifr-kernel.lib
# SQL Manager already containst this due to Proc Server
#::SAPDB/PacketInterface/PacketInterface-kernel.lib

# PTS 1115851 
# -> export new constructors and destructors
& if $OSSPEC in [ AIX ]
LVCMem_Allocator.exp demand
-brtl
-bE:LVCMem_Allocator.exp
&endif

&if $OS == WIN32 && $MACH == IA64
:SAPDB/Purify/pure_api.c
:SAPDB/Purify/purify.c
&endif
